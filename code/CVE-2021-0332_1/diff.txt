diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/0-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/0-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/0-cfg.dot	2023-06-07 19:33:00.197398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/0-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_7" {  
-"3" [label = <(METHOD,anonymous_lambda_7)<SUB>619</SUB>> ]
-"5" [label = <(METHOD_RETURN,ANY)<SUB>619</SUB>> ]
+"3" [label = <(METHOD,anonymous_lambda_7)<SUB>624</SUB>> ]
+"5" [label = <(METHOD_RETURN,ANY)<SUB>624</SUB>> ]
   "3" -> "5" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1-cfg.dot	2023-06-07 19:33:00.197398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_8" {  
-"8" [label = <(METHOD,anonymous_lambda_8)<SUB>652</SUB>> ]
-"10" [label = <(METHOD_RETURN,ANY)<SUB>652</SUB>> ]
+"8" [label = <(METHOD,anonymous_lambda_8)<SUB>651</SUB>> ]
+"10" [label = <(METHOD_RETURN,ANY)<SUB>651</SUB>> ]
   "8" -> "10" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/10-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/10-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/10-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/10-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_17" {  
-"46" [label = <(METHOD,anonymous_lambda_17)<SUB>2049</SUB>> ]
-"48" [label = <(METHOD_RETURN,ANY)<SUB>2049</SUB>> ]
+"46" [label = <(METHOD,anonymous_lambda_17)<SUB>2048</SUB>> ]
+"48" [label = <(METHOD_RETURN,ANY)<SUB>2048</SUB>> ]
   "46" -> "48" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/100-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/100-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/100-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/100-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,26 +1,26 @@
 digraph "setActiveConfig" {  
-"2364" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1028</SUB>> ]
-"2372" [label = <(&lt;operator&gt;.assignment,future = schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1034</SUB>> ]
-"2376" [label = <(RETURN,return future.get();,return future.get();)<SUB>1053</SUB>> ]
-"2366" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1030</SUB>> ]
-"2374" [label = <(schedule,schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1034</SUB>> ]
-"2377" [label = <(get,future.get())<SUB>1053</SUB>> ]
-"2369" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1031</SUB>> ]
-"2375" [label = <(METHOD_REF,status_t anonymous_lambda_10 (),schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1034</SUB>> ]
-"2378" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>1053</SUB>> ]
-"2380" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1053</SUB>> ]
-"2360" [label = <(METHOD,setActiveConfig)<SUB>1027</SUB>> ]
-"2381" [label = <(METHOD_RETURN,status_t)<SUB>1027</SUB>> ]
-  "2364" -> "2366" 
-  "2372" -> "2380" 
-  "2376" -> "2381" 
-  "2366" -> "2369" 
-  "2366" -> "2375" 
-  "2374" -> "2372" 
-  "2377" -> "2376" 
-  "2369" -> "2381" 
-  "2375" -> "2374" 
-  "2378" -> "2377" 
-  "2380" -> "2378" 
-  "2360" -> "2364" 
+"2380" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1027</SUB>> ]
+"2388" [label = <(&lt;operator&gt;.assignment,future = schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1033</SUB>> ]
+"2392" [label = <(RETURN,return future.get();,return future.get();)<SUB>1052</SUB>> ]
+"2382" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1029</SUB>> ]
+"2390" [label = <(schedule,schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1033</SUB>> ]
+"2393" [label = <(get,future.get())<SUB>1052</SUB>> ]
+"2385" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1030</SUB>> ]
+"2391" [label = <(METHOD_REF,status_t anonymous_lambda_10 (),schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set allowed display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set allowed display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 const HwcConfigIndexType config(mode);\012 const float fps = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(config).getFps();\012 const scheduler::RefreshRateConfigs::Policy policy{config, {fps, fps}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>1033</SUB>> ]
+"2394" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>1052</SUB>> ]
+"2396" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1052</SUB>> ]
+"2376" [label = <(METHOD,setActiveConfig)<SUB>1026</SUB>> ]
+"2397" [label = <(METHOD_RETURN,status_t)<SUB>1026</SUB>> ]
+  "2380" -> "2382" 
+  "2388" -> "2396" 
+  "2392" -> "2397" 
+  "2382" -> "2385" 
+  "2382" -> "2391" 
+  "2390" -> "2388" 
+  "2393" -> "2392" 
+  "2385" -> "2397" 
+  "2391" -> "2390" 
+  "2394" -> "2393" 
+  "2396" -> "2394" 
+  "2376" -> "2380" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1000-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1000-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1000-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1000-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "onNonPrimaryDisplayConfigChanged" {  
-"20991" [label = <(METHOD,onNonPrimaryDisplayConfigChanged)> ]
-"20998" [label = <(METHOD_RETURN,ANY)> ]
-  "20991" -> "20998" 
+"21007" [label = <(METHOD,onNonPrimaryDisplayConfigChanged)> ]
+"21014" [label = <(METHOD_RETURN,ANY)> ]
+  "21007" -> "21014" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1001-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1001-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1001-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1001-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setOverridePolicy" {  
-"20999" [label = <(METHOD,setOverridePolicy)> ]
-"21003" [label = <(METHOD_RETURN,ANY)> ]
-  "20999" -> "21003" 
+"21015" [label = <(METHOD,setOverridePolicy)> ]
+"21019" [label = <(METHOD_RETURN,ANY)> ]
+  "21015" -> "21019" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1002-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1002-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1002-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1002-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplayManagerPolicy" {  
-"21004" [label = <(METHOD,setDisplayManagerPolicy)> ]
-"21008" [label = <(METHOD_RETURN,ANY)> ]
-  "21004" -> "21008" 
+"21020" [label = <(METHOD,setDisplayManagerPolicy)> ]
+"21024" [label = <(METHOD_RETURN,ANY)> ]
+  "21020" -> "21024" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1003-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1003-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1003-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1003-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "toggleKernelIdleTimer" {  
-"21009" [label = <(METHOD,toggleKernelIdleTimer)> ]
-"21011" [label = <(METHOD_RETURN,ANY)> ]
-  "21009" -> "21011" 
+"21025" [label = <(METHOD,toggleKernelIdleTimer)> ]
+"21027" [label = <(METHOD_RETURN,ANY)> ]
+  "21025" -> "21027" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1004-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1004-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1004-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1004-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getPreferredConfigId" {  
-"21012" [label = <(METHOD,getPreferredConfigId)> ]
-"21015" [label = <(METHOD_RETURN,ANY)> ]
-  "21012" -> "21015" 
+"21028" [label = <(METHOD,getPreferredConfigId)> ]
+"21031" [label = <(METHOD_RETURN,ANY)> ]
+  "21028" -> "21031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1005-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1005-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1005-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1005-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "LOG_ALWAYS_FATAL" {  
-"21016" [label = <(METHOD,LOG_ALWAYS_FATAL)> ]
-"21020" [label = <(METHOD_RETURN,ANY)> ]
-  "21016" -> "21020" 
+"21032" [label = <(METHOD,LOG_ALWAYS_FATAL)> ]
+"21036" [label = <(METHOD_RETURN,ANY)> ]
+  "21032" -> "21036" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1006-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1006-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1006-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1006-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "registerLayer" {  
-"21021" [label = <(METHOD,registerLayer)> ]
-"21025" [label = <(METHOD_RETURN,ANY)> ]
-  "21021" -> "21025" 
+"21037" [label = <(METHOD,registerLayer)> ]
+"21041" [label = <(METHOD_RETURN,ANY)> ]
+  "21037" -> "21041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1007-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1007-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1007-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1007-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postDecrement" {  
-"21026" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
-"21029" [label = <(METHOD_RETURN,ANY)> ]
-  "21026" -> "21029" 
+"21042" [label = <(METHOD,&lt;operator&gt;.postDecrement)> ]
+"21045" [label = <(METHOD_RETURN,ANY)> ]
+  "21042" -> "21045" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1008-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1008-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1008-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1008-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "removeFromOffscreenLayers" {  
-"21030" [label = <(METHOD,removeFromOffscreenLayers)> ]
-"21033" [label = <(METHOD_RETURN,ANY)> ]
-  "21030" -> "21033" 
+"21046" [label = <(METHOD,removeFromOffscreenLayers)> ]
+"21049" [label = <(METHOD_RETURN,ANY)> ]
+  "21046" -> "21049" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1009-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1009-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/1009-cfg.dot	2023-06-07 19:33:00.557398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/1009-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCurrentChildren" {  
-"21034" [label = <(METHOD,getCurrentChildren)> ]
-"21037" [label = <(METHOD_RETURN,ANY)> ]
-  "21034" -> "21037" 
+"21050" [label = <(METHOD,getCurrentChildren)> ]
+"21053" [label = <(METHOD_RETURN,ANY)> ]
+  "21050" -> "21053" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/101-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/101-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/101-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/101-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,190 +1,190 @@
 digraph "setActiveConfigInternal" {  
-"2385" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1057</SUB>> ]
-"2387" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1059</SUB>> ]
-"2396" [label = <(&lt;operator&gt;.assignment,&amp; oldRefreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>1064</SUB>> ]
-"2406" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>1067</SUB>> ]
-"2416" [label = <(setCurrentConfigId,mRefreshRateConfigs-&gt;setCurrentConfigId(mUpcomingActiveConfig.configId))<SUB>1068</SUB>> ]
-"2423" [label = <(setConfigMode,mRefreshRateStats-&gt;setConfigMode(mUpcomingActiveConfig.configId))<SUB>1069</SUB>> ]
-"2430" [label = <(setActiveConfig,display-&gt;setActiveConfig(mUpcomingActiveConfig.configId))<SUB>1070</SUB>> ]
-"2438" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1072</SUB>> ]
-"2462" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1077</SUB>> ]
-"2470" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1078</SUB>> ]
-"2478" [label = <(ATRACE_INT,ATRACE_INT(&quot;ActiveConfigFPS&quot;, refreshRate.getFps()))<SUB>1079</SUB>> ]
-"2389" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1059</SUB>> ]
-"2391" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1060</SUB>> ]
-"2398" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>1065</SUB>> ]
-"2407" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1067</SUB>> ]
-"2414" [label = <(lock,lock(mActiveConfigLock))<SUB>1067</SUB>> ]
-"2417" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setCurrentConfigId)<SUB>1068</SUB>> ]
-"2420" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1068</SUB>> ]
-"2424" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setConfigMode)<SUB>1069</SUB>> ]
-"2427" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1069</SUB>> ]
-"2431" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>1070</SUB>> ]
-"2434" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1070</SUB>> ]
-"2440" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1073</SUB>> ]
-"2448" [label = <(&lt;operator&gt;.notEquals,refreshRate.getVsyncPeriod() != oldRefreshRate.getVsyncPeriod())<SUB>1074</SUB>> ]
-"2463" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1077</SUB>> ]
-"2466" [label = <(getFps,refreshRate.getFps())<SUB>1077</SUB>> ]
-"2471" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1078</SUB>> ]
-"2474" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1078</SUB>> ]
-"2480" [label = <(getFps,refreshRate.getFps())<SUB>1079</SUB>> ]
-"2485" [label = <(&lt;operator&gt;.notEquals,mUpcomingActiveConfig.event != Scheduler::ConfigEvent::None)<SUB>1081</SUB>> ]
-"2394" [label = <(RETURN,return;,return;)<SUB>1061</SUB>> ]
-"2399" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1065</SUB>> ]
-"2402" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>1065</SUB>> ]
-"2408" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1067</SUB>> ]
-"2411" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1067</SUB>> ]
-"2419" [label = <(FIELD_IDENTIFIER,setCurrentConfigId,setCurrentConfigId)<SUB>1068</SUB>> ]
-"2422" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1068</SUB>> ]
-"2426" [label = <(FIELD_IDENTIFIER,setConfigMode,setConfigMode)<SUB>1069</SUB>> ]
-"2429" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1069</SUB>> ]
-"2433" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>1070</SUB>> ]
-"2436" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1070</SUB>> ]
-"2441" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1073</SUB>> ]
-"2444" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1073</SUB>> ]
-"2449" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1074</SUB>> ]
-"2453" [label = <(getVsyncPeriod,oldRefreshRate.getVsyncPeriod())<SUB>1074</SUB>> ]
-"2458" [label = <(incrementRefreshRateSwitches,mTimeStats-&gt;incrementRefreshRateSwitches())<SUB>1075</SUB>> ]
-"2465" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1077</SUB>> ]
-"2467" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1077</SUB>> ]
-"2473" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1078</SUB>> ]
-"2475" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1078</SUB>> ]
-"2481" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1079</SUB>> ]
-"2486" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.event)<SUB>1081</SUB>> ]
-"2489" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::None)<SUB>1081</SUB>> ]
-"2496" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012                mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod())<SUB>1082</SUB>> ]
-"2508" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                                  mUpcomingActiveConfig.configId, vsyncPeriod))<SUB>1085</SUB>> ]
-"2401" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1065</SUB>> ]
-"2403" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>1065</SUB>> ]
-"2410" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1067</SUB>> ]
-"2413" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1067</SUB>> ]
-"2443" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1073</SUB>> ]
-"2446" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1073</SUB>> ]
-"2450" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1074</SUB>> ]
-"2454" [label = <(&lt;operator&gt;.fieldAccess,oldRefreshRate.getVsyncPeriod)<SUB>1074</SUB>> ]
-"2459" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementRefreshRateSwitches)<SUB>1075</SUB>> ]
-"2469" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1077</SUB>> ]
-"2477" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1078</SUB>> ]
-"2483" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1079</SUB>> ]
-"2488" [label = <(FIELD_IDENTIFIER,event,event)<SUB>1081</SUB>> ]
-"2490" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>1081</SUB>> ]
-"2493" [label = <(FIELD_IDENTIFIER,None,None)<SUB>1081</SUB>> ]
-"2498" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod())<SUB>1083</SUB>> ]
-"2509" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>1085</SUB>> ]
-"2513" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>1085</SUB>> ]
-"2519" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1086</SUB>> ]
-"2405" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>1065</SUB>> ]
-"2452" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1074</SUB>> ]
-"2456" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1074</SUB>> ]
-"2461" [label = <(FIELD_IDENTIFIER,incrementRefreshRateSwitches,incrementRefreshRateSwitches)<SUB>1075</SUB>> ]
-"2499" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod)<SUB>1083</SUB>> ]
-"2511" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>1085</SUB>> ]
-"2514" [label = <(getId,display-&gt;getId())<SUB>1085</SUB>> ]
-"2518" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1085</SUB>> ]
-"2521" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1086</SUB>> ]
-"2500" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1083</SUB>> ]
-"2507" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1083</SUB>> ]
-"2515" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>1085</SUB>> ]
-"2501" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1083</SUB>> ]
-"2504" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1083</SUB>> ]
-"2517" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1085</SUB>> ]
-"2503" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1083</SUB>> ]
-"2506" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1083</SUB>> ]
-"2383" [label = <(METHOD,setActiveConfigInternal)<SUB>1056</SUB>> ]
-"2523" [label = <(METHOD_RETURN,void)<SUB>1056</SUB>> ]
-  "2385" -> "2389" 
-  "2387" -> "2391" 
-  "2396" -> "2410" 
-  "2406" -> "2419" 
-  "2416" -> "2426" 
-  "2423" -> "2433" 
-  "2430" -> "2443" 
-  "2438" -> "2452" 
-  "2462" -> "2473" 
-  "2470" -> "2483" 
-  "2478" -> "2488" 
-  "2389" -> "2387" 
-  "2391" -> "2394" 
-  "2391" -> "2401" 
-  "2398" -> "2396" 
-  "2407" -> "2414" 
-  "2414" -> "2406" 
-  "2417" -> "2422" 
-  "2420" -> "2416" 
+"2401" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1056</SUB>> ]
+"2403" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1058</SUB>> ]
+"2412" [label = <(&lt;operator&gt;.assignment,&amp; oldRefreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>1063</SUB>> ]
+"2422" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>1066</SUB>> ]
+"2432" [label = <(setCurrentConfigId,mRefreshRateConfigs-&gt;setCurrentConfigId(mUpcomingActiveConfig.configId))<SUB>1067</SUB>> ]
+"2439" [label = <(setConfigMode,mRefreshRateStats-&gt;setConfigMode(mUpcomingActiveConfig.configId))<SUB>1068</SUB>> ]
+"2446" [label = <(setActiveConfig,display-&gt;setActiveConfig(mUpcomingActiveConfig.configId))<SUB>1069</SUB>> ]
+"2454" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1071</SUB>> ]
+"2478" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1076</SUB>> ]
+"2486" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1077</SUB>> ]
+"2494" [label = <(ATRACE_INT,ATRACE_INT(&quot;ActiveConfigFPS&quot;, refreshRate.getFps()))<SUB>1078</SUB>> ]
+"2405" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1058</SUB>> ]
+"2407" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1059</SUB>> ]
+"2414" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>1064</SUB>> ]
+"2423" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1066</SUB>> ]
+"2430" [label = <(lock,lock(mActiveConfigLock))<SUB>1066</SUB>> ]
+"2433" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setCurrentConfigId)<SUB>1067</SUB>> ]
+"2436" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1067</SUB>> ]
+"2440" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setConfigMode)<SUB>1068</SUB>> ]
+"2443" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1068</SUB>> ]
+"2447" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>1069</SUB>> ]
+"2450" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1069</SUB>> ]
+"2456" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1072</SUB>> ]
+"2464" [label = <(&lt;operator&gt;.notEquals,refreshRate.getVsyncPeriod() != oldRefreshRate.getVsyncPeriod())<SUB>1073</SUB>> ]
+"2479" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1076</SUB>> ]
+"2482" [label = <(getFps,refreshRate.getFps())<SUB>1076</SUB>> ]
+"2487" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1077</SUB>> ]
+"2490" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1077</SUB>> ]
+"2496" [label = <(getFps,refreshRate.getFps())<SUB>1078</SUB>> ]
+"2501" [label = <(&lt;operator&gt;.notEquals,mUpcomingActiveConfig.event != Scheduler::ConfigEvent::None)<SUB>1080</SUB>> ]
+"2410" [label = <(RETURN,return;,return;)<SUB>1060</SUB>> ]
+"2415" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1064</SUB>> ]
+"2418" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>1064</SUB>> ]
+"2424" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1066</SUB>> ]
+"2427" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1066</SUB>> ]
+"2435" [label = <(FIELD_IDENTIFIER,setCurrentConfigId,setCurrentConfigId)<SUB>1067</SUB>> ]
+"2438" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1067</SUB>> ]
+"2442" [label = <(FIELD_IDENTIFIER,setConfigMode,setConfigMode)<SUB>1068</SUB>> ]
+"2445" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1068</SUB>> ]
+"2449" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>1069</SUB>> ]
+"2452" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1069</SUB>> ]
+"2457" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1072</SUB>> ]
+"2460" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1072</SUB>> ]
+"2465" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1073</SUB>> ]
+"2469" [label = <(getVsyncPeriod,oldRefreshRate.getVsyncPeriod())<SUB>1073</SUB>> ]
+"2474" [label = <(incrementRefreshRateSwitches,mTimeStats-&gt;incrementRefreshRateSwitches())<SUB>1074</SUB>> ]
+"2481" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1076</SUB>> ]
+"2483" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1076</SUB>> ]
+"2489" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1077</SUB>> ]
+"2491" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1077</SUB>> ]
+"2497" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1078</SUB>> ]
+"2502" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.event)<SUB>1080</SUB>> ]
+"2505" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::None)<SUB>1080</SUB>> ]
+"2512" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012                mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod())<SUB>1081</SUB>> ]
+"2524" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                                  mUpcomingActiveConfig.configId, vsyncPeriod))<SUB>1084</SUB>> ]
+"2417" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1064</SUB>> ]
+"2419" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>1064</SUB>> ]
+"2426" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1066</SUB>> ]
+"2429" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1066</SUB>> ]
+"2459" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1072</SUB>> ]
+"2462" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1072</SUB>> ]
+"2466" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1073</SUB>> ]
+"2470" [label = <(&lt;operator&gt;.fieldAccess,oldRefreshRate.getVsyncPeriod)<SUB>1073</SUB>> ]
+"2475" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementRefreshRateSwitches)<SUB>1074</SUB>> ]
+"2485" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1076</SUB>> ]
+"2493" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1077</SUB>> ]
+"2499" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1078</SUB>> ]
+"2504" [label = <(FIELD_IDENTIFIER,event,event)<SUB>1080</SUB>> ]
+"2506" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>1080</SUB>> ]
+"2509" [label = <(FIELD_IDENTIFIER,None,None)<SUB>1080</SUB>> ]
+"2514" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod())<SUB>1082</SUB>> ]
+"2525" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>1084</SUB>> ]
+"2529" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>1084</SUB>> ]
+"2535" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1085</SUB>> ]
+"2421" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>1064</SUB>> ]
+"2468" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1073</SUB>> ]
+"2472" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1073</SUB>> ]
+"2477" [label = <(FIELD_IDENTIFIER,incrementRefreshRateSwitches,incrementRefreshRateSwitches)<SUB>1074</SUB>> ]
+"2515" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId)\012 .getVsyncPeriod)<SUB>1082</SUB>> ]
+"2527" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>1084</SUB>> ]
+"2530" [label = <(getId,display-&gt;getId())<SUB>1084</SUB>> ]
+"2534" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1084</SUB>> ]
+"2537" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1085</SUB>> ]
+"2516" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mUpcomingActiveConfig.configId))<SUB>1082</SUB>> ]
+"2523" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1082</SUB>> ]
+"2531" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>1084</SUB>> ]
+"2517" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1082</SUB>> ]
+"2520" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1082</SUB>> ]
+"2533" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1084</SUB>> ]
+"2519" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1082</SUB>> ]
+"2522" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1082</SUB>> ]
+"2399" [label = <(METHOD,setActiveConfigInternal)<SUB>1055</SUB>> ]
+"2539" [label = <(METHOD_RETURN,void)<SUB>1055</SUB>> ]
+  "2401" -> "2405" 
+  "2403" -> "2407" 
+  "2412" -> "2426" 
+  "2422" -> "2435" 
+  "2432" -> "2442" 
+  "2439" -> "2449" 
+  "2446" -> "2459" 
+  "2454" -> "2468" 
+  "2478" -> "2489" 
+  "2486" -> "2499" 
+  "2494" -> "2504" 
+  "2405" -> "2403" 
+  "2407" -> "2410" 
+  "2407" -> "2417" 
+  "2414" -> "2412" 
+  "2423" -> "2430" 
+  "2430" -> "2422" 
+  "2433" -> "2438" 
+  "2436" -> "2432" 
+  "2440" -> "2445" 
+  "2443" -> "2439" 
+  "2447" -> "2452" 
+  "2450" -> "2446" 
+  "2456" -> "2454" 
+  "2464" -> "2477" 
+  "2464" -> "2481" 
+  "2479" -> "2485" 
+  "2482" -> "2478" 
+  "2487" -> "2493" 
+  "2490" -> "2486" 
+  "2496" -> "2494" 
+  "2501" -> "2539" 
+  "2501" -> "2519" 
+  "2410" -> "2539" 
+  "2415" -> "2421" 
+  "2418" -> "2414" 
   "2424" -> "2429" 
   "2427" -> "2423" 
-  "2431" -> "2436" 
-  "2434" -> "2430" 
-  "2440" -> "2438" 
-  "2448" -> "2461" 
-  "2448" -> "2465" 
-  "2463" -> "2469" 
-  "2466" -> "2462" 
-  "2471" -> "2477" 
-  "2474" -> "2470" 
-  "2480" -> "2478" 
-  "2485" -> "2523" 
-  "2485" -> "2503" 
-  "2394" -> "2523" 
-  "2399" -> "2405" 
-  "2402" -> "2398" 
-  "2408" -> "2413" 
-  "2411" -> "2407" 
-  "2419" -> "2417" 
-  "2422" -> "2420" 
+  "2435" -> "2433" 
+  "2438" -> "2436" 
+  "2442" -> "2440" 
+  "2445" -> "2443" 
+  "2449" -> "2447" 
+  "2452" -> "2450" 
+  "2457" -> "2462" 
+  "2460" -> "2456" 
+  "2465" -> "2472" 
+  "2469" -> "2464" 
+  "2474" -> "2481" 
+  "2481" -> "2479" 
+  "2483" -> "2482" 
+  "2489" -> "2487" 
+  "2491" -> "2490" 
+  "2497" -> "2496" 
+  "2502" -> "2506" 
+  "2505" -> "2501" 
+  "2512" -> "2527" 
+  "2524" -> "2539" 
+  "2417" -> "2415" 
+  "2419" -> "2418" 
   "2426" -> "2424" 
   "2429" -> "2427" 
-  "2433" -> "2431" 
-  "2436" -> "2434" 
-  "2441" -> "2446" 
-  "2444" -> "2440" 
-  "2449" -> "2456" 
-  "2453" -> "2448" 
-  "2458" -> "2465" 
-  "2465" -> "2463" 
-  "2467" -> "2466" 
-  "2473" -> "2471" 
+  "2459" -> "2457" 
+  "2462" -> "2460" 
+  "2466" -> "2465" 
+  "2470" -> "2469" 
   "2475" -> "2474" 
-  "2481" -> "2480" 
-  "2486" -> "2490" 
-  "2489" -> "2485" 
-  "2496" -> "2511" 
-  "2508" -> "2523" 
-  "2401" -> "2399" 
-  "2403" -> "2402" 
-  "2410" -> "2408" 
-  "2413" -> "2411" 
-  "2443" -> "2441" 
-  "2446" -> "2444" 
-  "2450" -> "2449" 
-  "2454" -> "2453" 
-  "2459" -> "2458" 
-  "2469" -> "2467" 
+  "2485" -> "2483" 
+  "2493" -> "2491" 
+  "2499" -> "2497" 
+  "2504" -> "2502" 
+  "2506" -> "2509" 
+  "2509" -> "2505" 
+  "2514" -> "2512" 
+  "2525" -> "2533" 
+  "2529" -> "2537" 
+  "2535" -> "2524" 
+  "2421" -> "2419" 
+  "2468" -> "2466" 
+  "2472" -> "2470" 
   "2477" -> "2475" 
-  "2483" -> "2481" 
-  "2488" -> "2486" 
-  "2490" -> "2493" 
-  "2493" -> "2489" 
-  "2498" -> "2496" 
-  "2509" -> "2517" 
-  "2513" -> "2521" 
-  "2519" -> "2508" 
-  "2405" -> "2403" 
-  "2452" -> "2450" 
-  "2456" -> "2454" 
-  "2461" -> "2459" 
-  "2499" -> "2498" 
-  "2511" -> "2509" 
-  "2514" -> "2518" 
-  "2518" -> "2513" 
-  "2521" -> "2519" 
-  "2500" -> "2507" 
-  "2507" -> "2499" 
   "2515" -> "2514" 
-  "2501" -> "2506" 
-  "2504" -> "2500" 
-  "2517" -> "2515" 
-  "2503" -> "2501" 
-  "2506" -> "2504" 
-  "2383" -> "2385" 
+  "2527" -> "2525" 
+  "2530" -> "2534" 
+  "2534" -> "2529" 
+  "2537" -> "2535" 
+  "2516" -> "2523" 
+  "2523" -> "2515" 
+  "2531" -> "2530" 
+  "2517" -> "2522" 
+  "2520" -> "2516" 
+  "2533" -> "2531" 
+  "2519" -> "2517" 
+  "2522" -> "2520" 
+  "2399" -> "2401" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/102-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/102-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/102-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/102-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,87 +1,87 @@
 digraph "desiredActiveConfigChangeDone" {  
-"2527" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>1091</SUB>> ]
-"2537" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig.event = Scheduler::ConfigEvent::None)<SUB>1092</SUB>> ]
-"2546" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfigChanged = false)<SUB>1093</SUB>> ]
-"2550" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mDesiredActiveConfig.configId))<SUB>1095</SUB>> ]
-"2559" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, refreshRate.getVsyncPeriod()))<SUB>1097</SUB>> ]
-"2568" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1098</SUB>> ]
-"2576" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1099</SUB>> ]
-"2584" [label = <(setConfigChangePending,mScheduler-&gt;setConfigChangePending(false))<SUB>1100</SUB>> ]
-"2528" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1091</SUB>> ]
-"2535" [label = <(lock,lock(mActiveConfigLock))<SUB>1091</SUB>> ]
-"2538" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>1092</SUB>> ]
-"2541" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::None)<SUB>1092</SUB>> ]
-"2552" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mDesiredActiveConfig.configId))<SUB>1096</SUB>> ]
-"2560" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1097</SUB>> ]
-"2564" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1097</SUB>> ]
-"2569" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1098</SUB>> ]
-"2572" [label = <(getFps,refreshRate.getFps())<SUB>1098</SUB>> ]
-"2577" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1099</SUB>> ]
-"2580" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1099</SUB>> ]
-"2585" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setConfigChangePending)<SUB>1100</SUB>> ]
-"2529" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1091</SUB>> ]
-"2532" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1091</SUB>> ]
-"2540" [label = <(FIELD_IDENTIFIER,event,event)<SUB>1092</SUB>> ]
-"2542" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>1092</SUB>> ]
-"2545" [label = <(FIELD_IDENTIFIER,None,None)<SUB>1092</SUB>> ]
-"2553" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1096</SUB>> ]
-"2556" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.configId)<SUB>1096</SUB>> ]
-"2562" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1097</SUB>> ]
-"2565" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1097</SUB>> ]
-"2571" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1098</SUB>> ]
-"2573" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1098</SUB>> ]
-"2579" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1099</SUB>> ]
-"2581" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1099</SUB>> ]
-"2587" [label = <(FIELD_IDENTIFIER,setConfigChangePending,setConfigChangePending)<SUB>1100</SUB>> ]
-"2531" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1091</SUB>> ]
-"2534" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1091</SUB>> ]
-"2555" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1096</SUB>> ]
-"2558" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1096</SUB>> ]
-"2567" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1097</SUB>> ]
-"2575" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1098</SUB>> ]
-"2583" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1099</SUB>> ]
-"2525" [label = <(METHOD,desiredActiveConfigChangeDone)<SUB>1090</SUB>> ]
-"2589" [label = <(METHOD_RETURN,void)<SUB>1090</SUB>> ]
-  "2527" -> "2540" 
-  "2537" -> "2546" 
-  "2546" -> "2555" 
-  "2550" -> "2562" 
-  "2559" -> "2571" 
-  "2568" -> "2579" 
-  "2576" -> "2587" 
-  "2584" -> "2589" 
-  "2528" -> "2535" 
-  "2535" -> "2527" 
-  "2538" -> "2542" 
-  "2541" -> "2537" 
-  "2552" -> "2550" 
-  "2560" -> "2567" 
-  "2564" -> "2559" 
-  "2569" -> "2575" 
+"2543" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>1090</SUB>> ]
+"2553" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig.event = Scheduler::ConfigEvent::None)<SUB>1091</SUB>> ]
+"2562" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfigChanged = false)<SUB>1092</SUB>> ]
+"2566" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mDesiredActiveConfig.configId))<SUB>1094</SUB>> ]
+"2575" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, refreshRate.getVsyncPeriod()))<SUB>1096</SUB>> ]
+"2584" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1097</SUB>> ]
+"2592" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1098</SUB>> ]
+"2600" [label = <(setConfigChangePending,mScheduler-&gt;setConfigChangePending(false))<SUB>1099</SUB>> ]
+"2544" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1090</SUB>> ]
+"2551" [label = <(lock,lock(mActiveConfigLock))<SUB>1090</SUB>> ]
+"2554" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>1091</SUB>> ]
+"2557" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::None)<SUB>1091</SUB>> ]
+"2568" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(mDesiredActiveConfig.configId))<SUB>1095</SUB>> ]
+"2576" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1096</SUB>> ]
+"2580" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1096</SUB>> ]
+"2585" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1097</SUB>> ]
+"2588" [label = <(getFps,refreshRate.getFps())<SUB>1097</SUB>> ]
+"2593" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1098</SUB>> ]
+"2596" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1098</SUB>> ]
+"2601" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setConfigChangePending)<SUB>1099</SUB>> ]
+"2545" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1090</SUB>> ]
+"2548" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1090</SUB>> ]
+"2556" [label = <(FIELD_IDENTIFIER,event,event)<SUB>1091</SUB>> ]
+"2558" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>1091</SUB>> ]
+"2561" [label = <(FIELD_IDENTIFIER,None,None)<SUB>1091</SUB>> ]
+"2569" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1095</SUB>> ]
+"2572" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.configId)<SUB>1095</SUB>> ]
+"2578" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1096</SUB>> ]
+"2581" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1096</SUB>> ]
+"2587" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1097</SUB>> ]
+"2589" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1097</SUB>> ]
+"2595" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1098</SUB>> ]
+"2597" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1098</SUB>> ]
+"2603" [label = <(FIELD_IDENTIFIER,setConfigChangePending,setConfigChangePending)<SUB>1099</SUB>> ]
+"2547" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1090</SUB>> ]
+"2550" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1090</SUB>> ]
+"2571" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1095</SUB>> ]
+"2574" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1095</SUB>> ]
+"2583" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1096</SUB>> ]
+"2591" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1097</SUB>> ]
+"2599" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1098</SUB>> ]
+"2541" [label = <(METHOD,desiredActiveConfigChangeDone)<SUB>1089</SUB>> ]
+"2605" [label = <(METHOD_RETURN,void)<SUB>1089</SUB>> ]
+  "2543" -> "2556" 
+  "2553" -> "2562" 
+  "2562" -> "2571" 
+  "2566" -> "2578" 
+  "2575" -> "2587" 
+  "2584" -> "2595" 
+  "2592" -> "2603" 
+  "2600" -> "2605" 
+  "2544" -> "2551" 
+  "2551" -> "2543" 
+  "2554" -> "2558" 
+  "2557" -> "2553" 
+  "2568" -> "2566" 
+  "2576" -> "2583" 
+  "2580" -> "2575" 
+  "2585" -> "2591" 
+  "2588" -> "2584" 
+  "2593" -> "2599" 
+  "2596" -> "2592" 
+  "2601" -> "2600" 
+  "2545" -> "2550" 
+  "2548" -> "2544" 
+  "2556" -> "2554" 
+  "2558" -> "2561" 
+  "2561" -> "2557" 
+  "2569" -> "2574" 
   "2572" -> "2568" 
-  "2577" -> "2583" 
-  "2580" -> "2576" 
-  "2585" -> "2584" 
-  "2529" -> "2534" 
-  "2532" -> "2528" 
-  "2540" -> "2538" 
-  "2542" -> "2545" 
-  "2545" -> "2541" 
-  "2553" -> "2558" 
-  "2556" -> "2552" 
-  "2562" -> "2560" 
-  "2565" -> "2564" 
-  "2571" -> "2569" 
-  "2573" -> "2572" 
-  "2579" -> "2577" 
+  "2578" -> "2576" 
   "2581" -> "2580" 
   "2587" -> "2585" 
-  "2531" -> "2529" 
-  "2534" -> "2532" 
-  "2555" -> "2553" 
-  "2558" -> "2556" 
-  "2567" -> "2565" 
-  "2575" -> "2573" 
+  "2589" -> "2588" 
+  "2595" -> "2593" 
+  "2597" -> "2596" 
+  "2603" -> "2601" 
+  "2547" -> "2545" 
+  "2550" -> "2548" 
+  "2571" -> "2569" 
+  "2574" -> "2572" 
   "2583" -> "2581" 
-  "2525" -> "2531" 
+  "2591" -> "2589" 
+  "2599" -> "2597" 
+  "2541" -> "2547" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/103-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/103-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/103-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/103-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,172 +1,172 @@
 digraph "performSetActiveConfig" {  
-"2593" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1104</SUB>> ]
-"2594" [label = <(ALOGV,ALOGV(&quot;performSetActiveConfig&quot;))<SUB>1105</SUB>> ]
-"2597" [label = <(&lt;operator&gt;.assignment,desiredActiveConfig = getDesiredActiveConfig())<SUB>1107</SUB>> ]
-"2606" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId))<SUB>1113</SUB>> ]
-"2615" [label = <(ALOGV,ALOGV(&quot;performSetActiveConfig changing active config to %d(%s)&quot;,\012          refreshRate.getConfigId().value(), refreshRate.getName().c_str()))<SUB>1115</SUB>> ]
-"2632" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1117</SUB>> ]
-"2659" [label = <(&lt;operator&gt;.assignment,mUpcomingActiveConfig = *desiredActiveConfig)<SUB>1133</SUB>> ]
-"2664" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>1134</SUB>> ]
-"2670" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>1135</SUB>> ]
-"2673" [label = <(ATRACE_INT,ATRACE_INT(&quot;ActiveConfigFPS_HWC&quot;, refreshRate.getFps()))<SUB>1137</SUB>> ]
-"2680" [label = <(&lt;operator&gt;.assignment,constraints.desiredTimeNanos = systemTime())<SUB>1141</SUB>> ]
-"2685" [label = <(&lt;operator&gt;.assignment,constraints.seamlessRequired = false)<SUB>1142</SUB>> ]
-"2692" [label = <(&lt;operator&gt;.assignment,status =\012            getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           mUpcomingActiveConfig.configId.value(),\012                                                           constraints, &amp;outTimeline))<SUB>1145</SUB>> ]
-"2718" [label = <(onNewVsyncPeriodChangeTimeline,mScheduler-&gt;onNewVsyncPeriodChangeTimeline(outTimeline))<SUB>1156</SUB>> ]
-"2723" [label = <(&lt;operator&gt;.assignment,mSetActiveConfigPending = true)<SUB>1158</SUB>> ]
-"2599" [label = <(getDesiredActiveConfig,getDesiredActiveConfig())<SUB>1107</SUB>> ]
-"2601" [label = <(&lt;operator&gt;.logicalNot,!desiredActiveConfig)<SUB>1108</SUB>> ]
-"2608" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId))<SUB>1114</SUB>> ]
-"2617" [label = <(value,refreshRate.getConfigId().value())<SUB>1116</SUB>> ]
-"2624" [label = <(c_str,refreshRate.getName().c_str())<SUB>1116</SUB>> ]
-"2634" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1117</SUB>> ]
-"2636" [label = <(&lt;operator&gt;.logicalOr,!display || display-&gt;getActiveConfig() == desiredActiveConfig-&gt;configId)<SUB>1118</SUB>> ]
-"2651" [label = <(&lt;operator&gt;.logicalNot,!isDisplayConfigAllowed(desiredActiveConfig-&gt;configId))<SUB>1128</SUB>> ]
-"2661" [label = <(&lt;operator&gt;.indirection,*desiredActiveConfig)<SUB>1133</SUB>> ]
-"2666" [label = <(getId,display-&gt;getId())<SUB>1134</SUB>> ]
-"2671" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1135</SUB>> ]
-"2675" [label = <(getFps,refreshRate.getFps())<SUB>1137</SUB>> ]
-"2681" [label = <(&lt;operator&gt;.fieldAccess,constraints.desiredTimeNanos)<SUB>1141</SUB>> ]
-"2684" [label = <(systemTime,systemTime())<SUB>1141</SUB>> ]
-"2686" [label = <(&lt;operator&gt;.fieldAccess,constraints.seamlessRequired)<SUB>1142</SUB>> ]
-"2694" [label = <(setActiveConfigWithConstraints,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           mUpcomingActiveConfig.configId.value(),\012                                                           constraints, &amp;outTimeline))<SUB>1146</SUB>> ]
-"2710" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>1149</SUB>> ]
-"2719" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNewVsyncPeriodChangeTimeline)<SUB>1156</SUB>> ]
-"2604" [label = <(RETURN,return;,return;)<SUB>1110</SUB>> ]
-"2609" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1114</SUB>> ]
-"2612" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1114</SUB>> ]
-"2618" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId().value)<SUB>1116</SUB>> ]
-"2625" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName().c_str)<SUB>1116</SUB>> ]
-"2637" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1118</SUB>> ]
-"2639" [label = <(&lt;operator&gt;.equals,display-&gt;getActiveConfig() == desiredActiveConfig-&gt;configId)<SUB>1118</SUB>> ]
-"2648" [label = <(desiredActiveConfigChangeDone,desiredActiveConfigChangeDone())<SUB>1121</SUB>> ]
-"2649" [label = <(RETURN,return;,return;)<SUB>1122</SUB>> ]
-"2652" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(desiredActiveConfig-&gt;configId))<SUB>1128</SUB>> ]
-"2657" [label = <(desiredActiveConfigChangeDone,desiredActiveConfigChangeDone())<SUB>1129</SUB>> ]
-"2658" [label = <(RETURN,return;,return;)<SUB>1130</SUB>> ]
-"2667" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>1134</SUB>> ]
-"2676" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1137</SUB>> ]
-"2683" [label = <(FIELD_IDENTIFIER,desiredTimeNanos,desiredTimeNanos)<SUB>1141</SUB>> ]
-"2688" [label = <(FIELD_IDENTIFIER,seamlessRequired,seamlessRequired)<SUB>1142</SUB>> ]
-"2695" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setActiveConfigWithConstraints)<SUB>1146</SUB>> ]
-"2698" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1146</SUB>> ]
-"2700" [label = <(value,mUpcomingActiveConfig.configId.value())<SUB>1147</SUB>> ]
-"2707" [label = <(&lt;operator&gt;.addressOf,&amp;outTimeline)<SUB>1148</SUB>> ]
-"2714" [label = <(ALOGW,ALOGW(&quot;setActiveConfigWithConstraints failed: %d&quot;, status))<SUB>1152</SUB>> ]
-"2717" [label = <(RETURN,return;,return;)<SUB>1153</SUB>> ]
-"2721" [label = <(FIELD_IDENTIFIER,onNewVsyncPeriodChangeTimeline,onNewVsyncPeriodChangeTimeline)<SUB>1156</SUB>> ]
-"2611" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1114</SUB>> ]
-"2614" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1114</SUB>> ]
-"2619" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1116</SUB>> ]
-"2623" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1116</SUB>> ]
-"2626" [label = <(getName,refreshRate.getName())<SUB>1116</SUB>> ]
-"2630" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1116</SUB>> ]
-"2640" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>1118</SUB>> ]
-"2644" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1118</SUB>> ]
-"2653" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1128</SUB>> ]
-"2669" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1134</SUB>> ]
-"2678" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1137</SUB>> ]
-"2696" [label = <(getHwComposer,getHwComposer())<SUB>1146</SUB>> ]
-"2697" [label = <(FIELD_IDENTIFIER,setActiveConfigWithConstraints,setActiveConfigWithConstraints)<SUB>1146</SUB>> ]
-"2701" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId.value)<SUB>1147</SUB>> ]
-"2620" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1116</SUB>> ]
-"2627" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName)<SUB>1116</SUB>> ]
-"2641" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>1118</SUB>> ]
-"2646" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1118</SUB>> ]
-"2655" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1128</SUB>> ]
-"2702" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1147</SUB>> ]
-"2705" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1147</SUB>> ]
-"2622" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1116</SUB>> ]
-"2629" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>1116</SUB>> ]
-"2643" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>1118</SUB>> ]
-"2704" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1147</SUB>> ]
-"2591" [label = <(METHOD,performSetActiveConfig)<SUB>1103</SUB>> ]
-"2726" [label = <(METHOD_RETURN,void)<SUB>1103</SUB>> ]
-  "2593" -> "2594" 
-  "2594" -> "2599" 
-  "2597" -> "2601" 
-  "2606" -> "2622" 
-  "2615" -> "2634" 
-  "2632" -> "2637" 
-  "2659" -> "2669" 
-  "2664" -> "2671" 
-  "2670" -> "2678" 
-  "2673" -> "2683" 
-  "2680" -> "2688" 
-  "2685" -> "2696" 
-  "2692" -> "2710" 
-  "2718" -> "2723" 
-  "2723" -> "2726" 
-  "2599" -> "2597" 
-  "2601" -> "2604" 
-  "2601" -> "2611" 
-  "2608" -> "2606" 
-  "2617" -> "2629" 
-  "2624" -> "2615" 
-  "2634" -> "2632" 
-  "2636" -> "2648" 
-  "2636" -> "2655" 
-  "2651" -> "2657" 
-  "2651" -> "2661" 
-  "2661" -> "2659" 
-  "2666" -> "2664" 
-  "2671" -> "2670" 
-  "2675" -> "2673" 
-  "2681" -> "2684" 
-  "2684" -> "2680" 
-  "2686" -> "2685" 
-  "2694" -> "2692" 
-  "2710" -> "2714" 
-  "2710" -> "2721" 
-  "2719" -> "2718" 
-  "2604" -> "2726" 
-  "2609" -> "2614" 
-  "2612" -> "2608" 
-  "2618" -> "2617" 
-  "2625" -> "2624" 
-  "2637" -> "2636" 
-  "2637" -> "2643" 
-  "2639" -> "2636" 
-  "2648" -> "2649" 
-  "2649" -> "2726" 
-  "2652" -> "2651" 
-  "2657" -> "2658" 
-  "2658" -> "2726" 
-  "2667" -> "2666" 
-  "2676" -> "2675" 
-  "2683" -> "2681" 
-  "2688" -> "2686" 
-  "2695" -> "2698" 
-  "2698" -> "2704" 
-  "2700" -> "2707" 
-  "2707" -> "2694" 
-  "2714" -> "2717" 
-  "2717" -> "2726" 
-  "2721" -> "2719" 
-  "2611" -> "2609" 
-  "2614" -> "2612" 
-  "2619" -> "2623" 
-  "2623" -> "2618" 
-  "2626" -> "2630" 
-  "2630" -> "2625" 
-  "2640" -> "2646" 
-  "2644" -> "2639" 
-  "2653" -> "2652" 
-  "2669" -> "2667" 
-  "2678" -> "2676" 
-  "2696" -> "2697" 
-  "2697" -> "2695" 
-  "2701" -> "2700" 
-  "2620" -> "2619" 
-  "2627" -> "2626" 
+"2609" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1103</SUB>> ]
+"2610" [label = <(ALOGV,ALOGV(&quot;performSetActiveConfig&quot;))<SUB>1104</SUB>> ]
+"2613" [label = <(&lt;operator&gt;.assignment,desiredActiveConfig = getDesiredActiveConfig())<SUB>1106</SUB>> ]
+"2622" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId))<SUB>1112</SUB>> ]
+"2631" [label = <(ALOGV,ALOGV(&quot;performSetActiveConfig changing active config to %d(%s)&quot;,\012          refreshRate.getConfigId().value(), refreshRate.getName().c_str()))<SUB>1114</SUB>> ]
+"2648" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1116</SUB>> ]
+"2675" [label = <(&lt;operator&gt;.assignment,mUpcomingActiveConfig = *desiredActiveConfig)<SUB>1132</SUB>> ]
+"2680" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>1133</SUB>> ]
+"2686" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>1134</SUB>> ]
+"2689" [label = <(ATRACE_INT,ATRACE_INT(&quot;ActiveConfigFPS_HWC&quot;, refreshRate.getFps()))<SUB>1136</SUB>> ]
+"2696" [label = <(&lt;operator&gt;.assignment,constraints.desiredTimeNanos = systemTime())<SUB>1140</SUB>> ]
+"2701" [label = <(&lt;operator&gt;.assignment,constraints.seamlessRequired = false)<SUB>1141</SUB>> ]
+"2708" [label = <(&lt;operator&gt;.assignment,status =\012            getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           mUpcomingActiveConfig.configId.value(),\012                                                           constraints, &amp;outTimeline))<SUB>1144</SUB>> ]
+"2734" [label = <(onNewVsyncPeriodChangeTimeline,mScheduler-&gt;onNewVsyncPeriodChangeTimeline(outTimeline))<SUB>1155</SUB>> ]
+"2739" [label = <(&lt;operator&gt;.assignment,mSetActiveConfigPending = true)<SUB>1157</SUB>> ]
+"2615" [label = <(getDesiredActiveConfig,getDesiredActiveConfig())<SUB>1106</SUB>> ]
+"2617" [label = <(&lt;operator&gt;.logicalNot,!desiredActiveConfig)<SUB>1107</SUB>> ]
+"2624" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId))<SUB>1113</SUB>> ]
+"2633" [label = <(value,refreshRate.getConfigId().value())<SUB>1115</SUB>> ]
+"2640" [label = <(c_str,refreshRate.getName().c_str())<SUB>1115</SUB>> ]
+"2650" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1116</SUB>> ]
+"2652" [label = <(&lt;operator&gt;.logicalOr,!display || display-&gt;getActiveConfig() == desiredActiveConfig-&gt;configId)<SUB>1117</SUB>> ]
+"2667" [label = <(&lt;operator&gt;.logicalNot,!isDisplayConfigAllowed(desiredActiveConfig-&gt;configId))<SUB>1127</SUB>> ]
+"2677" [label = <(&lt;operator&gt;.indirection,*desiredActiveConfig)<SUB>1132</SUB>> ]
+"2682" [label = <(getId,display-&gt;getId())<SUB>1133</SUB>> ]
+"2687" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1134</SUB>> ]
+"2691" [label = <(getFps,refreshRate.getFps())<SUB>1136</SUB>> ]
+"2697" [label = <(&lt;operator&gt;.fieldAccess,constraints.desiredTimeNanos)<SUB>1140</SUB>> ]
+"2700" [label = <(systemTime,systemTime())<SUB>1140</SUB>> ]
+"2702" [label = <(&lt;operator&gt;.fieldAccess,constraints.seamlessRequired)<SUB>1141</SUB>> ]
+"2710" [label = <(setActiveConfigWithConstraints,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           mUpcomingActiveConfig.configId.value(),\012                                                           constraints, &amp;outTimeline))<SUB>1145</SUB>> ]
+"2726" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>1148</SUB>> ]
+"2735" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNewVsyncPeriodChangeTimeline)<SUB>1155</SUB>> ]
+"2620" [label = <(RETURN,return;,return;)<SUB>1109</SUB>> ]
+"2625" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>1113</SUB>> ]
+"2628" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1113</SUB>> ]
+"2634" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId().value)<SUB>1115</SUB>> ]
+"2641" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName().c_str)<SUB>1115</SUB>> ]
+"2653" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1117</SUB>> ]
+"2655" [label = <(&lt;operator&gt;.equals,display-&gt;getActiveConfig() == desiredActiveConfig-&gt;configId)<SUB>1117</SUB>> ]
+"2664" [label = <(desiredActiveConfigChangeDone,desiredActiveConfigChangeDone())<SUB>1120</SUB>> ]
+"2665" [label = <(RETURN,return;,return;)<SUB>1121</SUB>> ]
+"2668" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(desiredActiveConfig-&gt;configId))<SUB>1127</SUB>> ]
+"2673" [label = <(desiredActiveConfigChangeDone,desiredActiveConfigChangeDone())<SUB>1128</SUB>> ]
+"2674" [label = <(RETURN,return;,return;)<SUB>1129</SUB>> ]
+"2683" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>1133</SUB>> ]
+"2692" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1136</SUB>> ]
+"2699" [label = <(FIELD_IDENTIFIER,desiredTimeNanos,desiredTimeNanos)<SUB>1140</SUB>> ]
+"2704" [label = <(FIELD_IDENTIFIER,seamlessRequired,seamlessRequired)<SUB>1141</SUB>> ]
+"2711" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setActiveConfigWithConstraints)<SUB>1145</SUB>> ]
+"2714" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1145</SUB>> ]
+"2716" [label = <(value,mUpcomingActiveConfig.configId.value())<SUB>1146</SUB>> ]
+"2723" [label = <(&lt;operator&gt;.addressOf,&amp;outTimeline)<SUB>1147</SUB>> ]
+"2730" [label = <(ALOGW,ALOGW(&quot;setActiveConfigWithConstraints failed: %d&quot;, status))<SUB>1151</SUB>> ]
+"2733" [label = <(RETURN,return;,return;)<SUB>1152</SUB>> ]
+"2737" [label = <(FIELD_IDENTIFIER,onNewVsyncPeriodChangeTimeline,onNewVsyncPeriodChangeTimeline)<SUB>1155</SUB>> ]
+"2627" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>1113</SUB>> ]
+"2630" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1113</SUB>> ]
+"2635" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1115</SUB>> ]
+"2639" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1115</SUB>> ]
+"2642" [label = <(getName,refreshRate.getName())<SUB>1115</SUB>> ]
+"2646" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>1115</SUB>> ]
+"2656" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>1117</SUB>> ]
+"2660" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1117</SUB>> ]
+"2669" [label = <(&lt;operator&gt;.indirectFieldAccess,desiredActiveConfig-&gt;configId)<SUB>1127</SUB>> ]
+"2685" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1133</SUB>> ]
+"2694" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1136</SUB>> ]
+"2712" [label = <(getHwComposer,getHwComposer())<SUB>1145</SUB>> ]
+"2713" [label = <(FIELD_IDENTIFIER,setActiveConfigWithConstraints,setActiveConfigWithConstraints)<SUB>1145</SUB>> ]
+"2717" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId.value)<SUB>1146</SUB>> ]
+"2636" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1115</SUB>> ]
+"2643" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName)<SUB>1115</SUB>> ]
+"2657" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>1117</SUB>> ]
+"2662" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1117</SUB>> ]
+"2671" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1127</SUB>> ]
+"2718" [label = <(&lt;operator&gt;.fieldAccess,mUpcomingActiveConfig.configId)<SUB>1146</SUB>> ]
+"2721" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1146</SUB>> ]
+"2638" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1115</SUB>> ]
+"2645" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>1115</SUB>> ]
+"2659" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>1117</SUB>> ]
+"2720" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>1146</SUB>> ]
+"2607" [label = <(METHOD,performSetActiveConfig)<SUB>1102</SUB>> ]
+"2742" [label = <(METHOD_RETURN,void)<SUB>1102</SUB>> ]
+  "2609" -> "2610" 
+  "2610" -> "2615" 
+  "2613" -> "2617" 
+  "2622" -> "2638" 
+  "2631" -> "2650" 
+  "2648" -> "2653" 
+  "2675" -> "2685" 
+  "2680" -> "2687" 
+  "2686" -> "2694" 
+  "2689" -> "2699" 
+  "2696" -> "2704" 
+  "2701" -> "2712" 
+  "2708" -> "2726" 
+  "2734" -> "2739" 
+  "2739" -> "2742" 
+  "2615" -> "2613" 
+  "2617" -> "2620" 
+  "2617" -> "2627" 
+  "2624" -> "2622" 
+  "2633" -> "2645" 
+  "2640" -> "2631" 
+  "2650" -> "2648" 
+  "2652" -> "2664" 
+  "2652" -> "2671" 
+  "2667" -> "2673" 
+  "2667" -> "2677" 
+  "2677" -> "2675" 
+  "2682" -> "2680" 
+  "2687" -> "2686" 
+  "2691" -> "2689" 
+  "2697" -> "2700" 
+  "2700" -> "2696" 
+  "2702" -> "2701" 
+  "2710" -> "2708" 
+  "2726" -> "2730" 
+  "2726" -> "2737" 
+  "2735" -> "2734" 
+  "2620" -> "2742" 
+  "2625" -> "2630" 
+  "2628" -> "2624" 
+  "2634" -> "2633" 
   "2641" -> "2640" 
-  "2646" -> "2644" 
-  "2655" -> "2653" 
-  "2702" -> "2705" 
-  "2705" -> "2701" 
-  "2622" -> "2620" 
-  "2629" -> "2627" 
-  "2643" -> "2641" 
+  "2653" -> "2652" 
+  "2653" -> "2659" 
+  "2655" -> "2652" 
+  "2664" -> "2665" 
+  "2665" -> "2742" 
+  "2668" -> "2667" 
+  "2673" -> "2674" 
+  "2674" -> "2742" 
+  "2683" -> "2682" 
+  "2692" -> "2691" 
+  "2699" -> "2697" 
   "2704" -> "2702" 
-  "2591" -> "2593" 
+  "2711" -> "2714" 
+  "2714" -> "2720" 
+  "2716" -> "2723" 
+  "2723" -> "2710" 
+  "2730" -> "2733" 
+  "2733" -> "2742" 
+  "2737" -> "2735" 
+  "2627" -> "2625" 
+  "2630" -> "2628" 
+  "2635" -> "2639" 
+  "2639" -> "2634" 
+  "2642" -> "2646" 
+  "2646" -> "2641" 
+  "2656" -> "2662" 
+  "2660" -> "2655" 
+  "2669" -> "2668" 
+  "2685" -> "2683" 
+  "2694" -> "2692" 
+  "2712" -> "2713" 
+  "2713" -> "2711" 
+  "2717" -> "2716" 
+  "2636" -> "2635" 
+  "2643" -> "2642" 
+  "2657" -> "2656" 
+  "2662" -> "2660" 
+  "2671" -> "2669" 
+  "2718" -> "2721" 
+  "2721" -> "2717" 
+  "2638" -> "2636" 
+  "2645" -> "2643" 
+  "2659" -> "2657" 
+  "2720" -> "2718" 
+  "2607" -> "2609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/104-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/104-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/104-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/104-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,130 +1,130 @@
 digraph "getDisplayColorModes" {  
-"2741" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>1167</SUB>> ]
-"2749" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = false)<SUB>1168</SUB>> ]
-"2788" [label = <(clear,outColorModes-&gt;clear())<SUB>1180</SUB>> ]
-"2837" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1193</SUB>> ]
-"2733" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outColorModes)<SUB>1163</SUB>> ]
-"2742" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>1167</SUB>> ]
-"2754" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>1170</SUB>> ]
-"2765" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1172</SUB>> ]
-"2775" [label = <(&lt;operator&gt;.assignment,modes = getHwComposer().getColorModes(*displayId))<SUB>1177</SUB>> ]
-"2783" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = displayId == getInternalDisplayIdLocked())<SUB>1178</SUB>> ]
-"2789" [label = <(&lt;operator&gt;.indirectFieldAccess,outColorModes-&gt;clear)<SUB>1180</SUB>> ]
-"2793" [label = <(&lt;operator&gt;.logicalAnd,isInternalDisplay &amp;&amp; !hasWideColorDisplay)<SUB>1186</SUB>> ]
-"2734" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1163</SUB>> ]
-"2736" [label = <(&lt;operator&gt;.logicalNot,!outColorModes)<SUB>1163</SUB>> ]
-"2739" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1164</SUB>> ]
-"2743" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>1167</SUB>> ]
-"2756" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>1170</SUB>> ]
-"2767" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1172</SUB>> ]
-"2770" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1173</SUB>> ]
-"2777" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>1177</SUB>> ]
-"2785" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>1178</SUB>> ]
-"2791" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1180</SUB>> ]
-"2795" [label = <(&lt;operator&gt;.logicalNot,!hasWideColorDisplay)<SUB>1186</SUB>> ]
-"2798" [label = <(std::remove_copy_if,std::remove_copy_if(modes.cbegin(), modes.cend(), std::back_inserter(*outColorModes),\012                            isWideColorMode))<SUB>1187</SUB>> ]
-"2745" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>1167</SUB>> ]
-"2757" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1170</SUB>> ]
-"2773" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1174</SUB>> ]
-"2778" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>1177</SUB>> ]
-"2781" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1177</SUB>> ]
-"2787" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1178</SUB>> ]
-"2799" [label = <(&lt;operator&gt;.fieldAccess,std::remove_copy_if)<SUB>1187</SUB>> ]
-"2802" [label = <(cbegin,modes.cbegin())<SUB>1187</SUB>> ]
-"2806" [label = <(cend,modes.cend())<SUB>1187</SUB>> ]
-"2810" [label = <(std::back_inserter,std::back_inserter(*outColorModes))<SUB>1187</SUB>> ]
-"2819" [label = <(std::copy,std::copy(modes.cbegin(), modes.cend(), std::back_inserter(*outColorModes)))<SUB>1190</SUB>> ]
-"2758" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1170</SUB>> ]
-"2779" [label = <(getHwComposer,getHwComposer())<SUB>1177</SUB>> ]
-"2780" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>1177</SUB>> ]
-"2801" [label = <(FIELD_IDENTIFIER,remove_copy_if,remove_copy_if)<SUB>1187</SUB>> ]
-"2803" [label = <(&lt;operator&gt;.fieldAccess,modes.cbegin)<SUB>1187</SUB>> ]
-"2807" [label = <(&lt;operator&gt;.fieldAccess,modes.cend)<SUB>1187</SUB>> ]
-"2811" [label = <(&lt;operator&gt;.fieldAccess,std::back_inserter)<SUB>1187</SUB>> ]
-"2814" [label = <(&lt;operator&gt;.indirection,*outColorModes)<SUB>1187</SUB>> ]
-"2820" [label = <(&lt;operator&gt;.fieldAccess,std::copy)<SUB>1190</SUB>> ]
-"2823" [label = <(cbegin,modes.cbegin())<SUB>1190</SUB>> ]
-"2827" [label = <(cend,modes.cend())<SUB>1190</SUB>> ]
-"2831" [label = <(std::back_inserter,std::back_inserter(*outColorModes))<SUB>1190</SUB>> ]
-"2759" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1170</SUB>> ]
-"2762" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1170</SUB>> ]
-"2805" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>1187</SUB>> ]
-"2809" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>1187</SUB>> ]
-"2813" [label = <(FIELD_IDENTIFIER,back_inserter,back_inserter)<SUB>1187</SUB>> ]
-"2822" [label = <(FIELD_IDENTIFIER,copy,copy)<SUB>1190</SUB>> ]
-"2824" [label = <(&lt;operator&gt;.fieldAccess,modes.cbegin)<SUB>1190</SUB>> ]
-"2828" [label = <(&lt;operator&gt;.fieldAccess,modes.cend)<SUB>1190</SUB>> ]
-"2832" [label = <(&lt;operator&gt;.fieldAccess,std::back_inserter)<SUB>1190</SUB>> ]
-"2835" [label = <(&lt;operator&gt;.indirection,*outColorModes)<SUB>1190</SUB>> ]
-"2826" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>1190</SUB>> ]
-"2830" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>1190</SUB>> ]
-"2834" [label = <(FIELD_IDENTIFIER,back_inserter,back_inserter)<SUB>1190</SUB>> ]
-"2728" [label = <(METHOD,getDisplayColorModes)<SUB>1161</SUB>> ]
-"2839" [label = <(METHOD_RETURN,status_t)<SUB>1161</SUB>> ]
-  "2741" -> "2749" 
-  "2749" -> "2759" 
-  "2788" -> "2793" 
-  "2788" -> "2795" 
-  "2837" -> "2839" 
-  "2733" -> "2739" 
-  "2733" -> "2745" 
-  "2742" -> "2741" 
-  "2754" -> "2767" 
-  "2765" -> "2770" 
-  "2775" -> "2787" 
-  "2783" -> "2791" 
-  "2789" -> "2788" 
-  "2793" -> "2801" 
-  "2793" -> "2822" 
-  "2734" -> "2733" 
-  "2734" -> "2736" 
-  "2736" -> "2733" 
-  "2739" -> "2839" 
-  "2743" -> "2742" 
-  "2756" -> "2754" 
-  "2767" -> "2765" 
-  "2770" -> "2773" 
-  "2770" -> "2779" 
-  "2777" -> "2775" 
-  "2785" -> "2783" 
-  "2791" -> "2789" 
-  "2795" -> "2793" 
-  "2798" -> "2837" 
-  "2745" -> "2743" 
-  "2757" -> "2756" 
-  "2773" -> "2839" 
-  "2778" -> "2781" 
-  "2781" -> "2777" 
-  "2787" -> "2785" 
-  "2799" -> "2805" 
-  "2802" -> "2809" 
-  "2806" -> "2813" 
-  "2810" -> "2798" 
-  "2819" -> "2837" 
+"2757" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>1166</SUB>> ]
+"2765" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = false)<SUB>1167</SUB>> ]
+"2804" [label = <(clear,outColorModes-&gt;clear())<SUB>1179</SUB>> ]
+"2853" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1192</SUB>> ]
+"2749" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outColorModes)<SUB>1162</SUB>> ]
+"2758" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>1166</SUB>> ]
+"2770" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>1169</SUB>> ]
+"2781" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1171</SUB>> ]
+"2791" [label = <(&lt;operator&gt;.assignment,modes = getHwComposer().getColorModes(*displayId))<SUB>1176</SUB>> ]
+"2799" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = displayId == getInternalDisplayIdLocked())<SUB>1177</SUB>> ]
+"2805" [label = <(&lt;operator&gt;.indirectFieldAccess,outColorModes-&gt;clear)<SUB>1179</SUB>> ]
+"2809" [label = <(&lt;operator&gt;.logicalAnd,isInternalDisplay &amp;&amp; !hasWideColorDisplay)<SUB>1185</SUB>> ]
+"2750" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1162</SUB>> ]
+"2752" [label = <(&lt;operator&gt;.logicalNot,!outColorModes)<SUB>1162</SUB>> ]
+"2755" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1163</SUB>> ]
+"2759" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>1166</SUB>> ]
+"2772" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>1169</SUB>> ]
+"2783" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1171</SUB>> ]
+"2786" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1172</SUB>> ]
+"2793" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>1176</SUB>> ]
+"2801" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>1177</SUB>> ]
+"2807" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1179</SUB>> ]
+"2811" [label = <(&lt;operator&gt;.logicalNot,!hasWideColorDisplay)<SUB>1185</SUB>> ]
+"2814" [label = <(std::remove_copy_if,std::remove_copy_if(modes.cbegin(), modes.cend(), std::back_inserter(*outColorModes),\012                            isWideColorMode))<SUB>1186</SUB>> ]
+"2761" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>1166</SUB>> ]
+"2773" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1169</SUB>> ]
+"2789" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1173</SUB>> ]
+"2794" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>1176</SUB>> ]
+"2797" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1176</SUB>> ]
+"2803" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1177</SUB>> ]
+"2815" [label = <(&lt;operator&gt;.fieldAccess,std::remove_copy_if)<SUB>1186</SUB>> ]
+"2818" [label = <(cbegin,modes.cbegin())<SUB>1186</SUB>> ]
+"2822" [label = <(cend,modes.cend())<SUB>1186</SUB>> ]
+"2826" [label = <(std::back_inserter,std::back_inserter(*outColorModes))<SUB>1186</SUB>> ]
+"2835" [label = <(std::copy,std::copy(modes.cbegin(), modes.cend(), std::back_inserter(*outColorModes)))<SUB>1189</SUB>> ]
+"2774" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1169</SUB>> ]
+"2795" [label = <(getHwComposer,getHwComposer())<SUB>1176</SUB>> ]
+"2796" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>1176</SUB>> ]
+"2817" [label = <(FIELD_IDENTIFIER,remove_copy_if,remove_copy_if)<SUB>1186</SUB>> ]
+"2819" [label = <(&lt;operator&gt;.fieldAccess,modes.cbegin)<SUB>1186</SUB>> ]
+"2823" [label = <(&lt;operator&gt;.fieldAccess,modes.cend)<SUB>1186</SUB>> ]
+"2827" [label = <(&lt;operator&gt;.fieldAccess,std::back_inserter)<SUB>1186</SUB>> ]
+"2830" [label = <(&lt;operator&gt;.indirection,*outColorModes)<SUB>1186</SUB>> ]
+"2836" [label = <(&lt;operator&gt;.fieldAccess,std::copy)<SUB>1189</SUB>> ]
+"2839" [label = <(cbegin,modes.cbegin())<SUB>1189</SUB>> ]
+"2843" [label = <(cend,modes.cend())<SUB>1189</SUB>> ]
+"2847" [label = <(std::back_inserter,std::back_inserter(*outColorModes))<SUB>1189</SUB>> ]
+"2775" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1169</SUB>> ]
+"2778" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1169</SUB>> ]
+"2821" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>1186</SUB>> ]
+"2825" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>1186</SUB>> ]
+"2829" [label = <(FIELD_IDENTIFIER,back_inserter,back_inserter)<SUB>1186</SUB>> ]
+"2838" [label = <(FIELD_IDENTIFIER,copy,copy)<SUB>1189</SUB>> ]
+"2840" [label = <(&lt;operator&gt;.fieldAccess,modes.cbegin)<SUB>1189</SUB>> ]
+"2844" [label = <(&lt;operator&gt;.fieldAccess,modes.cend)<SUB>1189</SUB>> ]
+"2848" [label = <(&lt;operator&gt;.fieldAccess,std::back_inserter)<SUB>1189</SUB>> ]
+"2851" [label = <(&lt;operator&gt;.indirection,*outColorModes)<SUB>1189</SUB>> ]
+"2842" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>1189</SUB>> ]
+"2846" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>1189</SUB>> ]
+"2850" [label = <(FIELD_IDENTIFIER,back_inserter,back_inserter)<SUB>1189</SUB>> ]
+"2744" [label = <(METHOD,getDisplayColorModes)<SUB>1160</SUB>> ]
+"2855" [label = <(METHOD_RETURN,status_t)<SUB>1160</SUB>> ]
+  "2757" -> "2765" 
+  "2765" -> "2775" 
+  "2804" -> "2809" 
+  "2804" -> "2811" 
+  "2853" -> "2855" 
+  "2749" -> "2755" 
+  "2749" -> "2761" 
   "2758" -> "2757" 
-  "2779" -> "2780" 
-  "2780" -> "2778" 
+  "2770" -> "2783" 
+  "2781" -> "2786" 
+  "2791" -> "2803" 
+  "2799" -> "2807" 
+  "2805" -> "2804" 
+  "2809" -> "2817" 
+  "2809" -> "2838" 
+  "2750" -> "2749" 
+  "2750" -> "2752" 
+  "2752" -> "2749" 
+  "2755" -> "2855" 
+  "2759" -> "2758" 
+  "2772" -> "2770" 
+  "2783" -> "2781" 
+  "2786" -> "2789" 
+  "2786" -> "2795" 
+  "2793" -> "2791" 
   "2801" -> "2799" 
-  "2803" -> "2802" 
-  "2807" -> "2806" 
-  "2811" -> "2814" 
-  "2814" -> "2810" 
-  "2820" -> "2826" 
-  "2823" -> "2830" 
-  "2827" -> "2834" 
-  "2831" -> "2819" 
-  "2759" -> "2762" 
-  "2762" -> "2758" 
-  "2805" -> "2803" 
-  "2809" -> "2807" 
-  "2813" -> "2811" 
-  "2822" -> "2820" 
-  "2824" -> "2823" 
-  "2828" -> "2827" 
-  "2832" -> "2835" 
-  "2835" -> "2831" 
-  "2826" -> "2824" 
-  "2830" -> "2828" 
-  "2834" -> "2832" 
-  "2728" -> "2734" 
+  "2807" -> "2805" 
+  "2811" -> "2809" 
+  "2814" -> "2853" 
+  "2761" -> "2759" 
+  "2773" -> "2772" 
+  "2789" -> "2855" 
+  "2794" -> "2797" 
+  "2797" -> "2793" 
+  "2803" -> "2801" 
+  "2815" -> "2821" 
+  "2818" -> "2825" 
+  "2822" -> "2829" 
+  "2826" -> "2814" 
+  "2835" -> "2853" 
+  "2774" -> "2773" 
+  "2795" -> "2796" 
+  "2796" -> "2794" 
+  "2817" -> "2815" 
+  "2819" -> "2818" 
+  "2823" -> "2822" 
+  "2827" -> "2830" 
+  "2830" -> "2826" 
+  "2836" -> "2842" 
+  "2839" -> "2846" 
+  "2843" -> "2850" 
+  "2847" -> "2835" 
+  "2775" -> "2778" 
+  "2778" -> "2774" 
+  "2821" -> "2819" 
+  "2825" -> "2823" 
+  "2829" -> "2827" 
+  "2838" -> "2836" 
+  "2840" -> "2839" 
+  "2844" -> "2843" 
+  "2848" -> "2851" 
+  "2851" -> "2847" 
+  "2842" -> "2840" 
+  "2846" -> "2844" 
+  "2850" -> "2848" 
+  "2744" -> "2750" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/105-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/105-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/105-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/105-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,27 +1,27 @@
 digraph "getDisplayNativePrimaries" {  
-"2858" [label = <(memcpy,memcpy(&amp;primaries, &amp;mInternalDisplayPrimaries, sizeof(ui::DisplayPrimaries)))<SUB>1207</SUB>> ]
-"2865" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1208</SUB>> ]
-"2846" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1198</SUB>> ]
-"2852" [label = <(&lt;operator&gt;.notEquals,getInternalDisplayToken() != displayToken)<SUB>1203</SUB>> ]
-"2859" [label = <(&lt;operator&gt;.addressOf,&amp;primaries)<SUB>1207</SUB>> ]
-"2861" [label = <(&lt;operator&gt;.addressOf,&amp;mInternalDisplayPrimaries)<SUB>1207</SUB>> ]
-"2863" [label = <(&lt;operator&gt;.sizeOf,sizeof(ui::DisplayPrimaries))<SUB>1207</SUB>> ]
-"2849" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1199</SUB>> ]
-"2853" [label = <(getInternalDisplayToken,getInternalDisplayToken())<SUB>1203</SUB>> ]
-"2856" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1204</SUB>> ]
-"2841" [label = <(METHOD,getDisplayNativePrimaries)<SUB>1196</SUB>> ]
-"2867" [label = <(METHOD_RETURN,status_t)<SUB>1196</SUB>> ]
-  "2858" -> "2865" 
-  "2865" -> "2867" 
-  "2846" -> "2853" 
-  "2846" -> "2849" 
-  "2852" -> "2856" 
-  "2852" -> "2859" 
-  "2859" -> "2861" 
-  "2861" -> "2863" 
-  "2863" -> "2858" 
-  "2849" -> "2867" 
-  "2853" -> "2852" 
-  "2856" -> "2867" 
-  "2841" -> "2846" 
+"2874" [label = <(memcpy,memcpy(&amp;primaries, &amp;mInternalDisplayPrimaries, sizeof(ui::DisplayPrimaries)))<SUB>1206</SUB>> ]
+"2881" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1207</SUB>> ]
+"2862" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1197</SUB>> ]
+"2868" [label = <(&lt;operator&gt;.notEquals,getInternalDisplayToken() != displayToken)<SUB>1202</SUB>> ]
+"2875" [label = <(&lt;operator&gt;.addressOf,&amp;primaries)<SUB>1206</SUB>> ]
+"2877" [label = <(&lt;operator&gt;.addressOf,&amp;mInternalDisplayPrimaries)<SUB>1206</SUB>> ]
+"2879" [label = <(&lt;operator&gt;.sizeOf,sizeof(ui::DisplayPrimaries))<SUB>1206</SUB>> ]
+"2865" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1198</SUB>> ]
+"2869" [label = <(getInternalDisplayToken,getInternalDisplayToken())<SUB>1202</SUB>> ]
+"2872" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1203</SUB>> ]
+"2857" [label = <(METHOD,getDisplayNativePrimaries)<SUB>1195</SUB>> ]
+"2883" [label = <(METHOD_RETURN,status_t)<SUB>1195</SUB>> ]
+  "2874" -> "2881" 
+  "2881" -> "2883" 
+  "2862" -> "2869" 
+  "2862" -> "2865" 
+  "2868" -> "2872" 
+  "2868" -> "2875" 
+  "2875" -> "2877" 
+  "2877" -> "2879" 
+  "2879" -> "2874" 
+  "2865" -> "2883" 
+  "2869" -> "2868" 
+  "2872" -> "2883" 
+  "2857" -> "2862" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/106-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/106-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/106-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/106-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,36 +1,36 @@
 digraph "getActiveColorMode" {  
-"2873" [label = <(lock,lock(mStateLock))<SUB>1212</SUB>> ]
-"2893" [label = <(RETURN,return static_cast&lt;ColorMode&gt;(BAD_VALUE);,return static_cast&lt;ColorMode&gt;(BAD_VALUE);)<SUB>1217</SUB>> ]
-"2894" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(BAD_VALUE))<SUB>1217</SUB>> ]
-"2878" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1214</SUB>> ]
-"2883" [label = <(RETURN,return display-&gt;getCompositionDisplay()-&gt;getState().colorMode;,return display-&gt;getCompositionDisplay()-&gt;getState().colorMode;)<SUB>1215</SUB>> ]
-"2895" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>1217</SUB>> ]
-"2880" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1214</SUB>> ]
-"2884" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>1215</SUB>> ]
-"2885" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>1215</SUB>> ]
-"2892" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>1215</SUB>> ]
-"2886" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>1215</SUB>> ]
-"2887" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>1215</SUB>> ]
-"2891" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>1215</SUB>> ]
-"2888" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>1215</SUB>> ]
-"2890" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>1215</SUB>> ]
-"2869" [label = <(METHOD,getActiveColorMode)<SUB>1211</SUB>> ]
-"2897" [label = <(METHOD_RETURN,ColorMode)<SUB>1211</SUB>> ]
-  "2873" -> "2880" 
-  "2893" -> "2897" 
-  "2894" -> "2893" 
-  "2878" -> "2895" 
-  "2878" -> "2890" 
-  "2883" -> "2897" 
-  "2895" -> "2894" 
-  "2880" -> "2878" 
-  "2884" -> "2883" 
-  "2885" -> "2892" 
-  "2892" -> "2884" 
-  "2886" -> "2885" 
-  "2887" -> "2891" 
-  "2891" -> "2886" 
-  "2888" -> "2887" 
-  "2890" -> "2888" 
-  "2869" -> "2873" 
+"2889" [label = <(lock,lock(mStateLock))<SUB>1211</SUB>> ]
+"2909" [label = <(RETURN,return static_cast&lt;ColorMode&gt;(BAD_VALUE);,return static_cast&lt;ColorMode&gt;(BAD_VALUE);)<SUB>1216</SUB>> ]
+"2910" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(BAD_VALUE))<SUB>1216</SUB>> ]
+"2894" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1213</SUB>> ]
+"2899" [label = <(RETURN,return display-&gt;getCompositionDisplay()-&gt;getState().colorMode;,return display-&gt;getCompositionDisplay()-&gt;getState().colorMode;)<SUB>1214</SUB>> ]
+"2911" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>1216</SUB>> ]
+"2896" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1213</SUB>> ]
+"2900" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>1214</SUB>> ]
+"2901" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>1214</SUB>> ]
+"2908" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>1214</SUB>> ]
+"2902" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>1214</SUB>> ]
+"2903" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>1214</SUB>> ]
+"2907" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>1214</SUB>> ]
+"2904" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>1214</SUB>> ]
+"2906" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>1214</SUB>> ]
+"2885" [label = <(METHOD,getActiveColorMode)<SUB>1210</SUB>> ]
+"2913" [label = <(METHOD_RETURN,ColorMode)<SUB>1210</SUB>> ]
+  "2889" -> "2896" 
+  "2909" -> "2913" 
+  "2910" -> "2909" 
+  "2894" -> "2911" 
+  "2894" -> "2906" 
+  "2899" -> "2913" 
+  "2911" -> "2910" 
+  "2896" -> "2894" 
+  "2900" -> "2899" 
+  "2901" -> "2908" 
+  "2908" -> "2900" 
+  "2902" -> "2901" 
+  "2903" -> "2907" 
+  "2907" -> "2902" 
+  "2904" -> "2903" 
+  "2906" -> "2904" 
+  "2885" -> "2889" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/107-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/107-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/107-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/107-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,11 +1,11 @@
 digraph "setActiveColorMode" {  
-"2903" [label = <(UNKNOWN,schedule([=]() MAIN_THREAD {\012 Vector&lt;ColorMode&gt; modes;\012        getDisplayColorModes(displayToken, &amp;modes);\012 bool exists = std::find(std::begin(modes), std::end(modes), mode) != std::end(modes);\012 if (mode &lt; ColorMode::NATIVE || !exists) {\012            ALOGE(&quot;Attempt to set invalid active color mode %s (%d) for display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 return;\012 }\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set active color mode %s (%d) for invalid display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set active color mode %s (%d) for virtual display&quot;,\012                  decodeColorMode(mode).c_str(), mode);\012 } else {\012            display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012                    compositionengine::Output::ColorProfile{mode, Dataspace::UNKNOWN,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN});\012 }\012 },schedule([=]() MAIN_THREAD {\012 Vector&lt;ColorMode&gt; modes;\012        getDisplayColorModes(displayToken, &amp;modes);\012 bool exists = std::find(std::begin(modes), std::end(modes), mode) != std::end(modes);\012 if (mode &lt; ColorMode::NATIVE || !exists) {\012            ALOGE(&quot;Attempt to set invalid active color mode %s (%d) for display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 return;\012 }\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set active color mode %s (%d) for invalid display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set active color mode %s (%d) for virtual display&quot;,\012                  decodeColorMode(mode).c_str(), mode);\012 } else {\012            display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012                    compositionengine::Output::ColorProfile{mode, Dataspace::UNKNOWN,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN});\012 }\012 })<SUB>1221</SUB>> ]
-"2904" [label = <(UNKNOWN,).wait();,).wait();)<SUB>1243</SUB>> ]
-"2905" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1245</SUB>> ]
-"2899" [label = <(METHOD,setActiveColorMode)<SUB>1220</SUB>> ]
-"2907" [label = <(METHOD_RETURN,status_t)<SUB>1220</SUB>> ]
-  "2903" -> "2904" 
-  "2904" -> "2905" 
-  "2905" -> "2907" 
-  "2899" -> "2903" 
+"2919" [label = <(UNKNOWN,schedule([=]() MAIN_THREAD {\012 Vector&lt;ColorMode&gt; modes;\012        getDisplayColorModes(displayToken, &amp;modes);\012 bool exists = std::find(std::begin(modes), std::end(modes), mode) != std::end(modes);\012 if (mode &lt; ColorMode::NATIVE || !exists) {\012            ALOGE(&quot;Attempt to set invalid active color mode %s (%d) for display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 return;\012 }\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set active color mode %s (%d) for invalid display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set active color mode %s (%d) for virtual display&quot;,\012                  decodeColorMode(mode).c_str(), mode);\012 } else {\012            display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012                    compositionengine::Output::ColorProfile{mode, Dataspace::UNKNOWN,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN});\012 }\012 },schedule([=]() MAIN_THREAD {\012 Vector&lt;ColorMode&gt; modes;\012        getDisplayColorModes(displayToken, &amp;modes);\012 bool exists = std::find(std::begin(modes), std::end(modes), mode) != std::end(modes);\012 if (mode &lt; ColorMode::NATIVE || !exists) {\012            ALOGE(&quot;Attempt to set invalid active color mode %s (%d) for display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 return;\012 }\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set active color mode %s (%d) for invalid display token %p&quot;,\012                  decodeColorMode(mode).c_str(), mode, displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set active color mode %s (%d) for virtual display&quot;,\012                  decodeColorMode(mode).c_str(), mode);\012 } else {\012            display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012                    compositionengine::Output::ColorProfile{mode, Dataspace::UNKNOWN,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN});\012 }\012 })<SUB>1220</SUB>> ]
+"2920" [label = <(UNKNOWN,).wait();,).wait();)<SUB>1242</SUB>> ]
+"2921" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1244</SUB>> ]
+"2915" [label = <(METHOD,setActiveColorMode)<SUB>1219</SUB>> ]
+"2923" [label = <(METHOD_RETURN,status_t)<SUB>1219</SUB>> ]
+  "2919" -> "2920" 
+  "2920" -> "2921" 
+  "2921" -> "2923" 
+  "2915" -> "2919" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/108-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/108-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/108-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/108-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,43 +1,43 @@
 digraph "getAutoLowLatencyModeSupport" {  
-"2920" [label = <(lock,lock(mStateLock))<SUB>1254</SUB>> ]
-"2923" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1256</SUB>> ]
-"2933" [label = <(&lt;operator&gt;.assignment,*outSupport =\012            getHwComposer().hasDisplayCapability(*displayId,\012                                                 hal::DisplayCapability::AUTO_LOW_LATENCY_MODE))<SUB>1260</SUB>> ]
-"2947" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1263</SUB>> ]
-"2914" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1250</SUB>> ]
-"2925" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1256</SUB>> ]
-"2928" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1257</SUB>> ]
-"2934" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1260</SUB>> ]
-"2936" [label = <(hasDisplayCapability,getHwComposer().hasDisplayCapability(*displayId,\012                                                 hal::DisplayCapability::AUTO_LOW_LATENCY_MODE))<SUB>1261</SUB>> ]
-"2917" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1251</SUB>> ]
-"2931" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1258</SUB>> ]
-"2937" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasDisplayCapability)<SUB>1261</SUB>> ]
-"2940" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1261</SUB>> ]
-"2942" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability::AUTO_LOW_LATENCY_MODE)<SUB>1262</SUB>> ]
-"2938" [label = <(getHwComposer,getHwComposer())<SUB>1261</SUB>> ]
-"2939" [label = <(FIELD_IDENTIFIER,hasDisplayCapability,hasDisplayCapability)<SUB>1261</SUB>> ]
-"2943" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability)<SUB>1262</SUB>> ]
-"2946" [label = <(FIELD_IDENTIFIER,AUTO_LOW_LATENCY_MODE,AUTO_LOW_LATENCY_MODE)<SUB>1262</SUB>> ]
-"2909" [label = <(METHOD,getAutoLowLatencyModeSupport)<SUB>1248</SUB>> ]
-"2949" [label = <(METHOD_RETURN,status_t)<SUB>1248</SUB>> ]
-  "2920" -> "2925" 
-  "2923" -> "2928" 
-  "2933" -> "2947" 
-  "2947" -> "2949" 
-  "2914" -> "2917" 
-  "2914" -> "2920" 
-  "2925" -> "2923" 
-  "2928" -> "2931" 
-  "2928" -> "2934" 
-  "2934" -> "2938" 
-  "2936" -> "2933" 
-  "2917" -> "2949" 
-  "2931" -> "2949" 
-  "2937" -> "2940" 
-  "2940" -> "2943" 
-  "2942" -> "2936" 
-  "2938" -> "2939" 
-  "2939" -> "2937" 
-  "2943" -> "2946" 
-  "2946" -> "2942" 
-  "2909" -> "2914" 
+"2936" [label = <(lock,lock(mStateLock))<SUB>1253</SUB>> ]
+"2939" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1255</SUB>> ]
+"2949" [label = <(&lt;operator&gt;.assignment,*outSupport =\012            getHwComposer().hasDisplayCapability(*displayId,\012                                                 hal::DisplayCapability::AUTO_LOW_LATENCY_MODE))<SUB>1259</SUB>> ]
+"2963" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1262</SUB>> ]
+"2930" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1249</SUB>> ]
+"2941" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1255</SUB>> ]
+"2944" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1256</SUB>> ]
+"2950" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1259</SUB>> ]
+"2952" [label = <(hasDisplayCapability,getHwComposer().hasDisplayCapability(*displayId,\012                                                 hal::DisplayCapability::AUTO_LOW_LATENCY_MODE))<SUB>1260</SUB>> ]
+"2933" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1250</SUB>> ]
+"2947" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1257</SUB>> ]
+"2953" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasDisplayCapability)<SUB>1260</SUB>> ]
+"2956" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1260</SUB>> ]
+"2958" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability::AUTO_LOW_LATENCY_MODE)<SUB>1261</SUB>> ]
+"2954" [label = <(getHwComposer,getHwComposer())<SUB>1260</SUB>> ]
+"2955" [label = <(FIELD_IDENTIFIER,hasDisplayCapability,hasDisplayCapability)<SUB>1260</SUB>> ]
+"2959" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability)<SUB>1261</SUB>> ]
+"2962" [label = <(FIELD_IDENTIFIER,AUTO_LOW_LATENCY_MODE,AUTO_LOW_LATENCY_MODE)<SUB>1261</SUB>> ]
+"2925" [label = <(METHOD,getAutoLowLatencyModeSupport)<SUB>1247</SUB>> ]
+"2965" [label = <(METHOD_RETURN,status_t)<SUB>1247</SUB>> ]
+  "2936" -> "2941" 
+  "2939" -> "2944" 
+  "2949" -> "2963" 
+  "2963" -> "2965" 
+  "2930" -> "2933" 
+  "2930" -> "2936" 
+  "2941" -> "2939" 
+  "2944" -> "2947" 
+  "2944" -> "2950" 
+  "2950" -> "2954" 
+  "2952" -> "2949" 
+  "2933" -> "2965" 
+  "2947" -> "2965" 
+  "2953" -> "2956" 
+  "2956" -> "2959" 
+  "2958" -> "2952" 
+  "2954" -> "2955" 
+  "2955" -> "2953" 
+  "2959" -> "2962" 
+  "2962" -> "2958" 
+  "2925" -> "2930" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/109-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/109-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/109-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/109-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,9 +1,9 @@
 digraph "setAutoLowLatencyMode" {  
-"2955" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012            getHwComposer().setAutoLowLatencyMode(*displayId, on);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012            getHwComposer().setAutoLowLatencyMode(*displayId, on);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 })<SUB>1267</SUB>> ]
-"2956" [label = <(UNKNOWN,));,));)<SUB>1273</SUB>> ]
-"2951" [label = <(METHOD,setAutoLowLatencyMode)<SUB>1266</SUB>> ]
-"2957" [label = <(METHOD_RETURN,void)<SUB>1266</SUB>> ]
-  "2955" -> "2956" 
-  "2956" -> "2957" 
-  "2951" -> "2955" 
+"2971" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012            getHwComposer().setAutoLowLatencyMode(*displayId, on);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012            getHwComposer().setAutoLowLatencyMode(*displayId, on);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 })<SUB>1266</SUB>> ]
+"2972" [label = <(UNKNOWN,));,));)<SUB>1272</SUB>> ]
+"2967" [label = <(METHOD,setAutoLowLatencyMode)<SUB>1265</SUB>> ]
+"2973" [label = <(METHOD_RETURN,void)<SUB>1265</SUB>> ]
+  "2971" -> "2972" 
+  "2972" -> "2973" 
+  "2967" -> "2971" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/11-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/11-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/11-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/11-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_18" {  
-"50" [label = <(METHOD,anonymous_lambda_18)<SUB>2054</SUB>> ]
-"53" [label = <(METHOD_RETURN,ANY)<SUB>2054</SUB>> ]
+"50" [label = <(METHOD,anonymous_lambda_18)<SUB>2053</SUB>> ]
+"53" [label = <(METHOD_RETURN,ANY)<SUB>2053</SUB>> ]
   "50" -> "53" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/110-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/110-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/110-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/110-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,71 +1,71 @@
 digraph "getGameContentTypeSupport" {  
-"2970" [label = <(lock,lock(mStateLock))<SUB>1282</SUB>> ]
-"2973" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1284</SUB>> ]
-"2983" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;hal::ContentType&gt; types)<SUB>1289</SUB>> ]
-"2992" [label = <(getSupportedContentTypes,getHwComposer().getSupportedContentTypes(*displayId, &amp;types))<SUB>1290</SUB>> ]
-"3000" [label = <(&lt;operator&gt;.assignment,*outSupport = std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1292</SUB>> ]
-"3016" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1294</SUB>> ]
-"2964" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1278</SUB>> ]
-"2975" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1284</SUB>> ]
-"2978" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1285</SUB>> ]
-"2984" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;hal::ContentType)<SUB>1289</SUB>> ]
-"2993" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getSupportedContentTypes)<SUB>1290</SUB>> ]
-"2996" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1290</SUB>> ]
-"2998" [label = <(&lt;operator&gt;.addressOf,&amp;types)<SUB>1290</SUB>> ]
-"3001" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1292</SUB>> ]
-"3003" [label = <(std::any_of,std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1292</SUB>> ]
-"2967" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1279</SUB>> ]
-"2981" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1286</SUB>> ]
-"2985" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>1289</SUB>> ]
-"2988" [label = <(&lt;operator&gt;.fieldAccess,hal::ContentType)<SUB>1289</SUB>> ]
-"2994" [label = <(getHwComposer,getHwComposer())<SUB>1290</SUB>> ]
-"2995" [label = <(FIELD_IDENTIFIER,getSupportedContentTypes,getSupportedContentTypes)<SUB>1290</SUB>> ]
-"3004" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>1292</SUB>> ]
-"3007" [label = <(begin,types.begin())<SUB>1292</SUB>> ]
-"3011" [label = <(end,types.end())<SUB>1292</SUB>> ]
-"3015" [label = <(METHOD_REF,ANY anonymous_lambda_11 (auto type),std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1293</SUB>> ]
-"2987" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>1289</SUB>> ]
-"2990" [label = <(FIELD_IDENTIFIER,ContentType,ContentType)<SUB>1289</SUB>> ]
-"3006" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>1292</SUB>> ]
-"3008" [label = <(&lt;operator&gt;.fieldAccess,types.begin)<SUB>1292</SUB>> ]
-"3012" [label = <(&lt;operator&gt;.fieldAccess,types.end)<SUB>1292</SUB>> ]
-"3010" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>1292</SUB>> ]
-"3014" [label = <(FIELD_IDENTIFIER,end,end)<SUB>1292</SUB>> ]
-"2959" [label = <(METHOD,getGameContentTypeSupport)<SUB>1276</SUB>> ]
-"3018" [label = <(METHOD_RETURN,status_t)<SUB>1276</SUB>> ]
-  "2970" -> "2975" 
-  "2973" -> "2978" 
-  "2983" -> "2994" 
-  "2992" -> "3001" 
-  "3000" -> "3016" 
-  "3016" -> "3018" 
-  "2964" -> "2967" 
-  "2964" -> "2970" 
-  "2975" -> "2973" 
-  "2978" -> "2981" 
-  "2978" -> "2987" 
-  "2984" -> "2983" 
-  "2993" -> "2996" 
-  "2996" -> "2998" 
-  "2998" -> "2992" 
+"2986" [label = <(lock,lock(mStateLock))<SUB>1281</SUB>> ]
+"2989" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1283</SUB>> ]
+"2999" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;hal::ContentType&gt; types)<SUB>1288</SUB>> ]
+"3008" [label = <(getSupportedContentTypes,getHwComposer().getSupportedContentTypes(*displayId, &amp;types))<SUB>1289</SUB>> ]
+"3016" [label = <(&lt;operator&gt;.assignment,*outSupport = std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1291</SUB>> ]
+"3032" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1293</SUB>> ]
+"2980" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1277</SUB>> ]
+"2991" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1283</SUB>> ]
+"2994" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1284</SUB>> ]
+"3000" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;hal::ContentType)<SUB>1288</SUB>> ]
+"3009" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getSupportedContentTypes)<SUB>1289</SUB>> ]
+"3012" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1289</SUB>> ]
+"3014" [label = <(&lt;operator&gt;.addressOf,&amp;types)<SUB>1289</SUB>> ]
+"3017" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1291</SUB>> ]
+"3019" [label = <(std::any_of,std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1291</SUB>> ]
+"2983" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1278</SUB>> ]
+"2997" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1285</SUB>> ]
+"3001" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>1288</SUB>> ]
+"3004" [label = <(&lt;operator&gt;.fieldAccess,hal::ContentType)<SUB>1288</SUB>> ]
+"3010" [label = <(getHwComposer,getHwComposer())<SUB>1289</SUB>> ]
+"3011" [label = <(FIELD_IDENTIFIER,getSupportedContentTypes,getSupportedContentTypes)<SUB>1289</SUB>> ]
+"3020" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>1291</SUB>> ]
+"3023" [label = <(begin,types.begin())<SUB>1291</SUB>> ]
+"3027" [label = <(end,types.end())<SUB>1291</SUB>> ]
+"3031" [label = <(METHOD_REF,ANY anonymous_lambda_11 (auto type),std::any_of(types.begin(), types.end(),\012 [](auto type) { return type == hal::ContentType::GAME; }))<SUB>1292</SUB>> ]
+"3003" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>1288</SUB>> ]
+"3006" [label = <(FIELD_IDENTIFIER,ContentType,ContentType)<SUB>1288</SUB>> ]
+"3022" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>1291</SUB>> ]
+"3024" [label = <(&lt;operator&gt;.fieldAccess,types.begin)<SUB>1291</SUB>> ]
+"3028" [label = <(&lt;operator&gt;.fieldAccess,types.end)<SUB>1291</SUB>> ]
+"3026" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>1291</SUB>> ]
+"3030" [label = <(FIELD_IDENTIFIER,end,end)<SUB>1291</SUB>> ]
+"2975" [label = <(METHOD,getGameContentTypeSupport)<SUB>1275</SUB>> ]
+"3034" [label = <(METHOD_RETURN,status_t)<SUB>1275</SUB>> ]
+  "2986" -> "2991" 
+  "2989" -> "2994" 
+  "2999" -> "3010" 
+  "3008" -> "3017" 
+  "3016" -> "3032" 
+  "3032" -> "3034" 
+  "2980" -> "2983" 
+  "2980" -> "2986" 
+  "2991" -> "2989" 
+  "2994" -> "2997" 
+  "2994" -> "3003" 
+  "3000" -> "2999" 
+  "3009" -> "3012" 
+  "3012" -> "3014" 
+  "3014" -> "3008" 
+  "3017" -> "3022" 
+  "3019" -> "3016" 
+  "2983" -> "3034" 
+  "2997" -> "3034" 
   "3001" -> "3006" 
-  "3003" -> "3000" 
-  "2967" -> "3018" 
-  "2981" -> "3018" 
-  "2985" -> "2990" 
-  "2988" -> "2984" 
-  "2994" -> "2995" 
-  "2995" -> "2993" 
-  "3004" -> "3010" 
-  "3007" -> "3014" 
-  "3011" -> "3015" 
-  "3015" -> "3003" 
-  "2987" -> "2985" 
-  "2990" -> "2988" 
+  "3004" -> "3000" 
+  "3010" -> "3011" 
+  "3011" -> "3009" 
+  "3020" -> "3026" 
+  "3023" -> "3030" 
+  "3027" -> "3031" 
+  "3031" -> "3019" 
+  "3003" -> "3001" 
   "3006" -> "3004" 
-  "3008" -> "3007" 
-  "3012" -> "3011" 
-  "3010" -> "3008" 
-  "3014" -> "3012" 
-  "2959" -> "2964" 
+  "3022" -> "3020" 
+  "3024" -> "3023" 
+  "3028" -> "3027" 
+  "3026" -> "3024" 
+  "3030" -> "3028" 
+  "2975" -> "2980" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/111-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/111-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/111-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/111-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,9 +1,9 @@
 digraph "setGameContentType" {  
-"3024" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 const auto type = on ? hal::ContentType::GAME : hal::ContentType::NONE;\012            getHwComposer().setContentType(*displayId, type);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 const auto type = on ? hal::ContentType::GAME : hal::ContentType::NONE;\012            getHwComposer().setContentType(*displayId, type);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 })<SUB>1298</SUB>> ]
-"3025" [label = <(UNKNOWN,));,));)<SUB>1305</SUB>> ]
-"3020" [label = <(METHOD,setGameContentType)<SUB>1297</SUB>> ]
-"3026" [label = <(METHOD_RETURN,void)<SUB>1297</SUB>> ]
-  "3024" -> "3025" 
-  "3025" -> "3026" 
-  "3020" -> "3024" 
+"3040" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 const auto type = on ? hal::ContentType::GAME : hal::ContentType::NONE;\012            getHwComposer().setContentType(*displayId, type);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 const auto type = on ? hal::ContentType::GAME : hal::ContentType::NONE;\012            getHwComposer().setContentType(*displayId, type);\012 } else {\012            ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 }\012 })<SUB>1297</SUB>> ]
+"3041" [label = <(UNKNOWN,));,));)<SUB>1304</SUB>> ]
+"3036" [label = <(METHOD,setGameContentType)<SUB>1296</SUB>> ]
+"3042" [label = <(METHOD_RETURN,void)<SUB>1296</SUB>> ]
+  "3040" -> "3041" 
+  "3041" -> "3042" 
+  "3036" -> "3040" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/112-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/112-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/112-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/112-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,15 +1,15 @@
 digraph "clearAnimationFrameStats" {  
-"3031" [label = <(_l,_l(mStateLock))<SUB>1309</SUB>> ]
-"3033" [label = <(clearStats,mAnimFrameTracker.clearStats())<SUB>1310</SUB>> ]
-"3037" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1311</SUB>> ]
-"3034" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.clearStats)<SUB>1310</SUB>> ]
-"3036" [label = <(FIELD_IDENTIFIER,clearStats,clearStats)<SUB>1310</SUB>> ]
-"3028" [label = <(METHOD,clearAnimationFrameStats)<SUB>1308</SUB>> ]
-"3039" [label = <(METHOD_RETURN,status_t)<SUB>1308</SUB>> ]
-  "3031" -> "3036" 
-  "3033" -> "3037" 
-  "3037" -> "3039" 
-  "3034" -> "3033" 
-  "3036" -> "3034" 
-  "3028" -> "3031" 
+"3047" [label = <(_l,_l(mStateLock))<SUB>1308</SUB>> ]
+"3049" [label = <(clearStats,mAnimFrameTracker.clearStats())<SUB>1309</SUB>> ]
+"3053" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1310</SUB>> ]
+"3050" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.clearStats)<SUB>1309</SUB>> ]
+"3052" [label = <(FIELD_IDENTIFIER,clearStats,clearStats)<SUB>1309</SUB>> ]
+"3044" [label = <(METHOD,clearAnimationFrameStats)<SUB>1307</SUB>> ]
+"3055" [label = <(METHOD_RETURN,status_t)<SUB>1307</SUB>> ]
+  "3047" -> "3052" 
+  "3049" -> "3053" 
+  "3053" -> "3055" 
+  "3050" -> "3049" 
+  "3052" -> "3050" 
+  "3044" -> "3047" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/113-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/113-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/113-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/113-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,15 +1,15 @@
 digraph "getAnimationFrameStats" {  
-"3045" [label = <(_l,_l(mStateLock))<SUB>1315</SUB>> ]
-"3047" [label = <(getStats,mAnimFrameTracker.getStats(outStats))<SUB>1316</SUB>> ]
-"3052" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1317</SUB>> ]
-"3048" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.getStats)<SUB>1316</SUB>> ]
-"3050" [label = <(FIELD_IDENTIFIER,getStats,getStats)<SUB>1316</SUB>> ]
-"3041" [label = <(METHOD,getAnimationFrameStats)<SUB>1314</SUB>> ]
-"3054" [label = <(METHOD_RETURN,status_t)<SUB>1314</SUB>> ]
-  "3045" -> "3050" 
-  "3047" -> "3052" 
-  "3052" -> "3054" 
-  "3048" -> "3047" 
-  "3050" -> "3048" 
-  "3041" -> "3045" 
+"3061" [label = <(_l,_l(mStateLock))<SUB>1314</SUB>> ]
+"3063" [label = <(getStats,mAnimFrameTracker.getStats(outStats))<SUB>1315</SUB>> ]
+"3068" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1316</SUB>> ]
+"3064" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.getStats)<SUB>1315</SUB>> ]
+"3066" [label = <(FIELD_IDENTIFIER,getStats,getStats)<SUB>1315</SUB>> ]
+"3057" [label = <(METHOD,getAnimationFrameStats)<SUB>1313</SUB>> ]
+"3070" [label = <(METHOD_RETURN,status_t)<SUB>1313</SUB>> ]
+  "3061" -> "3066" 
+  "3063" -> "3068" 
+  "3068" -> "3070" 
+  "3064" -> "3063" 
+  "3066" -> "3064" 
+  "3057" -> "3061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/114-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/114-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/114-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/114-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,64 +1,64 @@
 digraph "getHdrCapabilities" {  
-"3061" [label = <(lock,lock(mStateLock))<SUB>1322</SUB>> ]
-"3064" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1324</SUB>> ]
-"3082" [label = <(&lt;operator&gt;.assignment,&amp; capabilities = display-&gt;getHdrCapabilities())<SUB>1333</SUB>> ]
-"3088" [label = <(&lt;operator&gt;.assignment,*outCapabilities = HdrCapabilities(capabilities.getSupportedHdrTypes(),\012                                       capabilities.getDesiredMaxLuminance(),\012                                       capabilities.getDesiredMaxAverageLuminance(),\012                                       capabilities.getDesiredMinLuminance()))<SUB>1334</SUB>> ]
-"3108" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1339</SUB>> ]
-"3066" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1324</SUB>> ]
-"3069" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1325</SUB>> ]
-"3084" [label = <(getHdrCapabilities,display-&gt;getHdrCapabilities())<SUB>1333</SUB>> ]
-"3089" [label = <(&lt;operator&gt;.indirection,*outCapabilities)<SUB>1334</SUB>> ]
-"3091" [label = <(HdrCapabilities,HdrCapabilities(capabilities.getSupportedHdrTypes(),\012                                       capabilities.getDesiredMaxLuminance(),\012                                       capabilities.getDesiredMaxAverageLuminance(),\012                                       capabilities.getDesiredMinLuminance()))<SUB>1334</SUB>> ]
-"3072" [label = <(ALOGE,ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get()))<SUB>1326</SUB>> ]
-"3079" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1327</SUB>> ]
-"3085" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getHdrCapabilities)<SUB>1333</SUB>> ]
-"3092" [label = <(getSupportedHdrTypes,capabilities.getSupportedHdrTypes())<SUB>1334</SUB>> ]
-"3096" [label = <(getDesiredMaxLuminance,capabilities.getDesiredMaxLuminance())<SUB>1335</SUB>> ]
-"3100" [label = <(getDesiredMaxAverageLuminance,capabilities.getDesiredMaxAverageLuminance())<SUB>1336</SUB>> ]
-"3104" [label = <(getDesiredMinLuminance,capabilities.getDesiredMinLuminance())<SUB>1337</SUB>> ]
-"3075" [label = <(get,displayToken.get())<SUB>1326</SUB>> ]
-"3087" [label = <(FIELD_IDENTIFIER,getHdrCapabilities,getHdrCapabilities)<SUB>1333</SUB>> ]
-"3093" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getSupportedHdrTypes)<SUB>1334</SUB>> ]
-"3097" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMaxLuminance)<SUB>1335</SUB>> ]
-"3101" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMaxAverageLuminance)<SUB>1336</SUB>> ]
-"3105" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMinLuminance)<SUB>1337</SUB>> ]
-"3076" [label = <(&lt;operator&gt;.fieldAccess,displayToken.get)<SUB>1326</SUB>> ]
-"3095" [label = <(FIELD_IDENTIFIER,getSupportedHdrTypes,getSupportedHdrTypes)<SUB>1334</SUB>> ]
-"3099" [label = <(FIELD_IDENTIFIER,getDesiredMaxLuminance,getDesiredMaxLuminance)<SUB>1335</SUB>> ]
-"3103" [label = <(FIELD_IDENTIFIER,getDesiredMaxAverageLuminance,getDesiredMaxAverageLuminance)<SUB>1336</SUB>> ]
-"3107" [label = <(FIELD_IDENTIFIER,getDesiredMinLuminance,getDesiredMinLuminance)<SUB>1337</SUB>> ]
-"3078" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1326</SUB>> ]
-"3056" [label = <(METHOD,getHdrCapabilities)<SUB>1320</SUB>> ]
-"3110" [label = <(METHOD_RETURN,status_t)<SUB>1320</SUB>> ]
-  "3061" -> "3066" 
-  "3064" -> "3069" 
-  "3082" -> "3089" 
-  "3088" -> "3108" 
-  "3108" -> "3110" 
-  "3066" -> "3064" 
-  "3069" -> "3078" 
-  "3069" -> "3087" 
-  "3084" -> "3082" 
-  "3089" -> "3095" 
-  "3091" -> "3088" 
-  "3072" -> "3079" 
-  "3079" -> "3110" 
-  "3085" -> "3084" 
-  "3092" -> "3099" 
-  "3096" -> "3103" 
-  "3100" -> "3107" 
-  "3104" -> "3091" 
-  "3075" -> "3072" 
-  "3087" -> "3085" 
-  "3093" -> "3092" 
-  "3097" -> "3096" 
+"3077" [label = <(lock,lock(mStateLock))<SUB>1321</SUB>> ]
+"3080" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1323</SUB>> ]
+"3098" [label = <(&lt;operator&gt;.assignment,&amp; capabilities = display-&gt;getHdrCapabilities())<SUB>1332</SUB>> ]
+"3104" [label = <(&lt;operator&gt;.assignment,*outCapabilities = HdrCapabilities(capabilities.getSupportedHdrTypes(),\012                                       capabilities.getDesiredMaxLuminance(),\012                                       capabilities.getDesiredMaxAverageLuminance(),\012                                       capabilities.getDesiredMinLuminance()))<SUB>1333</SUB>> ]
+"3124" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1338</SUB>> ]
+"3082" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1323</SUB>> ]
+"3085" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1324</SUB>> ]
+"3100" [label = <(getHdrCapabilities,display-&gt;getHdrCapabilities())<SUB>1332</SUB>> ]
+"3105" [label = <(&lt;operator&gt;.indirection,*outCapabilities)<SUB>1333</SUB>> ]
+"3107" [label = <(HdrCapabilities,HdrCapabilities(capabilities.getSupportedHdrTypes(),\012                                       capabilities.getDesiredMaxLuminance(),\012                                       capabilities.getDesiredMaxAverageLuminance(),\012                                       capabilities.getDesiredMinLuminance()))<SUB>1333</SUB>> ]
+"3088" [label = <(ALOGE,ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get()))<SUB>1325</SUB>> ]
+"3095" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1326</SUB>> ]
+"3101" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getHdrCapabilities)<SUB>1332</SUB>> ]
+"3108" [label = <(getSupportedHdrTypes,capabilities.getSupportedHdrTypes())<SUB>1333</SUB>> ]
+"3112" [label = <(getDesiredMaxLuminance,capabilities.getDesiredMaxLuminance())<SUB>1334</SUB>> ]
+"3116" [label = <(getDesiredMaxAverageLuminance,capabilities.getDesiredMaxAverageLuminance())<SUB>1335</SUB>> ]
+"3120" [label = <(getDesiredMinLuminance,capabilities.getDesiredMinLuminance())<SUB>1336</SUB>> ]
+"3091" [label = <(get,displayToken.get())<SUB>1325</SUB>> ]
+"3103" [label = <(FIELD_IDENTIFIER,getHdrCapabilities,getHdrCapabilities)<SUB>1332</SUB>> ]
+"3109" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getSupportedHdrTypes)<SUB>1333</SUB>> ]
+"3113" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMaxLuminance)<SUB>1334</SUB>> ]
+"3117" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMaxAverageLuminance)<SUB>1335</SUB>> ]
+"3121" [label = <(&lt;operator&gt;.fieldAccess,capabilities.getDesiredMinLuminance)<SUB>1336</SUB>> ]
+"3092" [label = <(&lt;operator&gt;.fieldAccess,displayToken.get)<SUB>1325</SUB>> ]
+"3111" [label = <(FIELD_IDENTIFIER,getSupportedHdrTypes,getSupportedHdrTypes)<SUB>1333</SUB>> ]
+"3115" [label = <(FIELD_IDENTIFIER,getDesiredMaxLuminance,getDesiredMaxLuminance)<SUB>1334</SUB>> ]
+"3119" [label = <(FIELD_IDENTIFIER,getDesiredMaxAverageLuminance,getDesiredMaxAverageLuminance)<SUB>1335</SUB>> ]
+"3123" [label = <(FIELD_IDENTIFIER,getDesiredMinLuminance,getDesiredMinLuminance)<SUB>1336</SUB>> ]
+"3094" [label = <(FIELD_IDENTIFIER,get,get)<SUB>1325</SUB>> ]
+"3072" [label = <(METHOD,getHdrCapabilities)<SUB>1319</SUB>> ]
+"3126" [label = <(METHOD_RETURN,status_t)<SUB>1319</SUB>> ]
+  "3077" -> "3082" 
+  "3080" -> "3085" 
+  "3098" -> "3105" 
+  "3104" -> "3124" 
+  "3124" -> "3126" 
+  "3082" -> "3080" 
+  "3085" -> "3094" 
+  "3085" -> "3103" 
+  "3100" -> "3098" 
+  "3105" -> "3111" 
+  "3107" -> "3104" 
+  "3088" -> "3095" 
+  "3095" -> "3126" 
   "3101" -> "3100" 
-  "3105" -> "3104" 
-  "3076" -> "3075" 
-  "3095" -> "3093" 
-  "3099" -> "3097" 
+  "3108" -> "3115" 
+  "3112" -> "3119" 
+  "3116" -> "3123" 
+  "3120" -> "3107" 
+  "3091" -> "3088" 
   "3103" -> "3101" 
-  "3107" -> "3105" 
-  "3078" -> "3076" 
-  "3056" -> "3061" 
+  "3109" -> "3108" 
+  "3113" -> "3112" 
+  "3117" -> "3116" 
+  "3121" -> "3120" 
+  "3092" -> "3091" 
+  "3111" -> "3109" 
+  "3115" -> "3113" 
+  "3119" -> "3117" 
+  "3123" -> "3121" 
+  "3094" -> "3092" 
+  "3072" -> "3077" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/115-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/115-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/115-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/115-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,69 +1,69 @@
 digraph "getDeviceProductInfoLocked" {  
-"3116" [label = <(&lt;operator&gt;.assignment,displayId = display.getId())<SUB>1346</SUB>> ]
-"3122" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>1347</SUB>> ]
-"3126" [label = <(&lt;operator&gt;.assignment,hwcDisplayId = getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>1349</SUB>> ]
-"3134" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!hwcDisplayId))<SUB>1350</SUB>> ]
-"3157" [label = <(&lt;operator&gt;.assignment,info = parseDisplayIdentificationData(port, data))<SUB>1359</SUB>> ]
-"3167" [label = <(RETURN,return info-&gt;deviceProductInfo;,return info-&gt;deviceProductInfo;)<SUB>1363</SUB>> ]
-"3118" [label = <(getId,display.getId())<SUB>1346</SUB>> ]
-"3123" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1347</SUB>> ]
-"3128" [label = <(fromPhysicalDisplayId,getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>1349</SUB>> ]
-"3135" [label = <(&lt;operator&gt;.logicalNot,!hwcDisplayId)<SUB>1350</SUB>> ]
-"3140" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>1354</SUB>> ]
-"3159" [label = <(parseDisplayIdentificationData,parseDisplayIdentificationData(port, data))<SUB>1359</SUB>> ]
-"3163" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>1360</SUB>> ]
-"3168" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;deviceProductInfo)<SUB>1363</SUB>> ]
-"3119" [label = <(&lt;operator&gt;.fieldAccess,display.getId)<SUB>1346</SUB>> ]
-"3129" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().fromPhysicalDisplayId)<SUB>1349</SUB>> ]
-"3132" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1349</SUB>> ]
-"3141" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>1354</SUB>> ]
-"3152" [label = <(ALOGV,ALOGV(&quot;%s: No identification data.&quot;, __FUNCTION__))<SUB>1355</SUB>> ]
-"3155" [label = <(RETURN,return {};,return {};)<SUB>1356</SUB>> ]
-"3166" [label = <(RETURN,return {};,return {};)<SUB>1361</SUB>> ]
-"3170" [label = <(FIELD_IDENTIFIER,deviceProductInfo,deviceProductInfo)<SUB>1363</SUB>> ]
-"3121" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1346</SUB>> ]
-"3130" [label = <(getHwComposer,getHwComposer())<SUB>1349</SUB>> ]
-"3131" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>1349</SUB>> ]
-"3142" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>1354</SUB>> ]
-"3145" [label = <(&lt;operator&gt;.indirection,*hwcDisplayId)<SUB>1354</SUB>> ]
-"3147" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>1354</SUB>> ]
-"3149" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>1354</SUB>> ]
-"3143" [label = <(getHwComposer,getHwComposer())<SUB>1354</SUB>> ]
-"3144" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>1354</SUB>> ]
-"3112" [label = <(METHOD,getDeviceProductInfoLocked)<SUB>1342</SUB>> ]
-"3171" [label = <(METHOD_RETURN,optional&lt;DeviceProductInfo&gt;)<SUB>1342</SUB>> ]
-  "3116" -> "3123" 
-  "3122" -> "3130" 
-  "3126" -> "3135" 
-  "3134" -> "3143" 
-  "3157" -> "3163" 
-  "3167" -> "3171" 
-  "3118" -> "3116" 
-  "3123" -> "3122" 
-  "3128" -> "3126" 
-  "3135" -> "3134" 
-  "3140" -> "3152" 
-  "3140" -> "3159" 
-  "3159" -> "3157" 
-  "3163" -> "3166" 
-  "3163" -> "3170" 
-  "3168" -> "3167" 
-  "3119" -> "3118" 
-  "3129" -> "3132" 
-  "3132" -> "3128" 
-  "3141" -> "3140" 
-  "3152" -> "3155" 
-  "3155" -> "3171" 
-  "3166" -> "3171" 
-  "3170" -> "3168" 
-  "3121" -> "3119" 
-  "3130" -> "3131" 
-  "3131" -> "3129" 
-  "3142" -> "3145" 
-  "3145" -> "3147" 
-  "3147" -> "3149" 
-  "3149" -> "3141" 
-  "3143" -> "3144" 
+"3132" [label = <(&lt;operator&gt;.assignment,displayId = display.getId())<SUB>1345</SUB>> ]
+"3138" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>1346</SUB>> ]
+"3142" [label = <(&lt;operator&gt;.assignment,hwcDisplayId = getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>1348</SUB>> ]
+"3150" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!hwcDisplayId))<SUB>1349</SUB>> ]
+"3173" [label = <(&lt;operator&gt;.assignment,info = parseDisplayIdentificationData(port, data))<SUB>1358</SUB>> ]
+"3183" [label = <(RETURN,return info-&gt;deviceProductInfo;,return info-&gt;deviceProductInfo;)<SUB>1362</SUB>> ]
+"3134" [label = <(getId,display.getId())<SUB>1345</SUB>> ]
+"3139" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1346</SUB>> ]
+"3144" [label = <(fromPhysicalDisplayId,getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>1348</SUB>> ]
+"3151" [label = <(&lt;operator&gt;.logicalNot,!hwcDisplayId)<SUB>1349</SUB>> ]
+"3156" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>1353</SUB>> ]
+"3175" [label = <(parseDisplayIdentificationData,parseDisplayIdentificationData(port, data))<SUB>1358</SUB>> ]
+"3179" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>1359</SUB>> ]
+"3184" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;deviceProductInfo)<SUB>1362</SUB>> ]
+"3135" [label = <(&lt;operator&gt;.fieldAccess,display.getId)<SUB>1345</SUB>> ]
+"3145" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().fromPhysicalDisplayId)<SUB>1348</SUB>> ]
+"3148" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1348</SUB>> ]
+"3157" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>1353</SUB>> ]
+"3168" [label = <(ALOGV,ALOGV(&quot;%s: No identification data.&quot;, __FUNCTION__))<SUB>1354</SUB>> ]
+"3171" [label = <(RETURN,return {};,return {};)<SUB>1355</SUB>> ]
+"3182" [label = <(RETURN,return {};,return {};)<SUB>1360</SUB>> ]
+"3186" [label = <(FIELD_IDENTIFIER,deviceProductInfo,deviceProductInfo)<SUB>1362</SUB>> ]
+"3137" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>1345</SUB>> ]
+"3146" [label = <(getHwComposer,getHwComposer())<SUB>1348</SUB>> ]
+"3147" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>1348</SUB>> ]
+"3158" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>1353</SUB>> ]
+"3161" [label = <(&lt;operator&gt;.indirection,*hwcDisplayId)<SUB>1353</SUB>> ]
+"3163" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>1353</SUB>> ]
+"3165" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>1353</SUB>> ]
+"3159" [label = <(getHwComposer,getHwComposer())<SUB>1353</SUB>> ]
+"3160" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>1353</SUB>> ]
+"3128" [label = <(METHOD,getDeviceProductInfoLocked)<SUB>1341</SUB>> ]
+"3187" [label = <(METHOD_RETURN,optional&lt;DeviceProductInfo&gt;)<SUB>1341</SUB>> ]
+  "3132" -> "3139" 
+  "3138" -> "3146" 
+  "3142" -> "3151" 
+  "3150" -> "3159" 
+  "3173" -> "3179" 
+  "3183" -> "3187" 
+  "3134" -> "3132" 
+  "3139" -> "3138" 
   "3144" -> "3142" 
-  "3112" -> "3121" 
+  "3151" -> "3150" 
+  "3156" -> "3168" 
+  "3156" -> "3175" 
+  "3175" -> "3173" 
+  "3179" -> "3182" 
+  "3179" -> "3186" 
+  "3184" -> "3183" 
+  "3135" -> "3134" 
+  "3145" -> "3148" 
+  "3148" -> "3144" 
+  "3157" -> "3156" 
+  "3168" -> "3171" 
+  "3171" -> "3187" 
+  "3182" -> "3187" 
+  "3186" -> "3184" 
+  "3137" -> "3135" 
+  "3146" -> "3147" 
+  "3147" -> "3145" 
+  "3158" -> "3161" 
+  "3161" -> "3163" 
+  "3163" -> "3165" 
+  "3165" -> "3157" 
+  "3159" -> "3160" 
+  "3160" -> "3158" 
+  "3128" -> "3137" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/116-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/116-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/116-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/116-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,43 +1,43 @@
 digraph "getDisplayedContentSamplingAttributes" {  
-"3192" [label = <(lock,lock(mStateLock))<SUB>1374</SUB>> ]
-"3195" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1376</SUB>> ]
-"3205" [label = <(RETURN,return getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask);,return getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask);)<SUB>1381</SUB>> ]
-"3180" [label = <(&lt;operator&gt;.logicalOr,!outFormat || !outDataspace || !outComponentMask)<SUB>1370</SUB>> ]
-"3197" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1376</SUB>> ]
-"3200" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1377</SUB>> ]
-"3206" [label = <(getDisplayedContentSamplingAttributes,getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask))<SUB>1381</SUB>> ]
-"3181" [label = <(&lt;operator&gt;.logicalOr,!outFormat || !outDataspace)<SUB>1370</SUB>> ]
-"3186" [label = <(&lt;operator&gt;.logicalNot,!outComponentMask)<SUB>1370</SUB>> ]
-"3189" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1371</SUB>> ]
-"3203" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1378</SUB>> ]
-"3207" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayedContentSamplingAttributes)<SUB>1381</SUB>> ]
-"3210" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1381</SUB>> ]
-"3182" [label = <(&lt;operator&gt;.logicalNot,!outFormat)<SUB>1370</SUB>> ]
-"3184" [label = <(&lt;operator&gt;.logicalNot,!outDataspace)<SUB>1370</SUB>> ]
-"3208" [label = <(getHwComposer,getHwComposer())<SUB>1381</SUB>> ]
-"3209" [label = <(FIELD_IDENTIFIER,getDisplayedContentSamplingAttributes,getDisplayedContentSamplingAttributes)<SUB>1381</SUB>> ]
-"3173" [label = <(METHOD,getDisplayedContentSamplingAttributes)<SUB>1366</SUB>> ]
-"3215" [label = <(METHOD_RETURN,status_t)<SUB>1366</SUB>> ]
-  "3192" -> "3197" 
-  "3195" -> "3200" 
-  "3205" -> "3215" 
-  "3180" -> "3189" 
-  "3180" -> "3192" 
-  "3197" -> "3195" 
-  "3200" -> "3208" 
-  "3200" -> "3203" 
-  "3206" -> "3205" 
-  "3181" -> "3180" 
-  "3181" -> "3186" 
-  "3186" -> "3180" 
-  "3189" -> "3215" 
-  "3203" -> "3215" 
-  "3207" -> "3210" 
-  "3210" -> "3206" 
-  "3182" -> "3181" 
-  "3182" -> "3184" 
-  "3184" -> "3181" 
-  "3208" -> "3209" 
-  "3209" -> "3207" 
-  "3173" -> "3182" 
+"3208" [label = <(lock,lock(mStateLock))<SUB>1373</SUB>> ]
+"3211" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1375</SUB>> ]
+"3221" [label = <(RETURN,return getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask);,return getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask);)<SUB>1380</SUB>> ]
+"3196" [label = <(&lt;operator&gt;.logicalOr,!outFormat || !outDataspace || !outComponentMask)<SUB>1369</SUB>> ]
+"3213" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1375</SUB>> ]
+"3216" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1376</SUB>> ]
+"3222" [label = <(getDisplayedContentSamplingAttributes,getHwComposer().getDisplayedContentSamplingAttributes(*displayId, outFormat,\012                                                                 outDataspace, outComponentMask))<SUB>1380</SUB>> ]
+"3197" [label = <(&lt;operator&gt;.logicalOr,!outFormat || !outDataspace)<SUB>1369</SUB>> ]
+"3202" [label = <(&lt;operator&gt;.logicalNot,!outComponentMask)<SUB>1369</SUB>> ]
+"3205" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1370</SUB>> ]
+"3219" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1377</SUB>> ]
+"3223" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayedContentSamplingAttributes)<SUB>1380</SUB>> ]
+"3226" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1380</SUB>> ]
+"3198" [label = <(&lt;operator&gt;.logicalNot,!outFormat)<SUB>1369</SUB>> ]
+"3200" [label = <(&lt;operator&gt;.logicalNot,!outDataspace)<SUB>1369</SUB>> ]
+"3224" [label = <(getHwComposer,getHwComposer())<SUB>1380</SUB>> ]
+"3225" [label = <(FIELD_IDENTIFIER,getDisplayedContentSamplingAttributes,getDisplayedContentSamplingAttributes)<SUB>1380</SUB>> ]
+"3189" [label = <(METHOD,getDisplayedContentSamplingAttributes)<SUB>1365</SUB>> ]
+"3231" [label = <(METHOD_RETURN,status_t)<SUB>1365</SUB>> ]
+  "3208" -> "3213" 
+  "3211" -> "3216" 
+  "3221" -> "3231" 
+  "3196" -> "3205" 
+  "3196" -> "3208" 
+  "3213" -> "3211" 
+  "3216" -> "3224" 
+  "3216" -> "3219" 
+  "3222" -> "3221" 
+  "3197" -> "3196" 
+  "3197" -> "3202" 
+  "3202" -> "3196" 
+  "3205" -> "3231" 
+  "3219" -> "3231" 
+  "3223" -> "3226" 
+  "3226" -> "3222" 
+  "3198" -> "3197" 
+  "3198" -> "3200" 
+  "3200" -> "3197" 
+  "3224" -> "3225" 
+  "3225" -> "3223" 
+  "3189" -> "3198" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/117-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/117-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/117-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/117-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,9 +1,9 @@
 digraph "setDisplayContentSamplingEnabled" {  
-"3223" [label = <(UNKNOWN,return schedule([=]() MAIN_THREAD -&gt; status_t {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayContentSamplingEnabled(*displayId, enable,\012                                                                           componentMask,\012                                                                           maxFrames);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return NAME_NOT_FOUND;\012 }\012 },return schedule([=]() MAIN_THREAD -&gt; status_t {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayContentSamplingEnabled(*displayId, enable,\012                                                                           componentMask,\012                                                                           maxFrames);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return NAME_NOT_FOUND;\012 }\012 })<SUB>1388</SUB>> ]
-"3224" [label = <(UNKNOWN,)\012 .get();,)\012 .get();)<SUB>1397</SUB>> ]
-"3217" [label = <(METHOD,setDisplayContentSamplingEnabled)<SUB>1385</SUB>> ]
-"3225" [label = <(METHOD_RETURN,status_t)<SUB>1385</SUB>> ]
-  "3223" -> "3224" 
-  "3224" -> "3225" 
-  "3217" -> "3223" 
+"3239" [label = <(UNKNOWN,return schedule([=]() MAIN_THREAD -&gt; status_t {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayContentSamplingEnabled(*displayId, enable,\012                                                                           componentMask,\012                                                                           maxFrames);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return NAME_NOT_FOUND;\012 }\012 },return schedule([=]() MAIN_THREAD -&gt; status_t {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayContentSamplingEnabled(*displayId, enable,\012                                                                           componentMask,\012                                                                           maxFrames);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return NAME_NOT_FOUND;\012 }\012 })<SUB>1387</SUB>> ]
+"3240" [label = <(UNKNOWN,)\012 .get();,)\012 .get();)<SUB>1396</SUB>> ]
+"3233" [label = <(METHOD,setDisplayContentSamplingEnabled)<SUB>1384</SUB>> ]
+"3241" [label = <(METHOD_RETURN,status_t)<SUB>1384</SUB>> ]
+  "3239" -> "3240" 
+  "3240" -> "3241" 
+  "3233" -> "3239" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/118-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/118-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/118-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/118-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,28 +1,28 @@
 digraph "getDisplayedContentSample" {  
-"3234" [label = <(lock,lock(mStateLock))<SUB>1404</SUB>> ]
-"3237" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1406</SUB>> ]
-"3247" [label = <(RETURN,return getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats);,return getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats);)<SUB>1411</SUB>> ]
-"3239" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1406</SUB>> ]
-"3242" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1407</SUB>> ]
-"3248" [label = <(getDisplayedContentSample,getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats))<SUB>1411</SUB>> ]
-"3245" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1408</SUB>> ]
-"3249" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayedContentSample)<SUB>1411</SUB>> ]
-"3252" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1411</SUB>> ]
-"3250" [label = <(getHwComposer,getHwComposer())<SUB>1411</SUB>> ]
-"3251" [label = <(FIELD_IDENTIFIER,getDisplayedContentSample,getDisplayedContentSample)<SUB>1411</SUB>> ]
-"3227" [label = <(METHOD,getDisplayedContentSample)<SUB>1401</SUB>> ]
-"3257" [label = <(METHOD_RETURN,status_t)<SUB>1401</SUB>> ]
-  "3234" -> "3239" 
-  "3237" -> "3242" 
-  "3247" -> "3257" 
-  "3239" -> "3237" 
-  "3242" -> "3250" 
-  "3242" -> "3245" 
-  "3248" -> "3247" 
-  "3245" -> "3257" 
-  "3249" -> "3252" 
-  "3252" -> "3248" 
-  "3250" -> "3251" 
-  "3251" -> "3249" 
-  "3227" -> "3234" 
+"3250" [label = <(lock,lock(mStateLock))<SUB>1403</SUB>> ]
+"3253" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1405</SUB>> ]
+"3263" [label = <(RETURN,return getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats);,return getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats);)<SUB>1410</SUB>> ]
+"3255" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1405</SUB>> ]
+"3258" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1406</SUB>> ]
+"3264" [label = <(getDisplayedContentSample,getHwComposer().getDisplayedContentSample(*displayId, maxFrames, timestamp, outStats))<SUB>1410</SUB>> ]
+"3261" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1407</SUB>> ]
+"3265" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayedContentSample)<SUB>1410</SUB>> ]
+"3268" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1410</SUB>> ]
+"3266" [label = <(getHwComposer,getHwComposer())<SUB>1410</SUB>> ]
+"3267" [label = <(FIELD_IDENTIFIER,getDisplayedContentSample,getDisplayedContentSample)<SUB>1410</SUB>> ]
+"3243" [label = <(METHOD,getDisplayedContentSample)<SUB>1400</SUB>> ]
+"3273" [label = <(METHOD_RETURN,status_t)<SUB>1400</SUB>> ]
+  "3250" -> "3255" 
+  "3253" -> "3258" 
+  "3263" -> "3273" 
+  "3255" -> "3253" 
+  "3258" -> "3266" 
+  "3258" -> "3261" 
+  "3264" -> "3263" 
+  "3261" -> "3273" 
+  "3265" -> "3268" 
+  "3268" -> "3264" 
+  "3266" -> "3267" 
+  "3267" -> "3265" 
+  "3243" -> "3250" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/119-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/119-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/119-cfg.dot	2023-06-07 19:33:00.327398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/119-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,24 +1,24 @@
 digraph "getProtectedContentSupport" {  
-"3268" [label = <(&lt;operator&gt;.assignment,*outSupported = getRenderEngine().supportsProtectedContent())<SUB>1418</SUB>> ]
-"3275" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1419</SUB>> ]
-"3263" [label = <(&lt;operator&gt;.logicalNot,!outSupported)<SUB>1415</SUB>> ]
-"3269" [label = <(&lt;operator&gt;.indirection,*outSupported)<SUB>1418</SUB>> ]
-"3271" [label = <(supportsProtectedContent,getRenderEngine().supportsProtectedContent())<SUB>1418</SUB>> ]
-"3266" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1416</SUB>> ]
-"3272" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().supportsProtectedContent)<SUB>1418</SUB>> ]
-"3273" [label = <(getRenderEngine,getRenderEngine())<SUB>1418</SUB>> ]
-"3274" [label = <(FIELD_IDENTIFIER,supportsProtectedContent,supportsProtectedContent)<SUB>1418</SUB>> ]
-"3259" [label = <(METHOD,getProtectedContentSupport)<SUB>1414</SUB>> ]
-"3277" [label = <(METHOD_RETURN,status_t)<SUB>1414</SUB>> ]
-  "3268" -> "3275" 
-  "3275" -> "3277" 
-  "3263" -> "3266" 
-  "3263" -> "3269" 
-  "3269" -> "3273" 
-  "3271" -> "3268" 
-  "3266" -> "3277" 
-  "3272" -> "3271" 
-  "3273" -> "3274" 
-  "3274" -> "3272" 
-  "3259" -> "3263" 
+"3284" [label = <(&lt;operator&gt;.assignment,*outSupported = getRenderEngine().supportsProtectedContent())<SUB>1417</SUB>> ]
+"3291" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1418</SUB>> ]
+"3279" [label = <(&lt;operator&gt;.logicalNot,!outSupported)<SUB>1414</SUB>> ]
+"3285" [label = <(&lt;operator&gt;.indirection,*outSupported)<SUB>1417</SUB>> ]
+"3287" [label = <(supportsProtectedContent,getRenderEngine().supportsProtectedContent())<SUB>1417</SUB>> ]
+"3282" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1415</SUB>> ]
+"3288" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().supportsProtectedContent)<SUB>1417</SUB>> ]
+"3289" [label = <(getRenderEngine,getRenderEngine())<SUB>1417</SUB>> ]
+"3290" [label = <(FIELD_IDENTIFIER,supportsProtectedContent,supportsProtectedContent)<SUB>1417</SUB>> ]
+"3275" [label = <(METHOD,getProtectedContentSupport)<SUB>1413</SUB>> ]
+"3293" [label = <(METHOD_RETURN,status_t)<SUB>1413</SUB>> ]
+  "3284" -> "3291" 
+  "3291" -> "3293" 
+  "3279" -> "3282" 
+  "3279" -> "3285" 
+  "3285" -> "3289" 
+  "3287" -> "3284" 
+  "3282" -> "3293" 
+  "3288" -> "3287" 
+  "3289" -> "3290" 
+  "3290" -> "3288" 
+  "3275" -> "3279" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/12-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/12-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/12-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/12-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_19" {  
-"55" [label = <(METHOD,anonymous_lambda_19)<SUB>2106</SUB>> ]
-"58" [label = <(METHOD_RETURN,ANY)<SUB>2106</SUB>> ]
+"55" [label = <(METHOD,anonymous_lambda_19)<SUB>2105</SUB>> ]
+"58" [label = <(METHOD_RETURN,ANY)<SUB>2105</SUB>> ]
   "55" -> "58" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/120-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/120-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/120-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/120-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,47 +1,47 @@
 digraph "isWideColorDisplay" {  
-"3293" [label = <(lock,lock(mStateLock))<SUB>1428</SUB>> ]
-"3296" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1429</SUB>> ]
-"3306" [label = <(&lt;operator&gt;.assignment,*outIsWideColorDisplay =\012            display-&gt;isPrimary() ? hasWideColorDisplay : display-&gt;hasWideColorGamut())<SUB>1434</SUB>> ]
-"3319" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1436</SUB>> ]
-"3284" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outIsWideColorDisplay)<SUB>1424</SUB>> ]
-"3298" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1429</SUB>> ]
-"3301" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1430</SUB>> ]
-"3307" [label = <(&lt;operator&gt;.indirection,*outIsWideColorDisplay)<SUB>1434</SUB>> ]
-"3309" [label = <(&lt;operator&gt;.conditional,display-&gt;isPrimary() ? hasWideColorDisplay : display-&gt;hasWideColorGamut())<SUB>1435</SUB>> ]
-"3285" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1424</SUB>> ]
-"3287" [label = <(&lt;operator&gt;.logicalNot,!outIsWideColorDisplay)<SUB>1424</SUB>> ]
-"3290" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1425</SUB>> ]
-"3304" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1431</SUB>> ]
-"3310" [label = <(isPrimary,display-&gt;isPrimary())<SUB>1435</SUB>> ]
-"3315" [label = <(hasWideColorGamut,display-&gt;hasWideColorGamut())<SUB>1435</SUB>> ]
-"3311" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>1435</SUB>> ]
-"3316" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasWideColorGamut)<SUB>1435</SUB>> ]
-"3313" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>1435</SUB>> ]
-"3318" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>1435</SUB>> ]
-"3279" [label = <(METHOD,isWideColorDisplay)<SUB>1422</SUB>> ]
-"3321" [label = <(METHOD_RETURN,status_t)<SUB>1422</SUB>> ]
-  "3293" -> "3298" 
-  "3296" -> "3301" 
-  "3306" -> "3319" 
-  "3319" -> "3321" 
-  "3284" -> "3290" 
-  "3284" -> "3293" 
-  "3298" -> "3296" 
-  "3301" -> "3304" 
-  "3301" -> "3307" 
-  "3307" -> "3313" 
-  "3309" -> "3306" 
-  "3285" -> "3284" 
-  "3285" -> "3287" 
-  "3287" -> "3284" 
-  "3290" -> "3321" 
-  "3304" -> "3321" 
-  "3310" -> "3309" 
-  "3310" -> "3318" 
-  "3315" -> "3309" 
-  "3311" -> "3310" 
-  "3316" -> "3315" 
-  "3313" -> "3311" 
-  "3318" -> "3316" 
-  "3279" -> "3285" 
+"3309" [label = <(lock,lock(mStateLock))<SUB>1427</SUB>> ]
+"3312" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>1428</SUB>> ]
+"3322" [label = <(&lt;operator&gt;.assignment,*outIsWideColorDisplay =\012            display-&gt;isPrimary() ? hasWideColorDisplay : display-&gt;hasWideColorGamut())<SUB>1433</SUB>> ]
+"3335" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1435</SUB>> ]
+"3300" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outIsWideColorDisplay)<SUB>1423</SUB>> ]
+"3314" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>1428</SUB>> ]
+"3317" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1429</SUB>> ]
+"3323" [label = <(&lt;operator&gt;.indirection,*outIsWideColorDisplay)<SUB>1433</SUB>> ]
+"3325" [label = <(&lt;operator&gt;.conditional,display-&gt;isPrimary() ? hasWideColorDisplay : display-&gt;hasWideColorGamut())<SUB>1434</SUB>> ]
+"3301" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1423</SUB>> ]
+"3303" [label = <(&lt;operator&gt;.logicalNot,!outIsWideColorDisplay)<SUB>1423</SUB>> ]
+"3306" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1424</SUB>> ]
+"3320" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1430</SUB>> ]
+"3326" [label = <(isPrimary,display-&gt;isPrimary())<SUB>1434</SUB>> ]
+"3331" [label = <(hasWideColorGamut,display-&gt;hasWideColorGamut())<SUB>1434</SUB>> ]
+"3327" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>1434</SUB>> ]
+"3332" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasWideColorGamut)<SUB>1434</SUB>> ]
+"3329" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>1434</SUB>> ]
+"3334" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>1434</SUB>> ]
+"3295" [label = <(METHOD,isWideColorDisplay)<SUB>1421</SUB>> ]
+"3337" [label = <(METHOD_RETURN,status_t)<SUB>1421</SUB>> ]
+  "3309" -> "3314" 
+  "3312" -> "3317" 
+  "3322" -> "3335" 
+  "3335" -> "3337" 
+  "3300" -> "3306" 
+  "3300" -> "3309" 
+  "3314" -> "3312" 
+  "3317" -> "3320" 
+  "3317" -> "3323" 
+  "3323" -> "3329" 
+  "3325" -> "3322" 
+  "3301" -> "3300" 
+  "3301" -> "3303" 
+  "3303" -> "3300" 
+  "3306" -> "3337" 
+  "3320" -> "3337" 
+  "3326" -> "3325" 
+  "3326" -> "3334" 
+  "3331" -> "3325" 
+  "3327" -> "3326" 
+  "3332" -> "3331" 
+  "3329" -> "3327" 
+  "3334" -> "3332" 
+  "3295" -> "3301" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/121-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/121-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/121-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/121-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,17 +1,17 @@
 digraph "enableVSyncInjections" {  
-"3326" [label = <(wait,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }).wait())<SUB>1440</SUB>> ]
-"3331" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1449</SUB>> ]
-"3327" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }).wait)<SUB>1440</SUB>> ]
-"3328" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }))<SUB>1440</SUB>> ]
-"3330" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1440</SUB>> ]
-"3329" [label = <(METHOD_REF,ANY anonymous_lambda_12 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }))<SUB>1440</SUB>> ]
-"3323" [label = <(METHOD,enableVSyncInjections)<SUB>1439</SUB>> ]
-"3333" [label = <(METHOD_RETURN,status_t)<SUB>1439</SUB>> ]
-  "3326" -> "3331" 
-  "3331" -> "3333" 
-  "3327" -> "3326" 
-  "3328" -> "3330" 
-  "3330" -> "3327" 
-  "3329" -> "3328" 
-  "3323" -> "3329" 
+"3342" [label = <(wait,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }).wait())<SUB>1439</SUB>> ]
+"3347" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1448</SUB>> ]
+"3343" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }).wait)<SUB>1439</SUB>> ]
+"3344" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }))<SUB>1439</SUB>> ]
+"3346" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1439</SUB>> ]
+"3345" [label = <(METHOD_REF,ANY anonymous_lambda_12 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012\012 if (const auto handle = mScheduler-&gt;enableVSyncInjection(enable)) {\012            mEventQueue-&gt;setEventConnection(\012                    mScheduler-&gt;getEventConnection(enable ? handle : mSfConnectionHandle));\012 }\012 }))<SUB>1439</SUB>> ]
+"3339" [label = <(METHOD,enableVSyncInjections)<SUB>1438</SUB>> ]
+"3349" [label = <(METHOD_RETURN,status_t)<SUB>1438</SUB>> ]
+  "3342" -> "3347" 
+  "3347" -> "3349" 
+  "3343" -> "3342" 
+  "3344" -> "3346" 
+  "3346" -> "3343" 
+  "3345" -> "3344" 
+  "3339" -> "3345" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/122-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/122-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/122-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/122-cfg.dot	2023-06-07 19:33:06.567398414 +0330
@@ -1,19 +1,19 @@
 digraph "injectVSync" {  
-"3339" [label = <(lock,lock(mStateLock))<SUB>1453</SUB>> ]
-"3341" [label = <(RETURN,return mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE;,return mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE;)<SUB>1454</SUB>> ]
-"3342" [label = <(&lt;operator&gt;.conditional,mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE)<SUB>1454</SUB>> ]
-"3343" [label = <(injectVSync,mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)))<SUB>1454</SUB>> ]
-"3344" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;injectVSync)<SUB>1454</SUB>> ]
-"3348" [label = <(calculateExpectedPresentTime,calculateExpectedPresentTime(when))<SUB>1454</SUB>> ]
-"3346" [label = <(FIELD_IDENTIFIER,injectVSync,injectVSync)<SUB>1454</SUB>> ]
-"3335" [label = <(METHOD,injectVSync)<SUB>1452</SUB>> ]
-"3352" [label = <(METHOD_RETURN,status_t)<SUB>1452</SUB>> ]
-  "3339" -> "3346" 
-  "3341" -> "3352" 
-  "3342" -> "3341" 
-  "3343" -> "3342" 
-  "3344" -> "3348" 
-  "3348" -> "3343" 
-  "3346" -> "3344" 
-  "3335" -> "3339" 
+"3355" [label = <(lock,lock(mStateLock))<SUB>1452</SUB>> ]
+"3357" [label = <(RETURN,return mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE;,return mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE;)<SUB>1453</SUB>> ]
+"3358" [label = <(&lt;operator&gt;.conditional,mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)) ? NO_ERROR : BAD_VALUE)<SUB>1453</SUB>> ]
+"3359" [label = <(injectVSync,mScheduler-&gt;injectVSync(when, calculateExpectedPresentTime(when)))<SUB>1453</SUB>> ]
+"3360" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;injectVSync)<SUB>1453</SUB>> ]
+"3364" [label = <(calculateExpectedPresentTime,calculateExpectedPresentTime(when))<SUB>1453</SUB>> ]
+"3362" [label = <(FIELD_IDENTIFIER,injectVSync,injectVSync)<SUB>1453</SUB>> ]
+"3351" [label = <(METHOD,injectVSync)<SUB>1451</SUB>> ]
+"3368" [label = <(METHOD_RETURN,status_t)<SUB>1451</SUB>> ]
+  "3355" -> "3362" 
+  "3357" -> "3368" 
+  "3358" -> "3357" 
+  "3359" -> "3358" 
+  "3360" -> "3364" 
+  "3364" -> "3359" 
+  "3362" -> "3360" 
+  "3351" -> "3355" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/123-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/123-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/123-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/123-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,23 +1,23 @@
 digraph "getLayerDebugInfo" {  
-"3357" [label = <(clear,outLayers-&gt;clear())<SUB>1458</SUB>> ]
-"3361" [label = <(wait,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }).wait())<SUB>1459</SUB>> ]
-"3366" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1465</SUB>> ]
-"3358" [label = <(&lt;operator&gt;.indirectFieldAccess,outLayers-&gt;clear)<SUB>1458</SUB>> ]
-"3362" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }).wait)<SUB>1459</SUB>> ]
-"3360" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1458</SUB>> ]
-"3363" [label = <(schedule,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }))<SUB>1459</SUB>> ]
-"3365" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1459</SUB>> ]
-"3364" [label = <(METHOD_REF,ANY anonymous_lambda_13 (),schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }))<SUB>1459</SUB>> ]
-"3354" [label = <(METHOD,getLayerDebugInfo)<SUB>1457</SUB>> ]
-"3368" [label = <(METHOD_RETURN,status_t)<SUB>1457</SUB>> ]
-  "3357" -> "3364" 
-  "3361" -> "3366" 
-  "3366" -> "3368" 
-  "3358" -> "3357" 
-  "3362" -> "3361" 
-  "3360" -> "3358" 
-  "3363" -> "3365" 
-  "3365" -> "3362" 
-  "3364" -> "3363" 
-  "3354" -> "3360" 
+"3373" [label = <(clear,outLayers-&gt;clear())<SUB>1457</SUB>> ]
+"3377" [label = <(wait,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }).wait())<SUB>1458</SUB>> ]
+"3382" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1464</SUB>> ]
+"3374" [label = <(&lt;operator&gt;.indirectFieldAccess,outLayers-&gt;clear)<SUB>1457</SUB>> ]
+"3378" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }).wait)<SUB>1458</SUB>> ]
+"3376" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1457</SUB>> ]
+"3379" [label = <(schedule,schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }))<SUB>1458</SUB>> ]
+"3381" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1458</SUB>> ]
+"3380" [label = <(METHOD_REF,ANY anonymous_lambda_13 (),schedule([=] {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012        mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012            outLayers-&gt;push_back(layer-&gt;getLayerDebugInfo(display.get()));\012 });\012 }))<SUB>1458</SUB>> ]
+"3370" [label = <(METHOD,getLayerDebugInfo)<SUB>1456</SUB>> ]
+"3384" [label = <(METHOD_RETURN,status_t)<SUB>1456</SUB>> ]
+  "3373" -> "3380" 
+  "3377" -> "3382" 
+  "3382" -> "3384" 
+  "3374" -> "3373" 
+  "3378" -> "3377" 
+  "3376" -> "3374" 
+  "3379" -> "3381" 
+  "3381" -> "3378" 
+  "3380" -> "3379" 
+  "3370" -> "3376" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/124-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/124-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/124-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/124-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,23 +1,23 @@
 digraph "getCompositionPreference" {  
-"3376" [label = <(&lt;operator&gt;.assignment,*outDataspace = mDefaultCompositionDataspace)<SUB>1472</SUB>> ]
-"3380" [label = <(&lt;operator&gt;.assignment,*outPixelFormat = defaultCompositionPixelFormat)<SUB>1473</SUB>> ]
-"3384" [label = <(&lt;operator&gt;.assignment,*outWideColorGamutDataspace = mWideColorGamutCompositionDataspace)<SUB>1474</SUB>> ]
-"3388" [label = <(&lt;operator&gt;.assignment,*outWideColorGamutPixelFormat = wideColorGamutCompositionPixelFormat)<SUB>1475</SUB>> ]
-"3392" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1476</SUB>> ]
-"3377" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>1472</SUB>> ]
-"3381" [label = <(&lt;operator&gt;.indirection,*outPixelFormat)<SUB>1473</SUB>> ]
-"3385" [label = <(&lt;operator&gt;.indirection,*outWideColorGamutDataspace)<SUB>1474</SUB>> ]
-"3389" [label = <(&lt;operator&gt;.indirection,*outWideColorGamutPixelFormat)<SUB>1475</SUB>> ]
-"3370" [label = <(METHOD,getCompositionPreference)<SUB>1468</SUB>> ]
-"3394" [label = <(METHOD_RETURN,status_t)<SUB>1468</SUB>> ]
-  "3376" -> "3381" 
-  "3380" -> "3385" 
-  "3384" -> "3389" 
-  "3388" -> "3392" 
-  "3392" -> "3394" 
-  "3377" -> "3376" 
-  "3381" -> "3380" 
-  "3385" -> "3384" 
-  "3389" -> "3388" 
-  "3370" -> "3377" 
+"3392" [label = <(&lt;operator&gt;.assignment,*outDataspace = mDefaultCompositionDataspace)<SUB>1471</SUB>> ]
+"3396" [label = <(&lt;operator&gt;.assignment,*outPixelFormat = defaultCompositionPixelFormat)<SUB>1472</SUB>> ]
+"3400" [label = <(&lt;operator&gt;.assignment,*outWideColorGamutDataspace = mWideColorGamutCompositionDataspace)<SUB>1473</SUB>> ]
+"3404" [label = <(&lt;operator&gt;.assignment,*outWideColorGamutPixelFormat = wideColorGamutCompositionPixelFormat)<SUB>1474</SUB>> ]
+"3408" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1475</SUB>> ]
+"3393" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>1471</SUB>> ]
+"3397" [label = <(&lt;operator&gt;.indirection,*outPixelFormat)<SUB>1472</SUB>> ]
+"3401" [label = <(&lt;operator&gt;.indirection,*outWideColorGamutDataspace)<SUB>1473</SUB>> ]
+"3405" [label = <(&lt;operator&gt;.indirection,*outWideColorGamutPixelFormat)<SUB>1474</SUB>> ]
+"3386" [label = <(METHOD,getCompositionPreference)<SUB>1467</SUB>> ]
+"3410" [label = <(METHOD_RETURN,status_t)<SUB>1467</SUB>> ]
+  "3392" -> "3397" 
+  "3396" -> "3401" 
+  "3400" -> "3405" 
+  "3404" -> "3408" 
+  "3408" -> "3410" 
+  "3393" -> "3392" 
+  "3397" -> "3396" 
+  "3401" -> "3400" 
+  "3405" -> "3404" 
+  "3386" -> "3393" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/125-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/125-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/125-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/125-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,31 +1,31 @@
 digraph "addRegionSamplingListener" {  
-"3414" [label = <(&lt;operator&gt;.assignment,stopLayer = fromHandle(stopLayerHandle))<SUB>1486</SUB>> ]
-"3418" [label = <(addListener,mRegionSamplingThread-&gt;addListener(samplingArea, stopLayer, listener))<SUB>1487</SUB>> ]
-"3425" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1488</SUB>> ]
-"3402" [label = <(&lt;operator&gt;.logicalOr,!listener || samplingArea == Rect::INVALID_RECT)<SUB>1482</SUB>> ]
-"3416" [label = <(fromHandle,fromHandle(stopLayerHandle))<SUB>1486</SUB>> ]
-"3419" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;addListener)<SUB>1487</SUB>> ]
-"3403" [label = <(&lt;operator&gt;.logicalNot,!listener)<SUB>1482</SUB>> ]
-"3405" [label = <(&lt;operator&gt;.equals,samplingArea == Rect::INVALID_RECT)<SUB>1482</SUB>> ]
-"3411" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1483</SUB>> ]
-"3421" [label = <(FIELD_IDENTIFIER,addListener,addListener)<SUB>1487</SUB>> ]
-"3407" [label = <(&lt;operator&gt;.fieldAccess,Rect::INVALID_RECT)<SUB>1482</SUB>> ]
-"3409" [label = <(FIELD_IDENTIFIER,INVALID_RECT,INVALID_RECT)<SUB>1482</SUB>> ]
-"3396" [label = <(METHOD,addRegionSamplingListener)<SUB>1479</SUB>> ]
-"3427" [label = <(METHOD_RETURN,status_t)<SUB>1479</SUB>> ]
-  "3414" -> "3421" 
-  "3418" -> "3425" 
-  "3425" -> "3427" 
-  "3402" -> "3411" 
-  "3402" -> "3416" 
-  "3416" -> "3414" 
+"3430" [label = <(&lt;operator&gt;.assignment,stopLayer = fromHandle(stopLayerHandle))<SUB>1485</SUB>> ]
+"3434" [label = <(addListener,mRegionSamplingThread-&gt;addListener(samplingArea, stopLayer, listener))<SUB>1486</SUB>> ]
+"3441" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1487</SUB>> ]
+"3418" [label = <(&lt;operator&gt;.logicalOr,!listener || samplingArea == Rect::INVALID_RECT)<SUB>1481</SUB>> ]
+"3432" [label = <(fromHandle,fromHandle(stopLayerHandle))<SUB>1485</SUB>> ]
+"3435" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;addListener)<SUB>1486</SUB>> ]
+"3419" [label = <(&lt;operator&gt;.logicalNot,!listener)<SUB>1481</SUB>> ]
+"3421" [label = <(&lt;operator&gt;.equals,samplingArea == Rect::INVALID_RECT)<SUB>1481</SUB>> ]
+"3427" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1482</SUB>> ]
+"3437" [label = <(FIELD_IDENTIFIER,addListener,addListener)<SUB>1486</SUB>> ]
+"3423" [label = <(&lt;operator&gt;.fieldAccess,Rect::INVALID_RECT)<SUB>1481</SUB>> ]
+"3425" [label = <(FIELD_IDENTIFIER,INVALID_RECT,INVALID_RECT)<SUB>1481</SUB>> ]
+"3412" [label = <(METHOD,addRegionSamplingListener)<SUB>1478</SUB>> ]
+"3443" [label = <(METHOD_RETURN,status_t)<SUB>1478</SUB>> ]
+  "3430" -> "3437" 
+  "3434" -> "3441" 
+  "3441" -> "3443" 
+  "3418" -> "3427" 
+  "3418" -> "3432" 
+  "3432" -> "3430" 
+  "3435" -> "3434" 
   "3419" -> "3418" 
-  "3403" -> "3402" 
-  "3403" -> "3409" 
-  "3405" -> "3402" 
-  "3411" -> "3427" 
-  "3421" -> "3419" 
-  "3407" -> "3405" 
-  "3409" -> "3407" 
-  "3396" -> "3403" 
+  "3419" -> "3425" 
+  "3421" -> "3418" 
+  "3427" -> "3443" 
+  "3437" -> "3435" 
+  "3423" -> "3421" 
+  "3425" -> "3423" 
+  "3412" -> "3419" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/126-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/126-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/126-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/126-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,18 +1,18 @@
 digraph "removeRegionSamplingListener" {  
-"3438" [label = <(removeListener,mRegionSamplingThread-&gt;removeListener(listener))<SUB>1495</SUB>> ]
-"3443" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1496</SUB>> ]
-"3433" [label = <(&lt;operator&gt;.logicalNot,!listener)<SUB>1492</SUB>> ]
-"3439" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;removeListener)<SUB>1495</SUB>> ]
-"3436" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1493</SUB>> ]
-"3441" [label = <(FIELD_IDENTIFIER,removeListener,removeListener)<SUB>1495</SUB>> ]
-"3429" [label = <(METHOD,removeRegionSamplingListener)<SUB>1491</SUB>> ]
-"3445" [label = <(METHOD_RETURN,status_t)<SUB>1491</SUB>> ]
-  "3438" -> "3443" 
-  "3443" -> "3445" 
-  "3433" -> "3436" 
-  "3433" -> "3441" 
-  "3439" -> "3438" 
-  "3436" -> "3445" 
-  "3441" -> "3439" 
-  "3429" -> "3433" 
+"3454" [label = <(removeListener,mRegionSamplingThread-&gt;removeListener(listener))<SUB>1494</SUB>> ]
+"3459" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1495</SUB>> ]
+"3449" [label = <(&lt;operator&gt;.logicalNot,!listener)<SUB>1491</SUB>> ]
+"3455" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;removeListener)<SUB>1494</SUB>> ]
+"3452" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1492</SUB>> ]
+"3457" [label = <(FIELD_IDENTIFIER,removeListener,removeListener)<SUB>1494</SUB>> ]
+"3445" [label = <(METHOD,removeRegionSamplingListener)<SUB>1490</SUB>> ]
+"3461" [label = <(METHOD_RETURN,status_t)<SUB>1490</SUB>> ]
+  "3454" -> "3459" 
+  "3459" -> "3461" 
+  "3449" -> "3452" 
+  "3449" -> "3457" 
+  "3455" -> "3454" 
+  "3452" -> "3461" 
+  "3457" -> "3455" 
+  "3445" -> "3449" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/127-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/127-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/127-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/127-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,48 +1,48 @@
 digraph "getDisplayBrightnessSupport" {  
-"3461" [label = <(lock,lock(mStateLock))<SUB>1505</SUB>> ]
-"3464" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1507</SUB>> ]
-"3474" [label = <(&lt;operator&gt;.assignment,*outSupport =\012            getHwComposer().hasDisplayCapability(*displayId, hal::DisplayCapability::BRIGHTNESS))<SUB>1511</SUB>> ]
-"3488" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1513</SUB>> ]
-"3452" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outSupport)<SUB>1501</SUB>> ]
-"3466" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1507</SUB>> ]
-"3469" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1508</SUB>> ]
-"3475" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1511</SUB>> ]
-"3477" [label = <(hasDisplayCapability,getHwComposer().hasDisplayCapability(*displayId, hal::DisplayCapability::BRIGHTNESS))<SUB>1512</SUB>> ]
-"3453" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1501</SUB>> ]
-"3455" [label = <(&lt;operator&gt;.logicalNot,!outSupport)<SUB>1501</SUB>> ]
-"3458" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1502</SUB>> ]
-"3472" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1509</SUB>> ]
-"3478" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasDisplayCapability)<SUB>1512</SUB>> ]
-"3481" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1512</SUB>> ]
-"3483" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability::BRIGHTNESS)<SUB>1512</SUB>> ]
-"3479" [label = <(getHwComposer,getHwComposer())<SUB>1512</SUB>> ]
-"3480" [label = <(FIELD_IDENTIFIER,hasDisplayCapability,hasDisplayCapability)<SUB>1512</SUB>> ]
-"3484" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability)<SUB>1512</SUB>> ]
-"3487" [label = <(FIELD_IDENTIFIER,BRIGHTNESS,BRIGHTNESS)<SUB>1512</SUB>> ]
-"3447" [label = <(METHOD,getDisplayBrightnessSupport)<SUB>1499</SUB>> ]
-"3490" [label = <(METHOD_RETURN,status_t)<SUB>1499</SUB>> ]
-  "3461" -> "3466" 
-  "3464" -> "3469" 
-  "3474" -> "3488" 
-  "3488" -> "3490" 
-  "3452" -> "3458" 
-  "3452" -> "3461" 
-  "3466" -> "3464" 
-  "3469" -> "3472" 
-  "3469" -> "3475" 
-  "3475" -> "3479" 
-  "3477" -> "3474" 
-  "3453" -> "3452" 
-  "3453" -> "3455" 
-  "3455" -> "3452" 
-  "3458" -> "3490" 
-  "3472" -> "3490" 
-  "3478" -> "3481" 
-  "3481" -> "3484" 
-  "3483" -> "3477" 
-  "3479" -> "3480" 
-  "3480" -> "3478" 
-  "3484" -> "3487" 
-  "3487" -> "3483" 
-  "3447" -> "3453" 
+"3477" [label = <(lock,lock(mStateLock))<SUB>1504</SUB>> ]
+"3480" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>1506</SUB>> ]
+"3490" [label = <(&lt;operator&gt;.assignment,*outSupport =\012            getHwComposer().hasDisplayCapability(*displayId, hal::DisplayCapability::BRIGHTNESS))<SUB>1510</SUB>> ]
+"3504" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1512</SUB>> ]
+"3468" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outSupport)<SUB>1500</SUB>> ]
+"3482" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>1506</SUB>> ]
+"3485" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1507</SUB>> ]
+"3491" [label = <(&lt;operator&gt;.indirection,*outSupport)<SUB>1510</SUB>> ]
+"3493" [label = <(hasDisplayCapability,getHwComposer().hasDisplayCapability(*displayId, hal::DisplayCapability::BRIGHTNESS))<SUB>1511</SUB>> ]
+"3469" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1500</SUB>> ]
+"3471" [label = <(&lt;operator&gt;.logicalNot,!outSupport)<SUB>1500</SUB>> ]
+"3474" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1501</SUB>> ]
+"3488" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>1508</SUB>> ]
+"3494" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasDisplayCapability)<SUB>1511</SUB>> ]
+"3497" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1511</SUB>> ]
+"3499" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability::BRIGHTNESS)<SUB>1511</SUB>> ]
+"3495" [label = <(getHwComposer,getHwComposer())<SUB>1511</SUB>> ]
+"3496" [label = <(FIELD_IDENTIFIER,hasDisplayCapability,hasDisplayCapability)<SUB>1511</SUB>> ]
+"3500" [label = <(&lt;operator&gt;.fieldAccess,hal::DisplayCapability)<SUB>1511</SUB>> ]
+"3503" [label = <(FIELD_IDENTIFIER,BRIGHTNESS,BRIGHTNESS)<SUB>1511</SUB>> ]
+"3463" [label = <(METHOD,getDisplayBrightnessSupport)<SUB>1498</SUB>> ]
+"3506" [label = <(METHOD_RETURN,status_t)<SUB>1498</SUB>> ]
+  "3477" -> "3482" 
+  "3480" -> "3485" 
+  "3490" -> "3504" 
+  "3504" -> "3506" 
+  "3468" -> "3474" 
+  "3468" -> "3477" 
+  "3482" -> "3480" 
+  "3485" -> "3488" 
+  "3485" -> "3491" 
+  "3491" -> "3495" 
+  "3493" -> "3490" 
+  "3469" -> "3468" 
+  "3469" -> "3471" 
+  "3471" -> "3468" 
+  "3474" -> "3506" 
+  "3488" -> "3506" 
+  "3494" -> "3497" 
+  "3497" -> "3500" 
+  "3499" -> "3493" 
+  "3495" -> "3496" 
+  "3496" -> "3494" 
+  "3500" -> "3503" 
+  "3503" -> "3499" 
+  "3463" -> "3469" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/128-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/128-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/128-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/128-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,16 +1,16 @@
 digraph "setDisplayBrightness" {  
-"3502" [label = <(UNKNOWN,return promise::chain(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayBrightness(*displayId, brightness);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return promise::yield&lt;status_t&gt;(NAME_NOT_FOUND);\012 }\012 },return promise::chain(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayBrightness(*displayId, brightness);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return promise::yield&lt;status_t&gt;(NAME_NOT_FOUND);\012 }\012 })<SUB>1521</SUB>> ]
-"3503" [label = <(UNKNOWN,))\012 .then([](std::future&lt;status_t&gt; task) { return task; },))\012 .then([](std::future&lt;status_t&gt; task) { return task; })<SUB>1528</SUB>> ]
-"3504" [label = <(UNKNOWN,)\012 .get();,)\012 .get();)<SUB>1529</SUB>> ]
-"3497" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1517</SUB>> ]
-"3500" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1518</SUB>> ]
-"3492" [label = <(METHOD,setDisplayBrightness)<SUB>1516</SUB>> ]
-"3505" [label = <(METHOD_RETURN,status_t)<SUB>1516</SUB>> ]
-  "3502" -> "3503" 
-  "3503" -> "3504" 
-  "3504" -> "3505" 
-  "3497" -> "3502" 
-  "3497" -> "3500" 
-  "3500" -> "3505" 
-  "3492" -> "3497" 
+"3518" [label = <(UNKNOWN,return promise::chain(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayBrightness(*displayId, brightness);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return promise::yield&lt;status_t&gt;(NAME_NOT_FOUND);\012 }\012 },return promise::chain(schedule([=]() MAIN_THREAD {\012 if (const auto displayId = getPhysicalDisplayIdLocked(displayToken)) {\012 return getHwComposer().setDisplayBrightness(*displayId, brightness);\012 } else {\012                   ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get());\012 return promise::yield&lt;status_t&gt;(NAME_NOT_FOUND);\012 }\012 })<SUB>1520</SUB>> ]
+"3519" [label = <(UNKNOWN,))\012 .then([](std::future&lt;status_t&gt; task) { return task; },))\012 .then([](std::future&lt;status_t&gt; task) { return task; })<SUB>1527</SUB>> ]
+"3520" [label = <(UNKNOWN,)\012 .get();,)\012 .get();)<SUB>1528</SUB>> ]
+"3513" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>1516</SUB>> ]
+"3516" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>1517</SUB>> ]
+"3508" [label = <(METHOD,setDisplayBrightness)<SUB>1515</SUB>> ]
+"3521" [label = <(METHOD_RETURN,status_t)<SUB>1515</SUB>> ]
+  "3518" -> "3519" 
+  "3519" -> "3520" 
+  "3520" -> "3521" 
+  "3513" -> "3518" 
+  "3513" -> "3516" 
+  "3516" -> "3521" 
+  "3508" -> "3513" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/129-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/129-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/129-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/129-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,26 +1,26 @@
 digraph "notifyPowerHint" {  
-"3511" [label = <(&lt;operator&gt;.assignment,powerHint = static_cast&lt;PowerHint&gt;(hintId))<SUB>1534</SUB>> ]
-"3527" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1540</SUB>> ]
-"3513" [label = <(&lt;operator&gt;.cast,static_cast&lt;PowerHint&gt;(hintId))<SUB>1534</SUB>> ]
-"3517" [label = <(&lt;operator&gt;.equals,powerHint == PowerHint::INTERACTION)<SUB>1536</SUB>> ]
-"3514" [label = <(UNKNOWN,PowerHint,PowerHint)<SUB>1534</SUB>> ]
-"3519" [label = <(&lt;operator&gt;.fieldAccess,PowerHint::INTERACTION)<SUB>1536</SUB>> ]
-"3523" [label = <(notifyTouchEvent,mScheduler-&gt;notifyTouchEvent())<SUB>1537</SUB>> ]
-"3521" [label = <(FIELD_IDENTIFIER,INTERACTION,INTERACTION)<SUB>1536</SUB>> ]
-"3524" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;notifyTouchEvent)<SUB>1537</SUB>> ]
-"3526" [label = <(FIELD_IDENTIFIER,notifyTouchEvent,notifyTouchEvent)<SUB>1537</SUB>> ]
-"3507" [label = <(METHOD,notifyPowerHint)<SUB>1533</SUB>> ]
-"3529" [label = <(METHOD_RETURN,status_t)<SUB>1533</SUB>> ]
-  "3511" -> "3521" 
-  "3527" -> "3529" 
-  "3513" -> "3511" 
-  "3517" -> "3526" 
-  "3517" -> "3527" 
-  "3514" -> "3513" 
-  "3519" -> "3517" 
-  "3523" -> "3527" 
-  "3521" -> "3519" 
-  "3524" -> "3523" 
-  "3526" -> "3524" 
-  "3507" -> "3514" 
+"3527" [label = <(&lt;operator&gt;.assignment,powerHint = static_cast&lt;PowerHint&gt;(hintId))<SUB>1533</SUB>> ]
+"3543" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>1539</SUB>> ]
+"3529" [label = <(&lt;operator&gt;.cast,static_cast&lt;PowerHint&gt;(hintId))<SUB>1533</SUB>> ]
+"3533" [label = <(&lt;operator&gt;.equals,powerHint == PowerHint::INTERACTION)<SUB>1535</SUB>> ]
+"3530" [label = <(UNKNOWN,PowerHint,PowerHint)<SUB>1533</SUB>> ]
+"3535" [label = <(&lt;operator&gt;.fieldAccess,PowerHint::INTERACTION)<SUB>1535</SUB>> ]
+"3539" [label = <(notifyTouchEvent,mScheduler-&gt;notifyTouchEvent())<SUB>1536</SUB>> ]
+"3537" [label = <(FIELD_IDENTIFIER,INTERACTION,INTERACTION)<SUB>1535</SUB>> ]
+"3540" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;notifyTouchEvent)<SUB>1536</SUB>> ]
+"3542" [label = <(FIELD_IDENTIFIER,notifyTouchEvent,notifyTouchEvent)<SUB>1536</SUB>> ]
+"3523" [label = <(METHOD,notifyPowerHint)<SUB>1532</SUB>> ]
+"3545" [label = <(METHOD_RETURN,status_t)<SUB>1532</SUB>> ]
+  "3527" -> "3537" 
+  "3543" -> "3545" 
+  "3529" -> "3527" 
+  "3533" -> "3542" 
+  "3533" -> "3543" 
+  "3530" -> "3529" 
+  "3535" -> "3533" 
+  "3539" -> "3543" 
+  "3537" -> "3535" 
+  "3540" -> "3539" 
+  "3542" -> "3540" 
+  "3523" -> "3530" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/13-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/13-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/13-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/13-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_20" {  
-"60" [label = <(METHOD,anonymous_lambda_20)<SUB>2110</SUB>> ]
-"63" [label = <(METHOD_RETURN,ANY)<SUB>2110</SUB>> ]
+"60" [label = <(METHOD,anonymous_lambda_20)<SUB>2109</SUB>> ]
+"63" [label = <(METHOD_RETURN,ANY)<SUB>2109</SUB>> ]
   "60" -> "63" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/130-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/130-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/130-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/130-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,19 +1,19 @@
 digraph "createDisplayEventConnection" {  
-"3536" [label = <(&lt;operator&gt;.assignment,&amp; handle =\012            vsyncSource == eVsyncSourceSurfaceFlinger ? mSfConnectionHandle : mAppConnectionHandle)<SUB>1547</SUB>> ]
-"3544" [label = <(RETURN,return mScheduler-&gt;createDisplayEventConnection(handle, configChanged);,return mScheduler-&gt;createDisplayEventConnection(handle, configChanged);)<SUB>1550</SUB>> ]
-"3538" [label = <(&lt;operator&gt;.conditional,vsyncSource == eVsyncSourceSurfaceFlinger ? mSfConnectionHandle : mAppConnectionHandle)<SUB>1548</SUB>> ]
-"3545" [label = <(createDisplayEventConnection,mScheduler-&gt;createDisplayEventConnection(handle, configChanged))<SUB>1550</SUB>> ]
-"3539" [label = <(&lt;operator&gt;.equals,vsyncSource == eVsyncSourceSurfaceFlinger)<SUB>1548</SUB>> ]
-"3546" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createDisplayEventConnection)<SUB>1550</SUB>> ]
-"3548" [label = <(FIELD_IDENTIFIER,createDisplayEventConnection,createDisplayEventConnection)<SUB>1550</SUB>> ]
-"3531" [label = <(METHOD,createDisplayEventConnection)<SUB>1545</SUB>> ]
-"3551" [label = <(METHOD_RETURN,sp&lt;IDisplayEventConnection&gt;)<SUB>1545</SUB>> ]
-  "3536" -> "3548" 
-  "3544" -> "3551" 
-  "3538" -> "3536" 
-  "3545" -> "3544" 
-  "3539" -> "3538" 
-  "3546" -> "3545" 
-  "3548" -> "3546" 
-  "3531" -> "3539" 
+"3552" [label = <(&lt;operator&gt;.assignment,&amp; handle =\012            vsyncSource == eVsyncSourceSurfaceFlinger ? mSfConnectionHandle : mAppConnectionHandle)<SUB>1546</SUB>> ]
+"3560" [label = <(RETURN,return mScheduler-&gt;createDisplayEventConnection(handle, configChanged);,return mScheduler-&gt;createDisplayEventConnection(handle, configChanged);)<SUB>1549</SUB>> ]
+"3554" [label = <(&lt;operator&gt;.conditional,vsyncSource == eVsyncSourceSurfaceFlinger ? mSfConnectionHandle : mAppConnectionHandle)<SUB>1547</SUB>> ]
+"3561" [label = <(createDisplayEventConnection,mScheduler-&gt;createDisplayEventConnection(handle, configChanged))<SUB>1549</SUB>> ]
+"3555" [label = <(&lt;operator&gt;.equals,vsyncSource == eVsyncSourceSurfaceFlinger)<SUB>1547</SUB>> ]
+"3562" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createDisplayEventConnection)<SUB>1549</SUB>> ]
+"3564" [label = <(FIELD_IDENTIFIER,createDisplayEventConnection,createDisplayEventConnection)<SUB>1549</SUB>> ]
+"3547" [label = <(METHOD,createDisplayEventConnection)<SUB>1544</SUB>> ]
+"3567" [label = <(METHOD_RETURN,sp&lt;IDisplayEventConnection&gt;)<SUB>1544</SUB>> ]
+  "3552" -> "3564" 
+  "3560" -> "3567" 
+  "3554" -> "3552" 
+  "3561" -> "3560" 
+  "3555" -> "3554" 
+  "3562" -> "3561" 
+  "3564" -> "3562" 
+  "3547" -> "3555" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/131-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/131-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/131-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/131-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,23 +1,23 @@
 digraph "signalTransaction" {  
-"3555" [label = <(resetIdleTimer,mScheduler-&gt;resetIdleTimer())<SUB>1554</SUB>> ]
-"3559" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>1555</SUB>> ]
-"3563" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1556</SUB>> ]
-"3556" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resetIdleTimer)<SUB>1554</SUB>> ]
-"3560" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>1555</SUB>> ]
-"3564" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1556</SUB>> ]
-"3558" [label = <(FIELD_IDENTIFIER,resetIdleTimer,resetIdleTimer)<SUB>1554</SUB>> ]
-"3562" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>1555</SUB>> ]
-"3566" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1556</SUB>> ]
-"3553" [label = <(METHOD,signalTransaction)<SUB>1553</SUB>> ]
-"3567" [label = <(METHOD_RETURN,void)<SUB>1553</SUB>> ]
-  "3555" -> "3562" 
-  "3559" -> "3566" 
-  "3563" -> "3567" 
-  "3556" -> "3555" 
-  "3560" -> "3559" 
-  "3564" -> "3563" 
-  "3558" -> "3556" 
-  "3562" -> "3560" 
-  "3566" -> "3564" 
-  "3553" -> "3558" 
+"3571" [label = <(resetIdleTimer,mScheduler-&gt;resetIdleTimer())<SUB>1553</SUB>> ]
+"3575" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>1554</SUB>> ]
+"3579" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1555</SUB>> ]
+"3572" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resetIdleTimer)<SUB>1553</SUB>> ]
+"3576" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>1554</SUB>> ]
+"3580" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1555</SUB>> ]
+"3574" [label = <(FIELD_IDENTIFIER,resetIdleTimer,resetIdleTimer)<SUB>1553</SUB>> ]
+"3578" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>1554</SUB>> ]
+"3582" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1555</SUB>> ]
+"3569" [label = <(METHOD,signalTransaction)<SUB>1552</SUB>> ]
+"3583" [label = <(METHOD_RETURN,void)<SUB>1552</SUB>> ]
+  "3571" -> "3578" 
+  "3575" -> "3582" 
+  "3579" -> "3583" 
+  "3572" -> "3571" 
+  "3576" -> "3575" 
+  "3580" -> "3579" 
+  "3574" -> "3572" 
+  "3578" -> "3576" 
+  "3582" -> "3580" 
+  "3569" -> "3574" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/132-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/132-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/132-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/132-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,23 +1,23 @@
 digraph "signalLayerUpdate" {  
-"3571" [label = <(resetIdleTimer,mScheduler-&gt;resetIdleTimer())<SUB>1560</SUB>> ]
-"3575" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>1561</SUB>> ]
-"3579" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1562</SUB>> ]
-"3572" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resetIdleTimer)<SUB>1560</SUB>> ]
-"3576" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>1561</SUB>> ]
-"3580" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1562</SUB>> ]
-"3574" [label = <(FIELD_IDENTIFIER,resetIdleTimer,resetIdleTimer)<SUB>1560</SUB>> ]
-"3578" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>1561</SUB>> ]
-"3582" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1562</SUB>> ]
-"3569" [label = <(METHOD,signalLayerUpdate)<SUB>1559</SUB>> ]
-"3583" [label = <(METHOD_RETURN,void)<SUB>1559</SUB>> ]
-  "3571" -> "3578" 
-  "3575" -> "3582" 
-  "3579" -> "3583" 
-  "3572" -> "3571" 
-  "3576" -> "3575" 
-  "3580" -> "3579" 
-  "3574" -> "3572" 
-  "3578" -> "3576" 
-  "3582" -> "3580" 
-  "3569" -> "3574" 
+"3587" [label = <(resetIdleTimer,mScheduler-&gt;resetIdleTimer())<SUB>1559</SUB>> ]
+"3591" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>1560</SUB>> ]
+"3595" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1561</SUB>> ]
+"3588" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resetIdleTimer)<SUB>1559</SUB>> ]
+"3592" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>1560</SUB>> ]
+"3596" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1561</SUB>> ]
+"3590" [label = <(FIELD_IDENTIFIER,resetIdleTimer,resetIdleTimer)<SUB>1559</SUB>> ]
+"3594" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>1560</SUB>> ]
+"3598" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1561</SUB>> ]
+"3585" [label = <(METHOD,signalLayerUpdate)<SUB>1558</SUB>> ]
+"3599" [label = <(METHOD_RETURN,void)<SUB>1558</SUB>> ]
+  "3587" -> "3594" 
+  "3591" -> "3598" 
+  "3595" -> "3599" 
+  "3588" -> "3587" 
+  "3592" -> "3591" 
+  "3596" -> "3595" 
+  "3590" -> "3588" 
+  "3594" -> "3592" 
+  "3598" -> "3596" 
+  "3585" -> "3590" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/133-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/133-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/133-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/133-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,13 +1,13 @@
 digraph "signalRefresh" {  
-"3587" [label = <(&lt;operator&gt;.assignment,mRefreshPending = true)<SUB>1566</SUB>> ]
-"3590" [label = <(refresh,mEventQueue-&gt;refresh())<SUB>1567</SUB>> ]
-"3591" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;refresh)<SUB>1567</SUB>> ]
-"3593" [label = <(FIELD_IDENTIFIER,refresh,refresh)<SUB>1567</SUB>> ]
-"3585" [label = <(METHOD,signalRefresh)<SUB>1565</SUB>> ]
-"3594" [label = <(METHOD_RETURN,void)<SUB>1565</SUB>> ]
-  "3587" -> "3593" 
-  "3590" -> "3594" 
-  "3591" -> "3590" 
-  "3593" -> "3591" 
-  "3585" -> "3587" 
+"3603" [label = <(&lt;operator&gt;.assignment,mRefreshPending = true)<SUB>1565</SUB>> ]
+"3606" [label = <(refresh,mEventQueue-&gt;refresh())<SUB>1566</SUB>> ]
+"3607" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;refresh)<SUB>1566</SUB>> ]
+"3609" [label = <(FIELD_IDENTIFIER,refresh,refresh)<SUB>1566</SUB>> ]
+"3601" [label = <(METHOD,signalRefresh)<SUB>1564</SUB>> ]
+"3610" [label = <(METHOD_RETURN,void)<SUB>1564</SUB>> ]
+  "3603" -> "3609" 
+  "3606" -> "3610" 
+  "3607" -> "3606" 
+  "3609" -> "3607" 
+  "3601" -> "3603" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/134-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/134-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/134-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/134-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,41 +1,41 @@
 digraph "getVsyncPeriodFromHWC" {  
-"3599" [label = <(&lt;operator&gt;.assignment,displayId = getInternalDisplayIdLocked())<SUB>1571</SUB>> ]
-"3616" [label = <(RETURN,return getHwComposer().getDisplayVsyncPeriod(*displayId);,return getHwComposer().getDisplayVsyncPeriod(*displayId);)<SUB>1576</SUB>> ]
-"3601" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1571</SUB>> ]
-"3603" [label = <(&lt;operator&gt;.logicalOr,!displayId || !getHwComposer().isConnected(*displayId))<SUB>1572</SUB>> ]
-"3617" [label = <(getDisplayVsyncPeriod,getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>1576</SUB>> ]
-"3604" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1572</SUB>> ]
-"3606" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().isConnected(*displayId))<SUB>1572</SUB>> ]
-"3614" [label = <(RETURN,return 0;,return 0;)<SUB>1573</SUB>> ]
-"3618" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayVsyncPeriod)<SUB>1576</SUB>> ]
-"3621" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1576</SUB>> ]
-"3607" [label = <(isConnected,getHwComposer().isConnected(*displayId))<SUB>1572</SUB>> ]
-"3619" [label = <(getHwComposer,getHwComposer())<SUB>1576</SUB>> ]
-"3620" [label = <(FIELD_IDENTIFIER,getDisplayVsyncPeriod,getDisplayVsyncPeriod)<SUB>1576</SUB>> ]
-"3608" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>1572</SUB>> ]
-"3611" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1572</SUB>> ]
-"3609" [label = <(getHwComposer,getHwComposer())<SUB>1572</SUB>> ]
-"3610" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>1572</SUB>> ]
-"3596" [label = <(METHOD,getVsyncPeriodFromHWC)<SUB>1570</SUB>> ]
-"3623" [label = <(METHOD_RETURN,nsecs_t)<SUB>1570</SUB>> ]
-  "3599" -> "3604" 
-  "3616" -> "3623" 
-  "3601" -> "3599" 
-  "3603" -> "3619" 
-  "3603" -> "3614" 
-  "3617" -> "3616" 
-  "3604" -> "3609" 
-  "3604" -> "3603" 
-  "3606" -> "3603" 
-  "3614" -> "3623" 
-  "3618" -> "3621" 
-  "3621" -> "3617" 
-  "3607" -> "3606" 
-  "3619" -> "3620" 
-  "3620" -> "3618" 
-  "3608" -> "3611" 
-  "3611" -> "3607" 
-  "3609" -> "3610" 
-  "3610" -> "3608" 
-  "3596" -> "3601" 
+"3615" [label = <(&lt;operator&gt;.assignment,displayId = getInternalDisplayIdLocked())<SUB>1570</SUB>> ]
+"3632" [label = <(RETURN,return getHwComposer().getDisplayVsyncPeriod(*displayId);,return getHwComposer().getDisplayVsyncPeriod(*displayId);)<SUB>1575</SUB>> ]
+"3617" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1570</SUB>> ]
+"3619" [label = <(&lt;operator&gt;.logicalOr,!displayId || !getHwComposer().isConnected(*displayId))<SUB>1571</SUB>> ]
+"3633" [label = <(getDisplayVsyncPeriod,getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>1575</SUB>> ]
+"3620" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>1571</SUB>> ]
+"3622" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().isConnected(*displayId))<SUB>1571</SUB>> ]
+"3630" [label = <(RETURN,return 0;,return 0;)<SUB>1572</SUB>> ]
+"3634" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayVsyncPeriod)<SUB>1575</SUB>> ]
+"3637" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1575</SUB>> ]
+"3623" [label = <(isConnected,getHwComposer().isConnected(*displayId))<SUB>1571</SUB>> ]
+"3635" [label = <(getHwComposer,getHwComposer())<SUB>1575</SUB>> ]
+"3636" [label = <(FIELD_IDENTIFIER,getDisplayVsyncPeriod,getDisplayVsyncPeriod)<SUB>1575</SUB>> ]
+"3624" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>1571</SUB>> ]
+"3627" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1571</SUB>> ]
+"3625" [label = <(getHwComposer,getHwComposer())<SUB>1571</SUB>> ]
+"3626" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>1571</SUB>> ]
+"3612" [label = <(METHOD,getVsyncPeriodFromHWC)<SUB>1569</SUB>> ]
+"3639" [label = <(METHOD_RETURN,nsecs_t)<SUB>1569</SUB>> ]
+  "3615" -> "3620" 
+  "3632" -> "3639" 
+  "3617" -> "3615" 
+  "3619" -> "3635" 
+  "3619" -> "3630" 
+  "3633" -> "3632" 
+  "3620" -> "3625" 
+  "3620" -> "3619" 
+  "3622" -> "3619" 
+  "3630" -> "3639" 
+  "3634" -> "3637" 
+  "3637" -> "3633" 
+  "3623" -> "3622" 
+  "3635" -> "3636" 
+  "3636" -> "3634" 
+  "3624" -> "3627" 
+  "3627" -> "3623" 
+  "3625" -> "3626" 
+  "3626" -> "3624" 
+  "3612" -> "3617" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/135-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/135-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/135-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/135-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,63 +1,63 @@
 digraph "onVsyncReceived" {  
-"3631" [label = <(ATRACE_NAME,ATRACE_NAME(&quot;SF onVsync&quot;))<SUB>1582</SUB>> ]
-"3634" [label = <(lock,lock(mStateLock))<SUB>1584</SUB>> ]
-"3664" [label = <(&lt;operator&gt;.assignment,periodFlushed = false)<SUB>1599</SUB>> ]
-"3667" [label = <(addResyncSample,mScheduler-&gt;addResyncSample(timestamp, vsyncPeriod, &amp;periodFlushed))<SUB>1600</SUB>> ]
-"3637" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1586</SUB>> ]
-"3645" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().onVsync(hwcDisplayId, timestamp))<SUB>1590</SUB>> ]
-"3655" [label = <(&lt;operator&gt;.notEquals,hwcDisplayId != getHwComposer().getInternalHwcDisplayId())<SUB>1594</SUB>> ]
-"3668" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;addResyncSample)<SUB>1600</SUB>> ]
-"3673" [label = <(&lt;operator&gt;.addressOf,&amp;periodFlushed)<SUB>1600</SUB>> ]
-"3639" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1586</SUB>> ]
-"3643" [label = <(RETURN,return;,return;)<SUB>1587</SUB>> ]
-"3646" [label = <(onVsync,getHwComposer().onVsync(hwcDisplayId, timestamp))<SUB>1590</SUB>> ]
-"3653" [label = <(RETURN,return;,return;)<SUB>1591</SUB>> ]
-"3657" [label = <(getInternalHwcDisplayId,getHwComposer().getInternalHwcDisplayId())<SUB>1594</SUB>> ]
-"3662" [label = <(RETURN,return;,return;)<SUB>1596</SUB>> ]
-"3670" [label = <(FIELD_IDENTIFIER,addResyncSample,addResyncSample)<SUB>1600</SUB>> ]
-"3678" [label = <(onRefreshRateChangeCompleted,mVSyncModulator-&gt;onRefreshRateChangeCompleted())<SUB>1602</SUB>> ]
-"3640" [label = <(getBE,getBE())<SUB>1586</SUB>> ]
-"3641" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1586</SUB>> ]
-"3647" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().onVsync)<SUB>1590</SUB>> ]
-"3658" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getInternalHwcDisplayId)<SUB>1594</SUB>> ]
-"3679" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshRateChangeCompleted)<SUB>1602</SUB>> ]
-"3648" [label = <(getHwComposer,getHwComposer())<SUB>1590</SUB>> ]
-"3649" [label = <(FIELD_IDENTIFIER,onVsync,onVsync)<SUB>1590</SUB>> ]
-"3659" [label = <(getHwComposer,getHwComposer())<SUB>1594</SUB>> ]
-"3660" [label = <(FIELD_IDENTIFIER,getInternalHwcDisplayId,getInternalHwcDisplayId)<SUB>1594</SUB>> ]
-"3681" [label = <(FIELD_IDENTIFIER,onRefreshRateChangeCompleted,onRefreshRateChangeCompleted)<SUB>1602</SUB>> ]
-"3625" [label = <(METHOD,onVsyncReceived)<SUB>1579</SUB>> ]
-"3682" [label = <(METHOD_RETURN,void)<SUB>1579</SUB>> ]
-  "3631" -> "3634" 
-  "3634" -> "3640" 
-  "3664" -> "3670" 
-  "3667" -> "3682" 
-  "3667" -> "3681" 
-  "3637" -> "3643" 
-  "3637" -> "3648" 
-  "3645" -> "3653" 
-  "3645" -> "3659" 
-  "3655" -> "3662" 
-  "3655" -> "3664" 
-  "3668" -> "3673" 
-  "3673" -> "3667" 
-  "3639" -> "3637" 
-  "3643" -> "3682" 
-  "3646" -> "3645" 
-  "3653" -> "3682" 
+"3647" [label = <(ATRACE_NAME,ATRACE_NAME(&quot;SF onVsync&quot;))<SUB>1581</SUB>> ]
+"3650" [label = <(lock,lock(mStateLock))<SUB>1583</SUB>> ]
+"3680" [label = <(&lt;operator&gt;.assignment,periodFlushed = false)<SUB>1598</SUB>> ]
+"3683" [label = <(addResyncSample,mScheduler-&gt;addResyncSample(timestamp, vsyncPeriod, &amp;periodFlushed))<SUB>1599</SUB>> ]
+"3653" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1585</SUB>> ]
+"3661" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().onVsync(hwcDisplayId, timestamp))<SUB>1589</SUB>> ]
+"3671" [label = <(&lt;operator&gt;.notEquals,hwcDisplayId != getHwComposer().getInternalHwcDisplayId())<SUB>1593</SUB>> ]
+"3684" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;addResyncSample)<SUB>1599</SUB>> ]
+"3689" [label = <(&lt;operator&gt;.addressOf,&amp;periodFlushed)<SUB>1599</SUB>> ]
+"3655" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1585</SUB>> ]
+"3659" [label = <(RETURN,return;,return;)<SUB>1586</SUB>> ]
+"3662" [label = <(onVsync,getHwComposer().onVsync(hwcDisplayId, timestamp))<SUB>1589</SUB>> ]
+"3669" [label = <(RETURN,return;,return;)<SUB>1590</SUB>> ]
+"3673" [label = <(getInternalHwcDisplayId,getHwComposer().getInternalHwcDisplayId())<SUB>1593</SUB>> ]
+"3678" [label = <(RETURN,return;,return;)<SUB>1595</SUB>> ]
+"3686" [label = <(FIELD_IDENTIFIER,addResyncSample,addResyncSample)<SUB>1599</SUB>> ]
+"3694" [label = <(onRefreshRateChangeCompleted,mVSyncModulator-&gt;onRefreshRateChangeCompleted())<SUB>1601</SUB>> ]
+"3656" [label = <(getBE,getBE())<SUB>1585</SUB>> ]
+"3657" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1585</SUB>> ]
+"3663" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().onVsync)<SUB>1589</SUB>> ]
+"3674" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getInternalHwcDisplayId)<SUB>1593</SUB>> ]
+"3695" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshRateChangeCompleted)<SUB>1601</SUB>> ]
+"3664" [label = <(getHwComposer,getHwComposer())<SUB>1589</SUB>> ]
+"3665" [label = <(FIELD_IDENTIFIER,onVsync,onVsync)<SUB>1589</SUB>> ]
+"3675" [label = <(getHwComposer,getHwComposer())<SUB>1593</SUB>> ]
+"3676" [label = <(FIELD_IDENTIFIER,getInternalHwcDisplayId,getInternalHwcDisplayId)<SUB>1593</SUB>> ]
+"3697" [label = <(FIELD_IDENTIFIER,onRefreshRateChangeCompleted,onRefreshRateChangeCompleted)<SUB>1601</SUB>> ]
+"3641" [label = <(METHOD,onVsyncReceived)<SUB>1578</SUB>> ]
+"3698" [label = <(METHOD_RETURN,void)<SUB>1578</SUB>> ]
+  "3647" -> "3650" 
+  "3650" -> "3656" 
+  "3680" -> "3686" 
+  "3683" -> "3698" 
+  "3683" -> "3697" 
+  "3653" -> "3659" 
+  "3653" -> "3664" 
+  "3661" -> "3669" 
+  "3661" -> "3675" 
+  "3671" -> "3678" 
+  "3671" -> "3680" 
+  "3684" -> "3689" 
+  "3689" -> "3683" 
+  "3655" -> "3653" 
+  "3659" -> "3698" 
+  "3662" -> "3661" 
+  "3669" -> "3698" 
+  "3673" -> "3671" 
+  "3678" -> "3698" 
+  "3686" -> "3684" 
+  "3694" -> "3698" 
+  "3656" -> "3657" 
   "3657" -> "3655" 
-  "3662" -> "3682" 
-  "3670" -> "3668" 
-  "3678" -> "3682" 
-  "3640" -> "3641" 
-  "3641" -> "3639" 
-  "3647" -> "3646" 
-  "3658" -> "3657" 
-  "3679" -> "3678" 
-  "3648" -> "3649" 
-  "3649" -> "3647" 
-  "3659" -> "3660" 
-  "3660" -> "3658" 
-  "3681" -> "3679" 
-  "3625" -> "3631" 
+  "3663" -> "3662" 
+  "3674" -> "3673" 
+  "3695" -> "3694" 
+  "3664" -> "3665" 
+  "3665" -> "3663" 
+  "3675" -> "3676" 
+  "3676" -> "3674" 
+  "3697" -> "3695" 
+  "3641" -> "3647" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/136-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/136-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/136-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/136-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,35 +1,35 @@
 digraph "getCompositorTiming" {  
-"3687" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>1607</SUB>> ]
-"3699" [label = <(&lt;operator&gt;.assignment,*compositorTiming = getBE().mCompositorTiming)<SUB>1608</SUB>> ]
-"3688" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1607</SUB>> ]
-"3695" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>1607</SUB>> ]
-"3700" [label = <(&lt;operator&gt;.indirection,*compositorTiming)<SUB>1608</SUB>> ]
-"3702" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>1608</SUB>> ]
-"3689" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1607</SUB>> ]
-"3692" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1607</SUB>> ]
-"3696" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>1607</SUB>> ]
-"3703" [label = <(getBE,getBE())<SUB>1608</SUB>> ]
-"3704" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>1608</SUB>> ]
-"3691" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1607</SUB>> ]
-"3694" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1607</SUB>> ]
-"3697" [label = <(getBE,getBE())<SUB>1607</SUB>> ]
-"3698" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>1607</SUB>> ]
-"3684" [label = <(METHOD,getCompositorTiming)<SUB>1606</SUB>> ]
-"3705" [label = <(METHOD_RETURN,void)<SUB>1606</SUB>> ]
-  "3687" -> "3700" 
-  "3699" -> "3705" 
-  "3688" -> "3697" 
-  "3695" -> "3687" 
-  "3700" -> "3703" 
-  "3702" -> "3699" 
-  "3689" -> "3694" 
-  "3692" -> "3688" 
-  "3696" -> "3695" 
-  "3703" -> "3704" 
-  "3704" -> "3702" 
-  "3691" -> "3689" 
-  "3694" -> "3692" 
-  "3697" -> "3698" 
-  "3698" -> "3696" 
-  "3684" -> "3691" 
+"3703" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>1606</SUB>> ]
+"3715" [label = <(&lt;operator&gt;.assignment,*compositorTiming = getBE().mCompositorTiming)<SUB>1607</SUB>> ]
+"3704" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>1606</SUB>> ]
+"3711" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>1606</SUB>> ]
+"3716" [label = <(&lt;operator&gt;.indirection,*compositorTiming)<SUB>1607</SUB>> ]
+"3718" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>1607</SUB>> ]
+"3705" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>1606</SUB>> ]
+"3708" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1606</SUB>> ]
+"3712" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>1606</SUB>> ]
+"3719" [label = <(getBE,getBE())<SUB>1607</SUB>> ]
+"3720" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>1607</SUB>> ]
+"3707" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>1606</SUB>> ]
+"3710" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1606</SUB>> ]
+"3713" [label = <(getBE,getBE())<SUB>1606</SUB>> ]
+"3714" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>1606</SUB>> ]
+"3700" [label = <(METHOD,getCompositorTiming)<SUB>1605</SUB>> ]
+"3721" [label = <(METHOD_RETURN,void)<SUB>1605</SUB>> ]
+  "3703" -> "3716" 
+  "3715" -> "3721" 
+  "3704" -> "3713" 
+  "3711" -> "3703" 
+  "3716" -> "3719" 
+  "3718" -> "3715" 
+  "3705" -> "3710" 
+  "3708" -> "3704" 
+  "3712" -> "3711" 
+  "3719" -> "3720" 
+  "3720" -> "3718" 
+  "3707" -> "3705" 
+  "3710" -> "3708" 
+  "3713" -> "3714" 
+  "3714" -> "3712" 
+  "3700" -> "3707" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/137-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/137-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/137-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/137-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,13 +1,13 @@
 digraph "isDisplayConfigAllowed" {  
-"3710" [label = <(RETURN,return mRefreshRateConfigs-&gt;isConfigAllowed(configId);,return mRefreshRateConfigs-&gt;isConfigAllowed(configId);)<SUB>1612</SUB>> ]
-"3711" [label = <(isConfigAllowed,mRefreshRateConfigs-&gt;isConfigAllowed(configId))<SUB>1612</SUB>> ]
-"3712" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;isConfigAllowed)<SUB>1612</SUB>> ]
-"3714" [label = <(FIELD_IDENTIFIER,isConfigAllowed,isConfigAllowed)<SUB>1612</SUB>> ]
-"3707" [label = <(METHOD,isDisplayConfigAllowed)<SUB>1611</SUB>> ]
-"3716" [label = <(METHOD_RETURN,bool)<SUB>1611</SUB>> ]
-  "3710" -> "3716" 
-  "3711" -> "3710" 
-  "3712" -> "3711" 
-  "3714" -> "3712" 
-  "3707" -> "3714" 
+"3726" [label = <(RETURN,return mRefreshRateConfigs-&gt;isConfigAllowed(configId);,return mRefreshRateConfigs-&gt;isConfigAllowed(configId);)<SUB>1611</SUB>> ]
+"3727" [label = <(isConfigAllowed,mRefreshRateConfigs-&gt;isConfigAllowed(configId))<SUB>1611</SUB>> ]
+"3728" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;isConfigAllowed)<SUB>1611</SUB>> ]
+"3730" [label = <(FIELD_IDENTIFIER,isConfigAllowed,isConfigAllowed)<SUB>1611</SUB>> ]
+"3723" [label = <(METHOD,isDisplayConfigAllowed)<SUB>1610</SUB>> ]
+"3732" [label = <(METHOD_RETURN,bool)<SUB>1610</SUB>> ]
+  "3726" -> "3732" 
+  "3727" -> "3726" 
+  "3728" -> "3727" 
+  "3730" -> "3728" 
+  "3723" -> "3730" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/138-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/138-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/138-cfg.dot	2023-06-07 19:33:00.337398988 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/138-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,62 +1,62 @@
 digraph "changeRefreshRateLocked" {  
-"3723" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1617</SUB>> ]
-"3737" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1621</SUB>> ]
-"3756" [label = <(setDesiredActiveConfig,setDesiredActiveConfig({refreshRate.getConfigId(), event}))<SUB>1630</SUB>> ]
-"3725" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1617</SUB>> ]
-"3727" [label = <(&lt;operator&gt;.logicalOr,!display || mBootStage != BootStage::FINISHED)<SUB>1618</SUB>> ]
-"3739" [label = <(&lt;operator&gt;.logicalNot,!isDisplayConfigAllowed(refreshRate.getConfigId()))<SUB>1624</SUB>> ]
-"3757" [label = <(&lt;operator&gt;.arrayInitializer,{refreshRate.getConfigId(), event})<SUB>1630</SUB>> ]
-"3728" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1618</SUB>> ]
-"3730" [label = <(&lt;operator&gt;.notEquals,mBootStage != BootStage::FINISHED)<SUB>1618</SUB>> ]
-"3736" [label = <(RETURN,return;,return;)<SUB>1619</SUB>> ]
-"3740" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(refreshRate.getConfigId()))<SUB>1624</SUB>> ]
-"3746" [label = <(ALOGV,ALOGV(&quot;Skipping config %d as it is not part of allowed configs&quot;,\012              refreshRate.getConfigId().value()))<SUB>1625</SUB>> ]
-"3755" [label = <(RETURN,return;,return;)<SUB>1627</SUB>> ]
-"3758" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1630</SUB>> ]
-"3732" [label = <(&lt;operator&gt;.fieldAccess,BootStage::FINISHED)<SUB>1618</SUB>> ]
-"3741" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1624</SUB>> ]
-"3748" [label = <(value,refreshRate.getConfigId().value())<SUB>1626</SUB>> ]
-"3759" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1630</SUB>> ]
-"3734" [label = <(FIELD_IDENTIFIER,FINISHED,FINISHED)<SUB>1618</SUB>> ]
-"3742" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1624</SUB>> ]
-"3749" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId().value)<SUB>1626</SUB>> ]
-"3761" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1630</SUB>> ]
-"3744" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1624</SUB>> ]
-"3750" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1626</SUB>> ]
-"3754" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1626</SUB>> ]
-"3751" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1626</SUB>> ]
-"3753" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1626</SUB>> ]
-"3718" [label = <(METHOD,changeRefreshRateLocked)<SUB>1615</SUB>> ]
-"3763" [label = <(METHOD_RETURN,void)<SUB>1615</SUB>> ]
-  "3723" -> "3728" 
-  "3737" -> "3744" 
-  "3756" -> "3763" 
-  "3725" -> "3723" 
-  "3727" -> "3736" 
-  "3727" -> "3737" 
-  "3739" -> "3753" 
-  "3739" -> "3761" 
+"3739" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1616</SUB>> ]
+"3753" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1620</SUB>> ]
+"3772" [label = <(setDesiredActiveConfig,setDesiredActiveConfig({refreshRate.getConfigId(), event}))<SUB>1629</SUB>> ]
+"3741" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1616</SUB>> ]
+"3743" [label = <(&lt;operator&gt;.logicalOr,!display || mBootStage != BootStage::FINISHED)<SUB>1617</SUB>> ]
+"3755" [label = <(&lt;operator&gt;.logicalNot,!isDisplayConfigAllowed(refreshRate.getConfigId()))<SUB>1623</SUB>> ]
+"3773" [label = <(&lt;operator&gt;.arrayInitializer,{refreshRate.getConfigId(), event})<SUB>1629</SUB>> ]
+"3744" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1617</SUB>> ]
+"3746" [label = <(&lt;operator&gt;.notEquals,mBootStage != BootStage::FINISHED)<SUB>1617</SUB>> ]
+"3752" [label = <(RETURN,return;,return;)<SUB>1618</SUB>> ]
+"3756" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(refreshRate.getConfigId()))<SUB>1623</SUB>> ]
+"3762" [label = <(ALOGV,ALOGV(&quot;Skipping config %d as it is not part of allowed configs&quot;,\012              refreshRate.getConfigId().value()))<SUB>1624</SUB>> ]
+"3771" [label = <(RETURN,return;,return;)<SUB>1626</SUB>> ]
+"3774" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1629</SUB>> ]
+"3748" [label = <(&lt;operator&gt;.fieldAccess,BootStage::FINISHED)<SUB>1617</SUB>> ]
+"3757" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1623</SUB>> ]
+"3764" [label = <(value,refreshRate.getConfigId().value())<SUB>1625</SUB>> ]
+"3775" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1629</SUB>> ]
+"3750" [label = <(FIELD_IDENTIFIER,FINISHED,FINISHED)<SUB>1617</SUB>> ]
+"3758" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1623</SUB>> ]
+"3765" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId().value)<SUB>1625</SUB>> ]
+"3777" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1629</SUB>> ]
+"3760" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1623</SUB>> ]
+"3766" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1625</SUB>> ]
+"3770" [label = <(FIELD_IDENTIFIER,value,value)<SUB>1625</SUB>> ]
+"3767" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1625</SUB>> ]
+"3769" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1625</SUB>> ]
+"3734" [label = <(METHOD,changeRefreshRateLocked)<SUB>1614</SUB>> ]
+"3779" [label = <(METHOD_RETURN,void)<SUB>1614</SUB>> ]
+  "3739" -> "3744" 
+  "3753" -> "3760" 
+  "3772" -> "3779" 
+  "3741" -> "3739" 
+  "3743" -> "3752" 
+  "3743" -> "3753" 
+  "3755" -> "3769" 
+  "3755" -> "3777" 
+  "3773" -> "3772" 
+  "3744" -> "3743" 
+  "3744" -> "3750" 
+  "3746" -> "3743" 
+  "3752" -> "3779" 
+  "3756" -> "3755" 
+  "3762" -> "3771" 
+  "3771" -> "3779" 
+  "3774" -> "3773" 
+  "3748" -> "3746" 
   "3757" -> "3756" 
-  "3728" -> "3727" 
-  "3728" -> "3734" 
-  "3730" -> "3727" 
-  "3736" -> "3763" 
-  "3740" -> "3739" 
-  "3746" -> "3755" 
-  "3755" -> "3763" 
+  "3764" -> "3762" 
+  "3775" -> "3774" 
+  "3750" -> "3748" 
   "3758" -> "3757" 
-  "3732" -> "3730" 
-  "3741" -> "3740" 
-  "3748" -> "3746" 
-  "3759" -> "3758" 
-  "3734" -> "3732" 
-  "3742" -> "3741" 
-  "3749" -> "3748" 
-  "3761" -> "3759" 
-  "3744" -> "3742" 
-  "3750" -> "3754" 
-  "3754" -> "3749" 
-  "3751" -> "3750" 
-  "3753" -> "3751" 
-  "3718" -> "3725" 
+  "3765" -> "3764" 
+  "3777" -> "3775" 
+  "3760" -> "3758" 
+  "3766" -> "3770" 
+  "3770" -> "3765" 
+  "3767" -> "3766" 
+  "3769" -> "3767" 
+  "3734" -> "3741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/139-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/139-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/139-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/139-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,53 +1,53 @@
 digraph "onHotplugReceived" {  
-"3770" [label = <(UNKNOWN,ALOGV(&quot;%s(%d, %&quot; PRIu64 &quot;, %s)&quot;, __FUNCTION__, sequenceId, hwcDisplayId,\012          connection == hal::Connection::CONNECTED ? &quot;connected&quot; : &quot;disconnected&quot;);,ALOGV(&quot;%s(%d, %&quot; PRIu64 &quot;, %s)&quot;, __FUNCTION__, sequenceId, hwcDisplayId,\012          connection == hal::Connection::CONNECTED ? &quot;connected&quot; : &quot;disconnected&quot;);)<SUB>1635</SUB>> ]
-"3780" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>1647</SUB>> ]
-"3790" [label = <(emplace_back,mPendingHotplugEvents.emplace_back(HotplugEvent{hwcDisplayId, connection}))<SUB>1649</SUB>> ]
-"3772" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1639</SUB>> ]
-"3782" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>1647</SUB>> ]
-"3791" [label = <(&lt;operator&gt;.fieldAccess,mPendingHotplugEvents.emplace_back)<SUB>1649</SUB>> ]
-"3794" [label = <(HotplugEvent,HotplugEvent{hwcDisplayId, connection})<SUB>1649</SUB>> ]
-"3799" [label = <(&lt;operator&gt;.equals,std::this_thread::get_id() == mMainThreadId)<SUB>1651</SUB>> ]
-"3774" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1639</SUB>> ]
-"3778" [label = <(RETURN,return;,return;)<SUB>1640</SUB>> ]
-"3783" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1647</SUB>> ]
-"3793" [label = <(FIELD_IDENTIFIER,emplace_back,emplace_back)<SUB>1649</SUB>> ]
-"3795" [label = <(&lt;operator&gt;.arrayInitializer,{hwcDisplayId, connection})<SUB>1649</SUB>> ]
-"3800" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1651</SUB>> ]
-"3808" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>1653</SUB>> ]
-"3775" [label = <(getBE,getBE())<SUB>1639</SUB>> ]
-"3776" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1639</SUB>> ]
-"3784" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1647</SUB>> ]
-"3801" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1651</SUB>> ]
-"3785" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1647</SUB>> ]
-"3788" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1647</SUB>> ]
-"3802" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1651</SUB>> ]
-"3805" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1651</SUB>> ]
-"3765" [label = <(METHOD,onHotplugReceived)<SUB>1633</SUB>> ]
-"3810" [label = <(METHOD_RETURN,void)<SUB>1633</SUB>> ]
-  "3770" -> "3775" 
-  "3780" -> "3793" 
-  "3790" -> "3802" 
-  "3772" -> "3778" 
-  "3772" -> "3785" 
-  "3782" -> "3780" 
-  "3791" -> "3795" 
-  "3794" -> "3790" 
-  "3799" -> "3808" 
-  "3799" -> "3810" 
-  "3774" -> "3772" 
-  "3778" -> "3810" 
-  "3783" -> "3782" 
-  "3793" -> "3791" 
-  "3795" -> "3794" 
+"3786" [label = <(UNKNOWN,ALOGV(&quot;%s(%d, %&quot; PRIu64 &quot;, %s)&quot;, __FUNCTION__, sequenceId, hwcDisplayId,\012          connection == hal::Connection::CONNECTED ? &quot;connected&quot; : &quot;disconnected&quot;);,ALOGV(&quot;%s(%d, %&quot; PRIu64 &quot;, %s)&quot;, __FUNCTION__, sequenceId, hwcDisplayId,\012          connection == hal::Connection::CONNECTED ? &quot;connected&quot; : &quot;disconnected&quot;);)<SUB>1634</SUB>> ]
+"3796" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>1646</SUB>> ]
+"3806" [label = <(emplace_back,mPendingHotplugEvents.emplace_back(HotplugEvent{hwcDisplayId, connection}))<SUB>1648</SUB>> ]
+"3788" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1638</SUB>> ]
+"3798" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>1646</SUB>> ]
+"3807" [label = <(&lt;operator&gt;.fieldAccess,mPendingHotplugEvents.emplace_back)<SUB>1648</SUB>> ]
+"3810" [label = <(HotplugEvent,HotplugEvent{hwcDisplayId, connection})<SUB>1648</SUB>> ]
+"3815" [label = <(&lt;operator&gt;.equals,std::this_thread::get_id() == mMainThreadId)<SUB>1650</SUB>> ]
+"3790" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1638</SUB>> ]
+"3794" [label = <(RETURN,return;,return;)<SUB>1639</SUB>> ]
+"3799" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1646</SUB>> ]
+"3809" [label = <(FIELD_IDENTIFIER,emplace_back,emplace_back)<SUB>1648</SUB>> ]
+"3811" [label = <(&lt;operator&gt;.arrayInitializer,{hwcDisplayId, connection})<SUB>1648</SUB>> ]
+"3816" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>1650</SUB>> ]
+"3824" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>1652</SUB>> ]
+"3791" [label = <(getBE,getBE())<SUB>1638</SUB>> ]
+"3792" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1638</SUB>> ]
+"3800" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1646</SUB>> ]
+"3817" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>1650</SUB>> ]
+"3801" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1646</SUB>> ]
+"3804" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1646</SUB>> ]
+"3818" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>1650</SUB>> ]
+"3821" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>1650</SUB>> ]
+"3781" [label = <(METHOD,onHotplugReceived)<SUB>1632</SUB>> ]
+"3826" [label = <(METHOD_RETURN,void)<SUB>1632</SUB>> ]
+  "3786" -> "3791" 
+  "3796" -> "3809" 
+  "3806" -> "3818" 
+  "3788" -> "3794" 
+  "3788" -> "3801" 
+  "3798" -> "3796" 
+  "3807" -> "3811" 
+  "3810" -> "3806" 
+  "3815" -> "3824" 
+  "3815" -> "3826" 
+  "3790" -> "3788" 
+  "3794" -> "3826" 
+  "3799" -> "3798" 
+  "3809" -> "3807" 
+  "3811" -> "3810" 
+  "3816" -> "3815" 
+  "3824" -> "3826" 
+  "3791" -> "3792" 
+  "3792" -> "3790" 
   "3800" -> "3799" 
-  "3808" -> "3810" 
-  "3775" -> "3776" 
-  "3776" -> "3774" 
-  "3784" -> "3783" 
-  "3801" -> "3800" 
-  "3785" -> "3788" 
-  "3788" -> "3784" 
-  "3802" -> "3805" 
-  "3805" -> "3801" 
-  "3765" -> "3770" 
+  "3817" -> "3816" 
+  "3801" -> "3804" 
+  "3804" -> "3800" 
+  "3818" -> "3821" 
+  "3821" -> "3817" 
+  "3781" -> "3786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/14-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/14-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/14-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/14-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_21" {  
-"65" [label = <(METHOD,anonymous_lambda_21)<SUB>2115</SUB>> ]
-"68" [label = <(METHOD_RETURN,ANY)<SUB>2115</SUB>> ]
+"65" [label = <(METHOD,anonymous_lambda_21)<SUB>2114</SUB>> ]
+"68" [label = <(METHOD_RETURN,ANY)<SUB>2114</SUB>> ]
   "65" -> "68" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/140-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/140-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/140-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/140-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,24 +1,24 @@
 digraph "onVsyncPeriodTimingChangedReceived" {  
-"3818" [label = <(lock,lock(mStateLock))<SUB>1662</SUB>> ]
-"3828" [label = <(onNewVsyncPeriodChangeTimeline,mScheduler-&gt;onNewVsyncPeriodChangeTimeline(updatedTimeline))<SUB>1666</SUB>> ]
-"3821" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1663</SUB>> ]
-"3829" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNewVsyncPeriodChangeTimeline)<SUB>1666</SUB>> ]
-"3823" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1663</SUB>> ]
-"3827" [label = <(RETURN,return;,return;)<SUB>1664</SUB>> ]
-"3831" [label = <(FIELD_IDENTIFIER,onNewVsyncPeriodChangeTimeline,onNewVsyncPeriodChangeTimeline)<SUB>1666</SUB>> ]
-"3824" [label = <(getBE,getBE())<SUB>1663</SUB>> ]
-"3825" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1663</SUB>> ]
-"3812" [label = <(METHOD,onVsyncPeriodTimingChangedReceived)<SUB>1659</SUB>> ]
-"3833" [label = <(METHOD_RETURN,void)<SUB>1659</SUB>> ]
-  "3818" -> "3824" 
-  "3828" -> "3833" 
-  "3821" -> "3827" 
-  "3821" -> "3831" 
-  "3829" -> "3828" 
-  "3823" -> "3821" 
-  "3827" -> "3833" 
-  "3831" -> "3829" 
-  "3824" -> "3825" 
-  "3825" -> "3823" 
-  "3812" -> "3818" 
+"3834" [label = <(lock,lock(mStateLock))<SUB>1661</SUB>> ]
+"3844" [label = <(onNewVsyncPeriodChangeTimeline,mScheduler-&gt;onNewVsyncPeriodChangeTimeline(updatedTimeline))<SUB>1665</SUB>> ]
+"3837" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1662</SUB>> ]
+"3845" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNewVsyncPeriodChangeTimeline)<SUB>1665</SUB>> ]
+"3839" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1662</SUB>> ]
+"3843" [label = <(RETURN,return;,return;)<SUB>1663</SUB>> ]
+"3847" [label = <(FIELD_IDENTIFIER,onNewVsyncPeriodChangeTimeline,onNewVsyncPeriodChangeTimeline)<SUB>1665</SUB>> ]
+"3840" [label = <(getBE,getBE())<SUB>1662</SUB>> ]
+"3841" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1662</SUB>> ]
+"3828" [label = <(METHOD,onVsyncPeriodTimingChangedReceived)<SUB>1658</SUB>> ]
+"3849" [label = <(METHOD_RETURN,void)<SUB>1658</SUB>> ]
+  "3834" -> "3840" 
+  "3844" -> "3849" 
+  "3837" -> "3843" 
+  "3837" -> "3847" 
+  "3845" -> "3844" 
+  "3839" -> "3837" 
+  "3843" -> "3849" 
+  "3847" -> "3845" 
+  "3840" -> "3841" 
+  "3841" -> "3839" 
+  "3828" -> "3834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/141-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/141-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/141-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/141-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,5 +1,5 @@
 digraph "onSeamlessPossible" {  
-"3835" [label = <(METHOD,onSeamlessPossible)<SUB>1669</SUB>> ]
-"3839" [label = <(METHOD_RETURN,void)<SUB>1669</SUB>> ]
-  "3835" -> "3839" 
+"3851" [label = <(METHOD,onSeamlessPossible)<SUB>1668</SUB>> ]
+"3855" [label = <(METHOD_RETURN,void)<SUB>1668</SUB>> ]
+  "3851" -> "3855" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/142-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/142-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/142-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/142-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,20 +1,20 @@
 digraph "onRefreshReceived" {  
-"3846" [label = <(lock,lock(mStateLock))<SUB>1675</SUB>> ]
-"3856" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>1679</SUB>> ]
-"3849" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1676</SUB>> ]
-"3851" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1676</SUB>> ]
-"3855" [label = <(RETURN,return;,return;)<SUB>1677</SUB>> ]
-"3852" [label = <(getBE,getBE())<SUB>1676</SUB>> ]
-"3853" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1676</SUB>> ]
-"3841" [label = <(METHOD,onRefreshReceived)<SUB>1674</SUB>> ]
-"3857" [label = <(METHOD_RETURN,void)<SUB>1674</SUB>> ]
-  "3846" -> "3852" 
-  "3856" -> "3857" 
-  "3849" -> "3855" 
-  "3849" -> "3856" 
-  "3851" -> "3849" 
-  "3855" -> "3857" 
-  "3852" -> "3853" 
-  "3853" -> "3851" 
-  "3841" -> "3846" 
+"3862" [label = <(lock,lock(mStateLock))<SUB>1674</SUB>> ]
+"3872" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>1678</SUB>> ]
+"3865" [label = <(&lt;operator&gt;.notEquals,sequenceId != getBE().mComposerSequenceId)<SUB>1675</SUB>> ]
+"3867" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1675</SUB>> ]
+"3871" [label = <(RETURN,return;,return;)<SUB>1676</SUB>> ]
+"3868" [label = <(getBE,getBE())<SUB>1675</SUB>> ]
+"3869" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1675</SUB>> ]
+"3857" [label = <(METHOD,onRefreshReceived)<SUB>1673</SUB>> ]
+"3873" [label = <(METHOD_RETURN,void)<SUB>1673</SUB>> ]
+  "3862" -> "3868" 
+  "3872" -> "3873" 
+  "3865" -> "3871" 
+  "3865" -> "3872" 
+  "3867" -> "3865" 
+  "3871" -> "3873" 
+  "3868" -> "3869" 
+  "3869" -> "3867" 
+  "3857" -> "3862" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/143-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/143-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/143-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/143-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,11 +1,11 @@
 digraph "setPrimaryVsyncEnabled" {  
-"3862" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1683</SUB>> ]
-"3863" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD { setPrimaryVsyncEnabledInternal(enabled); },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD { setPrimaryVsyncEnabledInternal(enabled); })<SUB>1687</SUB>> ]
-"3864" [label = <(UNKNOWN,));,));)<SUB>1687</SUB>> ]
-"3859" [label = <(METHOD,setPrimaryVsyncEnabled)<SUB>1682</SUB>> ]
-"3865" [label = <(METHOD_RETURN,void)<SUB>1682</SUB>> ]
-  "3862" -> "3863" 
-  "3863" -> "3864" 
-  "3864" -> "3865" 
-  "3859" -> "3862" 
+"3878" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1682</SUB>> ]
+"3879" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD { setPrimaryVsyncEnabledInternal(enabled); },static_cast&lt;void&gt;(schedule([=]() MAIN_THREAD { setPrimaryVsyncEnabledInternal(enabled); })<SUB>1686</SUB>> ]
+"3880" [label = <(UNKNOWN,));,));)<SUB>1686</SUB>> ]
+"3875" [label = <(METHOD,setPrimaryVsyncEnabled)<SUB>1681</SUB>> ]
+"3881" [label = <(METHOD_RETURN,void)<SUB>1681</SUB>> ]
+  "3878" -> "3879" 
+  "3879" -> "3880" 
+  "3880" -> "3881" 
+  "3875" -> "3878" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/144-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/144-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/144-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/144-cfg.dot	2023-06-07 19:33:06.577398412 +0330
@@ -1,57 +1,57 @@
 digraph "setPrimaryVsyncEnabledInternal" {  
-"3870" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1691</SUB>> ]
-"3871" [label = <(&lt;operator&gt;.assignment,mHWCVsyncPendingState = enabled ? hal::Vsync::ENABLE : hal::Vsync::DISABLE)<SUB>1693</SUB>> ]
-"3873" [label = <(&lt;operator&gt;.conditional,enabled ? hal::Vsync::ENABLE : hal::Vsync::DISABLE)<SUB>1693</SUB>> ]
-"3875" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::ENABLE)<SUB>1693</SUB>> ]
-"3880" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::DISABLE)<SUB>1693</SUB>> ]
-"3888" [label = <(&lt;operator&gt;.assignment,displayId = getInternalDisplayIdLocked())<SUB>1695</SUB>> ]
-"3892" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getDefaultDisplayDeviceLocked())<SUB>1696</SUB>> ]
-"3876" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>1693</SUB>> ]
-"3879" [label = <(FIELD_IDENTIFIER,ENABLE,ENABLE)<SUB>1693</SUB>> ]
-"3881" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>1693</SUB>> ]
-"3884" [label = <(FIELD_IDENTIFIER,DISABLE,DISABLE)<SUB>1693</SUB>> ]
-"3890" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1695</SUB>> ]
-"3893" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>1696</SUB>> ]
-"3898" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1696</SUB>> ]
-"3900" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPoweredOn())<SUB>1697</SUB>> ]
-"3894" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>1696</SUB>> ]
-"3902" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>1697</SUB>> ]
-"3907" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, mHWCVsyncPendingState))<SUB>1698</SUB>> ]
-"3903" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>1697</SUB>> ]
-"3908" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>1698</SUB>> ]
-"3911" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1698</SUB>> ]
-"3905" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>1697</SUB>> ]
-"3909" [label = <(getHwComposer,getHwComposer())<SUB>1698</SUB>> ]
-"3910" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>1698</SUB>> ]
-"3867" [label = <(METHOD,setPrimaryVsyncEnabledInternal)<SUB>1690</SUB>> ]
-"3914" [label = <(METHOD_RETURN,void)<SUB>1690</SUB>> ]
-  "3870" -> "3876" 
-  "3870" -> "3881" 
-  "3871" -> "3890" 
-  "3873" -> "3871" 
-  "3875" -> "3873" 
-  "3880" -> "3873" 
-  "3888" -> "3914" 
-  "3888" -> "3894" 
-  "3892" -> "3900" 
-  "3892" -> "3905" 
-  "3876" -> "3879" 
-  "3879" -> "3875" 
-  "3881" -> "3884" 
-  "3884" -> "3880" 
-  "3890" -> "3888" 
-  "3893" -> "3898" 
-  "3898" -> "3892" 
-  "3900" -> "3909" 
-  "3900" -> "3914" 
-  "3894" -> "3893" 
-  "3902" -> "3900" 
-  "3907" -> "3914" 
-  "3903" -> "3902" 
-  "3908" -> "3911" 
-  "3911" -> "3907" 
-  "3905" -> "3903" 
-  "3909" -> "3910" 
-  "3910" -> "3908" 
-  "3867" -> "3870" 
+"3886" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1690</SUB>> ]
+"3887" [label = <(&lt;operator&gt;.assignment,mHWCVsyncPendingState = enabled ? hal::Vsync::ENABLE : hal::Vsync::DISABLE)<SUB>1692</SUB>> ]
+"3889" [label = <(&lt;operator&gt;.conditional,enabled ? hal::Vsync::ENABLE : hal::Vsync::DISABLE)<SUB>1692</SUB>> ]
+"3891" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::ENABLE)<SUB>1692</SUB>> ]
+"3896" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::DISABLE)<SUB>1692</SUB>> ]
+"3904" [label = <(&lt;operator&gt;.assignment,displayId = getInternalDisplayIdLocked())<SUB>1694</SUB>> ]
+"3908" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getDefaultDisplayDeviceLocked())<SUB>1695</SUB>> ]
+"3892" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>1692</SUB>> ]
+"3895" [label = <(FIELD_IDENTIFIER,ENABLE,ENABLE)<SUB>1692</SUB>> ]
+"3897" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>1692</SUB>> ]
+"3900" [label = <(FIELD_IDENTIFIER,DISABLE,DISABLE)<SUB>1692</SUB>> ]
+"3906" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>1694</SUB>> ]
+"3909" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>1695</SUB>> ]
+"3914" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1695</SUB>> ]
+"3916" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPoweredOn())<SUB>1696</SUB>> ]
+"3910" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>1695</SUB>> ]
+"3918" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>1696</SUB>> ]
+"3923" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, mHWCVsyncPendingState))<SUB>1697</SUB>> ]
+"3919" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>1696</SUB>> ]
+"3924" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>1697</SUB>> ]
+"3927" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>1697</SUB>> ]
+"3921" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>1696</SUB>> ]
+"3925" [label = <(getHwComposer,getHwComposer())<SUB>1697</SUB>> ]
+"3926" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>1697</SUB>> ]
+"3883" [label = <(METHOD,setPrimaryVsyncEnabledInternal)<SUB>1689</SUB>> ]
+"3930" [label = <(METHOD_RETURN,void)<SUB>1689</SUB>> ]
+  "3886" -> "3892" 
+  "3886" -> "3897" 
+  "3887" -> "3906" 
+  "3889" -> "3887" 
+  "3891" -> "3889" 
+  "3896" -> "3889" 
+  "3904" -> "3930" 
+  "3904" -> "3910" 
+  "3908" -> "3916" 
+  "3908" -> "3921" 
+  "3892" -> "3895" 
+  "3895" -> "3891" 
+  "3897" -> "3900" 
+  "3900" -> "3896" 
+  "3906" -> "3904" 
+  "3909" -> "3914" 
+  "3914" -> "3908" 
+  "3916" -> "3925" 
+  "3916" -> "3930" 
+  "3910" -> "3909" 
+  "3918" -> "3916" 
+  "3923" -> "3930" 
+  "3919" -> "3918" 
+  "3924" -> "3927" 
+  "3927" -> "3923" 
+  "3921" -> "3919" 
+  "3925" -> "3926" 
+  "3926" -> "3924" 
+  "3883" -> "3886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/145-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/145-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/145-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/145-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,27 +1,27 @@
 digraph "resetDisplayState" {  
-"3918" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>1704</SUB>> ]
-"3923" [label = <(clear,mDrawingState.displays.clear())<SUB>1709</SUB>> ]
-"3929" [label = <(clear,mDisplays.clear())<SUB>1710</SUB>> ]
-"3919" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>1704</SUB>> ]
-"3924" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays.clear)<SUB>1709</SUB>> ]
-"3930" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.clear)<SUB>1710</SUB>> ]
-"3921" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>1704</SUB>> ]
-"3925" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>1709</SUB>> ]
-"3928" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1709</SUB>> ]
-"3932" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1710</SUB>> ]
-"3927" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>1709</SUB>> ]
-"3916" [label = <(METHOD,resetDisplayState)<SUB>1703</SUB>> ]
-"3933" [label = <(METHOD_RETURN,void)<SUB>1703</SUB>> ]
-  "3918" -> "3927" 
-  "3923" -> "3932" 
-  "3929" -> "3933" 
-  "3919" -> "3918" 
-  "3924" -> "3923" 
-  "3930" -> "3929" 
-  "3921" -> "3919" 
-  "3925" -> "3928" 
-  "3928" -> "3924" 
-  "3932" -> "3930" 
-  "3927" -> "3925" 
-  "3916" -> "3921" 
+"3934" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>1703</SUB>> ]
+"3939" [label = <(clear,mDrawingState.displays.clear())<SUB>1708</SUB>> ]
+"3945" [label = <(clear,mDisplays.clear())<SUB>1709</SUB>> ]
+"3935" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>1703</SUB>> ]
+"3940" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays.clear)<SUB>1708</SUB>> ]
+"3946" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.clear)<SUB>1709</SUB>> ]
+"3937" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>1703</SUB>> ]
+"3941" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>1708</SUB>> ]
+"3944" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1708</SUB>> ]
+"3948" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1709</SUB>> ]
+"3943" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>1708</SUB>> ]
+"3932" [label = <(METHOD,resetDisplayState)<SUB>1702</SUB>> ]
+"3949" [label = <(METHOD_RETURN,void)<SUB>1702</SUB>> ]
+  "3934" -> "3943" 
+  "3939" -> "3948" 
+  "3945" -> "3949" 
+  "3935" -> "3934" 
+  "3940" -> "3939" 
+  "3946" -> "3945" 
+  "3937" -> "3935" 
+  "3941" -> "3944" 
+  "3944" -> "3940" 
+  "3948" -> "3946" 
+  "3943" -> "3941" 
+  "3932" -> "3937" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/146-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/146-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/146-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/146-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,253 +1,253 @@
 digraph "updateVrFlinger" {  
-"3937" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1714</SUB>> ]
-"3944" [label = <(&lt;operator&gt;.assignment,vrFlingerRequestsDisplay = mVrFlingerRequestsDisplay)<SUB>1717</SUB>> ]
-"3975" [label = <(_l,_l(mStateLock))<SUB>1730</SUB>> ]
-"3977" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getDefaultDisplayDeviceLocked())<SUB>1732</SUB>> ]
-"3984" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display))<SUB>1733</SUB>> ]
-"3988" [label = <(&lt;operator&gt;.assignment,currentDisplayPowerMode = display-&gt;getPowerMode())<SUB>1735</SUB>> ]
-"4007" [label = <(clear,display.clear())<SUB>1748</SUB>> ]
-"4019" [label = <(resetDisplayState,resetDisplayState())<SUB>1754</SUB>> ]
-"4020" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(std::unique_ptr&lt;HWComposer&gt;()))<SUB>1756</SUB>> ]
-"4028" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(getFactory().createHWComposer(\012            vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName)))<SUB>1757</SUB>> ]
-"4042" [label = <(setConfiguration,mCompositionEngine-&gt;getHwComposer().setConfiguration(this, ++getBE().mComposerSequenceId))<SUB>1759</SUB>> ]
-"4054" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!getHwComposer().getComposer()-&gt;isRemote(),\012 &quot;Switched to non-remote hardware composer&quot;))<SUB>1761</SUB>> ]
-"4071" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>1768</SUB>> ]
-"4074" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>1769</SUB>> ]
-"4075" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1772</SUB>> ]
-"4078" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display))<SUB>1773</SUB>> ]
-"4081" [label = <(setPowerModeInternal,setPowerModeInternal(display, currentDisplayPowerMode))<SUB>1774</SUB>> ]
-"4085" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>1777</SUB>> ]
-"4094" [label = <(setDisplayRefreshPeriod,mAnimFrameTracker.setDisplayRefreshPeriod(vsyncPeriod))<SUB>1778</SUB>> ]
-"4099" [label = <(setIgnorePresentFences,mScheduler-&gt;setIgnorePresentFences(getHwComposer().isUsingVrComposer() || !hasSyncFramework))<SUB>1782</SUB>> ]
-"4111" [label = <(&lt;operator&gt;.assignment,stats{0 /* vsyncTime */, vsyncPeriod})<SUB>1786</SUB>> ]
-"4116" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, 0))<SUB>1787</SUB>> ]
-"4119" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(false, vsyncPeriod))<SUB>1789</SUB>> ]
-"4125" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>1791</SUB>> ]
-"3939" [label = <(&lt;operator&gt;.logicalNot,!mVrFlinger)<SUB>1715</SUB>> ]
-"3948" [label = <(&lt;operator&gt;.equals,vrFlingerRequestsDisplay == getHwComposer().isUsingVrComposer())<SUB>1718</SUB>> ]
-"3957" [label = <(&lt;operator&gt;.logicalAnd,vrFlingerRequestsDisplay &amp;&amp; !getHwComposer().getComposer()-&gt;isRemote())<SUB>1722</SUB>> ]
-"3978" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>1732</SUB>> ]
-"3983" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1732</SUB>> ]
-"3985" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1733</SUB>> ]
-"3990" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>1735</SUB>> ]
-"4008" [label = <(&lt;operator&gt;.fieldAccess,display.clear)<SUB>1748</SUB>> ]
-"4012" [label = <(&lt;operator&gt;.logicalNot,!vrFlingerRequestsDisplay)<SUB>1750</SUB>> ]
-"4021" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>1756</SUB>> ]
-"4024" [label = <(std::unique_ptr&lt;HWComposer&gt;,std::unique_ptr&lt;HWComposer&gt;())<SUB>1756</SUB>> ]
-"4029" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>1757</SUB>> ]
-"4032" [label = <(createHWComposer,getFactory().createHWComposer(\012            vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName))<SUB>1757</SUB>> ]
-"4043" [label = <(&lt;operator&gt;.fieldAccess,mCompositionEngine-&gt;getHwComposer().setConfiguration)<SUB>1759</SUB>> ]
-"4050" [label = <(&lt;operator&gt;.preIncrement,++getBE().mComposerSequenceId)<SUB>1759</SUB>> ]
-"4055" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getComposer()-&gt;isRemote())<SUB>1761</SUB>> ]
-"4077" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1772</SUB>> ]
-"4079" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1773</SUB>> ]
-"4087" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>1777</SUB>> ]
-"4095" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setDisplayRefreshPeriod)<SUB>1778</SUB>> ]
-"4100" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setIgnorePresentFences)<SUB>1782</SUB>> ]
-"4103" [label = <(&lt;operator&gt;.logicalOr,getHwComposer().isUsingVrComposer() || !hasSyncFramework)<SUB>1782</SUB>> ]
-"4113" [label = <(&lt;operator&gt;.arrayInitializer,{0 /* vsyncTime */, vsyncPeriod})<SUB>1786</SUB>> ]
-"4120" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1789</SUB>> ]
-"3942" [label = <(RETURN,return;,return;)<SUB>1716</SUB>> ]
-"3950" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>1718</SUB>> ]
-"3955" [label = <(RETURN,return;,return;)<SUB>1719</SUB>> ]
-"3959" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getComposer()-&gt;isRemote())<SUB>1722</SUB>> ]
-"3968" [label = <(ALOGE,ALOGE(&quot;Vr flinger is only supported for remote hardware composer&quot;\012 &quot; service connections. Ignoring request to transition to vr&quot;\012 &quot; flinger.&quot;))<SUB>1723</SUB>> ]
-"3970" [label = <(&lt;operator&gt;.assignment,mVrFlingerRequestsDisplay = false)<SUB>1726</SUB>> ]
-"3973" [label = <(RETURN,return;,return;)<SUB>1727</SUB>> ]
-"3979" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>1732</SUB>> ]
-"3991" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>1735</SUB>> ]
-"4000" [label = <(clearOutputLayers,displayDevice-&gt;getCompositionDisplay()-&gt;clearOutputLayers())<SUB>1742</SUB>> ]
-"4010" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1748</SUB>> ]
-"4015" [label = <(SeizeDisplayOwnership,mVrFlinger-&gt;SeizeDisplayOwnership())<SUB>1751</SUB>> ]
-"4023" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>1756</SUB>> ]
-"4025" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr&lt;HWComposer&gt;)<SUB>1756</SUB>> ]
-"4031" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>1757</SUB>> ]
-"4033" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createHWComposer)<SUB>1757</SUB>> ]
-"4036" [label = <(&lt;operator&gt;.conditional,vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName)<SUB>1758</SUB>> ]
-"4044" [label = <(getHwComposer,mCompositionEngine-&gt;getHwComposer())<SUB>1759</SUB>> ]
-"4048" [label = <(FIELD_IDENTIFIER,setConfiguration,setConfiguration)<SUB>1759</SUB>> ]
-"4051" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1759</SUB>> ]
-"4056" [label = <(isRemote,getHwComposer().getComposer()-&gt;isRemote())<SUB>1761</SUB>> ]
-"4067" [label = <(GrantDisplayOwnership,mVrFlinger-&gt;GrantDisplayOwnership())<SUB>1765</SUB>> ]
-"4088" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>1777</SUB>> ]
-"4097" [label = <(FIELD_IDENTIFIER,setDisplayRefreshPeriod,setDisplayRefreshPeriod)<SUB>1778</SUB>> ]
-"4102" [label = <(FIELD_IDENTIFIER,setIgnorePresentFences,setIgnorePresentFences)<SUB>1782</SUB>> ]
-"4104" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>1782</SUB>> ]
-"4108" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>1782</SUB>> ]
-"4122" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1789</SUB>> ]
-"3951" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>1718</SUB>> ]
-"3960" [label = <(isRemote,getHwComposer().getComposer()-&gt;isRemote())<SUB>1722</SUB>> ]
-"3993" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>1735</SUB>> ]
-"4001" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay()-&gt;clearOutputLayers)<SUB>1742</SUB>> ]
-"4016" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;SeizeDisplayOwnership)<SUB>1751</SUB>> ]
-"4027" [label = <(FIELD_IDENTIFIER,unique_ptr&lt;HWComposer&gt;,unique_ptr&lt;HWComposer&gt;)<SUB>1756</SUB>> ]
-"4034" [label = <(getFactory,getFactory())<SUB>1757</SUB>> ]
-"4035" [label = <(FIELD_IDENTIFIER,createHWComposer,createHWComposer)<SUB>1757</SUB>> ]
-"4039" [label = <(&lt;operator&gt;.fieldAccess,getBE().mHwcServiceName)<SUB>1758</SUB>> ]
-"4045" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getHwComposer)<SUB>1759</SUB>> ]
-"4052" [label = <(getBE,getBE())<SUB>1759</SUB>> ]
-"4053" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1759</SUB>> ]
-"4057" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getComposer()-&gt;isRemote)<SUB>1761</SUB>> ]
-"4068" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;GrantDisplayOwnership)<SUB>1765</SUB>> ]
-"4089" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>1777</SUB>> ]
-"4093" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1777</SUB>> ]
-"4105" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>1782</SUB>> ]
-"3952" [label = <(getHwComposer,getHwComposer())<SUB>1718</SUB>> ]
-"3953" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>1718</SUB>> ]
-"3961" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getComposer()-&gt;isRemote)<SUB>1722</SUB>> ]
-"4002" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>1742</SUB>> ]
-"4006" [label = <(FIELD_IDENTIFIER,clearOutputLayers,clearOutputLayers)<SUB>1742</SUB>> ]
-"4018" [label = <(FIELD_IDENTIFIER,SeizeDisplayOwnership,SeizeDisplayOwnership)<SUB>1751</SUB>> ]
-"4040" [label = <(getBE,getBE())<SUB>1758</SUB>> ]
-"4041" [label = <(FIELD_IDENTIFIER,mHwcServiceName,mHwcServiceName)<SUB>1758</SUB>> ]
-"4047" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>1759</SUB>> ]
-"4058" [label = <(getComposer,getHwComposer().getComposer())<SUB>1761</SUB>> ]
-"4062" [label = <(FIELD_IDENTIFIER,isRemote,isRemote)<SUB>1761</SUB>> ]
-"4070" [label = <(FIELD_IDENTIFIER,GrantDisplayOwnership,GrantDisplayOwnership)<SUB>1765</SUB>> ]
-"4090" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>1777</SUB>> ]
-"4106" [label = <(getHwComposer,getHwComposer())<SUB>1782</SUB>> ]
-"4107" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>1782</SUB>> ]
-"3962" [label = <(getComposer,getHwComposer().getComposer())<SUB>1722</SUB>> ]
-"3966" [label = <(FIELD_IDENTIFIER,isRemote,isRemote)<SUB>1722</SUB>> ]
-"4003" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>1742</SUB>> ]
-"4059" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>1761</SUB>> ]
-"4092" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>1777</SUB>> ]
-"3963" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>1722</SUB>> ]
-"4005" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>1742</SUB>> ]
-"4060" [label = <(getHwComposer,getHwComposer())<SUB>1761</SUB>> ]
-"4061" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>1761</SUB>> ]
-"3964" [label = <(getHwComposer,getHwComposer())<SUB>1722</SUB>> ]
-"3965" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>1722</SUB>> ]
-"3935" [label = <(METHOD,updateVrFlinger)<SUB>1713</SUB>> ]
-"4129" [label = <(METHOD_RETURN,void)<SUB>1713</SUB>> ]
-  "3937" -> "3939" 
-  "3944" -> "3952" 
-  "3975" -> "3979" 
-  "3977" -> "3985" 
-  "3984" -> "3993" 
-  "3988" -> "4005" 
-  "3988" -> "4010" 
-  "4007" -> "4012" 
-  "4019" -> "4023" 
-  "4020" -> "4031" 
-  "4028" -> "4047" 
-  "4042" -> "4060" 
-  "4054" -> "4070" 
-  "4054" -> "4071" 
-  "4071" -> "4074" 
-  "4074" -> "4077" 
-  "4075" -> "4079" 
-  "4078" -> "4081" 
-  "4081" -> "4092" 
-  "4085" -> "4097" 
-  "4094" -> "4102" 
-  "4099" -> "4113" 
-  "4111" -> "4116" 
-  "4116" -> "4122" 
-  "4119" -> "4125" 
-  "4125" -> "4129" 
-  "3939" -> "3942" 
-  "3939" -> "3944" 
-  "3948" -> "3955" 
-  "3948" -> "3964" 
-  "3948" -> "3957" 
-  "3957" -> "3968" 
-  "3957" -> "3975" 
-  "3978" -> "3983" 
-  "3983" -> "3977" 
-  "3985" -> "3984" 
-  "3990" -> "3988" 
-  "4008" -> "4007" 
-  "4012" -> "4019" 
-  "4012" -> "4018" 
-  "4021" -> "4027" 
-  "4024" -> "4020" 
-  "4029" -> "4034" 
-  "4032" -> "4028" 
-  "4043" -> "4052" 
-  "4050" -> "4042" 
-  "4055" -> "4054" 
-  "4077" -> "4075" 
-  "4079" -> "4078" 
-  "4087" -> "4085" 
+"3953" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1713</SUB>> ]
+"3960" [label = <(&lt;operator&gt;.assignment,vrFlingerRequestsDisplay = mVrFlingerRequestsDisplay)<SUB>1716</SUB>> ]
+"3991" [label = <(_l,_l(mStateLock))<SUB>1729</SUB>> ]
+"3993" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getDefaultDisplayDeviceLocked())<SUB>1731</SUB>> ]
+"4000" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display))<SUB>1732</SUB>> ]
+"4004" [label = <(&lt;operator&gt;.assignment,currentDisplayPowerMode = display-&gt;getPowerMode())<SUB>1734</SUB>> ]
+"4023" [label = <(clear,display.clear())<SUB>1747</SUB>> ]
+"4035" [label = <(resetDisplayState,resetDisplayState())<SUB>1753</SUB>> ]
+"4036" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(std::unique_ptr&lt;HWComposer&gt;()))<SUB>1755</SUB>> ]
+"4044" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(getFactory().createHWComposer(\012            vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName)))<SUB>1756</SUB>> ]
+"4058" [label = <(setConfiguration,mCompositionEngine-&gt;getHwComposer().setConfiguration(this, ++getBE().mComposerSequenceId))<SUB>1758</SUB>> ]
+"4070" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!getHwComposer().getComposer()-&gt;isRemote(),\012 &quot;Switched to non-remote hardware composer&quot;))<SUB>1760</SUB>> ]
+"4087" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>1767</SUB>> ]
+"4090" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>1768</SUB>> ]
+"4091" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>1771</SUB>> ]
+"4094" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display))<SUB>1772</SUB>> ]
+"4097" [label = <(setPowerModeInternal,setPowerModeInternal(display, currentDisplayPowerMode))<SUB>1773</SUB>> ]
+"4101" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>1776</SUB>> ]
+"4110" [label = <(setDisplayRefreshPeriod,mAnimFrameTracker.setDisplayRefreshPeriod(vsyncPeriod))<SUB>1777</SUB>> ]
+"4115" [label = <(setIgnorePresentFences,mScheduler-&gt;setIgnorePresentFences(getHwComposer().isUsingVrComposer() || !hasSyncFramework))<SUB>1781</SUB>> ]
+"4127" [label = <(&lt;operator&gt;.assignment,stats{0 /* vsyncTime */, vsyncPeriod})<SUB>1785</SUB>> ]
+"4132" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, 0))<SUB>1786</SUB>> ]
+"4135" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(false, vsyncPeriod))<SUB>1788</SUB>> ]
+"4141" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>1790</SUB>> ]
+"3955" [label = <(&lt;operator&gt;.logicalNot,!mVrFlinger)<SUB>1714</SUB>> ]
+"3964" [label = <(&lt;operator&gt;.equals,vrFlingerRequestsDisplay == getHwComposer().isUsingVrComposer())<SUB>1717</SUB>> ]
+"3973" [label = <(&lt;operator&gt;.logicalAnd,vrFlingerRequestsDisplay &amp;&amp; !getHwComposer().getComposer()-&gt;isRemote())<SUB>1721</SUB>> ]
+"3994" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>1731</SUB>> ]
+"3999" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1731</SUB>> ]
+"4001" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1732</SUB>> ]
+"4006" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>1734</SUB>> ]
+"4024" [label = <(&lt;operator&gt;.fieldAccess,display.clear)<SUB>1747</SUB>> ]
+"4028" [label = <(&lt;operator&gt;.logicalNot,!vrFlingerRequestsDisplay)<SUB>1749</SUB>> ]
+"4037" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>1755</SUB>> ]
+"4040" [label = <(std::unique_ptr&lt;HWComposer&gt;,std::unique_ptr&lt;HWComposer&gt;())<SUB>1755</SUB>> ]
+"4045" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>1756</SUB>> ]
+"4048" [label = <(createHWComposer,getFactory().createHWComposer(\012            vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName))<SUB>1756</SUB>> ]
+"4059" [label = <(&lt;operator&gt;.fieldAccess,mCompositionEngine-&gt;getHwComposer().setConfiguration)<SUB>1758</SUB>> ]
+"4066" [label = <(&lt;operator&gt;.preIncrement,++getBE().mComposerSequenceId)<SUB>1758</SUB>> ]
+"4071" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getComposer()-&gt;isRemote())<SUB>1760</SUB>> ]
+"4093" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>1771</SUB>> ]
+"4095" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1772</SUB>> ]
+"4103" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>1776</SUB>> ]
+"4111" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setDisplayRefreshPeriod)<SUB>1777</SUB>> ]
+"4116" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setIgnorePresentFences)<SUB>1781</SUB>> ]
+"4119" [label = <(&lt;operator&gt;.logicalOr,getHwComposer().isUsingVrComposer() || !hasSyncFramework)<SUB>1781</SUB>> ]
+"4129" [label = <(&lt;operator&gt;.arrayInitializer,{0 /* vsyncTime */, vsyncPeriod})<SUB>1785</SUB>> ]
+"4136" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1788</SUB>> ]
+"3958" [label = <(RETURN,return;,return;)<SUB>1715</SUB>> ]
+"3966" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>1717</SUB>> ]
+"3971" [label = <(RETURN,return;,return;)<SUB>1718</SUB>> ]
+"3975" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getComposer()-&gt;isRemote())<SUB>1721</SUB>> ]
+"3984" [label = <(ALOGE,ALOGE(&quot;Vr flinger is only supported for remote hardware composer&quot;\012 &quot; service connections. Ignoring request to transition to vr&quot;\012 &quot; flinger.&quot;))<SUB>1722</SUB>> ]
+"3986" [label = <(&lt;operator&gt;.assignment,mVrFlingerRequestsDisplay = false)<SUB>1725</SUB>> ]
+"3989" [label = <(RETURN,return;,return;)<SUB>1726</SUB>> ]
+"3995" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>1731</SUB>> ]
+"4007" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>1734</SUB>> ]
+"4016" [label = <(clearOutputLayers,displayDevice-&gt;getCompositionDisplay()-&gt;clearOutputLayers())<SUB>1741</SUB>> ]
+"4026" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>1747</SUB>> ]
+"4031" [label = <(SeizeDisplayOwnership,mVrFlinger-&gt;SeizeDisplayOwnership())<SUB>1750</SUB>> ]
+"4039" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>1755</SUB>> ]
+"4041" [label = <(&lt;operator&gt;.fieldAccess,std::unique_ptr&lt;HWComposer&gt;)<SUB>1755</SUB>> ]
+"4047" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>1756</SUB>> ]
+"4049" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createHWComposer)<SUB>1756</SUB>> ]
+"4052" [label = <(&lt;operator&gt;.conditional,vrFlingerRequestsDisplay ? &quot;vr&quot; : getBE().mHwcServiceName)<SUB>1757</SUB>> ]
+"4060" [label = <(getHwComposer,mCompositionEngine-&gt;getHwComposer())<SUB>1758</SUB>> ]
+"4064" [label = <(FIELD_IDENTIFIER,setConfiguration,setConfiguration)<SUB>1758</SUB>> ]
+"4067" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>1758</SUB>> ]
+"4072" [label = <(isRemote,getHwComposer().getComposer()-&gt;isRemote())<SUB>1760</SUB>> ]
+"4083" [label = <(GrantDisplayOwnership,mVrFlinger-&gt;GrantDisplayOwnership())<SUB>1764</SUB>> ]
+"4104" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>1776</SUB>> ]
+"4113" [label = <(FIELD_IDENTIFIER,setDisplayRefreshPeriod,setDisplayRefreshPeriod)<SUB>1777</SUB>> ]
+"4118" [label = <(FIELD_IDENTIFIER,setIgnorePresentFences,setIgnorePresentFences)<SUB>1781</SUB>> ]
+"4120" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>1781</SUB>> ]
+"4124" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>1781</SUB>> ]
+"4138" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1788</SUB>> ]
+"3967" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>1717</SUB>> ]
+"3976" [label = <(isRemote,getHwComposer().getComposer()-&gt;isRemote())<SUB>1721</SUB>> ]
+"4009" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>1734</SUB>> ]
+"4017" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay()-&gt;clearOutputLayers)<SUB>1741</SUB>> ]
+"4032" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;SeizeDisplayOwnership)<SUB>1750</SUB>> ]
+"4043" [label = <(FIELD_IDENTIFIER,unique_ptr&lt;HWComposer&gt;,unique_ptr&lt;HWComposer&gt;)<SUB>1755</SUB>> ]
+"4050" [label = <(getFactory,getFactory())<SUB>1756</SUB>> ]
+"4051" [label = <(FIELD_IDENTIFIER,createHWComposer,createHWComposer)<SUB>1756</SUB>> ]
+"4055" [label = <(&lt;operator&gt;.fieldAccess,getBE().mHwcServiceName)<SUB>1757</SUB>> ]
+"4061" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getHwComposer)<SUB>1758</SUB>> ]
+"4068" [label = <(getBE,getBE())<SUB>1758</SUB>> ]
+"4069" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>1758</SUB>> ]
+"4073" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getComposer()-&gt;isRemote)<SUB>1760</SUB>> ]
+"4084" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;GrantDisplayOwnership)<SUB>1764</SUB>> ]
+"4105" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>1776</SUB>> ]
+"4109" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1776</SUB>> ]
+"4121" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>1781</SUB>> ]
+"3968" [label = <(getHwComposer,getHwComposer())<SUB>1717</SUB>> ]
+"3969" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>1717</SUB>> ]
+"3977" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getComposer()-&gt;isRemote)<SUB>1721</SUB>> ]
+"4018" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>1741</SUB>> ]
+"4022" [label = <(FIELD_IDENTIFIER,clearOutputLayers,clearOutputLayers)<SUB>1741</SUB>> ]
+"4034" [label = <(FIELD_IDENTIFIER,SeizeDisplayOwnership,SeizeDisplayOwnership)<SUB>1750</SUB>> ]
+"4056" [label = <(getBE,getBE())<SUB>1757</SUB>> ]
+"4057" [label = <(FIELD_IDENTIFIER,mHwcServiceName,mHwcServiceName)<SUB>1757</SUB>> ]
+"4063" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>1758</SUB>> ]
+"4074" [label = <(getComposer,getHwComposer().getComposer())<SUB>1760</SUB>> ]
+"4078" [label = <(FIELD_IDENTIFIER,isRemote,isRemote)<SUB>1760</SUB>> ]
+"4086" [label = <(FIELD_IDENTIFIER,GrantDisplayOwnership,GrantDisplayOwnership)<SUB>1764</SUB>> ]
+"4106" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>1776</SUB>> ]
+"4122" [label = <(getHwComposer,getHwComposer())<SUB>1781</SUB>> ]
+"4123" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>1781</SUB>> ]
+"3978" [label = <(getComposer,getHwComposer().getComposer())<SUB>1721</SUB>> ]
+"3982" [label = <(FIELD_IDENTIFIER,isRemote,isRemote)<SUB>1721</SUB>> ]
+"4019" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>1741</SUB>> ]
+"4075" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>1760</SUB>> ]
+"4108" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>1776</SUB>> ]
+"3979" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>1721</SUB>> ]
+"4021" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>1741</SUB>> ]
+"4076" [label = <(getHwComposer,getHwComposer())<SUB>1760</SUB>> ]
+"4077" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>1760</SUB>> ]
+"3980" [label = <(getHwComposer,getHwComposer())<SUB>1721</SUB>> ]
+"3981" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>1721</SUB>> ]
+"3951" [label = <(METHOD,updateVrFlinger)<SUB>1712</SUB>> ]
+"4145" [label = <(METHOD_RETURN,void)<SUB>1712</SUB>> ]
+  "3953" -> "3955" 
+  "3960" -> "3968" 
+  "3991" -> "3995" 
+  "3993" -> "4001" 
+  "4000" -> "4009" 
+  "4004" -> "4021" 
+  "4004" -> "4026" 
+  "4023" -> "4028" 
+  "4035" -> "4039" 
+  "4036" -> "4047" 
+  "4044" -> "4063" 
+  "4058" -> "4076" 
+  "4070" -> "4086" 
+  "4070" -> "4087" 
+  "4087" -> "4090" 
+  "4090" -> "4093" 
+  "4091" -> "4095" 
+  "4094" -> "4097" 
+  "4097" -> "4108" 
+  "4101" -> "4113" 
+  "4110" -> "4118" 
+  "4115" -> "4129" 
+  "4127" -> "4132" 
+  "4132" -> "4138" 
+  "4135" -> "4141" 
+  "4141" -> "4145" 
+  "3955" -> "3958" 
+  "3955" -> "3960" 
+  "3964" -> "3971" 
+  "3964" -> "3980" 
+  "3964" -> "3973" 
+  "3973" -> "3984" 
+  "3973" -> "3991" 
+  "3994" -> "3999" 
+  "3999" -> "3993" 
+  "4001" -> "4000" 
+  "4006" -> "4004" 
+  "4024" -> "4023" 
+  "4028" -> "4035" 
+  "4028" -> "4034" 
+  "4037" -> "4043" 
+  "4040" -> "4036" 
+  "4045" -> "4050" 
+  "4048" -> "4044" 
+  "4059" -> "4068" 
+  "4066" -> "4058" 
+  "4071" -> "4070" 
+  "4093" -> "4091" 
   "4095" -> "4094" 
-  "4100" -> "4106" 
-  "4103" -> "4099" 
+  "4103" -> "4101" 
+  "4111" -> "4110" 
+  "4116" -> "4122" 
+  "4119" -> "4115" 
+  "4129" -> "4127" 
+  "4136" -> "4135" 
+  "3958" -> "4145" 
+  "3966" -> "3964" 
+  "3971" -> "4145" 
+  "3975" -> "3973" 
+  "3984" -> "3986" 
+  "3986" -> "3989" 
+  "3989" -> "4145" 
+  "3995" -> "3994" 
+  "4007" -> "4006" 
+  "4016" -> "4021" 
+  "4016" -> "4026" 
+  "4026" -> "4024" 
+  "4031" -> "4035" 
+  "4039" -> "4037" 
+  "4041" -> "4040" 
+  "4047" -> "4045" 
+  "4049" -> "4056" 
+  "4049" -> "4052" 
+  "4052" -> "4048" 
+  "4060" -> "4064" 
+  "4064" -> "4059" 
+  "4067" -> "4066" 
+  "4072" -> "4071" 
+  "4083" -> "4087" 
+  "4104" -> "4103" 
   "4113" -> "4111" 
+  "4118" -> "4116" 
   "4120" -> "4119" 
-  "3942" -> "4129" 
-  "3950" -> "3948" 
-  "3955" -> "4129" 
-  "3959" -> "3957" 
-  "3968" -> "3970" 
-  "3970" -> "3973" 
-  "3973" -> "4129" 
+  "4120" -> "4124" 
+  "4124" -> "4119" 
+  "4138" -> "4136" 
+  "3967" -> "3966" 
+  "3976" -> "3975" 
+  "4009" -> "4007" 
+  "4017" -> "4016" 
+  "4032" -> "4031" 
+  "4043" -> "4041" 
+  "4050" -> "4051" 
+  "4051" -> "4049" 
+  "4055" -> "4052" 
+  "4061" -> "4060" 
+  "4068" -> "4069" 
+  "4069" -> "4067" 
+  "4073" -> "4072" 
+  "4084" -> "4083" 
+  "4105" -> "4109" 
+  "4109" -> "4104" 
+  "4121" -> "4120" 
+  "3968" -> "3969" 
+  "3969" -> "3967" 
+  "3977" -> "3976" 
+  "4018" -> "4022" 
+  "4022" -> "4017" 
+  "4034" -> "4032" 
+  "4056" -> "4057" 
+  "4057" -> "4055" 
+  "4063" -> "4061" 
+  "4074" -> "4078" 
+  "4078" -> "4073" 
+  "4086" -> "4084" 
+  "4106" -> "4105" 
+  "4122" -> "4123" 
+  "4123" -> "4121" 
+  "3978" -> "3982" 
+  "3982" -> "3977" 
+  "4019" -> "4018" 
+  "4075" -> "4074" 
+  "4108" -> "4106" 
   "3979" -> "3978" 
-  "3991" -> "3990" 
-  "4000" -> "4005" 
-  "4000" -> "4010" 
-  "4010" -> "4008" 
-  "4015" -> "4019" 
-  "4023" -> "4021" 
-  "4025" -> "4024" 
-  "4031" -> "4029" 
-  "4033" -> "4040" 
-  "4033" -> "4036" 
-  "4036" -> "4032" 
-  "4044" -> "4048" 
-  "4048" -> "4043" 
-  "4051" -> "4050" 
-  "4056" -> "4055" 
-  "4067" -> "4071" 
-  "4088" -> "4087" 
-  "4097" -> "4095" 
-  "4102" -> "4100" 
-  "4104" -> "4103" 
-  "4104" -> "4108" 
-  "4108" -> "4103" 
-  "4122" -> "4120" 
-  "3951" -> "3950" 
-  "3960" -> "3959" 
-  "3993" -> "3991" 
-  "4001" -> "4000" 
-  "4016" -> "4015" 
-  "4027" -> "4025" 
-  "4034" -> "4035" 
-  "4035" -> "4033" 
-  "4039" -> "4036" 
-  "4045" -> "4044" 
-  "4052" -> "4053" 
-  "4053" -> "4051" 
-  "4057" -> "4056" 
-  "4068" -> "4067" 
-  "4089" -> "4093" 
-  "4093" -> "4088" 
-  "4105" -> "4104" 
-  "3952" -> "3953" 
-  "3953" -> "3951" 
-  "3961" -> "3960" 
-  "4002" -> "4006" 
-  "4006" -> "4001" 
-  "4018" -> "4016" 
-  "4040" -> "4041" 
-  "4041" -> "4039" 
-  "4047" -> "4045" 
-  "4058" -> "4062" 
-  "4062" -> "4057" 
-  "4070" -> "4068" 
-  "4090" -> "4089" 
-  "4106" -> "4107" 
-  "4107" -> "4105" 
-  "3962" -> "3966" 
-  "3966" -> "3961" 
-  "4003" -> "4002" 
-  "4059" -> "4058" 
-  "4092" -> "4090" 
-  "3963" -> "3962" 
-  "4005" -> "4003" 
-  "4060" -> "4061" 
-  "4061" -> "4059" 
-  "3964" -> "3965" 
-  "3965" -> "3963" 
-  "3935" -> "3937" 
+  "4021" -> "4019" 
+  "4076" -> "4077" 
+  "4077" -> "4075" 
+  "3980" -> "3981" 
+  "3981" -> "3979" 
+  "3951" -> "3953" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/147-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/147-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/147-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/147-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,26 +1,26 @@
 digraph "previousFrameFence" {  
-"4133" [label = <(RETURN,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1];,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1];)<SUB>1799</SUB>> ]
-"4134" [label = <(&lt;operator&gt;.conditional,mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1])<SUB>1799</SUB>> ]
-"4135" [label = <(&lt;operator&gt;.greaterThan,mVSyncModulator-&gt;getOffsets().sf &gt; 0)<SUB>1799</SUB>> ]
-"4143" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>1799</SUB>> ]
-"4146" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[1])<SUB>1800</SUB>> ]
-"4136" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator-&gt;getOffsets().sf)<SUB>1799</SUB>> ]
-"4137" [label = <(getOffsets,mVSyncModulator-&gt;getOffsets())<SUB>1799</SUB>> ]
-"4141" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>1799</SUB>> ]
-"4138" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;getOffsets)<SUB>1799</SUB>> ]
-"4140" [label = <(FIELD_IDENTIFIER,getOffsets,getOffsets)<SUB>1799</SUB>> ]
-"4131" [label = <(METHOD,previousFrameFence)<SUB>1795</SUB>> ]
-"4149" [label = <(METHOD_RETURN,sp&lt;Fence&gt;)<SUB>1795</SUB>> ]
-  "4133" -> "4149" 
-  "4134" -> "4133" 
-  "4135" -> "4143" 
-  "4135" -> "4146" 
-  "4143" -> "4134" 
-  "4146" -> "4134" 
-  "4136" -> "4135" 
-  "4137" -> "4141" 
-  "4141" -> "4136" 
-  "4138" -> "4137" 
-  "4140" -> "4138" 
-  "4131" -> "4140" 
+"4149" [label = <(RETURN,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1];,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1];)<SUB>1798</SUB>> ]
+"4150" [label = <(&lt;operator&gt;.conditional,mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? mPreviousPresentFences[0]\012 : mPreviousPresentFences[1])<SUB>1798</SUB>> ]
+"4151" [label = <(&lt;operator&gt;.greaterThan,mVSyncModulator-&gt;getOffsets().sf &gt; 0)<SUB>1798</SUB>> ]
+"4159" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>1798</SUB>> ]
+"4162" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[1])<SUB>1799</SUB>> ]
+"4152" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator-&gt;getOffsets().sf)<SUB>1798</SUB>> ]
+"4153" [label = <(getOffsets,mVSyncModulator-&gt;getOffsets())<SUB>1798</SUB>> ]
+"4157" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>1798</SUB>> ]
+"4154" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;getOffsets)<SUB>1798</SUB>> ]
+"4156" [label = <(FIELD_IDENTIFIER,getOffsets,getOffsets)<SUB>1798</SUB>> ]
+"4147" [label = <(METHOD,previousFrameFence)<SUB>1794</SUB>> ]
+"4165" [label = <(METHOD_RETURN,sp&lt;Fence&gt;)<SUB>1794</SUB>> ]
+  "4149" -> "4165" 
+  "4150" -> "4149" 
+  "4151" -> "4159" 
+  "4151" -> "4162" 
+  "4159" -> "4150" 
+  "4162" -> "4150" 
+  "4152" -> "4151" 
+  "4153" -> "4157" 
+  "4157" -> "4152" 
+  "4154" -> "4153" 
+  "4156" -> "4154" 
+  "4147" -> "4156" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/148-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/148-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/148-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/148-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,34 +1,34 @@
 digraph "previousFramePending" {  
-"4154" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1804</SUB>> ]
-"4156" [label = <(&lt;operator&gt;.assignment,&amp; fence = previousFrameFence())<SUB>1805</SUB>> ]
-"4169" [label = <(&lt;operator&gt;.assignment,status = fence-&gt;wait(graceTimeMs))<SUB>1811</SUB>> ]
-"4176" [label = <(RETURN,return status == -ETIME;,return status == -ETIME;)<SUB>1814</SUB>> ]
-"4158" [label = <(previousFrameFence,previousFrameFence())<SUB>1805</SUB>> ]
-"4160" [label = <(&lt;operator&gt;.equals,fence == Fence::NO_FENCE)<SUB>1807</SUB>> ]
-"4171" [label = <(wait,fence-&gt;wait(graceTimeMs))<SUB>1811</SUB>> ]
-"4177" [label = <(&lt;operator&gt;.equals,status == -ETIME)<SUB>1814</SUB>> ]
-"4162" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>1807</SUB>> ]
-"4166" [label = <(RETURN,return false;,return false;)<SUB>1808</SUB>> ]
-"4172" [label = <(&lt;operator&gt;.indirectFieldAccess,fence-&gt;wait)<SUB>1811</SUB>> ]
-"4179" [label = <(&lt;operator&gt;.minus,-ETIME)<SUB>1814</SUB>> ]
-"4164" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>1807</SUB>> ]
-"4174" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1811</SUB>> ]
-"4151" [label = <(METHOD,previousFramePending)<SUB>1803</SUB>> ]
-"4181" [label = <(METHOD_RETURN,bool)<SUB>1803</SUB>> ]
-  "4154" -> "4158" 
-  "4156" -> "4164" 
-  "4169" -> "4179" 
-  "4176" -> "4181" 
-  "4158" -> "4156" 
-  "4160" -> "4166" 
-  "4160" -> "4174" 
-  "4171" -> "4169" 
-  "4177" -> "4176" 
-  "4162" -> "4160" 
-  "4166" -> "4181" 
-  "4172" -> "4171" 
-  "4179" -> "4177" 
-  "4164" -> "4162" 
+"4170" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1803</SUB>> ]
+"4172" [label = <(&lt;operator&gt;.assignment,&amp; fence = previousFrameFence())<SUB>1804</SUB>> ]
+"4185" [label = <(&lt;operator&gt;.assignment,status = fence-&gt;wait(graceTimeMs))<SUB>1810</SUB>> ]
+"4192" [label = <(RETURN,return status == -ETIME;,return status == -ETIME;)<SUB>1813</SUB>> ]
+"4174" [label = <(previousFrameFence,previousFrameFence())<SUB>1804</SUB>> ]
+"4176" [label = <(&lt;operator&gt;.equals,fence == Fence::NO_FENCE)<SUB>1806</SUB>> ]
+"4187" [label = <(wait,fence-&gt;wait(graceTimeMs))<SUB>1810</SUB>> ]
+"4193" [label = <(&lt;operator&gt;.equals,status == -ETIME)<SUB>1813</SUB>> ]
+"4178" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>1806</SUB>> ]
+"4182" [label = <(RETURN,return false;,return false;)<SUB>1807</SUB>> ]
+"4188" [label = <(&lt;operator&gt;.indirectFieldAccess,fence-&gt;wait)<SUB>1810</SUB>> ]
+"4195" [label = <(&lt;operator&gt;.minus,-ETIME)<SUB>1813</SUB>> ]
+"4180" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>1806</SUB>> ]
+"4190" [label = <(FIELD_IDENTIFIER,wait,wait)<SUB>1810</SUB>> ]
+"4167" [label = <(METHOD,previousFramePending)<SUB>1802</SUB>> ]
+"4197" [label = <(METHOD_RETURN,bool)<SUB>1802</SUB>> ]
+  "4170" -> "4174" 
+  "4172" -> "4180" 
+  "4185" -> "4195" 
+  "4192" -> "4197" 
   "4174" -> "4172" 
-  "4151" -> "4154" 
+  "4176" -> "4182" 
+  "4176" -> "4190" 
+  "4187" -> "4185" 
+  "4193" -> "4192" 
+  "4178" -> "4176" 
+  "4182" -> "4197" 
+  "4188" -> "4187" 
+  "4195" -> "4193" 
+  "4180" -> "4178" 
+  "4190" -> "4188" 
+  "4167" -> "4170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/149-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/149-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/149-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/149-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,30 +1,30 @@
 digraph "previousFramePresentTime" {  
-"4186" [label = <(&lt;operator&gt;.assignment,&amp; fence = previousFrameFence())<SUB>1818</SUB>> ]
-"4200" [label = <(RETURN,return fence-&gt;getSignalTime();,return fence-&gt;getSignalTime();)<SUB>1824</SUB>> ]
-"4188" [label = <(previousFrameFence,previousFrameFence())<SUB>1818</SUB>> ]
-"4190" [label = <(&lt;operator&gt;.equals,fence == Fence::NO_FENCE)<SUB>1820</SUB>> ]
-"4201" [label = <(getSignalTime,fence-&gt;getSignalTime())<SUB>1824</SUB>> ]
-"4192" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>1820</SUB>> ]
-"4196" [label = <(RETURN,return Fence::SIGNAL_TIME_INVALID;,return Fence::SIGNAL_TIME_INVALID;)<SUB>1821</SUB>> ]
-"4202" [label = <(&lt;operator&gt;.indirectFieldAccess,fence-&gt;getSignalTime)<SUB>1824</SUB>> ]
-"4194" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>1820</SUB>> ]
-"4197" [label = <(&lt;operator&gt;.fieldAccess,Fence::SIGNAL_TIME_INVALID)<SUB>1821</SUB>> ]
-"4204" [label = <(FIELD_IDENTIFIER,getSignalTime,getSignalTime)<SUB>1824</SUB>> ]
-"4199" [label = <(FIELD_IDENTIFIER,SIGNAL_TIME_INVALID,SIGNAL_TIME_INVALID)<SUB>1821</SUB>> ]
-"4183" [label = <(METHOD,previousFramePresentTime)<SUB>1817</SUB>> ]
-"4205" [label = <(METHOD_RETURN,nsecs_t)<SUB>1817</SUB>> ]
-  "4186" -> "4194" 
-  "4200" -> "4205" 
-  "4188" -> "4186" 
-  "4190" -> "4199" 
-  "4190" -> "4204" 
-  "4201" -> "4200" 
-  "4192" -> "4190" 
-  "4196" -> "4205" 
-  "4202" -> "4201" 
-  "4194" -> "4192" 
-  "4197" -> "4196" 
+"4202" [label = <(&lt;operator&gt;.assignment,&amp; fence = previousFrameFence())<SUB>1817</SUB>> ]
+"4216" [label = <(RETURN,return fence-&gt;getSignalTime();,return fence-&gt;getSignalTime();)<SUB>1823</SUB>> ]
+"4204" [label = <(previousFrameFence,previousFrameFence())<SUB>1817</SUB>> ]
+"4206" [label = <(&lt;operator&gt;.equals,fence == Fence::NO_FENCE)<SUB>1819</SUB>> ]
+"4217" [label = <(getSignalTime,fence-&gt;getSignalTime())<SUB>1823</SUB>> ]
+"4208" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>1819</SUB>> ]
+"4212" [label = <(RETURN,return Fence::SIGNAL_TIME_INVALID;,return Fence::SIGNAL_TIME_INVALID;)<SUB>1820</SUB>> ]
+"4218" [label = <(&lt;operator&gt;.indirectFieldAccess,fence-&gt;getSignalTime)<SUB>1823</SUB>> ]
+"4210" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>1819</SUB>> ]
+"4213" [label = <(&lt;operator&gt;.fieldAccess,Fence::SIGNAL_TIME_INVALID)<SUB>1820</SUB>> ]
+"4220" [label = <(FIELD_IDENTIFIER,getSignalTime,getSignalTime)<SUB>1823</SUB>> ]
+"4215" [label = <(FIELD_IDENTIFIER,SIGNAL_TIME_INVALID,SIGNAL_TIME_INVALID)<SUB>1820</SUB>> ]
+"4199" [label = <(METHOD,previousFramePresentTime)<SUB>1816</SUB>> ]
+"4221" [label = <(METHOD_RETURN,nsecs_t)<SUB>1816</SUB>> ]
+  "4202" -> "4210" 
+  "4216" -> "4221" 
   "4204" -> "4202" 
-  "4199" -> "4197" 
-  "4183" -> "4188" 
+  "4206" -> "4215" 
+  "4206" -> "4220" 
+  "4217" -> "4216" 
+  "4208" -> "4206" 
+  "4212" -> "4221" 
+  "4218" -> "4217" 
+  "4210" -> "4208" 
+  "4213" -> "4212" 
+  "4220" -> "4218" 
+  "4215" -> "4213" 
+  "4199" -> "4204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/15-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/15-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/15-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/15-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_22" {  
-"70" [label = <(METHOD,anonymous_lambda_22)<SUB>2225</SUB>> ]
-"72" [label = <(METHOD_RETURN,ANY)<SUB>2225</SUB>> ]
+"70" [label = <(METHOD,anonymous_lambda_22)<SUB>2224</SUB>> ]
+"72" [label = <(METHOD_RETURN,ANY)<SUB>2224</SUB>> ]
   "70" -> "72" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/150-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/150-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/150-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/150-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,44 +1,44 @@
 digraph "calculateExpectedPresentTime" {  
-"4211" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>1829</SUB>> ]
-"4218" [label = <(&lt;operator&gt;.assignment,presentTime = mScheduler-&gt;getDispSyncExpectedPresentTime(now))<SUB>1830</SUB>> ]
-"4225" [label = <(RETURN,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod;,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod;)<SUB>1832</SUB>> ]
-"4212" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>1829</SUB>> ]
-"4215" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>1829</SUB>> ]
-"4220" [label = <(getDispSyncExpectedPresentTime,mScheduler-&gt;getDispSyncExpectedPresentTime(now))<SUB>1830</SUB>> ]
-"4226" [label = <(&lt;operator&gt;.conditional,mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod)<SUB>1832</SUB>> ]
-"4214" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>1829</SUB>> ]
-"4221" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDispSyncExpectedPresentTime)<SUB>1830</SUB>> ]
-"4227" [label = <(&lt;operator&gt;.greaterThan,mVSyncModulator-&gt;getOffsets().sf &gt; 0)<SUB>1832</SUB>> ]
-"4236" [label = <(&lt;operator&gt;.addition,presentTime + stats.vsyncPeriod)<SUB>1832</SUB>> ]
-"4223" [label = <(FIELD_IDENTIFIER,getDispSyncExpectedPresentTime,getDispSyncExpectedPresentTime)<SUB>1830</SUB>> ]
-"4228" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator-&gt;getOffsets().sf)<SUB>1832</SUB>> ]
-"4238" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>1832</SUB>> ]
-"4229" [label = <(getOffsets,mVSyncModulator-&gt;getOffsets())<SUB>1832</SUB>> ]
-"4233" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>1832</SUB>> ]
-"4240" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>1832</SUB>> ]
-"4230" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;getOffsets)<SUB>1832</SUB>> ]
-"4232" [label = <(FIELD_IDENTIFIER,getOffsets,getOffsets)<SUB>1832</SUB>> ]
-"4207" [label = <(METHOD,calculateExpectedPresentTime)<SUB>1827</SUB>> ]
-"4241" [label = <(METHOD_RETURN,nsecs_t)<SUB>1827</SUB>> ]
-  "4211" -> "4223" 
-  "4218" -> "4232" 
-  "4225" -> "4241" 
-  "4212" -> "4215" 
-  "4215" -> "4211" 
-  "4220" -> "4218" 
-  "4226" -> "4225" 
-  "4214" -> "4212" 
-  "4221" -> "4220" 
-  "4227" -> "4226" 
-  "4227" -> "4240" 
-  "4236" -> "4226" 
-  "4223" -> "4221" 
-  "4228" -> "4227" 
-  "4238" -> "4236" 
-  "4229" -> "4233" 
-  "4233" -> "4228" 
-  "4240" -> "4238" 
-  "4230" -> "4229" 
-  "4232" -> "4230" 
-  "4207" -> "4214" 
+"4227" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>1828</SUB>> ]
+"4234" [label = <(&lt;operator&gt;.assignment,presentTime = mScheduler-&gt;getDispSyncExpectedPresentTime(now))<SUB>1829</SUB>> ]
+"4241" [label = <(RETURN,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod;,return mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod;)<SUB>1831</SUB>> ]
+"4228" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>1828</SUB>> ]
+"4231" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>1828</SUB>> ]
+"4236" [label = <(getDispSyncExpectedPresentTime,mScheduler-&gt;getDispSyncExpectedPresentTime(now))<SUB>1829</SUB>> ]
+"4242" [label = <(&lt;operator&gt;.conditional,mVSyncModulator-&gt;getOffsets().sf &gt; 0 ? presentTime : presentTime + stats.vsyncPeriod)<SUB>1831</SUB>> ]
+"4230" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>1828</SUB>> ]
+"4237" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDispSyncExpectedPresentTime)<SUB>1829</SUB>> ]
+"4243" [label = <(&lt;operator&gt;.greaterThan,mVSyncModulator-&gt;getOffsets().sf &gt; 0)<SUB>1831</SUB>> ]
+"4252" [label = <(&lt;operator&gt;.addition,presentTime + stats.vsyncPeriod)<SUB>1831</SUB>> ]
+"4239" [label = <(FIELD_IDENTIFIER,getDispSyncExpectedPresentTime,getDispSyncExpectedPresentTime)<SUB>1829</SUB>> ]
+"4244" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator-&gt;getOffsets().sf)<SUB>1831</SUB>> ]
+"4254" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>1831</SUB>> ]
+"4245" [label = <(getOffsets,mVSyncModulator-&gt;getOffsets())<SUB>1831</SUB>> ]
+"4249" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>1831</SUB>> ]
+"4256" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>1831</SUB>> ]
+"4246" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;getOffsets)<SUB>1831</SUB>> ]
+"4248" [label = <(FIELD_IDENTIFIER,getOffsets,getOffsets)<SUB>1831</SUB>> ]
+"4223" [label = <(METHOD,calculateExpectedPresentTime)<SUB>1826</SUB>> ]
+"4257" [label = <(METHOD_RETURN,nsecs_t)<SUB>1826</SUB>> ]
+  "4227" -> "4239" 
+  "4234" -> "4248" 
+  "4241" -> "4257" 
+  "4228" -> "4231" 
+  "4231" -> "4227" 
+  "4236" -> "4234" 
+  "4242" -> "4241" 
+  "4230" -> "4228" 
+  "4237" -> "4236" 
+  "4243" -> "4242" 
+  "4243" -> "4256" 
+  "4252" -> "4242" 
+  "4239" -> "4237" 
+  "4244" -> "4243" 
+  "4254" -> "4252" 
+  "4245" -> "4249" 
+  "4249" -> "4244" 
+  "4256" -> "4254" 
+  "4246" -> "4245" 
+  "4248" -> "4246" 
+  "4223" -> "4230" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/151-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/151-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/151-cfg.dot	2023-06-07 19:33:00.347398987 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/151-cfg.dot	2023-06-07 19:33:06.587398413 +0330
@@ -1,21 +1,21 @@
 digraph "onMessageReceived" {  
-"4247" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1836</SUB>> ]
-"4252" [label = <(&lt;operator&gt;.fieldAccess,MessageQueue::INVALIDATE)<SUB>1838</SUB>> ]
-"4260" [label = <(&lt;operator&gt;.fieldAccess,MessageQueue::REFRESH)<SUB>1842</SUB>> ]
-"4254" [label = <(FIELD_IDENTIFIER,INVALIDATE,INVALIDATE)<SUB>1838</SUB>> ]
-"4256" [label = <(onMessageInvalidate,onMessageInvalidate(expectedVSyncTime))<SUB>1839</SUB>> ]
-"4262" [label = <(FIELD_IDENTIFIER,REFRESH,REFRESH)<SUB>1842</SUB>> ]
-"4264" [label = <(onMessageRefresh,onMessageRefresh())<SUB>1843</SUB>> ]
-"4243" [label = <(METHOD,onMessageReceived)<SUB>1835</SUB>> ]
-"4266" [label = <(METHOD_RETURN,void)<SUB>1835</SUB>> ]
-  "4247" -> "4266" 
-  "4247" -> "4254" 
-  "4247" -> "4262" 
-  "4252" -> "4256" 
-  "4260" -> "4264" 
-  "4254" -> "4252" 
-  "4256" -> "4266" 
-  "4262" -> "4260" 
-  "4264" -> "4266" 
-  "4243" -> "4247" 
+"4263" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1835</SUB>> ]
+"4268" [label = <(&lt;operator&gt;.fieldAccess,MessageQueue::INVALIDATE)<SUB>1837</SUB>> ]
+"4276" [label = <(&lt;operator&gt;.fieldAccess,MessageQueue::REFRESH)<SUB>1841</SUB>> ]
+"4270" [label = <(FIELD_IDENTIFIER,INVALIDATE,INVALIDATE)<SUB>1837</SUB>> ]
+"4272" [label = <(onMessageInvalidate,onMessageInvalidate(expectedVSyncTime))<SUB>1838</SUB>> ]
+"4278" [label = <(FIELD_IDENTIFIER,REFRESH,REFRESH)<SUB>1841</SUB>> ]
+"4280" [label = <(onMessageRefresh,onMessageRefresh())<SUB>1842</SUB>> ]
+"4259" [label = <(METHOD,onMessageReceived)<SUB>1834</SUB>> ]
+"4282" [label = <(METHOD_RETURN,void)<SUB>1834</SUB>> ]
+  "4263" -> "4282" 
+  "4263" -> "4270" 
+  "4263" -> "4278" 
+  "4268" -> "4272" 
+  "4276" -> "4280" 
+  "4270" -> "4268" 
+  "4272" -> "4282" 
+  "4278" -> "4276" 
+  "4280" -> "4282" 
+  "4259" -> "4263" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/152-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/152-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/152-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/152-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,364 +1,364 @@
 digraph "onMessageInvalidate" {  
-"4271" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1850</SUB>> ]
-"4273" [label = <(&lt;operator&gt;.assignment,frameStart = systemTime())<SUB>1852</SUB>> ]
-"4277" [label = <(&lt;operator&gt;.assignment,lastExpectedPresentTime = mExpectedPresentTime.load())<SUB>1856</SUB>> ]
-"4283" [label = <(&lt;operator&gt;.assignment,mExpectedPresentTime = expectedVSyncTime)<SUB>1857</SUB>> ]
-"4287" [label = <(&lt;operator&gt;.assignment,graceTimeForPresentFenceMs =\012 (mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))\012 ? 1\012 : 0)<SUB>1862</SUB>> ]
-"4299" [label = <(&lt;operator&gt;.assignment,framePending = {&quot;PrevFramePending&quot;,\012                                              previousFramePending(graceTimeForPresentFenceMs)})<SUB>1869</SUB>> ]
-"4306" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>1881</SUB>> ]
-"4313" [label = <(&lt;operator&gt;.assignment,frameMissedSlop = stats.vsyncPeriod / 2)<SUB>1882</SUB>> ]
-"4321" [label = <(&lt;operator&gt;.assignment,previousPresentTime = previousFramePresentTime())<SUB>1883</SUB>> ]
-"4325" [label = <(&lt;operator&gt;.assignment,frameMissed = {&quot;PrevFrameMissed&quot;,\012                                             framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))})<SUB>1884</SUB>> ]
-"4341" [label = <(&lt;operator&gt;.assignment,hwcFrameMissed = {&quot;PrevHwcFrameMissed&quot;,\012                                                mHadDeviceComposition &amp;&amp; frameMissed})<SUB>1889</SUB>> ]
-"4349" [label = <(&lt;operator&gt;.assignment,gpuFrameMissed = {&quot;PrevGpuFrameMissed&quot;,\012                                                mHadClientComposition &amp;&amp; frameMissed})<SUB>1891</SUB>> ]
-"4419" [label = <(&lt;operator&gt;.assignment,kMinJankyDuration =\012            std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(100ms).count())<SUB>1934</SUB>> ]
-"4438" [label = <(&lt;operator&gt;.assignment,kMaxJankyDuration =\012            std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(1s).count())<SUB>1937</SUB>> ]
-"4457" [label = <(&lt;operator&gt;.assignment,jankDurationToUpload = -1)<SUB>1939</SUB>> ]
-"4523" [label = <(updateVrFlinger,updateVrFlinger())<SUB>1966</SUB>> ]
-"4584" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(performSetActiveConfig()))<SUB>1997</SUB>> ]
-"4588" [label = <(updateCursorAsync,updateCursorAsync())<SUB>1999</SUB>> ]
-"4589" [label = <(updateInputFlinger,updateInputFlinger())<SUB>2000</SUB>> ]
-"4590" [label = <(&lt;operators&gt;.assignmentOr,refreshNeeded |= mRepaintEverything)<SUB>2002</SUB>> ]
-"4275" [label = <(systemTime,systemTime())<SUB>1852</SUB>> ]
-"4279" [label = <(load,mExpectedPresentTime.load())<SUB>1856</SUB>> ]
-"4289" [label = <(&lt;operator&gt;.conditional,(mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))\012 ? 1\012 : 0)<SUB>1863</SUB>> ]
-"4301" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevFramePending&quot;,\012                                              previousFramePending(graceTimeForPresentFenceMs)})<SUB>1869</SUB>> ]
-"4307" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>1881</SUB>> ]
-"4310" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>1881</SUB>> ]
-"4315" [label = <(&lt;operator&gt;.division,stats.vsyncPeriod / 2)<SUB>1882</SUB>> ]
-"4323" [label = <(previousFramePresentTime,previousFramePresentTime())<SUB>1883</SUB>> ]
-"4327" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevFrameMissed&quot;,\012                                             framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))})<SUB>1884</SUB>> ]
-"4343" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevHwcFrameMissed&quot;,\012                                                mHadDeviceComposition &amp;&amp; frameMissed})<SUB>1889</SUB>> ]
-"4351" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevGpuFrameMissed&quot;,\012                                                mHadClientComposition &amp;&amp; frameMissed})<SUB>1891</SUB>> ]
-"4404" [label = <(&lt;operator&gt;.logicalAnd,framePending &amp;&amp; mPropagateBackpressure)<SUB>1925</SUB>> ]
-"4421" [label = <(&lt;operator&gt;.greaterThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(100ms).count())<SUB>1935</SUB>> ]
-"4440" [label = <(&lt;operator&gt;.greaterThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(1s).count())<SUB>1938</SUB>> ]
-"4459" [label = <(&lt;operator&gt;.minus,-1)<SUB>1939</SUB>> ]
-"4462" [label = <(&lt;operator&gt;.logicalAnd,!mIsUserBuild &amp;&amp; mMissedFrameJankCount &gt; 0)<SUB>1941</SUB>> ]
-"4538" [label = <(&lt;operator&gt;.greaterThan,ConditionalLockGuard&lt;std::mutex&gt; lock(mTracingLock, mTracingEnabled))<SUB>1975</SUB>> ]
-"4547" [label = <(&lt;operator&gt;.assignment,refreshNeeded = handleMessageTransaction())<SUB>1977</SUB>> ]
-"4550" [label = <(&lt;operators&gt;.assignmentOr,refreshNeeded |= handleMessageInvalidate())<SUB>1978</SUB>> ]
-"4578" [label = <(_l,_l(mStateLock))<SUB>1993</SUB>> ]
-"4580" [label = <(chooseRefreshRateForContent,mScheduler-&gt;chooseRefreshRateForContent())<SUB>1994</SUB>> ]
-"4594" [label = <(&lt;operator&gt;.logicalAnd,refreshNeeded &amp;&amp; CC_LIKELY(mBootStage != BootStage::BOOTLOADER))<SUB>2003</SUB>> ]
-"4280" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>1856</SUB>> ]
-"4290" [label = <(&lt;operator&gt;.logicalAnd,mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))<SUB>1863</SUB>> ]
-"4303" [label = <(previousFramePending,previousFramePending(graceTimeForPresentFenceMs))<SUB>1870</SUB>> ]
-"4309" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>1881</SUB>> ]
-"4316" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>1882</SUB>> ]
-"4329" [label = <(&lt;operator&gt;.logicalOr,framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop)))<SUB>1885</SUB>> ]
-"4345" [label = <(&lt;operator&gt;.logicalAnd,mHadDeviceComposition &amp;&amp; frameMissed)<SUB>1890</SUB>> ]
-"4353" [label = <(&lt;operator&gt;.logicalAnd,mHadClientComposition &amp;&amp; frameMissed)<SUB>1892</SUB>> ]
-"4359" [label = <(&lt;operator&gt;.postIncrement,mFrameMissedCount++)<SUB>1895</SUB>> ]
-"4361" [label = <(incrementMissedFrames,mTimeStats-&gt;incrementMissedFrames())<SUB>1896</SUB>> ]
-"4373" [label = <(&lt;operator&gt;.postIncrement,mMissedFrameJankCount++)<SUB>1900</SUB>> ]
-"4378" [label = <(&lt;operator&gt;.postIncrement,mHwcFrameMissedCount++)<SUB>1904</SUB>> ]
-"4383" [label = <(&lt;operator&gt;.postIncrement,mGpuFrameMissedCount++)<SUB>1908</SUB>> ]
-"4396" [label = <(&lt;operator&gt;.assignment,mSetActiveConfigPending = false)<SUB>1921</SUB>> ]
-"4399" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(setActiveConfigInternal()))<SUB>1922</SUB>> ]
-"4422" [label = <(&lt;operator&gt;.lessThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds)<SUB>1935</SUB>> ]
-"4433" [label = <(count,(100ms).count())<SUB>1935</SUB>> ]
-"4441" [label = <(&lt;operator&gt;.lessThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds)<SUB>1938</SUB>> ]
-"4452" [label = <(count,(1s).count())<SUB>1938</SUB>> ]
-"4463" [label = <(&lt;operator&gt;.logicalNot,!mIsUserBuild)<SUB>1941</SUB>> ]
-"4465" [label = <(&lt;operator&gt;.greaterThan,mMissedFrameJankCount &gt; 0)<SUB>1941</SUB>> ]
-"4470" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>1942</SUB>> ]
-"4527" [label = <(&lt;operator&gt;.assignment,mTracingEnabled = mTracing.isEnabled())<SUB>1969</SUB>> ]
-"4533" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = false)<SUB>1970</SUB>> ]
-"4539" [label = <(&lt;operator&gt;.lessThan,ConditionalLockGuard&lt;std::mutex)<SUB>1975</SUB>> ]
-"4544" [label = <(lock,lock(mTracingLock, mTracingEnabled))<SUB>1975</SUB>> ]
-"4549" [label = <(handleMessageTransaction,handleMessageTransaction())<SUB>1977</SUB>> ]
-"4552" [label = <(handleMessageInvalidate,handleMessageInvalidate())<SUB>1978</SUB>> ]
-"4581" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;chooseRefreshRateForContent)<SUB>1994</SUB>> ]
-"4586" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_16,())<SUB>1997</SUB>> ]
-"4596" [label = <(CC_LIKELY,CC_LIKELY(mBootStage != BootStage::BOOTLOADER))<SUB>2003</SUB>> ]
-"4603" [label = <(&lt;operator&gt;.assignment,mLastJankDuration = jankDurationToUpload)<SUB>2004</SUB>> ]
-"4614" [label = <(signalRefresh,signalRefresh())<SUB>2015</SUB>> ]
-"4282" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1856</SUB>> ]
-"4292" [label = <(&lt;operator&gt;.logicalOr,mPropagateBackpressureClientComposition || !mHadClientComposition)<SUB>1864</SUB>> ]
-"4318" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>1882</SUB>> ]
-"4331" [label = <(&lt;operator&gt;.logicalAnd,previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))<SUB>1886</SUB>> ]
-"4362" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementMissedFrames)<SUB>1896</SUB>> ]
-"4366" [label = <(&lt;operator&gt;.equals,mMissedFrameJankCount == 0)<SUB>1897</SUB>> ]
-"4409" [label = <(&lt;operator&gt;.logicalOr,(hwcFrameMissed &amp;&amp; !gpuFrameMissed) || mPropagateBackpressureClientComposition)<SUB>1926</SUB>> ]
-"4423" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::duration_cast)<SUB>1935</SUB>> ]
-"4428" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::nanoseconds)<SUB>1935</SUB>> ]
-"4434" [label = <(&lt;operator&gt;.fieldAccess,(100ms).count)<SUB>1935</SUB>> ]
-"4442" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::duration_cast)<SUB>1938</SUB>> ]
-"4447" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::nanoseconds)<SUB>1938</SUB>> ]
-"4453" [label = <(&lt;operator&gt;.fieldAccess,(1s).count)<SUB>1938</SUB>> ]
-"4472" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>1942</SUB>> ]
-"4477" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>1947</SUB>> ]
-"4529" [label = <(isEnabled,mTracing.isEnabled())<SUB>1969</SUB>> ]
-"4541" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1975</SUB>> ]
-"4556" [label = <(&lt;operator&gt;.assignment,mAddCompositionStateToTrace =\012                    mTracing.flagIsSetLocked(SurfaceTracing::TRACE_COMPOSITION))<SUB>1980</SUB>> ]
-"4583" [label = <(FIELD_IDENTIFIER,chooseRefreshRateForContent,chooseRefreshRateForContent)<SUB>1994</SUB>> ]
-"4587" [label = <(METHOD_REF,ANY anonymous_lambda_16 (),())<SUB>1997</SUB>> ]
-"4597" [label = <(&lt;operator&gt;.notEquals,mBootStage != BootStage::BOOTLOADER)<SUB>2003</SUB>> ]
-"4607" [label = <(&lt;operator&gt;.lessEqualsThan,mFrameStartTime &lt;= 0)<SUB>2008</SUB>> ]
-"4294" [label = <(&lt;operator&gt;.logicalNot,!mHadClientComposition)<SUB>1864</SUB>> ]
-"4332" [label = <(&lt;operator&gt;.greaterEqualsThan,previousPresentTime &gt;= 0)<SUB>1886</SUB>> ]
-"4335" [label = <(&lt;operator&gt;.lessThan,lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop)<SUB>1887</SUB>> ]
-"4364" [label = <(FIELD_IDENTIFIER,incrementMissedFrames,incrementMissedFrames)<SUB>1896</SUB>> ]
-"4370" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankStart = systemTime())<SUB>1898</SUB>> ]
-"4391" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1915</SUB>> ]
-"4395" [label = <(RETURN,return;,return;)<SUB>1916</SUB>> ]
-"4401" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_14,())<SUB>1922</SUB>> ]
-"4410" [label = <(&lt;operator&gt;.logicalAnd,hwcFrameMissed &amp;&amp; !gpuFrameMissed)<SUB>1926</SUB>> ]
-"4416" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>1927</SUB>> ]
-"4417" [label = <(RETURN,return;,return;)<SUB>1928</SUB>> ]
-"4424" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1935</SUB>> ]
-"4427" [label = <(FIELD_IDENTIFIER,duration_cast,duration_cast)<SUB>1935</SUB>> ]
-"4429" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1935</SUB>> ]
-"4432" [label = <(FIELD_IDENTIFIER,nanoseconds,nanoseconds)<SUB>1935</SUB>> ]
-"4436" [label = <(FIELD_IDENTIFIER,count,count)<SUB>1935</SUB>> ]
-"4443" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1938</SUB>> ]
-"4446" [label = <(FIELD_IDENTIFIER,duration_cast,duration_cast)<SUB>1938</SUB>> ]
-"4448" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1938</SUB>> ]
-"4451" [label = <(FIELD_IDENTIFIER,nanoseconds,nanoseconds)<SUB>1938</SUB>> ]
-"4455" [label = <(FIELD_IDENTIFIER,count,count)<SUB>1938</SUB>> ]
-"4479" [label = <(&lt;operator&gt;.equals,display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>1947</SUB>> ]
-"4491" [label = <(&lt;operator&gt;.assignment,currentTime = systemTime())<SUB>1948</SUB>> ]
-"4495" [label = <(&lt;operator&gt;.assignment,jankDuration = currentTime - mMissedFrameJankStart)<SUB>1949</SUB>> ]
-"4530" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>1969</SUB>> ]
-"4543" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1975</SUB>> ]
-"4558" [label = <(flagIsSetLocked,mTracing.flagIsSetLocked(SurfaceTracing::TRACE_COMPOSITION))<SUB>1981</SUB>> ]
-"4566" [label = <(&lt;operator&gt;.logicalAnd,mVisibleRegionsDirty &amp;&amp; !mAddCompositionStateToTrace)<SUB>1982</SUB>> ]
-"4599" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTLOADER)<SUB>2003</SUB>> ]
-"4611" [label = <(&lt;operator&gt;.assignment,mFrameStartTime = frameStart)<SUB>2013</SUB>> ]
-"4337" [label = <(&lt;operator&gt;.subtraction,previousPresentTime - frameMissedSlop)<SUB>1888</SUB>> ]
-"4372" [label = <(systemTime,systemTime())<SUB>1898</SUB>> ]
-"4392" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1915</SUB>> ]
-"4402" [label = <(METHOD_REF,ANY anonymous_lambda_14 (),())<SUB>1922</SUB>> ]
-"4412" [label = <(&lt;operator&gt;.logicalNot,!gpuFrameMissed)<SUB>1926</SUB>> ]
-"4474" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_15,())<SUB>1942</SUB>> ]
-"4480" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>1947</SUB>> ]
-"4484" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>1947</SUB>> ]
-"4493" [label = <(systemTime,systemTime())<SUB>1948</SUB>> ]
-"4497" [label = <(&lt;operator&gt;.subtraction,currentTime - mMissedFrameJankStart)<SUB>1949</SUB>> ]
-"4501" [label = <(&lt;operator&gt;.logicalAnd,jankDuration &gt; kMinJankyDuration &amp;&amp; jankDuration &lt; kMaxJankyDuration)<SUB>1950</SUB>> ]
-"4513" [label = <(&lt;operator&gt;.greaterThan,jankDuration &gt; kMinJankyDuration)<SUB>1956</SUB>> ]
-"4532" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>1969</SUB>> ]
-"4559" [label = <(&lt;operator&gt;.fieldAccess,mTracing.flagIsSetLocked)<SUB>1981</SUB>> ]
-"4562" [label = <(&lt;operator&gt;.fieldAccess,SurfaceTracing::TRACE_COMPOSITION)<SUB>1981</SUB>> ]
-"4568" [label = <(&lt;operator&gt;.logicalNot,!mAddCompositionStateToTrace)<SUB>1982</SUB>> ]
-"4571" [label = <(notifyLocked,mTracing.notifyLocked(&quot;visibleRegionsDirty&quot;))<SUB>1983</SUB>> ]
-"4601" [label = <(FIELD_IDENTIFIER,BOOTLOADER,BOOTLOADER)<SUB>2003</SUB>> ]
-"4394" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1915</SUB>> ]
-"4475" [label = <(METHOD_REF,ANY anonymous_lambda_15 (),())<SUB>1942</SUB>> ]
-"4481" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>1947</SUB>> ]
-"4485" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>1947</SUB>> ]
-"4488" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>1947</SUB>> ]
-"4502" [label = <(&lt;operator&gt;.greaterThan,jankDuration &gt; kMinJankyDuration)<SUB>1950</SUB>> ]
-"4505" [label = <(&lt;operator&gt;.lessThan,jankDuration &lt; kMaxJankyDuration)<SUB>1950</SUB>> ]
-"4509" [label = <(&lt;operator&gt;.assignment,jankDurationToUpload = jankDuration)<SUB>1951</SUB>> ]
-"4517" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankCount = 0)<SUB>1957</SUB>> ]
-"4520" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankStart = 0)<SUB>1958</SUB>> ]
-"4561" [label = <(FIELD_IDENTIFIER,flagIsSetLocked,flagIsSetLocked)<SUB>1981</SUB>> ]
-"4564" [label = <(FIELD_IDENTIFIER,TRACE_COMPOSITION,TRACE_COMPOSITION)<SUB>1981</SUB>> ]
-"4572" [label = <(&lt;operator&gt;.fieldAccess,mTracing.notifyLocked)<SUB>1983</SUB>> ]
-"4483" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>1947</SUB>> ]
-"4574" [label = <(FIELD_IDENTIFIER,notifyLocked,notifyLocked)<SUB>1983</SUB>> ]
-"4268" [label = <(METHOD,onMessageInvalidate)<SUB>1849</SUB>> ]
-"4615" [label = <(METHOD_RETURN,void)<SUB>1849</SUB>> ]
-  "4271" -> "4275" 
-  "4273" -> "4282" 
-  "4277" -> "4283" 
-  "4283" -> "4290" 
-  "4283" -> "4292" 
-  "4283" -> "4294" 
-  "4287" -> "4303" 
-  "4299" -> "4309" 
-  "4306" -> "4318" 
-  "4313" -> "4323" 
-  "4321" -> "4329" 
-  "4321" -> "4332" 
-  "4325" -> "4345" 
-  "4341" -> "4353" 
-  "4349" -> "4359" 
-  "4349" -> "4378" 
-  "4349" -> "4383" 
-  "4349" -> "4394" 
-  "4349" -> "4396" 
-  "4349" -> "4404" 
-  "4419" -> "4443" 
-  "4438" -> "4459" 
-  "4457" -> "4463" 
-  "4523" -> "4532" 
-  "4523" -> "4543" 
-  "4584" -> "4587" 
-  "4584" -> "4588" 
-  "4588" -> "4589" 
-  "4589" -> "4590" 
-  "4590" -> "4594" 
-  "4590" -> "4601" 
-  "4275" -> "4273" 
-  "4279" -> "4277" 
-  "4289" -> "4287" 
-  "4301" -> "4299" 
-  "4307" -> "4310" 
-  "4310" -> "4306" 
-  "4315" -> "4313" 
-  "4323" -> "4321" 
-  "4327" -> "4325" 
+"4287" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>1849</SUB>> ]
+"4289" [label = <(&lt;operator&gt;.assignment,frameStart = systemTime())<SUB>1851</SUB>> ]
+"4293" [label = <(&lt;operator&gt;.assignment,lastExpectedPresentTime = mExpectedPresentTime.load())<SUB>1855</SUB>> ]
+"4299" [label = <(&lt;operator&gt;.assignment,mExpectedPresentTime = expectedVSyncTime)<SUB>1856</SUB>> ]
+"4303" [label = <(&lt;operator&gt;.assignment,graceTimeForPresentFenceMs =\012 (mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))\012 ? 1\012 : 0)<SUB>1861</SUB>> ]
+"4315" [label = <(&lt;operator&gt;.assignment,framePending = {&quot;PrevFramePending&quot;,\012                                              previousFramePending(graceTimeForPresentFenceMs)})<SUB>1868</SUB>> ]
+"4322" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>1880</SUB>> ]
+"4329" [label = <(&lt;operator&gt;.assignment,frameMissedSlop = stats.vsyncPeriod / 2)<SUB>1881</SUB>> ]
+"4337" [label = <(&lt;operator&gt;.assignment,previousPresentTime = previousFramePresentTime())<SUB>1882</SUB>> ]
+"4341" [label = <(&lt;operator&gt;.assignment,frameMissed = {&quot;PrevFrameMissed&quot;,\012                                             framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))})<SUB>1883</SUB>> ]
+"4357" [label = <(&lt;operator&gt;.assignment,hwcFrameMissed = {&quot;PrevHwcFrameMissed&quot;,\012                                                mHadDeviceComposition &amp;&amp; frameMissed})<SUB>1888</SUB>> ]
+"4365" [label = <(&lt;operator&gt;.assignment,gpuFrameMissed = {&quot;PrevGpuFrameMissed&quot;,\012                                                mHadClientComposition &amp;&amp; frameMissed})<SUB>1890</SUB>> ]
+"4435" [label = <(&lt;operator&gt;.assignment,kMinJankyDuration =\012            std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(100ms).count())<SUB>1933</SUB>> ]
+"4454" [label = <(&lt;operator&gt;.assignment,kMaxJankyDuration =\012            std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(1s).count())<SUB>1936</SUB>> ]
+"4473" [label = <(&lt;operator&gt;.assignment,jankDurationToUpload = -1)<SUB>1938</SUB>> ]
+"4539" [label = <(updateVrFlinger,updateVrFlinger())<SUB>1965</SUB>> ]
+"4600" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(performSetActiveConfig()))<SUB>1996</SUB>> ]
+"4604" [label = <(updateCursorAsync,updateCursorAsync())<SUB>1998</SUB>> ]
+"4605" [label = <(updateInputFlinger,updateInputFlinger())<SUB>1999</SUB>> ]
+"4606" [label = <(&lt;operators&gt;.assignmentOr,refreshNeeded |= mRepaintEverything)<SUB>2001</SUB>> ]
+"4291" [label = <(systemTime,systemTime())<SUB>1851</SUB>> ]
+"4295" [label = <(load,mExpectedPresentTime.load())<SUB>1855</SUB>> ]
+"4305" [label = <(&lt;operator&gt;.conditional,(mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))\012 ? 1\012 : 0)<SUB>1862</SUB>> ]
+"4317" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevFramePending&quot;,\012                                              previousFramePending(graceTimeForPresentFenceMs)})<SUB>1868</SUB>> ]
+"4323" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>1880</SUB>> ]
+"4326" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>1880</SUB>> ]
+"4331" [label = <(&lt;operator&gt;.division,stats.vsyncPeriod / 2)<SUB>1881</SUB>> ]
+"4339" [label = <(previousFramePresentTime,previousFramePresentTime())<SUB>1882</SUB>> ]
+"4343" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevFrameMissed&quot;,\012                                             framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))})<SUB>1883</SUB>> ]
+"4359" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevHwcFrameMissed&quot;,\012                                                mHadDeviceComposition &amp;&amp; frameMissed})<SUB>1888</SUB>> ]
+"4367" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;PrevGpuFrameMissed&quot;,\012                                                mHadClientComposition &amp;&amp; frameMissed})<SUB>1890</SUB>> ]
+"4420" [label = <(&lt;operator&gt;.logicalAnd,framePending &amp;&amp; mPropagateBackpressure)<SUB>1924</SUB>> ]
+"4437" [label = <(&lt;operator&gt;.greaterThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(100ms).count())<SUB>1934</SUB>> ]
+"4456" [label = <(&lt;operator&gt;.greaterThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(1s).count())<SUB>1937</SUB>> ]
+"4475" [label = <(&lt;operator&gt;.minus,-1)<SUB>1938</SUB>> ]
+"4478" [label = <(&lt;operator&gt;.logicalAnd,!mIsUserBuild &amp;&amp; mMissedFrameJankCount &gt; 0)<SUB>1940</SUB>> ]
+"4554" [label = <(&lt;operator&gt;.greaterThan,ConditionalLockGuard&lt;std::mutex&gt; lock(mTracingLock, mTracingEnabled))<SUB>1974</SUB>> ]
+"4563" [label = <(&lt;operator&gt;.assignment,refreshNeeded = handleMessageTransaction())<SUB>1976</SUB>> ]
+"4566" [label = <(&lt;operators&gt;.assignmentOr,refreshNeeded |= handleMessageInvalidate())<SUB>1977</SUB>> ]
+"4594" [label = <(_l,_l(mStateLock))<SUB>1992</SUB>> ]
+"4596" [label = <(chooseRefreshRateForContent,mScheduler-&gt;chooseRefreshRateForContent())<SUB>1993</SUB>> ]
+"4610" [label = <(&lt;operator&gt;.logicalAnd,refreshNeeded &amp;&amp; CC_LIKELY(mBootStage != BootStage::BOOTLOADER))<SUB>2002</SUB>> ]
+"4296" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>1855</SUB>> ]
+"4306" [label = <(&lt;operator&gt;.logicalAnd,mPropagateBackpressure &amp;&amp;\012 (mPropagateBackpressureClientComposition || !mHadClientComposition))<SUB>1862</SUB>> ]
+"4319" [label = <(previousFramePending,previousFramePending(graceTimeForPresentFenceMs))<SUB>1869</SUB>> ]
+"4325" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>1880</SUB>> ]
+"4332" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>1881</SUB>> ]
+"4345" [label = <(&lt;operator&gt;.logicalOr,framePending ||\012 (previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop)))<SUB>1884</SUB>> ]
+"4361" [label = <(&lt;operator&gt;.logicalAnd,mHadDeviceComposition &amp;&amp; frameMissed)<SUB>1889</SUB>> ]
+"4369" [label = <(&lt;operator&gt;.logicalAnd,mHadClientComposition &amp;&amp; frameMissed)<SUB>1891</SUB>> ]
+"4375" [label = <(&lt;operator&gt;.postIncrement,mFrameMissedCount++)<SUB>1894</SUB>> ]
+"4377" [label = <(incrementMissedFrames,mTimeStats-&gt;incrementMissedFrames())<SUB>1895</SUB>> ]
+"4389" [label = <(&lt;operator&gt;.postIncrement,mMissedFrameJankCount++)<SUB>1899</SUB>> ]
+"4394" [label = <(&lt;operator&gt;.postIncrement,mHwcFrameMissedCount++)<SUB>1903</SUB>> ]
+"4399" [label = <(&lt;operator&gt;.postIncrement,mGpuFrameMissedCount++)<SUB>1907</SUB>> ]
+"4412" [label = <(&lt;operator&gt;.assignment,mSetActiveConfigPending = false)<SUB>1920</SUB>> ]
+"4415" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(setActiveConfigInternal()))<SUB>1921</SUB>> ]
+"4438" [label = <(&lt;operator&gt;.lessThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds)<SUB>1934</SUB>> ]
+"4449" [label = <(count,(100ms).count())<SUB>1934</SUB>> ]
+"4457" [label = <(&lt;operator&gt;.lessThan,std::chrono::duration_cast&lt;std::chrono::nanoseconds)<SUB>1937</SUB>> ]
+"4468" [label = <(count,(1s).count())<SUB>1937</SUB>> ]
+"4479" [label = <(&lt;operator&gt;.logicalNot,!mIsUserBuild)<SUB>1940</SUB>> ]
+"4481" [label = <(&lt;operator&gt;.greaterThan,mMissedFrameJankCount &gt; 0)<SUB>1940</SUB>> ]
+"4486" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>1941</SUB>> ]
+"4543" [label = <(&lt;operator&gt;.assignment,mTracingEnabled = mTracing.isEnabled())<SUB>1968</SUB>> ]
+"4549" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = false)<SUB>1969</SUB>> ]
+"4555" [label = <(&lt;operator&gt;.lessThan,ConditionalLockGuard&lt;std::mutex)<SUB>1974</SUB>> ]
+"4560" [label = <(lock,lock(mTracingLock, mTracingEnabled))<SUB>1974</SUB>> ]
+"4565" [label = <(handleMessageTransaction,handleMessageTransaction())<SUB>1976</SUB>> ]
+"4568" [label = <(handleMessageInvalidate,handleMessageInvalidate())<SUB>1977</SUB>> ]
+"4597" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;chooseRefreshRateForContent)<SUB>1993</SUB>> ]
+"4602" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_16,())<SUB>1996</SUB>> ]
+"4612" [label = <(CC_LIKELY,CC_LIKELY(mBootStage != BootStage::BOOTLOADER))<SUB>2002</SUB>> ]
+"4619" [label = <(&lt;operator&gt;.assignment,mLastJankDuration = jankDurationToUpload)<SUB>2003</SUB>> ]
+"4630" [label = <(signalRefresh,signalRefresh())<SUB>2014</SUB>> ]
+"4298" [label = <(FIELD_IDENTIFIER,load,load)<SUB>1855</SUB>> ]
+"4308" [label = <(&lt;operator&gt;.logicalOr,mPropagateBackpressureClientComposition || !mHadClientComposition)<SUB>1863</SUB>> ]
+"4334" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>1881</SUB>> ]
+"4347" [label = <(&lt;operator&gt;.logicalAnd,previousPresentTime &gt;= 0 &amp;&amp;\012 (lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop))<SUB>1885</SUB>> ]
+"4378" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementMissedFrames)<SUB>1895</SUB>> ]
+"4382" [label = <(&lt;operator&gt;.equals,mMissedFrameJankCount == 0)<SUB>1896</SUB>> ]
+"4425" [label = <(&lt;operator&gt;.logicalOr,(hwcFrameMissed &amp;&amp; !gpuFrameMissed) || mPropagateBackpressureClientComposition)<SUB>1925</SUB>> ]
+"4439" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::duration_cast)<SUB>1934</SUB>> ]
+"4444" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::nanoseconds)<SUB>1934</SUB>> ]
+"4450" [label = <(&lt;operator&gt;.fieldAccess,(100ms).count)<SUB>1934</SUB>> ]
+"4458" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::duration_cast)<SUB>1937</SUB>> ]
+"4463" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::nanoseconds)<SUB>1937</SUB>> ]
+"4469" [label = <(&lt;operator&gt;.fieldAccess,(1s).count)<SUB>1937</SUB>> ]
+"4488" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>1941</SUB>> ]
+"4493" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>1946</SUB>> ]
+"4545" [label = <(isEnabled,mTracing.isEnabled())<SUB>1968</SUB>> ]
+"4557" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>1974</SUB>> ]
+"4572" [label = <(&lt;operator&gt;.assignment,mAddCompositionStateToTrace =\012                    mTracing.flagIsSetLocked(SurfaceTracing::TRACE_COMPOSITION))<SUB>1979</SUB>> ]
+"4599" [label = <(FIELD_IDENTIFIER,chooseRefreshRateForContent,chooseRefreshRateForContent)<SUB>1993</SUB>> ]
+"4603" [label = <(METHOD_REF,ANY anonymous_lambda_16 (),())<SUB>1996</SUB>> ]
+"4613" [label = <(&lt;operator&gt;.notEquals,mBootStage != BootStage::BOOTLOADER)<SUB>2002</SUB>> ]
+"4623" [label = <(&lt;operator&gt;.lessEqualsThan,mFrameStartTime &lt;= 0)<SUB>2007</SUB>> ]
+"4310" [label = <(&lt;operator&gt;.logicalNot,!mHadClientComposition)<SUB>1863</SUB>> ]
+"4348" [label = <(&lt;operator&gt;.greaterEqualsThan,previousPresentTime &gt;= 0)<SUB>1885</SUB>> ]
+"4351" [label = <(&lt;operator&gt;.lessThan,lastExpectedPresentTime &lt;\012                                                       previousPresentTime - frameMissedSlop)<SUB>1886</SUB>> ]
+"4380" [label = <(FIELD_IDENTIFIER,incrementMissedFrames,incrementMissedFrames)<SUB>1895</SUB>> ]
+"4386" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankStart = systemTime())<SUB>1897</SUB>> ]
+"4407" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>1914</SUB>> ]
+"4411" [label = <(RETURN,return;,return;)<SUB>1915</SUB>> ]
+"4417" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_14,())<SUB>1921</SUB>> ]
+"4426" [label = <(&lt;operator&gt;.logicalAnd,hwcFrameMissed &amp;&amp; !gpuFrameMissed)<SUB>1925</SUB>> ]
+"4432" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>1926</SUB>> ]
+"4433" [label = <(RETURN,return;,return;)<SUB>1927</SUB>> ]
+"4440" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1934</SUB>> ]
+"4443" [label = <(FIELD_IDENTIFIER,duration_cast,duration_cast)<SUB>1934</SUB>> ]
+"4445" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1934</SUB>> ]
+"4448" [label = <(FIELD_IDENTIFIER,nanoseconds,nanoseconds)<SUB>1934</SUB>> ]
+"4452" [label = <(FIELD_IDENTIFIER,count,count)<SUB>1934</SUB>> ]
+"4459" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1937</SUB>> ]
+"4462" [label = <(FIELD_IDENTIFIER,duration_cast,duration_cast)<SUB>1937</SUB>> ]
+"4464" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>1937</SUB>> ]
+"4467" [label = <(FIELD_IDENTIFIER,nanoseconds,nanoseconds)<SUB>1937</SUB>> ]
+"4471" [label = <(FIELD_IDENTIFIER,count,count)<SUB>1937</SUB>> ]
+"4495" [label = <(&lt;operator&gt;.equals,display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>1946</SUB>> ]
+"4507" [label = <(&lt;operator&gt;.assignment,currentTime = systemTime())<SUB>1947</SUB>> ]
+"4511" [label = <(&lt;operator&gt;.assignment,jankDuration = currentTime - mMissedFrameJankStart)<SUB>1948</SUB>> ]
+"4546" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>1968</SUB>> ]
+"4559" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>1974</SUB>> ]
+"4574" [label = <(flagIsSetLocked,mTracing.flagIsSetLocked(SurfaceTracing::TRACE_COMPOSITION))<SUB>1980</SUB>> ]
+"4582" [label = <(&lt;operator&gt;.logicalAnd,mVisibleRegionsDirty &amp;&amp; !mAddCompositionStateToTrace)<SUB>1981</SUB>> ]
+"4615" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTLOADER)<SUB>2002</SUB>> ]
+"4627" [label = <(&lt;operator&gt;.assignment,mFrameStartTime = frameStart)<SUB>2012</SUB>> ]
+"4353" [label = <(&lt;operator&gt;.subtraction,previousPresentTime - frameMissedSlop)<SUB>1887</SUB>> ]
+"4388" [label = <(systemTime,systemTime())<SUB>1897</SUB>> ]
+"4408" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>1914</SUB>> ]
+"4418" [label = <(METHOD_REF,ANY anonymous_lambda_14 (),())<SUB>1921</SUB>> ]
+"4428" [label = <(&lt;operator&gt;.logicalNot,!gpuFrameMissed)<SUB>1925</SUB>> ]
+"4490" [label = <(android.SurfaceFlinger.onMessageInvalidate.anonymous_lambda_15,())<SUB>1941</SUB>> ]
+"4496" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>1946</SUB>> ]
+"4500" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>1946</SUB>> ]
+"4509" [label = <(systemTime,systemTime())<SUB>1947</SUB>> ]
+"4513" [label = <(&lt;operator&gt;.subtraction,currentTime - mMissedFrameJankStart)<SUB>1948</SUB>> ]
+"4517" [label = <(&lt;operator&gt;.logicalAnd,jankDuration &gt; kMinJankyDuration &amp;&amp; jankDuration &lt; kMaxJankyDuration)<SUB>1949</SUB>> ]
+"4529" [label = <(&lt;operator&gt;.greaterThan,jankDuration &gt; kMinJankyDuration)<SUB>1955</SUB>> ]
+"4548" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>1968</SUB>> ]
+"4575" [label = <(&lt;operator&gt;.fieldAccess,mTracing.flagIsSetLocked)<SUB>1980</SUB>> ]
+"4578" [label = <(&lt;operator&gt;.fieldAccess,SurfaceTracing::TRACE_COMPOSITION)<SUB>1980</SUB>> ]
+"4584" [label = <(&lt;operator&gt;.logicalNot,!mAddCompositionStateToTrace)<SUB>1981</SUB>> ]
+"4587" [label = <(notifyLocked,mTracing.notifyLocked(&quot;visibleRegionsDirty&quot;))<SUB>1982</SUB>> ]
+"4617" [label = <(FIELD_IDENTIFIER,BOOTLOADER,BOOTLOADER)<SUB>2002</SUB>> ]
+"4410" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>1914</SUB>> ]
+"4491" [label = <(METHOD_REF,ANY anonymous_lambda_15 (),())<SUB>1941</SUB>> ]
+"4497" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>1946</SUB>> ]
+"4501" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>1946</SUB>> ]
+"4504" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>1946</SUB>> ]
+"4518" [label = <(&lt;operator&gt;.greaterThan,jankDuration &gt; kMinJankyDuration)<SUB>1949</SUB>> ]
+"4521" [label = <(&lt;operator&gt;.lessThan,jankDuration &lt; kMaxJankyDuration)<SUB>1949</SUB>> ]
+"4525" [label = <(&lt;operator&gt;.assignment,jankDurationToUpload = jankDuration)<SUB>1950</SUB>> ]
+"4533" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankCount = 0)<SUB>1956</SUB>> ]
+"4536" [label = <(&lt;operator&gt;.assignment,mMissedFrameJankStart = 0)<SUB>1957</SUB>> ]
+"4577" [label = <(FIELD_IDENTIFIER,flagIsSetLocked,flagIsSetLocked)<SUB>1980</SUB>> ]
+"4580" [label = <(FIELD_IDENTIFIER,TRACE_COMPOSITION,TRACE_COMPOSITION)<SUB>1980</SUB>> ]
+"4588" [label = <(&lt;operator&gt;.fieldAccess,mTracing.notifyLocked)<SUB>1982</SUB>> ]
+"4499" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>1946</SUB>> ]
+"4590" [label = <(FIELD_IDENTIFIER,notifyLocked,notifyLocked)<SUB>1982</SUB>> ]
+"4284" [label = <(METHOD,onMessageInvalidate)<SUB>1848</SUB>> ]
+"4631" [label = <(METHOD_RETURN,void)<SUB>1848</SUB>> ]
+  "4287" -> "4291" 
+  "4289" -> "4298" 
+  "4293" -> "4299" 
+  "4299" -> "4306" 
+  "4299" -> "4308" 
+  "4299" -> "4310" 
+  "4303" -> "4319" 
+  "4315" -> "4325" 
+  "4322" -> "4334" 
+  "4329" -> "4339" 
+  "4337" -> "4345" 
+  "4337" -> "4348" 
+  "4341" -> "4361" 
+  "4357" -> "4369" 
+  "4365" -> "4375" 
+  "4365" -> "4394" 
+  "4365" -> "4399" 
+  "4365" -> "4410" 
+  "4365" -> "4412" 
+  "4365" -> "4420" 
+  "4435" -> "4459" 
+  "4454" -> "4475" 
+  "4473" -> "4479" 
+  "4539" -> "4548" 
+  "4539" -> "4559" 
+  "4600" -> "4603" 
+  "4600" -> "4604" 
+  "4604" -> "4605" 
+  "4605" -> "4606" 
+  "4606" -> "4610" 
+  "4606" -> "4617" 
+  "4291" -> "4289" 
+  "4295" -> "4293" 
+  "4305" -> "4303" 
+  "4317" -> "4315" 
+  "4323" -> "4326" 
+  "4326" -> "4322" 
+  "4331" -> "4329" 
+  "4339" -> "4337" 
   "4343" -> "4341" 
-  "4351" -> "4349" 
-  "4404" -> "4410" 
-  "4404" -> "4412" 
-  "4404" -> "4424" 
-  "4421" -> "4419" 
-  "4440" -> "4438" 
-  "4459" -> "4457" 
-  "4462" -> "4523" 
-  "4462" -> "4472" 
-  "4538" -> "4549" 
-  "4547" -> "4552" 
-  "4550" -> "4561" 
-  "4550" -> "4578" 
-  "4578" -> "4583" 
-  "4580" -> "4584" 
-  "4594" -> "4615" 
-  "4594" -> "4603" 
-  "4280" -> "4279" 
-  "4290" -> "4289" 
-  "4303" -> "4301" 
-  "4309" -> "4307" 
-  "4316" -> "4315" 
-  "4329" -> "4327" 
+  "4359" -> "4357" 
+  "4367" -> "4365" 
+  "4420" -> "4426" 
+  "4420" -> "4428" 
+  "4420" -> "4440" 
+  "4437" -> "4435" 
+  "4456" -> "4454" 
+  "4475" -> "4473" 
+  "4478" -> "4539" 
+  "4478" -> "4488" 
+  "4554" -> "4565" 
+  "4563" -> "4568" 
+  "4566" -> "4577" 
+  "4566" -> "4594" 
+  "4594" -> "4599" 
+  "4596" -> "4600" 
+  "4610" -> "4631" 
+  "4610" -> "4619" 
+  "4296" -> "4295" 
+  "4306" -> "4305" 
+  "4319" -> "4317" 
+  "4325" -> "4323" 
+  "4332" -> "4331" 
   "4345" -> "4343" 
-  "4353" -> "4351" 
-  "4359" -> "4364" 
-  "4361" -> "4366" 
-  "4373" -> "4378" 
-  "4373" -> "4383" 
-  "4373" -> "4394" 
-  "4373" -> "4396" 
-  "4373" -> "4404" 
-  "4378" -> "4383" 
-  "4378" -> "4394" 
-  "4378" -> "4396" 
-  "4378" -> "4404" 
-  "4383" -> "4394" 
-  "4383" -> "4396" 
-  "4383" -> "4404" 
-  "4396" -> "4399" 
-  "4399" -> "4402" 
-  "4399" -> "4404" 
-  "4422" -> "4436" 
-  "4433" -> "4421" 
-  "4441" -> "4455" 
-  "4452" -> "4440" 
-  "4463" -> "4462" 
-  "4463" -> "4465" 
-  "4465" -> "4462" 
-  "4470" -> "4477" 
-  "4470" -> "4483" 
-  "4527" -> "4533" 
-  "4533" -> "4543" 
-  "4539" -> "4544" 
-  "4544" -> "4538" 
-  "4549" -> "4547" 
-  "4552" -> "4550" 
-  "4581" -> "4580" 
-  "4586" -> "4588" 
-  "4596" -> "4594" 
-  "4603" -> "4607" 
-  "4614" -> "4615" 
-  "4282" -> "4280" 
-  "4292" -> "4290" 
-  "4318" -> "4316" 
-  "4331" -> "4329" 
-  "4362" -> "4361" 
-  "4366" -> "4372" 
-  "4366" -> "4373" 
-  "4409" -> "4416" 
-  "4409" -> "4424" 
-  "4423" -> "4429" 
-  "4428" -> "4422" 
-  "4434" -> "4433" 
-  "4442" -> "4448" 
-  "4447" -> "4441" 
-  "4453" -> "4452" 
-  "4472" -> "4475" 
-  "4472" -> "4470" 
-  "4477" -> "4523" 
-  "4477" -> "4493" 
-  "4529" -> "4527" 
-  "4541" -> "4539" 
-  "4556" -> "4566" 
-  "4556" -> "4568" 
-  "4583" -> "4581" 
-  "4587" -> "4586" 
+  "4361" -> "4359" 
+  "4369" -> "4367" 
+  "4375" -> "4380" 
+  "4377" -> "4382" 
+  "4389" -> "4394" 
+  "4389" -> "4399" 
+  "4389" -> "4410" 
+  "4389" -> "4412" 
+  "4389" -> "4420" 
+  "4394" -> "4399" 
+  "4394" -> "4410" 
+  "4394" -> "4412" 
+  "4394" -> "4420" 
+  "4399" -> "4410" 
+  "4399" -> "4412" 
+  "4399" -> "4420" 
+  "4412" -> "4415" 
+  "4415" -> "4418" 
+  "4415" -> "4420" 
+  "4438" -> "4452" 
+  "4449" -> "4437" 
+  "4457" -> "4471" 
+  "4468" -> "4456" 
+  "4479" -> "4478" 
+  "4479" -> "4481" 
+  "4481" -> "4478" 
+  "4486" -> "4493" 
+  "4486" -> "4499" 
+  "4543" -> "4549" 
+  "4549" -> "4559" 
+  "4555" -> "4560" 
+  "4560" -> "4554" 
+  "4565" -> "4563" 
+  "4568" -> "4566" 
   "4597" -> "4596" 
-  "4607" -> "4614" 
-  "4607" -> "4611" 
-  "4294" -> "4292" 
-  "4332" -> "4331" 
-  "4332" -> "4337" 
-  "4335" -> "4331" 
-  "4364" -> "4362" 
-  "4370" -> "4373" 
-  "4391" -> "4395" 
-  "4395" -> "4615" 
-  "4401" -> "4404" 
-  "4410" -> "4409" 
-  "4416" -> "4417" 
-  "4417" -> "4615" 
-  "4424" -> "4427" 
-  "4427" -> "4423" 
-  "4429" -> "4432" 
-  "4432" -> "4428" 
-  "4436" -> "4434" 
-  "4443" -> "4446" 
-  "4446" -> "4442" 
-  "4448" -> "4451" 
-  "4451" -> "4447" 
-  "4455" -> "4453" 
-  "4479" -> "4477" 
-  "4491" -> "4497" 
-  "4495" -> "4502" 
-  "4530" -> "4529" 
-  "4543" -> "4541" 
-  "4558" -> "4556" 
-  "4566" -> "4574" 
-  "4566" -> "4578" 
+  "4602" -> "4604" 
+  "4612" -> "4610" 
+  "4619" -> "4623" 
+  "4630" -> "4631" 
+  "4298" -> "4296" 
+  "4308" -> "4306" 
+  "4334" -> "4332" 
+  "4347" -> "4345" 
+  "4378" -> "4377" 
+  "4382" -> "4388" 
+  "4382" -> "4389" 
+  "4425" -> "4432" 
+  "4425" -> "4440" 
+  "4439" -> "4445" 
+  "4444" -> "4438" 
+  "4450" -> "4449" 
+  "4458" -> "4464" 
+  "4463" -> "4457" 
+  "4469" -> "4468" 
+  "4488" -> "4491" 
+  "4488" -> "4486" 
+  "4493" -> "4539" 
+  "4493" -> "4509" 
+  "4545" -> "4543" 
+  "4557" -> "4555" 
+  "4572" -> "4582" 
+  "4572" -> "4584" 
   "4599" -> "4597" 
-  "4611" -> "4614" 
-  "4337" -> "4335" 
-  "4372" -> "4370" 
-  "4392" -> "4391" 
-  "4402" -> "4401" 
-  "4412" -> "4410" 
-  "4474" -> "4470" 
-  "4480" -> "4485" 
-  "4484" -> "4479" 
-  "4493" -> "4491" 
-  "4497" -> "4495" 
-  "4501" -> "4509" 
-  "4501" -> "4513" 
-  "4513" -> "4523" 
-  "4513" -> "4517" 
-  "4532" -> "4530" 
-  "4559" -> "4564" 
-  "4562" -> "4558" 
-  "4568" -> "4566" 
-  "4571" -> "4578" 
-  "4601" -> "4599" 
-  "4394" -> "4392" 
-  "4475" -> "4474" 
-  "4481" -> "4480" 
-  "4485" -> "4488" 
-  "4488" -> "4484" 
-  "4502" -> "4501" 
-  "4502" -> "4505" 
-  "4505" -> "4501" 
-  "4509" -> "4513" 
-  "4517" -> "4520" 
-  "4520" -> "4523" 
-  "4561" -> "4559" 
-  "4564" -> "4562" 
-  "4572" -> "4571" 
-  "4483" -> "4481" 
+  "4603" -> "4602" 
+  "4613" -> "4612" 
+  "4623" -> "4630" 
+  "4623" -> "4627" 
+  "4310" -> "4308" 
+  "4348" -> "4347" 
+  "4348" -> "4353" 
+  "4351" -> "4347" 
+  "4380" -> "4378" 
+  "4386" -> "4389" 
+  "4407" -> "4411" 
+  "4411" -> "4631" 
+  "4417" -> "4420" 
+  "4426" -> "4425" 
+  "4432" -> "4433" 
+  "4433" -> "4631" 
+  "4440" -> "4443" 
+  "4443" -> "4439" 
+  "4445" -> "4448" 
+  "4448" -> "4444" 
+  "4452" -> "4450" 
+  "4459" -> "4462" 
+  "4462" -> "4458" 
+  "4464" -> "4467" 
+  "4467" -> "4463" 
+  "4471" -> "4469" 
+  "4495" -> "4493" 
+  "4507" -> "4513" 
+  "4511" -> "4518" 
+  "4546" -> "4545" 
+  "4559" -> "4557" 
   "4574" -> "4572" 
-  "4268" -> "4271" 
+  "4582" -> "4590" 
+  "4582" -> "4594" 
+  "4615" -> "4613" 
+  "4627" -> "4630" 
+  "4353" -> "4351" 
+  "4388" -> "4386" 
+  "4408" -> "4407" 
+  "4418" -> "4417" 
+  "4428" -> "4426" 
+  "4490" -> "4486" 
+  "4496" -> "4501" 
+  "4500" -> "4495" 
+  "4509" -> "4507" 
+  "4513" -> "4511" 
+  "4517" -> "4525" 
+  "4517" -> "4529" 
+  "4529" -> "4539" 
+  "4529" -> "4533" 
+  "4548" -> "4546" 
+  "4575" -> "4580" 
+  "4578" -> "4574" 
+  "4584" -> "4582" 
+  "4587" -> "4594" 
+  "4617" -> "4615" 
+  "4410" -> "4408" 
+  "4491" -> "4490" 
+  "4497" -> "4496" 
+  "4501" -> "4504" 
+  "4504" -> "4500" 
+  "4518" -> "4517" 
+  "4518" -> "4521" 
+  "4521" -> "4517" 
+  "4525" -> "4529" 
+  "4533" -> "4536" 
+  "4536" -> "4539" 
+  "4577" -> "4575" 
+  "4580" -> "4578" 
+  "4588" -> "4587" 
+  "4499" -> "4497" 
+  "4590" -> "4588" 
+  "4284" -> "4287" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/153-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/153-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/153-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/153-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,30 +1,30 @@
 digraph "handleMessageTransaction" {  
-"4619" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2020</SUB>> ]
-"4621" [label = <(&lt;operator&gt;.assignment,transactionFlags = peekTransactionFlags())<SUB>2021</SUB>> ]
-"4625" [label = <(&lt;operator&gt;.assignment,flushedATransaction = flushTransactionQueues())<SUB>2023</SUB>> ]
-"4629" [label = <(&lt;operator&gt;.assignment,runHandleTransaction =\012 (transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction ||\012            mForceTraversal)<SUB>2025</SUB>> ]
-"4651" [label = <(RETURN,return runHandleTransaction;,return runHandleTransaction;)<SUB>2040</SUB>> ]
-"4623" [label = <(peekTransactionFlags,peekTransactionFlags())<SUB>2021</SUB>> ]
-"4627" [label = <(flushTransactionQueues,flushTransactionQueues())<SUB>2023</SUB>> ]
-"4631" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction ||\012            mForceTraversal)<SUB>2026</SUB>> ]
-"4648" [label = <(transactionFlushNeeded,transactionFlushNeeded())<SUB>2036</SUB>> ]
-"4632" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction)<SUB>2026</SUB>> ]
-"4633" [label = <(&lt;operator&gt;.logicalAnd,transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded))<SUB>2026</SUB>> ]
-"4635" [label = <(&lt;operator&gt;.notEquals,transactionFlags != eTransactionFlushNeeded)<SUB>2026</SUB>> ]
-"4617" [label = <(METHOD,handleMessageTransaction)<SUB>2019</SUB>> ]
-"4653" [label = <(METHOD_RETURN,bool)<SUB>2019</SUB>> ]
-  "4619" -> "4623" 
-  "4621" -> "4627" 
-  "4625" -> "4633" 
-  "4625" -> "4635" 
-  "4629" -> "4648" 
-  "4651" -> "4653" 
-  "4623" -> "4621" 
-  "4627" -> "4625" 
-  "4631" -> "4629" 
-  "4648" -> "4651" 
-  "4632" -> "4631" 
-  "4633" -> "4632" 
-  "4635" -> "4633" 
-  "4617" -> "4619" 
+"4635" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2019</SUB>> ]
+"4637" [label = <(&lt;operator&gt;.assignment,transactionFlags = peekTransactionFlags())<SUB>2020</SUB>> ]
+"4641" [label = <(&lt;operator&gt;.assignment,flushedATransaction = flushTransactionQueues())<SUB>2022</SUB>> ]
+"4645" [label = <(&lt;operator&gt;.assignment,runHandleTransaction =\012 (transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction ||\012            mForceTraversal)<SUB>2024</SUB>> ]
+"4667" [label = <(RETURN,return runHandleTransaction;,return runHandleTransaction;)<SUB>2039</SUB>> ]
+"4639" [label = <(peekTransactionFlags,peekTransactionFlags())<SUB>2020</SUB>> ]
+"4643" [label = <(flushTransactionQueues,flushTransactionQueues())<SUB>2022</SUB>> ]
+"4647" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction ||\012            mForceTraversal)<SUB>2025</SUB>> ]
+"4664" [label = <(transactionFlushNeeded,transactionFlushNeeded())<SUB>2035</SUB>> ]
+"4648" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded)) ||\012            flushedATransaction)<SUB>2025</SUB>> ]
+"4649" [label = <(&lt;operator&gt;.logicalAnd,transactionFlags &amp;&amp; (transactionFlags != eTransactionFlushNeeded))<SUB>2025</SUB>> ]
+"4651" [label = <(&lt;operator&gt;.notEquals,transactionFlags != eTransactionFlushNeeded)<SUB>2025</SUB>> ]
+"4633" [label = <(METHOD,handleMessageTransaction)<SUB>2018</SUB>> ]
+"4669" [label = <(METHOD_RETURN,bool)<SUB>2018</SUB>> ]
+  "4635" -> "4639" 
+  "4637" -> "4643" 
+  "4641" -> "4649" 
+  "4641" -> "4651" 
+  "4645" -> "4664" 
+  "4667" -> "4669" 
+  "4639" -> "4637" 
+  "4643" -> "4641" 
+  "4647" -> "4645" 
+  "4664" -> "4667" 
+  "4648" -> "4647" 
+  "4649" -> "4648" 
+  "4651" -> "4649" 
+  "4633" -> "4635" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/154-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/154-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/154-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/154-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,360 +1,360 @@
 digraph "onMessageRefresh" {  
-"4657" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2044</SUB>> ]
-"4658" [label = <(&lt;operator&gt;.assignment,mRefreshPending = false)<SUB>2046</SUB>> ]
-"4663" [label = <(&lt;operator&gt;.assignment,&amp; displays = ON_MAIN_THREAD(mDisplays))<SUB>2049</SUB>> ]
-"4669" [label = <(reserve,refreshArgs.outputs.reserve(displays.size()))<SUB>2050</SUB>> ]
-"4695" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;refreshArgs](Layer* layer) {\012 if (auto layerFE = layer-&gt;getCompositionEngineLayerFE())\012            refreshArgs.layers.push_back(layerFE);\012 }))<SUB>2054</SUB>> ]
-"4700" [label = <(reserve,refreshArgs.layersWithQueuedFrames.reserve(mLayersWithQueuedFrames.size()))<SUB>2058</SUB>> ]
-"4731" [label = <(&lt;operator&gt;.assignment,refreshArgs.repaintEverything = mRepaintEverything.exchange(false))<SUB>2064</SUB>> ]
-"4740" [label = <(&lt;operator&gt;.assignment,refreshArgs.outputColorSetting = useColorManagement\012 ? mDisplayColorSetting\012 : compositionengine::OutputColorSetting::kUnmanaged)<SUB>2065</SUB>> ]
-"4752" [label = <(&lt;operator&gt;.assignment,refreshArgs.colorSpaceAgnosticDataspace = mColorSpaceAgnosticDataspace)<SUB>2068</SUB>> ]
-"4757" [label = <(&lt;operator&gt;.assignment,refreshArgs.forceOutputColorMode = mForceColorMode)<SUB>2069</SUB>> ]
-"4762" [label = <(&lt;operator&gt;.assignment,refreshArgs.updatingOutputGeometryThisFrame = mVisibleRegionsDirty)<SUB>2071</SUB>> ]
-"4767" [label = <(&lt;operator&gt;.assignment,refreshArgs.updatingGeometryThisFrame = mGeometryInvalid || mVisibleRegionsDirty)<SUB>2072</SUB>> ]
-"4774" [label = <(&lt;operator&gt;.assignment,refreshArgs.blursAreExpensive = mBlursAreExpensive)<SUB>2073</SUB>> ]
-"4779" [label = <(&lt;operator&gt;.assignment,refreshArgs.internalDisplayRotationFlags = DisplayDevice::getPrimaryDisplayRotationFlags())<SUB>2074</SUB>> ]
-"4805" [label = <(&lt;operator&gt;.assignment,refreshArgs.devOptForceClientComposition = mDebugDisableHWC || mDebugRegion)<SUB>2081</SUB>> ]
-"4833" [label = <(&lt;operator&gt;.assignment,mGeometryInvalid = false)<SUB>2088</SUB>> ]
-"4837" [label = <(&lt;operator&gt;.assignment,presentTime = systemTime())<SUB>2092</SUB>> ]
-"4840" [label = <(present,mCompositionEngine-&gt;present(refreshArgs))<SUB>2094</SUB>> ]
-"4845" [label = <(recordFrameDuration,mTimeStats-&gt;recordFrameDuration(mFrameStartTime, systemTime()))<SUB>2095</SUB>> ]
-"4851" [label = <(&lt;operator&gt;.assignment,mFrameStartTime = 0)<SUB>2097</SUB>> ]
-"4854" [label = <(onDisplayRefreshed,mScheduler-&gt;onDisplayRefreshed(presentTime))<SUB>2099</SUB>> ]
-"4859" [label = <(postFrame,postFrame())<SUB>2101</SUB>> ]
-"4860" [label = <(postComposition,postComposition())<SUB>2102</SUB>> ]
-"4862" [label = <(&lt;operator&gt;.assignment,prevFrameHadDeviceComposition = mHadDeviceComposition)<SUB>2104</SUB>> ]
-"4865" [label = <(&lt;operator&gt;.assignment,mHadClientComposition = std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2106</SUB>> ]
-"4880" [label = <(&lt;operator&gt;.assignment,mHadDeviceComposition = std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2110</SUB>> ]
-"4895" [label = <(&lt;operator&gt;.assignment,mReusedClientComposition =\012            std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2114</SUB>> ]
-"4919" [label = <(onRefreshed,mVSyncModulator-&gt;onRefreshed(mHadClientComposition || mReusedClientComposition))<SUB>2126</SUB>> ]
-"4926" [label = <(clear,mLayersWithQueuedFrames.clear())<SUB>2128</SUB>> ]
-"4665" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>2049</SUB>> ]
-"4670" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.reserve)<SUB>2050</SUB>> ]
-"4675" [label = <(size,displays.size())<SUB>2050</SUB>> ]
-"4696" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>2054</SUB>> ]
-"4699" [label = <(METHOD_REF,ANY anonymous_lambda_18 (Layer* layer),mDrawingState.traverseInZOrder([&amp;refreshArgs](Layer* layer) {\012 if (auto layerFE = layer-&gt;getCompositionEngineLayerFE())\012            refreshArgs.layers.push_back(layerFE);\012 }))<SUB>2054</SUB>> ]
-"4701" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames.reserve)<SUB>2058</SUB>> ]
-"4706" [label = <(size,mLayersWithQueuedFrames.size())<SUB>2058</SUB>> ]
-"4732" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.repaintEverything)<SUB>2064</SUB>> ]
-"4735" [label = <(exchange,mRepaintEverything.exchange(false))<SUB>2064</SUB>> ]
-"4741" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputColorSetting)<SUB>2065</SUB>> ]
-"4744" [label = <(&lt;operator&gt;.conditional,useColorManagement\012 ? mDisplayColorSetting\012 : compositionengine::OutputColorSetting::kUnmanaged)<SUB>2065</SUB>> ]
-"4753" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.colorSpaceAgnosticDataspace)<SUB>2068</SUB>> ]
-"4758" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.forceOutputColorMode)<SUB>2069</SUB>> ]
-"4763" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.updatingOutputGeometryThisFrame)<SUB>2071</SUB>> ]
-"4768" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.updatingGeometryThisFrame)<SUB>2072</SUB>> ]
-"4771" [label = <(&lt;operator&gt;.logicalOr,mGeometryInvalid || mVisibleRegionsDirty)<SUB>2072</SUB>> ]
-"4775" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.blursAreExpensive)<SUB>2073</SUB>> ]
-"4780" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.internalDisplayRotationFlags)<SUB>2074</SUB>> ]
-"4783" [label = <(DisplayDevice::getPrimaryDisplayRotationFlags,DisplayDevice::getPrimaryDisplayRotationFlags())<SUB>2074</SUB>> ]
-"4788" [label = <(CC_UNLIKELY,CC_UNLIKELY(mDrawingState.colorMatrixChanged))<SUB>2076</SUB>> ]
-"4806" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.devOptForceClientComposition)<SUB>2081</SUB>> ]
-"4809" [label = <(&lt;operator&gt;.logicalOr,mDebugDisableHWC || mDebugRegion)<SUB>2081</SUB>> ]
-"4813" [label = <(&lt;operator&gt;.notEquals,mDebugRegion != 0)<SUB>2083</SUB>> ]
-"4839" [label = <(systemTime,systemTime())<SUB>2092</SUB>> ]
-"4841" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;present)<SUB>2094</SUB>> ]
-"4846" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;recordFrameDuration)<SUB>2095</SUB>> ]
-"4850" [label = <(systemTime,systemTime())<SUB>2095</SUB>> ]
-"4855" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onDisplayRefreshed)<SUB>2099</SUB>> ]
-"4867" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2106</SUB>> ]
-"4882" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2110</SUB>> ]
-"4897" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2115</SUB>> ]
-"4911" [label = <(&lt;operator&gt;.notEquals,prevFrameHadDeviceComposition != mHadDeviceComposition)<SUB>2121</SUB>> ]
-"4920" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshed)<SUB>2126</SUB>> ]
-"4923" [label = <(&lt;operator&gt;.logicalOr,mHadClientComposition || mReusedClientComposition)<SUB>2126</SUB>> ]
-"4927" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.clear)<SUB>2128</SUB>> ]
-"4946" [label = <(needsAnotherUpdate,mCompositionEngine-&gt;needsAnotherUpdate())<SUB>2136</SUB>> ]
-"4671" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2050</SUB>> ]
-"4674" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2050</SUB>> ]
-"4676" [label = <(&lt;operator&gt;.fieldAccess,displays.size)<SUB>2050</SUB>> ]
-"4685" [label = <(push_back,refreshArgs.outputs.push_back(display-&gt;getCompositionDisplay()))<SUB>2052</SUB>> ]
-"4698" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>2054</SUB>> ]
-"4702" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames)<SUB>2058</SUB>> ]
-"4705" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2058</SUB>> ]
-"4707" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.size)<SUB>2058</SUB>> ]
-"4734" [label = <(FIELD_IDENTIFIER,repaintEverything,repaintEverything)<SUB>2064</SUB>> ]
-"4736" [label = <(&lt;operator&gt;.fieldAccess,mRepaintEverything.exchange)<SUB>2064</SUB>> ]
-"4743" [label = <(FIELD_IDENTIFIER,outputColorSetting,outputColorSetting)<SUB>2065</SUB>> ]
-"4747" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::OutputColorSetting::kUnmanaged)<SUB>2067</SUB>> ]
-"4755" [label = <(FIELD_IDENTIFIER,colorSpaceAgnosticDataspace,colorSpaceAgnosticDataspace)<SUB>2068</SUB>> ]
-"4760" [label = <(FIELD_IDENTIFIER,forceOutputColorMode,forceOutputColorMode)<SUB>2069</SUB>> ]
-"4765" [label = <(FIELD_IDENTIFIER,updatingOutputGeometryThisFrame,updatingOutputGeometryThisFrame)<SUB>2071</SUB>> ]
-"4770" [label = <(FIELD_IDENTIFIER,updatingGeometryThisFrame,updatingGeometryThisFrame)<SUB>2072</SUB>> ]
-"4777" [label = <(FIELD_IDENTIFIER,blursAreExpensive,blursAreExpensive)<SUB>2073</SUB>> ]
-"4782" [label = <(FIELD_IDENTIFIER,internalDisplayRotationFlags,internalDisplayRotationFlags)<SUB>2074</SUB>> ]
-"4784" [label = <(&lt;operator&gt;.fieldAccess,DisplayDevice::getPrimaryDisplayRotationFlags)<SUB>2074</SUB>> ]
-"4789" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrixChanged)<SUB>2076</SUB>> ]
-"4793" [label = <(&lt;operator&gt;.assignment,refreshArgs.colorTransformMatrix = mDrawingState.colorMatrix)<SUB>2077</SUB>> ]
-"4800" [label = <(&lt;operator&gt;.assignment,mDrawingState.colorMatrixChanged = false)<SUB>2078</SUB>> ]
-"4808" [label = <(FIELD_IDENTIFIER,devOptForceClientComposition,devOptForceClientComposition)<SUB>2081</SUB>> ]
-"4817" [label = <(&lt;operator&gt;.assignment,refreshArgs.devOptFlashDirtyRegionsDelay =\012                std::chrono::milliseconds(mDebugRegion &gt; 1 ? mDebugRegion : 0))<SUB>2084</SUB>> ]
-"4843" [label = <(FIELD_IDENTIFIER,present,present)<SUB>2094</SUB>> ]
-"4848" [label = <(FIELD_IDENTIFIER,recordFrameDuration,recordFrameDuration)<SUB>2095</SUB>> ]
-"4857" [label = <(FIELD_IDENTIFIER,onDisplayRefreshed,onDisplayRefreshed)<SUB>2099</SUB>> ]
-"4868" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2106</SUB>> ]
-"4871" [label = <(cbegin,displays.cbegin())<SUB>2106</SUB>> ]
-"4875" [label = <(cend,displays.cend())<SUB>2106</SUB>> ]
-"4879" [label = <(METHOD_REF,ANY anonymous_lambda_19 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2106</SUB>> ]
-"4883" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2110</SUB>> ]
-"4886" [label = <(cbegin,displays.cbegin())<SUB>2110</SUB>> ]
-"4890" [label = <(cend,displays.cend())<SUB>2110</SUB>> ]
-"4894" [label = <(METHOD_REF,ANY anonymous_lambda_20 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2110</SUB>> ]
-"4898" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2115</SUB>> ]
-"4901" [label = <(cbegin,displays.cbegin())<SUB>2115</SUB>> ]
-"4905" [label = <(cend,displays.cend())<SUB>2115</SUB>> ]
-"4909" [label = <(METHOD_REF,ANY anonymous_lambda_21 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2115</SUB>> ]
-"4915" [label = <(incrementCompositionStrategyChanges,mTimeStats-&gt;incrementCompositionStrategyChanges())<SUB>2122</SUB>> ]
-"4922" [label = <(FIELD_IDENTIFIER,onRefreshed,onRefreshed)<SUB>2126</SUB>> ]
-"4929" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2128</SUB>> ]
-"4933" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = false)<SUB>2130</SUB>> ]
-"4947" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;needsAnotherUpdate)<SUB>2136</SUB>> ]
-"4951" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>2137</SUB>> ]
-"4667" [label = <(android.SurfaceFlinger.onMessageRefresh.anonymous_lambda_17,())<SUB>2049</SUB>> ]
-"4673" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2050</SUB>> ]
-"4678" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2050</SUB>> ]
-"4686" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.push_back)<SUB>2052</SUB>> ]
-"4691" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2052</SUB>> ]
-"4704" [label = <(FIELD_IDENTIFIER,layersWithQueuedFrames,layersWithQueuedFrames)<SUB>2058</SUB>> ]
-"4709" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2058</SUB>> ]
-"4738" [label = <(FIELD_IDENTIFIER,exchange,exchange)<SUB>2064</SUB>> ]
-"4748" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::OutputColorSetting)<SUB>2067</SUB>> ]
-"4751" [label = <(FIELD_IDENTIFIER,kUnmanaged,kUnmanaged)<SUB>2067</SUB>> ]
-"4786" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayRotationFlags,getPrimaryDisplayRotationFlags)<SUB>2074</SUB>> ]
-"4791" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>2076</SUB>> ]
-"4794" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.colorTransformMatrix)<SUB>2077</SUB>> ]
-"4797" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrix)<SUB>2077</SUB>> ]
-"4801" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrixChanged)<SUB>2078</SUB>> ]
-"4818" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.devOptFlashDirtyRegionsDelay)<SUB>2084</SUB>> ]
-"4821" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(mDebugRegion &gt; 1 ? mDebugRegion : 0))<SUB>2085</SUB>> ]
-"4870" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2106</SUB>> ]
-"4872" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2106</SUB>> ]
-"4876" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2106</SUB>> ]
-"4885" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2110</SUB>> ]
-"4887" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2110</SUB>> ]
-"4891" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2110</SUB>> ]
-"4900" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2115</SUB>> ]
-"4902" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2115</SUB>> ]
-"4906" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2115</SUB>> ]
-"4916" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementCompositionStrategyChanges)<SUB>2122</SUB>> ]
-"4949" [label = <(FIELD_IDENTIFIER,needsAnotherUpdate,needsAnotherUpdate)<SUB>2136</SUB>> ]
-"4668" [label = <(METHOD_REF,ANY anonymous_lambda_17 (),())<SUB>2049</SUB>> ]
-"4687" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2052</SUB>> ]
-"4690" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2052</SUB>> ]
-"4692" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2052</SUB>> ]
-"4717" [label = <(&lt;operator&gt;.assignment,layerFE = layer-&gt;getCompositionEngineLayerFE())<SUB>2060</SUB>> ]
-"4724" [label = <(push_back,refreshArgs.layersWithQueuedFrames.push_back(layerFE))<SUB>2061</SUB>> ]
-"4796" [label = <(FIELD_IDENTIFIER,colorTransformMatrix,colorTransformMatrix)<SUB>2077</SUB>> ]
-"4799" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>2077</SUB>> ]
-"4803" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>2078</SUB>> ]
-"4820" [label = <(FIELD_IDENTIFIER,devOptFlashDirtyRegionsDelay,devOptFlashDirtyRegionsDelay)<SUB>2084</SUB>> ]
-"4822" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>2085</SUB>> ]
-"4827" [label = <(&lt;operator&gt;.conditional,mDebugRegion &gt; 1 ? mDebugRegion : 0)<SUB>2085</SUB>> ]
-"4874" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2106</SUB>> ]
-"4878" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2106</SUB>> ]
-"4889" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2110</SUB>> ]
-"4893" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2110</SUB>> ]
-"4904" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2115</SUB>> ]
-"4908" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2115</SUB>> ]
-"4918" [label = <(FIELD_IDENTIFIER,incrementCompositionStrategyChanges,incrementCompositionStrategyChanges)<SUB>2122</SUB>> ]
-"4940" [label = <(notify,mTracing.notify(&quot;visibleRegionsDirty&quot;))<SUB>2132</SUB>> ]
-"4689" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2052</SUB>> ]
-"4694" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2052</SUB>> ]
-"4719" [label = <(getCompositionEngineLayerFE,layer-&gt;getCompositionEngineLayerFE())<SUB>2060</SUB>> ]
-"4725" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames.push_back)<SUB>2061</SUB>> ]
-"4823" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>2085</SUB>> ]
-"4826" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>2085</SUB>> ]
-"4828" [label = <(&lt;operator&gt;.greaterThan,mDebugRegion &gt; 1)<SUB>2085</SUB>> ]
-"4941" [label = <(&lt;operator&gt;.fieldAccess,mTracing.notify)<SUB>2132</SUB>> ]
-"4720" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getCompositionEngineLayerFE)<SUB>2060</SUB>> ]
-"4726" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames)<SUB>2061</SUB>> ]
-"4729" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2061</SUB>> ]
-"4943" [label = <(FIELD_IDENTIFIER,notify,notify)<SUB>2132</SUB>> ]
-"4722" [label = <(FIELD_IDENTIFIER,getCompositionEngineLayerFE,getCompositionEngineLayerFE)<SUB>2060</SUB>> ]
-"4728" [label = <(FIELD_IDENTIFIER,layersWithQueuedFrames,layersWithQueuedFrames)<SUB>2061</SUB>> ]
-"4655" [label = <(METHOD,onMessageRefresh)<SUB>2043</SUB>> ]
-"4952" [label = <(METHOD_RETURN,void)<SUB>2043</SUB>> ]
-  "4657" -> "4658" 
-  "4658" -> "4665" 
-  "4663" -> "4673" 
-  "4669" -> "4689" 
-  "4669" -> "4698" 
-  "4695" -> "4704" 
-  "4700" -> "4722" 
-  "4731" -> "4743" 
-  "4740" -> "4755" 
-  "4752" -> "4760" 
-  "4757" -> "4765" 
-  "4762" -> "4770" 
-  "4767" -> "4777" 
-  "4774" -> "4782" 
-  "4779" -> "4791" 
-  "4805" -> "4813" 
-  "4833" -> "4839" 
-  "4837" -> "4843" 
-  "4840" -> "4848" 
-  "4845" -> "4851" 
-  "4851" -> "4857" 
-  "4854" -> "4859" 
-  "4859" -> "4860" 
-  "4860" -> "4862" 
-  "4862" -> "4870" 
-  "4865" -> "4885" 
-  "4880" -> "4900" 
-  "4895" -> "4911" 
-  "4919" -> "4929" 
-  "4926" -> "4933" 
-  "4926" -> "4949" 
-  "4665" -> "4668" 
-  "4665" -> "4663" 
-  "4670" -> "4678" 
-  "4675" -> "4669" 
-  "4696" -> "4699" 
-  "4699" -> "4695" 
-  "4701" -> "4709" 
-  "4706" -> "4700" 
-  "4732" -> "4738" 
-  "4735" -> "4731" 
-  "4741" -> "4744" 
-  "4741" -> "4748" 
-  "4744" -> "4740" 
-  "4753" -> "4752" 
-  "4758" -> "4757" 
-  "4763" -> "4762" 
-  "4768" -> "4771" 
-  "4771" -> "4767" 
-  "4775" -> "4774" 
-  "4780" -> "4786" 
-  "4783" -> "4779" 
-  "4788" -> "4796" 
-  "4788" -> "4808" 
-  "4806" -> "4809" 
-  "4809" -> "4805" 
-  "4813" -> "4820" 
-  "4813" -> "4833" 
-  "4839" -> "4837" 
-  "4841" -> "4840" 
-  "4846" -> "4850" 
-  "4850" -> "4845" 
-  "4855" -> "4854" 
-  "4867" -> "4865" 
-  "4882" -> "4880" 
-  "4897" -> "4895" 
-  "4911" -> "4918" 
-  "4911" -> "4922" 
-  "4920" -> "4923" 
-  "4923" -> "4919" 
-  "4927" -> "4926" 
-  "4946" -> "4951" 
-  "4946" -> "4952" 
-  "4671" -> "4674" 
-  "4674" -> "4670" 
-  "4676" -> "4675" 
-  "4685" -> "4689" 
-  "4685" -> "4698" 
-  "4698" -> "4696" 
-  "4702" -> "4705" 
-  "4705" -> "4701" 
-  "4707" -> "4706" 
-  "4734" -> "4732" 
-  "4736" -> "4735" 
-  "4743" -> "4741" 
-  "4747" -> "4744" 
-  "4755" -> "4753" 
-  "4760" -> "4758" 
-  "4765" -> "4763" 
-  "4770" -> "4768" 
-  "4777" -> "4775" 
-  "4782" -> "4780" 
-  "4784" -> "4783" 
-  "4789" -> "4788" 
-  "4793" -> "4803" 
-  "4800" -> "4808" 
-  "4808" -> "4806" 
-  "4817" -> "4833" 
-  "4843" -> "4841" 
-  "4848" -> "4846" 
-  "4857" -> "4855" 
-  "4868" -> "4874" 
-  "4871" -> "4878" 
-  "4875" -> "4879" 
-  "4879" -> "4867" 
-  "4883" -> "4889" 
-  "4886" -> "4893" 
-  "4890" -> "4894" 
-  "4894" -> "4882" 
-  "4898" -> "4904" 
-  "4901" -> "4908" 
-  "4905" -> "4909" 
-  "4909" -> "4897" 
-  "4915" -> "4922" 
-  "4922" -> "4920" 
-  "4929" -> "4927" 
-  "4947" -> "4946" 
-  "4951" -> "4952" 
-  "4667" -> "4663" 
-  "4673" -> "4671" 
-  "4678" -> "4676" 
+"4673" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2043</SUB>> ]
+"4674" [label = <(&lt;operator&gt;.assignment,mRefreshPending = false)<SUB>2045</SUB>> ]
+"4679" [label = <(&lt;operator&gt;.assignment,&amp; displays = ON_MAIN_THREAD(mDisplays))<SUB>2048</SUB>> ]
+"4685" [label = <(reserve,refreshArgs.outputs.reserve(displays.size()))<SUB>2049</SUB>> ]
+"4711" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;refreshArgs](Layer* layer) {\012 if (auto layerFE = layer-&gt;getCompositionEngineLayerFE())\012            refreshArgs.layers.push_back(layerFE);\012 }))<SUB>2053</SUB>> ]
+"4716" [label = <(reserve,refreshArgs.layersWithQueuedFrames.reserve(mLayersWithQueuedFrames.size()))<SUB>2057</SUB>> ]
+"4747" [label = <(&lt;operator&gt;.assignment,refreshArgs.repaintEverything = mRepaintEverything.exchange(false))<SUB>2063</SUB>> ]
+"4756" [label = <(&lt;operator&gt;.assignment,refreshArgs.outputColorSetting = useColorManagement\012 ? mDisplayColorSetting\012 : compositionengine::OutputColorSetting::kUnmanaged)<SUB>2064</SUB>> ]
+"4768" [label = <(&lt;operator&gt;.assignment,refreshArgs.colorSpaceAgnosticDataspace = mColorSpaceAgnosticDataspace)<SUB>2067</SUB>> ]
+"4773" [label = <(&lt;operator&gt;.assignment,refreshArgs.forceOutputColorMode = mForceColorMode)<SUB>2068</SUB>> ]
+"4778" [label = <(&lt;operator&gt;.assignment,refreshArgs.updatingOutputGeometryThisFrame = mVisibleRegionsDirty)<SUB>2070</SUB>> ]
+"4783" [label = <(&lt;operator&gt;.assignment,refreshArgs.updatingGeometryThisFrame = mGeometryInvalid || mVisibleRegionsDirty)<SUB>2071</SUB>> ]
+"4790" [label = <(&lt;operator&gt;.assignment,refreshArgs.blursAreExpensive = mBlursAreExpensive)<SUB>2072</SUB>> ]
+"4795" [label = <(&lt;operator&gt;.assignment,refreshArgs.internalDisplayRotationFlags = DisplayDevice::getPrimaryDisplayRotationFlags())<SUB>2073</SUB>> ]
+"4821" [label = <(&lt;operator&gt;.assignment,refreshArgs.devOptForceClientComposition = mDebugDisableHWC || mDebugRegion)<SUB>2080</SUB>> ]
+"4849" [label = <(&lt;operator&gt;.assignment,mGeometryInvalid = false)<SUB>2087</SUB>> ]
+"4853" [label = <(&lt;operator&gt;.assignment,presentTime = systemTime())<SUB>2091</SUB>> ]
+"4856" [label = <(present,mCompositionEngine-&gt;present(refreshArgs))<SUB>2093</SUB>> ]
+"4861" [label = <(recordFrameDuration,mTimeStats-&gt;recordFrameDuration(mFrameStartTime, systemTime()))<SUB>2094</SUB>> ]
+"4867" [label = <(&lt;operator&gt;.assignment,mFrameStartTime = 0)<SUB>2096</SUB>> ]
+"4870" [label = <(onDisplayRefreshed,mScheduler-&gt;onDisplayRefreshed(presentTime))<SUB>2098</SUB>> ]
+"4875" [label = <(postFrame,postFrame())<SUB>2100</SUB>> ]
+"4876" [label = <(postComposition,postComposition())<SUB>2101</SUB>> ]
+"4878" [label = <(&lt;operator&gt;.assignment,prevFrameHadDeviceComposition = mHadDeviceComposition)<SUB>2103</SUB>> ]
+"4881" [label = <(&lt;operator&gt;.assignment,mHadClientComposition = std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2105</SUB>> ]
+"4896" [label = <(&lt;operator&gt;.assignment,mHadDeviceComposition = std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2109</SUB>> ]
+"4911" [label = <(&lt;operator&gt;.assignment,mReusedClientComposition =\012            std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2113</SUB>> ]
+"4935" [label = <(onRefreshed,mVSyncModulator-&gt;onRefreshed(mHadClientComposition || mReusedClientComposition))<SUB>2125</SUB>> ]
+"4942" [label = <(clear,mLayersWithQueuedFrames.clear())<SUB>2127</SUB>> ]
+"4681" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>2048</SUB>> ]
+"4686" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.reserve)<SUB>2049</SUB>> ]
+"4691" [label = <(size,displays.size())<SUB>2049</SUB>> ]
+"4712" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>2053</SUB>> ]
+"4715" [label = <(METHOD_REF,ANY anonymous_lambda_18 (Layer* layer),mDrawingState.traverseInZOrder([&amp;refreshArgs](Layer* layer) {\012 if (auto layerFE = layer-&gt;getCompositionEngineLayerFE())\012            refreshArgs.layers.push_back(layerFE);\012 }))<SUB>2053</SUB>> ]
+"4717" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames.reserve)<SUB>2057</SUB>> ]
+"4722" [label = <(size,mLayersWithQueuedFrames.size())<SUB>2057</SUB>> ]
+"4748" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.repaintEverything)<SUB>2063</SUB>> ]
+"4751" [label = <(exchange,mRepaintEverything.exchange(false))<SUB>2063</SUB>> ]
+"4757" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputColorSetting)<SUB>2064</SUB>> ]
+"4760" [label = <(&lt;operator&gt;.conditional,useColorManagement\012 ? mDisplayColorSetting\012 : compositionengine::OutputColorSetting::kUnmanaged)<SUB>2064</SUB>> ]
+"4769" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.colorSpaceAgnosticDataspace)<SUB>2067</SUB>> ]
+"4774" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.forceOutputColorMode)<SUB>2068</SUB>> ]
+"4779" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.updatingOutputGeometryThisFrame)<SUB>2070</SUB>> ]
+"4784" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.updatingGeometryThisFrame)<SUB>2071</SUB>> ]
+"4787" [label = <(&lt;operator&gt;.logicalOr,mGeometryInvalid || mVisibleRegionsDirty)<SUB>2071</SUB>> ]
+"4791" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.blursAreExpensive)<SUB>2072</SUB>> ]
+"4796" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.internalDisplayRotationFlags)<SUB>2073</SUB>> ]
+"4799" [label = <(DisplayDevice::getPrimaryDisplayRotationFlags,DisplayDevice::getPrimaryDisplayRotationFlags())<SUB>2073</SUB>> ]
+"4804" [label = <(CC_UNLIKELY,CC_UNLIKELY(mDrawingState.colorMatrixChanged))<SUB>2075</SUB>> ]
+"4822" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.devOptForceClientComposition)<SUB>2080</SUB>> ]
+"4825" [label = <(&lt;operator&gt;.logicalOr,mDebugDisableHWC || mDebugRegion)<SUB>2080</SUB>> ]
+"4829" [label = <(&lt;operator&gt;.notEquals,mDebugRegion != 0)<SUB>2082</SUB>> ]
+"4855" [label = <(systemTime,systemTime())<SUB>2091</SUB>> ]
+"4857" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;present)<SUB>2093</SUB>> ]
+"4862" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;recordFrameDuration)<SUB>2094</SUB>> ]
+"4866" [label = <(systemTime,systemTime())<SUB>2094</SUB>> ]
+"4871" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onDisplayRefreshed)<SUB>2098</SUB>> ]
+"4883" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2105</SUB>> ]
+"4898" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2109</SUB>> ]
+"4913" [label = <(std::any_of,std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2114</SUB>> ]
+"4927" [label = <(&lt;operator&gt;.notEquals,prevFrameHadDeviceComposition != mHadDeviceComposition)<SUB>2120</SUB>> ]
+"4936" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshed)<SUB>2125</SUB>> ]
+"4939" [label = <(&lt;operator&gt;.logicalOr,mHadClientComposition || mReusedClientComposition)<SUB>2125</SUB>> ]
+"4943" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.clear)<SUB>2127</SUB>> ]
+"4962" [label = <(needsAnotherUpdate,mCompositionEngine-&gt;needsAnotherUpdate())<SUB>2135</SUB>> ]
+"4687" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2049</SUB>> ]
+"4690" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2049</SUB>> ]
+"4692" [label = <(&lt;operator&gt;.fieldAccess,displays.size)<SUB>2049</SUB>> ]
+"4701" [label = <(push_back,refreshArgs.outputs.push_back(display-&gt;getCompositionDisplay()))<SUB>2051</SUB>> ]
+"4714" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>2053</SUB>> ]
+"4718" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames)<SUB>2057</SUB>> ]
+"4721" [label = <(FIELD_IDENTIFIER,reserve,reserve)<SUB>2057</SUB>> ]
+"4723" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.size)<SUB>2057</SUB>> ]
+"4750" [label = <(FIELD_IDENTIFIER,repaintEverything,repaintEverything)<SUB>2063</SUB>> ]
+"4752" [label = <(&lt;operator&gt;.fieldAccess,mRepaintEverything.exchange)<SUB>2063</SUB>> ]
+"4759" [label = <(FIELD_IDENTIFIER,outputColorSetting,outputColorSetting)<SUB>2064</SUB>> ]
+"4763" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::OutputColorSetting::kUnmanaged)<SUB>2066</SUB>> ]
+"4771" [label = <(FIELD_IDENTIFIER,colorSpaceAgnosticDataspace,colorSpaceAgnosticDataspace)<SUB>2067</SUB>> ]
+"4776" [label = <(FIELD_IDENTIFIER,forceOutputColorMode,forceOutputColorMode)<SUB>2068</SUB>> ]
+"4781" [label = <(FIELD_IDENTIFIER,updatingOutputGeometryThisFrame,updatingOutputGeometryThisFrame)<SUB>2070</SUB>> ]
+"4786" [label = <(FIELD_IDENTIFIER,updatingGeometryThisFrame,updatingGeometryThisFrame)<SUB>2071</SUB>> ]
+"4793" [label = <(FIELD_IDENTIFIER,blursAreExpensive,blursAreExpensive)<SUB>2072</SUB>> ]
+"4798" [label = <(FIELD_IDENTIFIER,internalDisplayRotationFlags,internalDisplayRotationFlags)<SUB>2073</SUB>> ]
+"4800" [label = <(&lt;operator&gt;.fieldAccess,DisplayDevice::getPrimaryDisplayRotationFlags)<SUB>2073</SUB>> ]
+"4805" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrixChanged)<SUB>2075</SUB>> ]
+"4809" [label = <(&lt;operator&gt;.assignment,refreshArgs.colorTransformMatrix = mDrawingState.colorMatrix)<SUB>2076</SUB>> ]
+"4816" [label = <(&lt;operator&gt;.assignment,mDrawingState.colorMatrixChanged = false)<SUB>2077</SUB>> ]
+"4824" [label = <(FIELD_IDENTIFIER,devOptForceClientComposition,devOptForceClientComposition)<SUB>2080</SUB>> ]
+"4833" [label = <(&lt;operator&gt;.assignment,refreshArgs.devOptFlashDirtyRegionsDelay =\012                std::chrono::milliseconds(mDebugRegion &gt; 1 ? mDebugRegion : 0))<SUB>2083</SUB>> ]
+"4859" [label = <(FIELD_IDENTIFIER,present,present)<SUB>2093</SUB>> ]
+"4864" [label = <(FIELD_IDENTIFIER,recordFrameDuration,recordFrameDuration)<SUB>2094</SUB>> ]
+"4873" [label = <(FIELD_IDENTIFIER,onDisplayRefreshed,onDisplayRefreshed)<SUB>2098</SUB>> ]
+"4884" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2105</SUB>> ]
+"4887" [label = <(cbegin,displays.cbegin())<SUB>2105</SUB>> ]
+"4891" [label = <(cend,displays.cend())<SUB>2105</SUB>> ]
+"4895" [label = <(METHOD_REF,ANY anonymous_lambda_19 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesClientComposition &amp;&amp; !state.reusedClientComposition;\012 }))<SUB>2105</SUB>> ]
+"4899" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2109</SUB>> ]
+"4902" [label = <(cbegin,displays.cbegin())<SUB>2109</SUB>> ]
+"4906" [label = <(cend,displays.cend())<SUB>2109</SUB>> ]
+"4910" [label = <(METHOD_REF,ANY anonymous_lambda_20 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.usesDeviceComposition;\012 }))<SUB>2109</SUB>> ]
+"4914" [label = <(&lt;operator&gt;.fieldAccess,std::any_of)<SUB>2114</SUB>> ]
+"4917" [label = <(cbegin,displays.cbegin())<SUB>2114</SUB>> ]
+"4921" [label = <(cend,displays.cend())<SUB>2114</SUB>> ]
+"4925" [label = <(METHOD_REF,ANY anonymous_lambda_21 (const auto&amp; pair),std::any_of(displays.cbegin(), displays.cend(), [](const auto&amp; pair) {\012 const auto&amp; state = pair.second-&gt;getCompositionDisplay()-&gt;getState();\012 return state.reusedClientComposition;\012 }))<SUB>2114</SUB>> ]
+"4931" [label = <(incrementCompositionStrategyChanges,mTimeStats-&gt;incrementCompositionStrategyChanges())<SUB>2121</SUB>> ]
+"4938" [label = <(FIELD_IDENTIFIER,onRefreshed,onRefreshed)<SUB>2125</SUB>> ]
+"4945" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2127</SUB>> ]
+"4949" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = false)<SUB>2129</SUB>> ]
+"4963" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;needsAnotherUpdate)<SUB>2135</SUB>> ]
+"4967" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>2136</SUB>> ]
+"4683" [label = <(android.SurfaceFlinger.onMessageRefresh.anonymous_lambda_17,())<SUB>2048</SUB>> ]
+"4689" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2049</SUB>> ]
+"4694" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2049</SUB>> ]
+"4702" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.push_back)<SUB>2051</SUB>> ]
+"4707" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2051</SUB>> ]
+"4720" [label = <(FIELD_IDENTIFIER,layersWithQueuedFrames,layersWithQueuedFrames)<SUB>2057</SUB>> ]
+"4725" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2057</SUB>> ]
+"4754" [label = <(FIELD_IDENTIFIER,exchange,exchange)<SUB>2063</SUB>> ]
+"4764" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::OutputColorSetting)<SUB>2066</SUB>> ]
+"4767" [label = <(FIELD_IDENTIFIER,kUnmanaged,kUnmanaged)<SUB>2066</SUB>> ]
+"4802" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayRotationFlags,getPrimaryDisplayRotationFlags)<SUB>2073</SUB>> ]
+"4807" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>2075</SUB>> ]
+"4810" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.colorTransformMatrix)<SUB>2076</SUB>> ]
+"4813" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrix)<SUB>2076</SUB>> ]
+"4817" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.colorMatrixChanged)<SUB>2077</SUB>> ]
+"4834" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.devOptFlashDirtyRegionsDelay)<SUB>2083</SUB>> ]
+"4837" [label = <(std::chrono::milliseconds,std::chrono::milliseconds(mDebugRegion &gt; 1 ? mDebugRegion : 0))<SUB>2084</SUB>> ]
+"4886" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2105</SUB>> ]
+"4888" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2105</SUB>> ]
+"4892" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2105</SUB>> ]
+"4901" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2109</SUB>> ]
+"4903" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2109</SUB>> ]
+"4907" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2109</SUB>> ]
+"4916" [label = <(FIELD_IDENTIFIER,any_of,any_of)<SUB>2114</SUB>> ]
+"4918" [label = <(&lt;operator&gt;.fieldAccess,displays.cbegin)<SUB>2114</SUB>> ]
+"4922" [label = <(&lt;operator&gt;.fieldAccess,displays.cend)<SUB>2114</SUB>> ]
+"4932" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementCompositionStrategyChanges)<SUB>2121</SUB>> ]
+"4965" [label = <(FIELD_IDENTIFIER,needsAnotherUpdate,needsAnotherUpdate)<SUB>2135</SUB>> ]
+"4684" [label = <(METHOD_REF,ANY anonymous_lambda_17 (),())<SUB>2048</SUB>> ]
+"4703" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2051</SUB>> ]
+"4706" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2051</SUB>> ]
+"4708" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2051</SUB>> ]
+"4733" [label = <(&lt;operator&gt;.assignment,layerFE = layer-&gt;getCompositionEngineLayerFE())<SUB>2059</SUB>> ]
+"4740" [label = <(push_back,refreshArgs.layersWithQueuedFrames.push_back(layerFE))<SUB>2060</SUB>> ]
+"4812" [label = <(FIELD_IDENTIFIER,colorTransformMatrix,colorTransformMatrix)<SUB>2076</SUB>> ]
+"4815" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>2076</SUB>> ]
+"4819" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>2077</SUB>> ]
+"4836" [label = <(FIELD_IDENTIFIER,devOptFlashDirtyRegionsDelay,devOptFlashDirtyRegionsDelay)<SUB>2083</SUB>> ]
+"4838" [label = <(&lt;operator&gt;.fieldAccess,std::chrono::milliseconds)<SUB>2084</SUB>> ]
+"4843" [label = <(&lt;operator&gt;.conditional,mDebugRegion &gt; 1 ? mDebugRegion : 0)<SUB>2084</SUB>> ]
+"4890" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2105</SUB>> ]
+"4894" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2105</SUB>> ]
+"4905" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2109</SUB>> ]
+"4909" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2109</SUB>> ]
+"4920" [label = <(FIELD_IDENTIFIER,cbegin,cbegin)<SUB>2114</SUB>> ]
+"4924" [label = <(FIELD_IDENTIFIER,cend,cend)<SUB>2114</SUB>> ]
+"4934" [label = <(FIELD_IDENTIFIER,incrementCompositionStrategyChanges,incrementCompositionStrategyChanges)<SUB>2121</SUB>> ]
+"4956" [label = <(notify,mTracing.notify(&quot;visibleRegionsDirty&quot;))<SUB>2131</SUB>> ]
+"4705" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2051</SUB>> ]
+"4710" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2051</SUB>> ]
+"4735" [label = <(getCompositionEngineLayerFE,layer-&gt;getCompositionEngineLayerFE())<SUB>2059</SUB>> ]
+"4741" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames.push_back)<SUB>2060</SUB>> ]
+"4839" [label = <(&lt;operator&gt;.fieldAccess,std::chrono)<SUB>2084</SUB>> ]
+"4842" [label = <(FIELD_IDENTIFIER,milliseconds,milliseconds)<SUB>2084</SUB>> ]
+"4844" [label = <(&lt;operator&gt;.greaterThan,mDebugRegion &gt; 1)<SUB>2084</SUB>> ]
+"4957" [label = <(&lt;operator&gt;.fieldAccess,mTracing.notify)<SUB>2131</SUB>> ]
+"4736" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getCompositionEngineLayerFE)<SUB>2059</SUB>> ]
+"4742" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.layersWithQueuedFrames)<SUB>2060</SUB>> ]
+"4745" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2060</SUB>> ]
+"4959" [label = <(FIELD_IDENTIFIER,notify,notify)<SUB>2131</SUB>> ]
+"4738" [label = <(FIELD_IDENTIFIER,getCompositionEngineLayerFE,getCompositionEngineLayerFE)<SUB>2059</SUB>> ]
+"4744" [label = <(FIELD_IDENTIFIER,layersWithQueuedFrames,layersWithQueuedFrames)<SUB>2060</SUB>> ]
+"4671" [label = <(METHOD,onMessageRefresh)<SUB>2042</SUB>> ]
+"4968" [label = <(METHOD_RETURN,void)<SUB>2042</SUB>> ]
+  "4673" -> "4674" 
+  "4674" -> "4681" 
+  "4679" -> "4689" 
+  "4685" -> "4705" 
+  "4685" -> "4714" 
+  "4711" -> "4720" 
+  "4716" -> "4738" 
+  "4747" -> "4759" 
+  "4756" -> "4771" 
+  "4768" -> "4776" 
+  "4773" -> "4781" 
+  "4778" -> "4786" 
+  "4783" -> "4793" 
+  "4790" -> "4798" 
+  "4795" -> "4807" 
+  "4821" -> "4829" 
+  "4849" -> "4855" 
+  "4853" -> "4859" 
+  "4856" -> "4864" 
+  "4861" -> "4867" 
+  "4867" -> "4873" 
+  "4870" -> "4875" 
+  "4875" -> "4876" 
+  "4876" -> "4878" 
+  "4878" -> "4886" 
+  "4881" -> "4901" 
+  "4896" -> "4916" 
+  "4911" -> "4927" 
+  "4935" -> "4945" 
+  "4942" -> "4949" 
+  "4942" -> "4965" 
+  "4681" -> "4684" 
+  "4681" -> "4679" 
   "4686" -> "4694" 
   "4691" -> "4685" 
-  "4704" -> "4702" 
-  "4709" -> "4707" 
-  "4738" -> "4736" 
-  "4748" -> "4751" 
+  "4712" -> "4715" 
+  "4715" -> "4711" 
+  "4717" -> "4725" 
+  "4722" -> "4716" 
+  "4748" -> "4754" 
   "4751" -> "4747" 
-  "4786" -> "4784" 
-  "4791" -> "4789" 
-  "4794" -> "4799" 
-  "4797" -> "4793" 
-  "4801" -> "4800" 
-  "4818" -> "4823" 
-  "4821" -> "4817" 
-  "4870" -> "4868" 
-  "4872" -> "4871" 
-  "4876" -> "4875" 
-  "4885" -> "4883" 
-  "4887" -> "4886" 
-  "4891" -> "4890" 
-  "4900" -> "4898" 
-  "4902" -> "4901" 
-  "4906" -> "4905" 
-  "4916" -> "4915" 
-  "4949" -> "4947" 
-  "4668" -> "4667" 
+  "4757" -> "4760" 
+  "4757" -> "4764" 
+  "4760" -> "4756" 
+  "4769" -> "4768" 
+  "4774" -> "4773" 
+  "4779" -> "4778" 
+  "4784" -> "4787" 
+  "4787" -> "4783" 
+  "4791" -> "4790" 
+  "4796" -> "4802" 
+  "4799" -> "4795" 
+  "4804" -> "4812" 
+  "4804" -> "4824" 
+  "4822" -> "4825" 
+  "4825" -> "4821" 
+  "4829" -> "4836" 
+  "4829" -> "4849" 
+  "4855" -> "4853" 
+  "4857" -> "4856" 
+  "4862" -> "4866" 
+  "4866" -> "4861" 
+  "4871" -> "4870" 
+  "4883" -> "4881" 
+  "4898" -> "4896" 
+  "4913" -> "4911" 
+  "4927" -> "4934" 
+  "4927" -> "4938" 
+  "4936" -> "4939" 
+  "4939" -> "4935" 
+  "4943" -> "4942" 
+  "4962" -> "4967" 
+  "4962" -> "4968" 
   "4687" -> "4690" 
   "4690" -> "4686" 
   "4692" -> "4691" 
-  "4717" -> "4722" 
-  "4717" -> "4728" 
-  "4717" -> "4734" 
-  "4724" -> "4722" 
-  "4724" -> "4734" 
-  "4796" -> "4794" 
-  "4799" -> "4797" 
-  "4803" -> "4801" 
-  "4820" -> "4818" 
-  "4822" -> "4828" 
-  "4827" -> "4821" 
-  "4874" -> "4872" 
-  "4878" -> "4876" 
-  "4889" -> "4887" 
-  "4893" -> "4891" 
-  "4904" -> "4902" 
-  "4908" -> "4906" 
-  "4918" -> "4916" 
-  "4940" -> "4949" 
+  "4701" -> "4705" 
+  "4701" -> "4714" 
+  "4714" -> "4712" 
+  "4718" -> "4721" 
+  "4721" -> "4717" 
+  "4723" -> "4722" 
+  "4750" -> "4748" 
+  "4752" -> "4751" 
+  "4759" -> "4757" 
+  "4763" -> "4760" 
+  "4771" -> "4769" 
+  "4776" -> "4774" 
+  "4781" -> "4779" 
+  "4786" -> "4784" 
+  "4793" -> "4791" 
+  "4798" -> "4796" 
+  "4800" -> "4799" 
+  "4805" -> "4804" 
+  "4809" -> "4819" 
+  "4816" -> "4824" 
+  "4824" -> "4822" 
+  "4833" -> "4849" 
+  "4859" -> "4857" 
+  "4864" -> "4862" 
+  "4873" -> "4871" 
+  "4884" -> "4890" 
+  "4887" -> "4894" 
+  "4891" -> "4895" 
+  "4895" -> "4883" 
+  "4899" -> "4905" 
+  "4902" -> "4909" 
+  "4906" -> "4910" 
+  "4910" -> "4898" 
+  "4914" -> "4920" 
+  "4917" -> "4924" 
+  "4921" -> "4925" 
+  "4925" -> "4913" 
+  "4931" -> "4938" 
+  "4938" -> "4936" 
+  "4945" -> "4943" 
+  "4963" -> "4962" 
+  "4967" -> "4968" 
+  "4683" -> "4679" 
   "4689" -> "4687" 
   "4694" -> "4692" 
-  "4719" -> "4717" 
-  "4725" -> "4724" 
-  "4823" -> "4826" 
-  "4826" -> "4822" 
-  "4828" -> "4827" 
-  "4941" -> "4940" 
-  "4720" -> "4719" 
-  "4726" -> "4729" 
-  "4729" -> "4725" 
-  "4943" -> "4941" 
-  "4722" -> "4720" 
-  "4728" -> "4726" 
-  "4655" -> "4657" 
+  "4702" -> "4710" 
+  "4707" -> "4701" 
+  "4720" -> "4718" 
+  "4725" -> "4723" 
+  "4754" -> "4752" 
+  "4764" -> "4767" 
+  "4767" -> "4763" 
+  "4802" -> "4800" 
+  "4807" -> "4805" 
+  "4810" -> "4815" 
+  "4813" -> "4809" 
+  "4817" -> "4816" 
+  "4834" -> "4839" 
+  "4837" -> "4833" 
+  "4886" -> "4884" 
+  "4888" -> "4887" 
+  "4892" -> "4891" 
+  "4901" -> "4899" 
+  "4903" -> "4902" 
+  "4907" -> "4906" 
+  "4916" -> "4914" 
+  "4918" -> "4917" 
+  "4922" -> "4921" 
+  "4932" -> "4931" 
+  "4965" -> "4963" 
+  "4684" -> "4683" 
+  "4703" -> "4706" 
+  "4706" -> "4702" 
+  "4708" -> "4707" 
+  "4733" -> "4738" 
+  "4733" -> "4744" 
+  "4733" -> "4750" 
+  "4740" -> "4738" 
+  "4740" -> "4750" 
+  "4812" -> "4810" 
+  "4815" -> "4813" 
+  "4819" -> "4817" 
+  "4836" -> "4834" 
+  "4838" -> "4844" 
+  "4843" -> "4837" 
+  "4890" -> "4888" 
+  "4894" -> "4892" 
+  "4905" -> "4903" 
+  "4909" -> "4907" 
+  "4920" -> "4918" 
+  "4924" -> "4922" 
+  "4934" -> "4932" 
+  "4956" -> "4965" 
+  "4705" -> "4703" 
+  "4710" -> "4708" 
+  "4735" -> "4733" 
+  "4741" -> "4740" 
+  "4839" -> "4842" 
+  "4842" -> "4838" 
+  "4844" -> "4843" 
+  "4957" -> "4956" 
+  "4736" -> "4735" 
+  "4742" -> "4745" 
+  "4745" -> "4741" 
+  "4959" -> "4957" 
+  "4738" -> "4736" 
+  "4744" -> "4742" 
+  "4671" -> "4673" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/155-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/155-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/155-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/155-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,37 +1,37 @@
 digraph "handleMessageInvalidate" {  
-"4956" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2142</SUB>> ]
-"4958" [label = <(&lt;operator&gt;.assignment,refreshNeeded = handlePageFlip())<SUB>2143</SUB>> ]
-"4981" [label = <(clear,mLayersPendingRefresh.clear())<SUB>2154</SUB>> ]
-"4985" [label = <(RETURN,return refreshNeeded;,return refreshNeeded;)<SUB>2155</SUB>> ]
-"4960" [label = <(handlePageFlip,handlePageFlip())<SUB>2143</SUB>> ]
-"4982" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRefresh.clear)<SUB>2154</SUB>> ]
-"4964" [label = <(computeLayerBounds,computeLayerBounds())<SUB>2146</SUB>> ]
-"4970" [label = <(set,visibleReg.set(layer-&gt;getScreenBounds()))<SUB>2151</SUB>> ]
-"4978" [label = <(invalidateLayerStack,invalidateLayerStack(layer, visibleReg))<SUB>2152</SUB>> ]
-"4984" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2154</SUB>> ]
-"4971" [label = <(&lt;operator&gt;.fieldAccess,visibleReg.set)<SUB>2151</SUB>> ]
-"4974" [label = <(getScreenBounds,layer-&gt;getScreenBounds())<SUB>2151</SUB>> ]
-"4973" [label = <(FIELD_IDENTIFIER,set,set)<SUB>2151</SUB>> ]
-"4975" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getScreenBounds)<SUB>2151</SUB>> ]
-"4977" [label = <(FIELD_IDENTIFIER,getScreenBounds,getScreenBounds)<SUB>2151</SUB>> ]
-"4954" [label = <(METHOD,handleMessageInvalidate)<SUB>2141</SUB>> ]
-"4987" [label = <(METHOD_RETURN,bool)<SUB>2141</SUB>> ]
-  "4956" -> "4960" 
-  "4958" -> "4964" 
-  "4958" -> "4973" 
-  "4981" -> "4985" 
-  "4985" -> "4987" 
-  "4960" -> "4958" 
-  "4982" -> "4981" 
-  "4964" -> "4973" 
-  "4970" -> "4978" 
-  "4978" -> "4973" 
-  "4978" -> "4984" 
-  "4984" -> "4982" 
-  "4971" -> "4977" 
-  "4974" -> "4970" 
-  "4973" -> "4971" 
-  "4975" -> "4974" 
-  "4977" -> "4975" 
-  "4954" -> "4956" 
+"4972" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2141</SUB>> ]
+"4974" [label = <(&lt;operator&gt;.assignment,refreshNeeded = handlePageFlip())<SUB>2142</SUB>> ]
+"4997" [label = <(clear,mLayersPendingRefresh.clear())<SUB>2153</SUB>> ]
+"5001" [label = <(RETURN,return refreshNeeded;,return refreshNeeded;)<SUB>2154</SUB>> ]
+"4976" [label = <(handlePageFlip,handlePageFlip())<SUB>2142</SUB>> ]
+"4998" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRefresh.clear)<SUB>2153</SUB>> ]
+"4980" [label = <(computeLayerBounds,computeLayerBounds())<SUB>2145</SUB>> ]
+"4986" [label = <(set,visibleReg.set(layer-&gt;getScreenBounds()))<SUB>2150</SUB>> ]
+"4994" [label = <(invalidateLayerStack,invalidateLayerStack(layer, visibleReg))<SUB>2151</SUB>> ]
+"5000" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2153</SUB>> ]
+"4987" [label = <(&lt;operator&gt;.fieldAccess,visibleReg.set)<SUB>2150</SUB>> ]
+"4990" [label = <(getScreenBounds,layer-&gt;getScreenBounds())<SUB>2150</SUB>> ]
+"4989" [label = <(FIELD_IDENTIFIER,set,set)<SUB>2150</SUB>> ]
+"4991" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getScreenBounds)<SUB>2150</SUB>> ]
+"4993" [label = <(FIELD_IDENTIFIER,getScreenBounds,getScreenBounds)<SUB>2150</SUB>> ]
+"4970" [label = <(METHOD,handleMessageInvalidate)<SUB>2140</SUB>> ]
+"5003" [label = <(METHOD_RETURN,bool)<SUB>2140</SUB>> ]
+  "4972" -> "4976" 
+  "4974" -> "4980" 
+  "4974" -> "4989" 
+  "4997" -> "5001" 
+  "5001" -> "5003" 
+  "4976" -> "4974" 
+  "4998" -> "4997" 
+  "4980" -> "4989" 
+  "4986" -> "4994" 
+  "4994" -> "4989" 
+  "4994" -> "5000" 
+  "5000" -> "4998" 
+  "4987" -> "4993" 
+  "4990" -> "4986" 
+  "4989" -> "4987" 
+  "4991" -> "4990" 
+  "4993" -> "4991" 
+  "4970" -> "4972" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/156-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/156-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/156-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/156-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,120 +1,120 @@
 digraph "updateCompositorTiming" {  
-"4994" [label = <(push,getBE().mCompositePresentTimes.push({compositeTime, presentFenceTime}))<SUB>2162</SUB>> ]
-"5004" [label = <(&lt;operator&gt;.assignment,compositeToPresentLatency = -1)<SUB>2163</SUB>> ]
-"5072" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, compositeToPresentLatency))<SUB>2181</SUB>> ]
-"4995" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.push)<SUB>2162</SUB>> ]
-"5000" [label = <(&lt;operator&gt;.arrayInitializer,{compositeTime, presentFenceTime})<SUB>2162</SUB>> ]
-"5006" [label = <(&lt;operator&gt;.minus,-1)<SUB>2163</SUB>> ]
-"5009" [label = <(&lt;operator&gt;.logicalNot,!getBE().mCompositePresentTimes.empty())<SUB>2164</SUB>> ]
-"5057" [label = <(&lt;operator&gt;.greaterThan,getBE().mCompositePresentTimes.size() &gt; 16)<SUB>2177</SUB>> ]
-"4996" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2162</SUB>> ]
-"4999" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2162</SUB>> ]
-"5010" [label = <(empty,getBE().mCompositePresentTimes.empty())<SUB>2164</SUB>> ]
-"5018" [label = <(&lt;operator&gt;.assignment,&amp; cpt = getBE().mCompositePresentTimes.front())<SUB>2165</SUB>> ]
-"5027" [label = <(&lt;operator&gt;.assignment,displayTime = cpt.display-&gt;getCachedSignalTime())<SUB>2168</SUB>> ]
-"5043" [label = <(&lt;operator&gt;.assignment,compositeToPresentLatency = displayTime - cpt.composite)<SUB>2172</SUB>> ]
-"5050" [label = <(pop,getBE().mCompositePresentTimes.pop())<SUB>2173</SUB>> ]
-"5058" [label = <(size,getBE().mCompositePresentTimes.size())<SUB>2177</SUB>> ]
-"5066" [label = <(pop,getBE().mCompositePresentTimes.pop())<SUB>2178</SUB>> ]
-"4997" [label = <(getBE,getBE())<SUB>2162</SUB>> ]
-"4998" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2162</SUB>> ]
-"5011" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.empty)<SUB>2164</SUB>> ]
-"5020" [label = <(front,getBE().mCompositePresentTimes.front())<SUB>2165</SUB>> ]
-"5029" [label = <(getCachedSignalTime,cpt.display-&gt;getCachedSignalTime())<SUB>2168</SUB>> ]
-"5036" [label = <(&lt;operator&gt;.equals,displayTime == Fence::SIGNAL_TIME_PENDING)<SUB>2169</SUB>> ]
-"5045" [label = <(&lt;operator&gt;.subtraction,displayTime - cpt.composite)<SUB>2172</SUB>> ]
-"5051" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.pop)<SUB>2173</SUB>> ]
-"5059" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.size)<SUB>2177</SUB>> ]
-"5067" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.pop)<SUB>2178</SUB>> ]
-"5012" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2164</SUB>> ]
-"5015" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>2164</SUB>> ]
-"5021" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.front)<SUB>2165</SUB>> ]
-"5030" [label = <(&lt;operator&gt;.indirectFieldAccess,cpt.display-&gt;getCachedSignalTime)<SUB>2168</SUB>> ]
-"5038" [label = <(&lt;operator&gt;.fieldAccess,Fence::SIGNAL_TIME_PENDING)<SUB>2169</SUB>> ]
-"5047" [label = <(&lt;operator&gt;.fieldAccess,cpt.composite)<SUB>2172</SUB>> ]
-"5052" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2173</SUB>> ]
-"5055" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>2173</SUB>> ]
-"5060" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2177</SUB>> ]
-"5063" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2177</SUB>> ]
-"5068" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2178</SUB>> ]
-"5071" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>2178</SUB>> ]
-"5013" [label = <(getBE,getBE())<SUB>2164</SUB>> ]
-"5014" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2164</SUB>> ]
-"5022" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2165</SUB>> ]
-"5025" [label = <(FIELD_IDENTIFIER,front,front)<SUB>2165</SUB>> ]
-"5031" [label = <(&lt;operator&gt;.fieldAccess,cpt.display)<SUB>2168</SUB>> ]
-"5034" [label = <(FIELD_IDENTIFIER,getCachedSignalTime,getCachedSignalTime)<SUB>2168</SUB>> ]
-"5040" [label = <(FIELD_IDENTIFIER,SIGNAL_TIME_PENDING,SIGNAL_TIME_PENDING)<SUB>2169</SUB>> ]
-"5049" [label = <(FIELD_IDENTIFIER,composite,composite)<SUB>2172</SUB>> ]
-"5053" [label = <(getBE,getBE())<SUB>2173</SUB>> ]
-"5054" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2173</SUB>> ]
-"5061" [label = <(getBE,getBE())<SUB>2177</SUB>> ]
-"5062" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2177</SUB>> ]
-"5069" [label = <(getBE,getBE())<SUB>2178</SUB>> ]
-"5070" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2178</SUB>> ]
-"5023" [label = <(getBE,getBE())<SUB>2165</SUB>> ]
-"5024" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2165</SUB>> ]
-"5033" [label = <(FIELD_IDENTIFIER,display,display)<SUB>2168</SUB>> ]
-"4989" [label = <(METHOD,updateCompositorTiming)<SUB>2158</SUB>> ]
-"5075" [label = <(METHOD_RETURN,void)<SUB>2158</SUB>> ]
-  "4994" -> "5006" 
-  "5004" -> "5013" 
-  "5072" -> "5075" 
-  "4995" -> "5000" 
-  "5000" -> "4994" 
-  "5006" -> "5004" 
-  "5009" -> "5061" 
-  "5009" -> "5023" 
-  "5057" -> "5069" 
-  "5057" -> "5072" 
-  "4996" -> "4999" 
-  "4999" -> "4995" 
-  "5010" -> "5009" 
-  "5018" -> "5033" 
-  "5027" -> "5040" 
-  "5043" -> "5053" 
-  "5050" -> "5013" 
-  "5058" -> "5057" 
-  "5066" -> "5061" 
-  "4997" -> "4998" 
-  "4998" -> "4996" 
-  "5011" -> "5010" 
-  "5020" -> "5018" 
-  "5029" -> "5027" 
-  "5036" -> "5061" 
-  "5036" -> "5049" 
-  "5045" -> "5043" 
-  "5051" -> "5050" 
-  "5059" -> "5058" 
-  "5067" -> "5066" 
+"5010" [label = <(push,getBE().mCompositePresentTimes.push({compositeTime, presentFenceTime}))<SUB>2161</SUB>> ]
+"5020" [label = <(&lt;operator&gt;.assignment,compositeToPresentLatency = -1)<SUB>2162</SUB>> ]
+"5088" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, compositeToPresentLatency))<SUB>2180</SUB>> ]
+"5011" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.push)<SUB>2161</SUB>> ]
+"5016" [label = <(&lt;operator&gt;.arrayInitializer,{compositeTime, presentFenceTime})<SUB>2161</SUB>> ]
+"5022" [label = <(&lt;operator&gt;.minus,-1)<SUB>2162</SUB>> ]
+"5025" [label = <(&lt;operator&gt;.logicalNot,!getBE().mCompositePresentTimes.empty())<SUB>2163</SUB>> ]
+"5073" [label = <(&lt;operator&gt;.greaterThan,getBE().mCompositePresentTimes.size() &gt; 16)<SUB>2176</SUB>> ]
+"5012" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2161</SUB>> ]
+"5015" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2161</SUB>> ]
+"5026" [label = <(empty,getBE().mCompositePresentTimes.empty())<SUB>2163</SUB>> ]
+"5034" [label = <(&lt;operator&gt;.assignment,&amp; cpt = getBE().mCompositePresentTimes.front())<SUB>2164</SUB>> ]
+"5043" [label = <(&lt;operator&gt;.assignment,displayTime = cpt.display-&gt;getCachedSignalTime())<SUB>2167</SUB>> ]
+"5059" [label = <(&lt;operator&gt;.assignment,compositeToPresentLatency = displayTime - cpt.composite)<SUB>2171</SUB>> ]
+"5066" [label = <(pop,getBE().mCompositePresentTimes.pop())<SUB>2172</SUB>> ]
+"5074" [label = <(size,getBE().mCompositePresentTimes.size())<SUB>2176</SUB>> ]
+"5082" [label = <(pop,getBE().mCompositePresentTimes.pop())<SUB>2177</SUB>> ]
+"5013" [label = <(getBE,getBE())<SUB>2161</SUB>> ]
+"5014" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2161</SUB>> ]
+"5027" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.empty)<SUB>2163</SUB>> ]
+"5036" [label = <(front,getBE().mCompositePresentTimes.front())<SUB>2164</SUB>> ]
+"5045" [label = <(getCachedSignalTime,cpt.display-&gt;getCachedSignalTime())<SUB>2167</SUB>> ]
+"5052" [label = <(&lt;operator&gt;.equals,displayTime == Fence::SIGNAL_TIME_PENDING)<SUB>2168</SUB>> ]
+"5061" [label = <(&lt;operator&gt;.subtraction,displayTime - cpt.composite)<SUB>2171</SUB>> ]
+"5067" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.pop)<SUB>2172</SUB>> ]
+"5075" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.size)<SUB>2176</SUB>> ]
+"5083" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.pop)<SUB>2177</SUB>> ]
+"5028" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2163</SUB>> ]
+"5031" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>2163</SUB>> ]
+"5037" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes.front)<SUB>2164</SUB>> ]
+"5046" [label = <(&lt;operator&gt;.indirectFieldAccess,cpt.display-&gt;getCachedSignalTime)<SUB>2167</SUB>> ]
+"5054" [label = <(&lt;operator&gt;.fieldAccess,Fence::SIGNAL_TIME_PENDING)<SUB>2168</SUB>> ]
+"5063" [label = <(&lt;operator&gt;.fieldAccess,cpt.composite)<SUB>2171</SUB>> ]
+"5068" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2172</SUB>> ]
+"5071" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>2172</SUB>> ]
+"5076" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2176</SUB>> ]
+"5079" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2176</SUB>> ]
+"5084" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2177</SUB>> ]
+"5087" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>2177</SUB>> ]
+"5029" [label = <(getBE,getBE())<SUB>2163</SUB>> ]
+"5030" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2163</SUB>> ]
+"5038" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositePresentTimes)<SUB>2164</SUB>> ]
+"5041" [label = <(FIELD_IDENTIFIER,front,front)<SUB>2164</SUB>> ]
+"5047" [label = <(&lt;operator&gt;.fieldAccess,cpt.display)<SUB>2167</SUB>> ]
+"5050" [label = <(FIELD_IDENTIFIER,getCachedSignalTime,getCachedSignalTime)<SUB>2167</SUB>> ]
+"5056" [label = <(FIELD_IDENTIFIER,SIGNAL_TIME_PENDING,SIGNAL_TIME_PENDING)<SUB>2168</SUB>> ]
+"5065" [label = <(FIELD_IDENTIFIER,composite,composite)<SUB>2171</SUB>> ]
+"5069" [label = <(getBE,getBE())<SUB>2172</SUB>> ]
+"5070" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2172</SUB>> ]
+"5077" [label = <(getBE,getBE())<SUB>2176</SUB>> ]
+"5078" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2176</SUB>> ]
+"5085" [label = <(getBE,getBE())<SUB>2177</SUB>> ]
+"5086" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2177</SUB>> ]
+"5039" [label = <(getBE,getBE())<SUB>2164</SUB>> ]
+"5040" [label = <(FIELD_IDENTIFIER,mCompositePresentTimes,mCompositePresentTimes)<SUB>2164</SUB>> ]
+"5049" [label = <(FIELD_IDENTIFIER,display,display)<SUB>2167</SUB>> ]
+"5005" [label = <(METHOD,updateCompositorTiming)<SUB>2157</SUB>> ]
+"5091" [label = <(METHOD_RETURN,void)<SUB>2157</SUB>> ]
+  "5010" -> "5022" 
+  "5020" -> "5029" 
+  "5088" -> "5091" 
+  "5011" -> "5016" 
+  "5016" -> "5010" 
+  "5022" -> "5020" 
+  "5025" -> "5077" 
+  "5025" -> "5039" 
+  "5073" -> "5085" 
+  "5073" -> "5088" 
   "5012" -> "5015" 
   "5015" -> "5011" 
-  "5021" -> "5020" 
-  "5030" -> "5029" 
-  "5038" -> "5036" 
-  "5047" -> "5045" 
-  "5052" -> "5055" 
-  "5055" -> "5051" 
-  "5060" -> "5063" 
-  "5063" -> "5059" 
-  "5068" -> "5071" 
-  "5071" -> "5067" 
+  "5026" -> "5025" 
+  "5034" -> "5049" 
+  "5043" -> "5056" 
+  "5059" -> "5069" 
+  "5066" -> "5029" 
+  "5074" -> "5073" 
+  "5082" -> "5077" 
   "5013" -> "5014" 
   "5014" -> "5012" 
-  "5022" -> "5025" 
-  "5025" -> "5021" 
-  "5031" -> "5034" 
-  "5034" -> "5030" 
-  "5040" -> "5038" 
-  "5049" -> "5047" 
-  "5053" -> "5054" 
+  "5027" -> "5026" 
+  "5036" -> "5034" 
+  "5045" -> "5043" 
+  "5052" -> "5077" 
+  "5052" -> "5065" 
+  "5061" -> "5059" 
+  "5067" -> "5066" 
+  "5075" -> "5074" 
+  "5083" -> "5082" 
+  "5028" -> "5031" 
+  "5031" -> "5027" 
+  "5037" -> "5036" 
+  "5046" -> "5045" 
   "5054" -> "5052" 
-  "5061" -> "5062" 
-  "5062" -> "5060" 
+  "5063" -> "5061" 
+  "5068" -> "5071" 
+  "5071" -> "5067" 
+  "5076" -> "5079" 
+  "5079" -> "5075" 
+  "5084" -> "5087" 
+  "5087" -> "5083" 
+  "5029" -> "5030" 
+  "5030" -> "5028" 
+  "5038" -> "5041" 
+  "5041" -> "5037" 
+  "5047" -> "5050" 
+  "5050" -> "5046" 
+  "5056" -> "5054" 
+  "5065" -> "5063" 
   "5069" -> "5070" 
   "5070" -> "5068" 
-  "5023" -> "5024" 
-  "5024" -> "5022" 
-  "5033" -> "5031" 
-  "4989" -> "4997" 
+  "5077" -> "5078" 
+  "5078" -> "5076" 
+  "5085" -> "5086" 
+  "5086" -> "5084" 
+  "5039" -> "5040" 
+  "5040" -> "5038" 
+  "5049" -> "5047" 
+  "5005" -> "5013" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/157-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/157-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/157-cfg.dot	2023-06-07 19:33:00.357398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/157-cfg.dot	2023-06-07 19:33:06.597398411 +0330
@@ -1,184 +1,184 @@
 digraph "setCompositorTimingSnapped" {  
-"5082" [label = <(&lt;operator&gt;.assignment,idealLatency = (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)\012 ? (stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))\012 : ((-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod))<SUB>2188</SUB>> ]
-"5135" [label = <(&lt;operator&gt;.assignment,bias = stats.vsyncPeriod / 2)<SUB>2204</SUB>> ]
-"5143" [label = <(&lt;operator&gt;.assignment,extraVsyncs = (compositeToPresentLatency - idealLatency + bias) / stats.vsyncPeriod)<SUB>2205</SUB>> ]
-"5155" [label = <(&lt;operator&gt;.assignment,snappedCompositeToPresentLatency =\012 (extraVsyncs &gt; 0) ? idealLatency + (extraVsyncs * stats.vsyncPeriod) : idealLatency)<SUB>2206</SUB>> ]
-"5169" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>2209</SUB>> ]
-"5181" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.deadline = stats.vsyncTime - idealLatency)<SUB>2210</SUB>> ]
-"5192" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.interval = stats.vsyncPeriod)<SUB>2211</SUB>> ]
-"5201" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.presentLatency = snappedCompositeToPresentLatency)<SUB>2212</SUB>> ]
-"5084" [label = <(&lt;operator&gt;.conditional,(mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)\012 ? (stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))\012 : ((-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod))<SUB>2188</SUB>> ]
-"5125" [label = <(&lt;operator&gt;.lessEqualsThan,idealLatency &lt;= 0)<SUB>2194</SUB>> ]
-"5137" [label = <(&lt;operator&gt;.division,stats.vsyncPeriod / 2)<SUB>2204</SUB>> ]
-"5145" [label = <(&lt;operator&gt;.division,(compositeToPresentLatency - idealLatency + bias) / stats.vsyncPeriod)<SUB>2205</SUB>> ]
-"5157" [label = <(&lt;operator&gt;.conditional,(extraVsyncs &gt; 0) ? idealLatency + (extraVsyncs * stats.vsyncPeriod) : idealLatency)<SUB>2207</SUB>> ]
-"5170" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>2209</SUB>> ]
-"5177" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>2209</SUB>> ]
-"5182" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.deadline)<SUB>2210</SUB>> ]
-"5187" [label = <(&lt;operator&gt;.subtraction,stats.vsyncTime - idealLatency)<SUB>2210</SUB>> ]
-"5193" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.interval)<SUB>2211</SUB>> ]
-"5198" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2211</SUB>> ]
-"5202" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.presentLatency)<SUB>2212</SUB>> ]
-"5085" [label = <(&lt;operator&gt;.greaterThan,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)<SUB>2188</SUB>> ]
-"5095" [label = <(&lt;operator&gt;.subtraction,stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))<SUB>2189</SUB>> ]
-"5111" [label = <(&lt;operator&gt;.modulo,(-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod)<SUB>2191</SUB>> ]
-"5129" [label = <(&lt;operator&gt;.assignment,idealLatency = stats.vsyncPeriod)<SUB>2195</SUB>> ]
-"5138" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2204</SUB>> ]
-"5146" [label = <(&lt;operator&gt;.addition,compositeToPresentLatency - idealLatency + bias)<SUB>2205</SUB>> ]
-"5151" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2205</SUB>> ]
-"5158" [label = <(&lt;operator&gt;.greaterThan,extraVsyncs &gt; 0)<SUB>2207</SUB>> ]
-"5161" [label = <(&lt;operator&gt;.addition,idealLatency + (extraVsyncs * stats.vsyncPeriod))<SUB>2207</SUB>> ]
-"5171" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>2209</SUB>> ]
-"5174" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>2209</SUB>> ]
-"5178" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>2209</SUB>> ]
-"5183" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2210</SUB>> ]
-"5186" [label = <(FIELD_IDENTIFIER,deadline,deadline)<SUB>2210</SUB>> ]
-"5188" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncTime)<SUB>2210</SUB>> ]
-"5194" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2211</SUB>> ]
-"5197" [label = <(FIELD_IDENTIFIER,interval,interval)<SUB>2211</SUB>> ]
-"5200" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2211</SUB>> ]
-"5203" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2212</SUB>> ]
-"5206" [label = <(FIELD_IDENTIFIER,presentLatency,presentLatency)<SUB>2212</SUB>> ]
-"5086" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2188</SUB>> ]
-"5096" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2189</SUB>> ]
-"5099" [label = <(&lt;operator&gt;.modulo,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod)<SUB>2190</SUB>> ]
-"5112" [label = <(&lt;operator&gt;.minus,-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2191</SUB>> ]
-"5121" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2191</SUB>> ]
-"5131" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2195</SUB>> ]
-"5140" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2204</SUB>> ]
-"5147" [label = <(&lt;operator&gt;.subtraction,compositeToPresentLatency - idealLatency)<SUB>2205</SUB>> ]
-"5153" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2205</SUB>> ]
-"5163" [label = <(&lt;operator&gt;.multiplication,extraVsyncs * stats.vsyncPeriod)<SUB>2207</SUB>> ]
-"5173" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>2209</SUB>> ]
-"5176" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>2209</SUB>> ]
-"5179" [label = <(getBE,getBE())<SUB>2209</SUB>> ]
-"5180" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>2209</SUB>> ]
-"5184" [label = <(getBE,getBE())<SUB>2210</SUB>> ]
-"5185" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2210</SUB>> ]
-"5190" [label = <(FIELD_IDENTIFIER,vsyncTime,vsyncTime)<SUB>2210</SUB>> ]
-"5195" [label = <(getBE,getBE())<SUB>2211</SUB>> ]
-"5196" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2211</SUB>> ]
-"5204" [label = <(getBE,getBE())<SUB>2212</SUB>> ]
-"5205" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2212</SUB>> ]
-"5087" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2188</SUB>> ]
-"5093" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2188</SUB>> ]
-"5098" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2189</SUB>> ]
-"5100" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2190</SUB>> ]
-"5108" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2190</SUB>> ]
-"5113" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2191</SUB>> ]
-"5123" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2191</SUB>> ]
-"5133" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2195</SUB>> ]
-"5165" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2207</SUB>> ]
-"5088" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2188</SUB>> ]
-"5092" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2188</SUB>> ]
-"5101" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2190</SUB>> ]
-"5107" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2190</SUB>> ]
-"5110" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2190</SUB>> ]
-"5114" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2191</SUB>> ]
-"5120" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2191</SUB>> ]
-"5167" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2207</SUB>> ]
-"5089" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2188</SUB>> ]
-"5102" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2190</SUB>> ]
-"5106" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2190</SUB>> ]
-"5115" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2191</SUB>> ]
-"5119" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2191</SUB>> ]
-"5091" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2188</SUB>> ]
-"5103" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2190</SUB>> ]
-"5116" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2191</SUB>> ]
-"5105" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2190</SUB>> ]
-"5118" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2191</SUB>> ]
-"5077" [label = <(METHOD,setCompositorTimingSnapped)<SUB>2184</SUB>> ]
-"5208" [label = <(METHOD_RETURN,void)<SUB>2184</SUB>> ]
-  "5082" -> "5125" 
-  "5135" -> "5147" 
-  "5143" -> "5158" 
-  "5155" -> "5173" 
-  "5169" -> "5184" 
-  "5181" -> "5195" 
-  "5192" -> "5204" 
-  "5201" -> "5208" 
-  "5084" -> "5082" 
-  "5125" -> "5133" 
-  "5125" -> "5140" 
-  "5137" -> "5135" 
-  "5145" -> "5143" 
-  "5157" -> "5155" 
-  "5170" -> "5179" 
-  "5177" -> "5169" 
-  "5182" -> "5190" 
-  "5187" -> "5181" 
-  "5193" -> "5200" 
-  "5198" -> "5192" 
-  "5202" -> "5201" 
-  "5085" -> "5098" 
-  "5085" -> "5118" 
-  "5095" -> "5084" 
-  "5111" -> "5084" 
-  "5129" -> "5140" 
-  "5138" -> "5137" 
-  "5146" -> "5153" 
-  "5151" -> "5145" 
-  "5158" -> "5167" 
-  "5158" -> "5157" 
-  "5161" -> "5157" 
-  "5171" -> "5176" 
-  "5174" -> "5170" 
-  "5178" -> "5177" 
-  "5183" -> "5186" 
-  "5186" -> "5182" 
-  "5188" -> "5187" 
-  "5194" -> "5197" 
-  "5197" -> "5193" 
-  "5200" -> "5198" 
-  "5203" -> "5206" 
-  "5206" -> "5202" 
-  "5086" -> "5085" 
-  "5096" -> "5105" 
-  "5099" -> "5095" 
-  "5112" -> "5123" 
-  "5121" -> "5111" 
-  "5131" -> "5129" 
-  "5140" -> "5138" 
-  "5147" -> "5146" 
+"5098" [label = <(&lt;operator&gt;.assignment,idealLatency = (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)\012 ? (stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))\012 : ((-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod))<SUB>2187</SUB>> ]
+"5151" [label = <(&lt;operator&gt;.assignment,bias = stats.vsyncPeriod / 2)<SUB>2203</SUB>> ]
+"5159" [label = <(&lt;operator&gt;.assignment,extraVsyncs = (compositeToPresentLatency - idealLatency + bias) / stats.vsyncPeriod)<SUB>2204</SUB>> ]
+"5171" [label = <(&lt;operator&gt;.assignment,snappedCompositeToPresentLatency =\012 (extraVsyncs &gt; 0) ? idealLatency + (extraVsyncs * stats.vsyncPeriod) : idealLatency)<SUB>2205</SUB>> ]
+"5185" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>2208</SUB>> ]
+"5197" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.deadline = stats.vsyncTime - idealLatency)<SUB>2209</SUB>> ]
+"5208" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.interval = stats.vsyncPeriod)<SUB>2210</SUB>> ]
+"5217" [label = <(&lt;operator&gt;.assignment,getBE().mCompositorTiming.presentLatency = snappedCompositeToPresentLatency)<SUB>2211</SUB>> ]
+"5100" [label = <(&lt;operator&gt;.conditional,(mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)\012 ? (stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))\012 : ((-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod))<SUB>2187</SUB>> ]
+"5141" [label = <(&lt;operator&gt;.lessEqualsThan,idealLatency &lt;= 0)<SUB>2193</SUB>> ]
+"5153" [label = <(&lt;operator&gt;.division,stats.vsyncPeriod / 2)<SUB>2203</SUB>> ]
+"5161" [label = <(&lt;operator&gt;.division,(compositeToPresentLatency - idealLatency + bias) / stats.vsyncPeriod)<SUB>2204</SUB>> ]
+"5173" [label = <(&lt;operator&gt;.conditional,(extraVsyncs &gt; 0) ? idealLatency + (extraVsyncs * stats.vsyncPeriod) : idealLatency)<SUB>2206</SUB>> ]
+"5186" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>2208</SUB>> ]
+"5193" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>2208</SUB>> ]
+"5198" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.deadline)<SUB>2209</SUB>> ]
+"5203" [label = <(&lt;operator&gt;.subtraction,stats.vsyncTime - idealLatency)<SUB>2209</SUB>> ]
+"5209" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.interval)<SUB>2210</SUB>> ]
+"5214" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2210</SUB>> ]
+"5218" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming.presentLatency)<SUB>2211</SUB>> ]
+"5101" [label = <(&lt;operator&gt;.greaterThan,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf &gt; 0)<SUB>2187</SUB>> ]
+"5111" [label = <(&lt;operator&gt;.subtraction,stats.vsyncPeriod -\012 (mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod))<SUB>2188</SUB>> ]
+"5127" [label = <(&lt;operator&gt;.modulo,(-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf) % stats.vsyncPeriod)<SUB>2190</SUB>> ]
+"5145" [label = <(&lt;operator&gt;.assignment,idealLatency = stats.vsyncPeriod)<SUB>2194</SUB>> ]
+"5154" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2203</SUB>> ]
+"5162" [label = <(&lt;operator&gt;.addition,compositeToPresentLatency - idealLatency + bias)<SUB>2204</SUB>> ]
+"5167" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2204</SUB>> ]
+"5174" [label = <(&lt;operator&gt;.greaterThan,extraVsyncs &gt; 0)<SUB>2206</SUB>> ]
+"5177" [label = <(&lt;operator&gt;.addition,idealLatency + (extraVsyncs * stats.vsyncPeriod))<SUB>2206</SUB>> ]
+"5187" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>2208</SUB>> ]
+"5190" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>2208</SUB>> ]
+"5194" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>2208</SUB>> ]
+"5199" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2209</SUB>> ]
+"5202" [label = <(FIELD_IDENTIFIER,deadline,deadline)<SUB>2209</SUB>> ]
+"5204" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncTime)<SUB>2209</SUB>> ]
+"5210" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2210</SUB>> ]
+"5213" [label = <(FIELD_IDENTIFIER,interval,interval)<SUB>2210</SUB>> ]
+"5216" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2210</SUB>> ]
+"5219" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2211</SUB>> ]
+"5222" [label = <(FIELD_IDENTIFIER,presentLatency,presentLatency)<SUB>2211</SUB>> ]
+"5102" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2187</SUB>> ]
+"5112" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2188</SUB>> ]
+"5115" [label = <(&lt;operator&gt;.modulo,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf % stats.vsyncPeriod)<SUB>2189</SUB>> ]
+"5128" [label = <(&lt;operator&gt;.minus,-mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2190</SUB>> ]
+"5137" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2190</SUB>> ]
+"5147" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2194</SUB>> ]
+"5156" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2203</SUB>> ]
+"5163" [label = <(&lt;operator&gt;.subtraction,compositeToPresentLatency - idealLatency)<SUB>2204</SUB>> ]
+"5169" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2204</SUB>> ]
+"5179" [label = <(&lt;operator&gt;.multiplication,extraVsyncs * stats.vsyncPeriod)<SUB>2206</SUB>> ]
+"5189" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>2208</SUB>> ]
+"5192" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>2208</SUB>> ]
+"5195" [label = <(getBE,getBE())<SUB>2208</SUB>> ]
+"5196" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>2208</SUB>> ]
+"5200" [label = <(getBE,getBE())<SUB>2209</SUB>> ]
+"5201" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2209</SUB>> ]
+"5206" [label = <(FIELD_IDENTIFIER,vsyncTime,vsyncTime)<SUB>2209</SUB>> ]
+"5211" [label = <(getBE,getBE())<SUB>2210</SUB>> ]
+"5212" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2210</SUB>> ]
+"5220" [label = <(getBE,getBE())<SUB>2211</SUB>> ]
+"5221" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2211</SUB>> ]
+"5103" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2187</SUB>> ]
+"5109" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2187</SUB>> ]
+"5114" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2188</SUB>> ]
+"5116" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2189</SUB>> ]
+"5124" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2189</SUB>> ]
+"5129" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2190</SUB>> ]
+"5139" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2190</SUB>> ]
+"5149" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2194</SUB>> ]
+"5181" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2206</SUB>> ]
+"5104" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2187</SUB>> ]
+"5108" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2187</SUB>> ]
+"5117" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2189</SUB>> ]
+"5123" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2189</SUB>> ]
+"5126" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2189</SUB>> ]
+"5130" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2190</SUB>> ]
+"5136" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2190</SUB>> ]
+"5183" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2206</SUB>> ]
+"5105" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2187</SUB>> ]
+"5118" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2189</SUB>> ]
+"5122" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2189</SUB>> ]
+"5131" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2190</SUB>> ]
+"5135" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2190</SUB>> ]
+"5107" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2187</SUB>> ]
+"5119" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2189</SUB>> ]
+"5132" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2190</SUB>> ]
+"5121" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2189</SUB>> ]
+"5134" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2190</SUB>> ]
+"5093" [label = <(METHOD,setCompositorTimingSnapped)<SUB>2183</SUB>> ]
+"5224" [label = <(METHOD_RETURN,void)<SUB>2183</SUB>> ]
+  "5098" -> "5141" 
+  "5151" -> "5163" 
+  "5159" -> "5174" 
+  "5171" -> "5189" 
+  "5185" -> "5200" 
+  "5197" -> "5211" 
+  "5208" -> "5220" 
+  "5217" -> "5224" 
+  "5100" -> "5098" 
+  "5141" -> "5149" 
+  "5141" -> "5156" 
   "5153" -> "5151" 
-  "5163" -> "5161" 
+  "5161" -> "5159" 
   "5173" -> "5171" 
-  "5176" -> "5174" 
-  "5179" -> "5180" 
-  "5180" -> "5178" 
-  "5184" -> "5185" 
-  "5185" -> "5183" 
-  "5190" -> "5188" 
+  "5186" -> "5195" 
+  "5193" -> "5185" 
+  "5198" -> "5206" 
+  "5203" -> "5197" 
+  "5209" -> "5216" 
+  "5214" -> "5208" 
+  "5218" -> "5217" 
+  "5101" -> "5114" 
+  "5101" -> "5134" 
+  "5111" -> "5100" 
+  "5127" -> "5100" 
+  "5145" -> "5156" 
+  "5154" -> "5153" 
+  "5162" -> "5169" 
+  "5167" -> "5161" 
+  "5174" -> "5183" 
+  "5174" -> "5173" 
+  "5177" -> "5173" 
+  "5187" -> "5192" 
+  "5190" -> "5186" 
+  "5194" -> "5193" 
+  "5199" -> "5202" 
+  "5202" -> "5198" 
+  "5204" -> "5203" 
+  "5210" -> "5213" 
+  "5213" -> "5209" 
+  "5216" -> "5214" 
+  "5219" -> "5222" 
+  "5222" -> "5218" 
+  "5102" -> "5101" 
+  "5112" -> "5121" 
+  "5115" -> "5111" 
+  "5128" -> "5139" 
+  "5137" -> "5127" 
+  "5147" -> "5145" 
+  "5156" -> "5154" 
+  "5163" -> "5162" 
+  "5169" -> "5167" 
+  "5179" -> "5177" 
+  "5189" -> "5187" 
+  "5192" -> "5190" 
   "5195" -> "5196" 
   "5196" -> "5194" 
-  "5204" -> "5205" 
-  "5205" -> "5203" 
-  "5087" -> "5093" 
-  "5093" -> "5086" 
-  "5098" -> "5096" 
-  "5100" -> "5110" 
-  "5108" -> "5099" 
-  "5113" -> "5112" 
-  "5123" -> "5121" 
-  "5133" -> "5131" 
-  "5165" -> "5163" 
-  "5088" -> "5092" 
-  "5092" -> "5087" 
-  "5101" -> "5107" 
-  "5107" -> "5100" 
-  "5110" -> "5108" 
-  "5114" -> "5120" 
-  "5120" -> "5113" 
-  "5167" -> "5165" 
-  "5089" -> "5088" 
-  "5102" -> "5106" 
-  "5106" -> "5101" 
-  "5115" -> "5119" 
-  "5119" -> "5114" 
-  "5091" -> "5089" 
-  "5103" -> "5102" 
-  "5116" -> "5115" 
-  "5105" -> "5103" 
-  "5118" -> "5116" 
-  "5077" -> "5091" 
+  "5200" -> "5201" 
+  "5201" -> "5199" 
+  "5206" -> "5204" 
+  "5211" -> "5212" 
+  "5212" -> "5210" 
+  "5220" -> "5221" 
+  "5221" -> "5219" 
+  "5103" -> "5109" 
+  "5109" -> "5102" 
+  "5114" -> "5112" 
+  "5116" -> "5126" 
+  "5124" -> "5115" 
+  "5129" -> "5128" 
+  "5139" -> "5137" 
+  "5149" -> "5147" 
+  "5181" -> "5179" 
+  "5104" -> "5108" 
+  "5108" -> "5103" 
+  "5117" -> "5123" 
+  "5123" -> "5116" 
+  "5126" -> "5124" 
+  "5130" -> "5136" 
+  "5136" -> "5129" 
+  "5183" -> "5181" 
+  "5105" -> "5104" 
+  "5118" -> "5122" 
+  "5122" -> "5117" 
+  "5131" -> "5135" 
+  "5135" -> "5130" 
+  "5107" -> "5105" 
+  "5119" -> "5118" 
+  "5132" -> "5131" 
+  "5121" -> "5119" 
+  "5134" -> "5132" 
+  "5093" -> "5107" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/158-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/158-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/158-cfg.dot	2023-06-07 19:33:00.367398985 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/158-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,707 +1,707 @@
 digraph "postComposition" {  
-"5212" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2217</SUB>> ]
-"5213" [label = <(ALOGV,ALOGV(&quot;postComposition&quot;))<SUB>2218</SUB>> ]
-"5216" [label = <(&lt;operator&gt;.assignment,dequeueReadyTime = systemTime())<SUB>2220</SUB>> ]
-"5229" [label = <(&lt;operator&gt;.assignment,* display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()).get())<SUB>2225</SUB>> ]
-"5238" [label = <(updateSignalTimes,getBE().mGlCompositionDoneTimeline.updateSignalTimes())<SUB>2227</SUB>> ]
-"5244" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;FenceTime&gt; glCompositionDoneFenceTime)<SUB>2228</SUB>> ]
-"5296" [label = <(updateSignalTimes,getBE().mDisplayTimeline.updateSignalTimes())<SUB>2239</SUB>> ]
-"5302" [label = <(&lt;operator&gt;.assignment,mPreviousPresentFences[1] = mPreviousPresentFences[0])<SUB>2240</SUB>> ]
-"5309" [label = <(&lt;operator&gt;.assignment,mPreviousPresentFences[0] =\012            display ? getHwComposer().getPresentFence(*display-&gt;getId()) : Fence::NO_FENCE)<SUB>2241</SUB>> ]
-"5328" [label = <(&lt;operator&gt;.assignment,presentFenceTime = std::make_shared&lt;FenceTime&gt;(mPreviousPresentFences[0]))<SUB>2243</SUB>> ]
-"5339" [label = <(push,getBE().mDisplayTimeline.push(presentFenceTime))<SUB>2244</SUB>> ]
-"5347" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>2247</SUB>> ]
-"5353" [label = <(updateCompositorTiming,updateCompositorTiming(stats, mCompositionEngine-&gt;getLastFrameRefreshTimestamp(),\012                           presentFenceTime))<SUB>2252</SUB>> ]
-"5379" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012 const bool frameLatched = layer-&gt;onPostComposition(display, glCompositionDoneFenceTime,\012                                                           presentFenceTime, compositorTiming);\012 if (frameLatched) {\012            recordBufferingStats(layer-&gt;getName(), layer-&gt;getOccupancyHistory(false));\012 }\012 }))<SUB>2260</SUB>> ]
-"5384" [label = <(addPresentFence,mTransactionCompletedThread.addPresentFence(mPreviousPresentFences[0]))<SUB>2268</SUB>> ]
-"5391" [label = <(sendCallbacks,mTransactionCompletedThread.sendCallbacks())<SUB>2269</SUB>> ]
-"5425" [label = <(&lt;operator&gt;.assignment,isDisplayConnected = display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2276</SUB>> ]
-"5501" [label = <(incrementTotalFrames,mTimeStats-&gt;incrementTotalFrames())<SUB>2299</SUB>> ]
-"5519" [label = <(setPresentFenceGlobal,mTimeStats-&gt;setPresentFenceGlobal(presentFenceTime))<SUB>2308</SUB>> ]
-"5525" [label = <(&lt;operator&gt;.assignment,sfConnections = mScheduler-&gt;getEventThreadConnectionCount(mSfConnectionHandle))<SUB>2310</SUB>> ]
-"5533" [label = <(&lt;operator&gt;.assignment,appConnections = mScheduler-&gt;getEventThreadConnectionCount(mAppConnectionHandle))<SUB>2311</SUB>> ]
-"5540" [label = <(recordDisplayEventConnectionCount,mTimeStats-&gt;recordDisplayEventConnectionCount(sfConnections + appConnections))<SUB>2312</SUB>> ]
-"5590" [label = <(&lt;operator&gt;.assignment,currentTime = systemTime())<SUB>2326</SUB>> ]
-"5653" [label = <(&lt;operator&gt;.assignment,getBE().mLastSwapTime = currentTime)<SUB>2339</SUB>> ]
-"5658" [label = <(cleanupPostRender,getRenderEngine().cleanupPostRender())<SUB>2342</SUB>> ]
-"5218" [label = <(systemTime,systemTime())<SUB>2220</SUB>> ]
-"5231" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()).get())<SUB>2225</SUB>> ]
-"5239" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline.updateSignalTimes)<SUB>2227</SUB>> ]
-"5245" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;FenceTime)<SUB>2228</SUB>> ]
-"5252" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;getCompositionDisplay()-&gt;getState().usesClientComposition)<SUB>2229</SUB>> ]
-"5297" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline.updateSignalTimes)<SUB>2239</SUB>> ]
-"5303" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[1])<SUB>2240</SUB>> ]
-"5306" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2240</SUB>> ]
-"5310" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2241</SUB>> ]
-"5313" [label = <(&lt;operator&gt;.conditional,display ? getHwComposer().getPresentFence(*display-&gt;getId()) : Fence::NO_FENCE)<SUB>2242</SUB>> ]
-"5330" [label = <(&lt;operator&gt;.greaterThan,std::make_shared&lt;FenceTime&gt;(mPreviousPresentFences[0]))<SUB>2243</SUB>> ]
-"5340" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline.push)<SUB>2244</SUB>> ]
-"5348" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>2247</SUB>> ]
-"5351" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>2247</SUB>> ]
-"5355" [label = <(getLastFrameRefreshTimestamp,mCompositionEngine-&gt;getLastFrameRefreshTimestamp())<SUB>2252</SUB>> ]
-"5362" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>2256</SUB>> ]
-"5374" [label = <(&lt;operator&gt;.assignment,compositorTiming = getBE().mCompositorTiming)<SUB>2257</SUB>> ]
-"5380" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>2260</SUB>> ]
-"5383" [label = <(METHOD_REF,ANY anonymous_lambda_23 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012 const bool frameLatched = layer-&gt;onPostComposition(display, glCompositionDoneFenceTime,\012                                                           presentFenceTime, compositorTiming);\012 if (frameLatched) {\012            recordBufferingStats(layer-&gt;getName(), layer-&gt;getOccupancyHistory(false));\012 }\012 }))<SUB>2260</SUB>> ]
-"5385" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.addPresentFence)<SUB>2268</SUB>> ]
-"5388" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2268</SUB>> ]
-"5392" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.sendCallbacks)<SUB>2269</SUB>> ]
-"5396" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary() &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON &amp;&amp;\012        presentFenceTime-&gt;isValid())<SUB>2271</SUB>> ]
-"5427" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2276</SUB>> ]
-"5439" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>2278</SUB>> ]
-"5502" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementTotalFrames)<SUB>2299</SUB>> ]
-"5520" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;setPresentFenceGlobal)<SUB>2308</SUB>> ]
-"5527" [label = <(getEventThreadConnectionCount,mScheduler-&gt;getEventThreadConnectionCount(mSfConnectionHandle))<SUB>2310</SUB>> ]
-"5535" [label = <(getEventThreadConnectionCount,mScheduler-&gt;getEventThreadConnectionCount(mAppConnectionHandle))<SUB>2311</SUB>> ]
-"5541" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;recordDisplayEventConnectionCount)<SUB>2312</SUB>> ]
-"5544" [label = <(&lt;operator&gt;.addition,sfConnections + appConnections)<SUB>2312</SUB>> ]
-"5548" [label = <(&lt;operator&gt;.greaterThan,mLastJankDuration &gt; 0)<SUB>2314</SUB>> ]
-"5580" [label = <(&lt;operator&gt;.logicalAnd,isDisplayConnected &amp;&amp; !display-&gt;isPoweredOn())<SUB>2322</SUB>> ]
-"5592" [label = <(systemTime,systemTime())<SUB>2326</SUB>> ]
-"5654" [label = <(&lt;operator&gt;.fieldAccess,getBE().mLastSwapTime)<SUB>2339</SUB>> ]
-"5659" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().cleanupPostRender)<SUB>2342</SUB>> ]
-"5664" [label = <(lock,lock(mTexturePoolMutex))<SUB>2345</SUB>> ]
-"5766" [label = <(ATRACE_ENABLED,ATRACE_ENABLED())<SUB>2367</SUB>> ]
-"5223" [label = <(releasePendingBuffer,layer-&gt;releasePendingBuffer(dequeueReadyTime))<SUB>2222</SUB>> ]
-"5240" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline)<SUB>2227</SUB>> ]
-"5243" [label = <(FIELD_IDENTIFIER,updateSignalTimes,updateSignalTimes)<SUB>2227</SUB>> ]
-"5246" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>2228</SUB>> ]
-"5254" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().usesClientComposition)<SUB>2229</SUB>> ]
-"5264" [label = <(&lt;operator&gt;.assignment,glCompositionDoneFenceTime =\012                std::make_shared&lt;FenceTime&gt;(display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence()))<SUB>2230</SUB>> ]
-"5282" [label = <(push,getBE().mGlCompositionDoneTimeline.push(glCompositionDoneFenceTime))<SUB>2234</SUB>> ]
-"5298" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline)<SUB>2239</SUB>> ]
-"5301" [label = <(FIELD_IDENTIFIER,updateSignalTimes,updateSignalTimes)<SUB>2239</SUB>> ]
-"5315" [label = <(getPresentFence,getHwComposer().getPresentFence(*display-&gt;getId()))<SUB>2242</SUB>> ]
-"5324" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>2242</SUB>> ]
-"5331" [label = <(&lt;operator&gt;.lessThan,std::make_shared&lt;FenceTime)<SUB>2243</SUB>> ]
-"5336" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2243</SUB>> ]
-"5341" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline)<SUB>2244</SUB>> ]
-"5344" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2244</SUB>> ]
-"5350" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>2247</SUB>> ]
-"5356" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getLastFrameRefreshTimestamp)<SUB>2252</SUB>> ]
-"5363" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>2256</SUB>> ]
-"5370" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>2256</SUB>> ]
-"5376" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2257</SUB>> ]
-"5382" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2260</SUB>> ]
-"5387" [label = <(FIELD_IDENTIFIER,addPresentFence,addPresentFence)<SUB>2268</SUB>> ]
-"5394" [label = <(FIELD_IDENTIFIER,sendCallbacks,sendCallbacks)<SUB>2269</SUB>> ]
-"5397" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary() &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>2271</SUB>> ]
-"5414" [label = <(isValid,presentFenceTime-&gt;isValid())<SUB>2272</SUB>> ]
-"5419" [label = <(addPresentFence,mScheduler-&gt;addPresentFence(presentFenceTime))<SUB>2273</SUB>> ]
-"5429" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>2276</SUB>> ]
-"5457" [label = <(&lt;operator&gt;.assignment,mAnimCompositionPending = false)<SUB>2285</SUB>> ]
-"5497" [label = <(advanceFrame,mAnimFrameTracker.advanceFrame())<SUB>2296</SUB>> ]
-"5504" [label = <(FIELD_IDENTIFIER,incrementTotalFrames,incrementTotalFrames)<SUB>2299</SUB>> ]
-"5508" [label = <(incrementClientCompositionFrames,mTimeStats-&gt;incrementClientCompositionFrames())<SUB>2301</SUB>> ]
-"5515" [label = <(incrementClientCompositionReusedFrames,mTimeStats-&gt;incrementClientCompositionReusedFrames())<SUB>2305</SUB>> ]
-"5522" [label = <(FIELD_IDENTIFIER,setPresentFenceGlobal,setPresentFenceGlobal)<SUB>2308</SUB>> ]
-"5528" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventThreadConnectionCount)<SUB>2310</SUB>> ]
-"5536" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventThreadConnectionCount)<SUB>2311</SUB>> ]
-"5543" [label = <(FIELD_IDENTIFIER,recordDisplayEventConnectionCount,recordDisplayEventConnectionCount)<SUB>2312</SUB>> ]
-"5552" [label = <(ATRACE_NAME,ATRACE_NAME(&quot;Jank detected&quot;))<SUB>2315</SUB>> ]
-"5555" [label = <(&lt;operator&gt;.assignment,jankyDurationMillis = mLastJankDuration / (1000 * 1000))<SUB>2316</SUB>> ]
-"5562" [label = <(android::util::stats_write,android::util::stats_write(android::util::DISPLAY_JANK_REPORTED, jankyDurationMillis,\012                                   mMissedFrameJankCount))<SUB>2317</SUB>> ]
-"5575" [label = <(&lt;operator&gt;.assignment,mLastJankDuration = -1)<SUB>2319</SUB>> ]
-"5582" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPoweredOn())<SUB>2322</SUB>> ]
-"5588" [label = <(RETURN,return;,return;)<SUB>2323</SUB>> ]
-"5596" [label = <(&lt;operator&gt;.assignment,mHasPoweredOff = false)<SUB>2328</SUB>> ]
-"5655" [label = <(getBE,getBE())<SUB>2339</SUB>> ]
-"5656" [label = <(FIELD_IDENTIFIER,mLastSwapTime,mLastSwapTime)<SUB>2339</SUB>> ]
-"5660" [label = <(getRenderEngine,getRenderEngine())<SUB>2342</SUB>> ]
-"5661" [label = <(FIELD_IDENTIFIER,cleanupPostRender,cleanupPostRender)<SUB>2342</SUB>> ]
-"5667" [label = <(&lt;operator&gt;.lessThan,mTexturePool.size() &lt; mTexturePoolSize)<SUB>2346</SUB>> ]
-"5761" [label = <(notifyNewContent,mRegionSamplingThread-&gt;notifyNewContent())<SUB>2362</SUB>> ]
-"5768" [label = <(ATRACE_INT64,ATRACE_INT64(&quot;Total Buffer Size&quot;, GraphicBufferAllocator::get().getTotalSize()))<SUB>2369</SUB>> ]
-"5224" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;releasePendingBuffer)<SUB>2222</SUB>> ]
-"5233" [label = <(get,().get())<SUB>2225</SUB>> ]
-"5241" [label = <(getBE,getBE())<SUB>2227</SUB>> ]
-"5242" [label = <(FIELD_IDENTIFIER,mGlCompositionDoneTimeline,mGlCompositionDoneTimeline)<SUB>2227</SUB>> ]
-"5248" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>2228</SUB>> ]
-"5255" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>2229</SUB>> ]
-"5262" [label = <(FIELD_IDENTIFIER,usesClientComposition,usesClientComposition)<SUB>2229</SUB>> ]
-"5266" [label = <(&lt;operator&gt;.greaterThan,std::make_shared&lt;FenceTime&gt;(display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence()))<SUB>2231</SUB>> ]
-"5283" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline.push)<SUB>2234</SUB>> ]
-"5291" [label = <(&lt;operator&gt;.assignment,glCompositionDoneFenceTime = FenceTime::NO_FENCE)<SUB>2236</SUB>> ]
-"5299" [label = <(getBE,getBE())<SUB>2239</SUB>> ]
-"5300" [label = <(FIELD_IDENTIFIER,mDisplayTimeline,mDisplayTimeline)<SUB>2239</SUB>> ]
-"5316" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getPresentFence)<SUB>2242</SUB>> ]
-"5319" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2242</SUB>> ]
-"5326" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>2242</SUB>> ]
-"5332" [label = <(&lt;operator&gt;.fieldAccess,std::make_shared)<SUB>2243</SUB>> ]
-"5342" [label = <(getBE,getBE())<SUB>2244</SUB>> ]
-"5343" [label = <(FIELD_IDENTIFIER,mDisplayTimeline,mDisplayTimeline)<SUB>2244</SUB>> ]
-"5358" [label = <(FIELD_IDENTIFIER,getLastFrameRefreshTimestamp,getLastFrameRefreshTimestamp)<SUB>2252</SUB>> ]
-"5364" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>2256</SUB>> ]
-"5367" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>2256</SUB>> ]
-"5371" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>2256</SUB>> ]
-"5377" [label = <(getBE,getBE())<SUB>2257</SUB>> ]
-"5378" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2257</SUB>> ]
-"5398" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary())<SUB>2271</SUB>> ]
-"5404" [label = <(&lt;operator&gt;.equals,display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>2271</SUB>> ]
-"5415" [label = <(&lt;operator&gt;.indirectFieldAccess,presentFenceTime-&gt;isValid)<SUB>2272</SUB>> ]
-"5420" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;addPresentFence)<SUB>2273</SUB>> ]
-"5430" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>2276</SUB>> ]
-"5433" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2276</SUB>> ]
-"5443" [label = <(&lt;operator&gt;.logicalAnd,isDisplayConnected &amp;&amp; display-&gt;isPoweredOn())<SUB>2279</SUB>> ]
-"5461" [label = <(isValid,presentFenceTime-&gt;isValid())<SUB>2287</SUB>> ]
-"5498" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.advanceFrame)<SUB>2296</SUB>> ]
-"5509" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementClientCompositionFrames)<SUB>2301</SUB>> ]
-"5516" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementClientCompositionReusedFrames)<SUB>2305</SUB>> ]
-"5530" [label = <(FIELD_IDENTIFIER,getEventThreadConnectionCount,getEventThreadConnectionCount)<SUB>2310</SUB>> ]
-"5538" [label = <(FIELD_IDENTIFIER,getEventThreadConnectionCount,getEventThreadConnectionCount)<SUB>2311</SUB>> ]
-"5557" [label = <(&lt;operator&gt;.division,mLastJankDuration / (1000 * 1000))<SUB>2316</SUB>> ]
-"5563" [label = <(&lt;operator&gt;.fieldAccess,android::util::stats_write)<SUB>2317</SUB>> ]
-"5568" [label = <(&lt;operator&gt;.fieldAccess,android::util::DISPLAY_JANK_REPORTED)<SUB>2317</SUB>> ]
-"5577" [label = <(&lt;operator&gt;.minus,-1)<SUB>2319</SUB>> ]
-"5583" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>2322</SUB>> ]
-"5602" [label = <(&lt;operator&gt;.assignment,elapsedTime = currentTime - getBE().mLastSwapTime)<SUB>2330</SUB>> ]
-"5610" [label = <(&lt;operator&gt;.assignment,numPeriods = static_cast&lt;size_t&gt;(elapsedTime / stats.vsyncPeriod))<SUB>2331</SUB>> ]
-"5648" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mTotalTime += elapsedTime)<SUB>2337</SUB>> ]
-"5668" [label = <(size,mTexturePool.size())<SUB>2346</SUB>> ]
-"5675" [label = <(&lt;operator&gt;.assignment,refillCount = mTexturePoolSize - mTexturePool.size())<SUB>2347</SUB>> ]
-"5684" [label = <(&lt;operator&gt;.assignment,offset = mTexturePool.size())<SUB>2348</SUB>> ]
-"5690" [label = <(resize,mTexturePool.resize(mTexturePoolSize))<SUB>2349</SUB>> ]
-"5695" [label = <(genTextures,getRenderEngine().genTextures(refillCount, mTexturePool.data() + offset))<SUB>2350</SUB>> ]
-"5706" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>2351</SUB>> ]
-"5762" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;notifyNewContent)<SUB>2362</SUB>> ]
-"5770" [label = <(getTotalSize,GraphicBufferAllocator::get().getTotalSize())<SUB>2369</SUB>> ]
-"5226" [label = <(FIELD_IDENTIFIER,releasePendingBuffer,releasePendingBuffer)<SUB>2222</SUB>> ]
-"5234" [label = <(&lt;operator&gt;.fieldAccess,().get)<SUB>2225</SUB>> ]
-"5256" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>2229</SUB>> ]
-"5267" [label = <(&lt;operator&gt;.lessThan,std::make_shared&lt;FenceTime)<SUB>2231</SUB>> ]
-"5272" [label = <(getClientTargetAcquireFence,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence())<SUB>2231</SUB>> ]
-"5284" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline)<SUB>2234</SUB>> ]
-"5287" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2234</SUB>> ]
-"5293" [label = <(&lt;operator&gt;.fieldAccess,FenceTime::NO_FENCE)<SUB>2236</SUB>> ]
-"5317" [label = <(getHwComposer,getHwComposer())<SUB>2242</SUB>> ]
-"5318" [label = <(FIELD_IDENTIFIER,getPresentFence,getPresentFence)<SUB>2242</SUB>> ]
-"5320" [label = <(getId,display-&gt;getId())<SUB>2242</SUB>> ]
-"5334" [label = <(FIELD_IDENTIFIER,make_shared,make_shared)<SUB>2243</SUB>> ]
-"5366" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>2256</SUB>> ]
-"5369" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>2256</SUB>> ]
-"5372" [label = <(getBE,getBE())<SUB>2256</SUB>> ]
-"5373" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>2256</SUB>> ]
-"5400" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2271</SUB>> ]
-"5405" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>2271</SUB>> ]
-"5409" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2271</SUB>> ]
-"5417" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>2272</SUB>> ]
-"5422" [label = <(FIELD_IDENTIFIER,addPresentFence,addPresentFence)<SUB>2273</SUB>> ]
-"5431" [label = <(getHwComposer,getHwComposer())<SUB>2276</SUB>> ]
-"5432" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>2276</SUB>> ]
-"5434" [label = <(getId,display-&gt;getId())<SUB>2276</SUB>> ]
-"5445" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>2279</SUB>> ]
-"5450" [label = <(enableHardwareVsync,mScheduler-&gt;enableHardwareVsync())<SUB>2280</SUB>> ]
-"5462" [label = <(&lt;operator&gt;.indirectFieldAccess,presentFenceTime-&gt;isValid)<SUB>2287</SUB>> ]
-"5466" [label = <(setActualPresentFence,mAnimFrameTracker.setActualPresentFence(\012                    std::move(presentFenceTime)))<SUB>2288</SUB>> ]
-"5500" [label = <(FIELD_IDENTIFIER,advanceFrame,advanceFrame)<SUB>2296</SUB>> ]
-"5511" [label = <(FIELD_IDENTIFIER,incrementClientCompositionFrames,incrementClientCompositionFrames)<SUB>2301</SUB>> ]
-"5518" [label = <(FIELD_IDENTIFIER,incrementClientCompositionReusedFrames,incrementClientCompositionReusedFrames)<SUB>2305</SUB>> ]
-"5559" [label = <(&lt;operator&gt;.multiplication,1000 * 1000)<SUB>2316</SUB>> ]
-"5564" [label = <(&lt;operator&gt;.fieldAccess,android::util)<SUB>2317</SUB>> ]
-"5567" [label = <(FIELD_IDENTIFIER,stats_write,stats_write)<SUB>2317</SUB>> ]
-"5569" [label = <(&lt;operator&gt;.fieldAccess,android::util)<SUB>2317</SUB>> ]
-"5572" [label = <(FIELD_IDENTIFIER,DISPLAY_JANK_REPORTED,DISPLAY_JANK_REPORTED)<SUB>2317</SUB>> ]
-"5584" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>2322</SUB>> ]
-"5604" [label = <(&lt;operator&gt;.subtraction,currentTime - getBE().mLastSwapTime)<SUB>2330</SUB>> ]
-"5612" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(elapsedTime / stats.vsyncPeriod))<SUB>2331</SUB>> ]
-"5620" [label = <(&lt;operator&gt;.lessThan,numPeriods &lt; SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2332</SUB>> ]
-"5649" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>2337</SUB>> ]
-"5669" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2346</SUB>> ]
-"5677" [label = <(&lt;operator&gt;.subtraction,mTexturePoolSize - mTexturePool.size())<SUB>2347</SUB>> ]
-"5686" [label = <(size,mTexturePool.size())<SUB>2348</SUB>> ]
-"5691" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.resize)<SUB>2349</SUB>> ]
-"5696" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().genTextures)<SUB>2350</SUB>> ]
-"5700" [label = <(&lt;operator&gt;.addition,mTexturePool.data() + offset)<SUB>2350</SUB>> ]
-"5708" [label = <(size,mTexturePool.size())<SUB>2351</SUB>> ]
-"5764" [label = <(FIELD_IDENTIFIER,notifyNewContent,notifyNewContent)<SUB>2362</SUB>> ]
-"5771" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get().getTotalSize)<SUB>2369</SUB>> ]
-"5235" [label = <(android.SurfaceFlinger.postComposition.anonymous_lambda_22,())<SUB>2225</SUB>> ]
-"5237" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2225</SUB>> ]
-"5257" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2229</SUB>> ]
-"5261" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>2229</SUB>> ]
-"5268" [label = <(&lt;operator&gt;.fieldAccess,std::make_shared)<SUB>2231</SUB>> ]
-"5273" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence)<SUB>2231</SUB>> ]
-"5285" [label = <(getBE,getBE())<SUB>2234</SUB>> ]
-"5286" [label = <(FIELD_IDENTIFIER,mGlCompositionDoneTimeline,mGlCompositionDoneTimeline)<SUB>2234</SUB>> ]
-"5295" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>2236</SUB>> ]
-"5321" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2242</SUB>> ]
-"5401" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2271</SUB>> ]
-"5406" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>2271</SUB>> ]
-"5410" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2271</SUB>> ]
-"5413" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2271</SUB>> ]
-"5435" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2276</SUB>> ]
-"5446" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>2279</SUB>> ]
-"5451" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;enableHardwareVsync)<SUB>2280</SUB>> ]
-"5464" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>2287</SUB>> ]
-"5467" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setActualPresentFence)<SUB>2288</SUB>> ]
-"5470" [label = <(std::move,std::move(presentFenceTime))<SUB>2289</SUB>> ]
-"5586" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>2322</SUB>> ]
-"5606" [label = <(&lt;operator&gt;.fieldAccess,getBE().mLastSwapTime)<SUB>2330</SUB>> ]
-"5613" [label = <(UNKNOWN,size_t,size_t)<SUB>2331</SUB>> ]
-"5614" [label = <(&lt;operator&gt;.division,elapsedTime / stats.vsyncPeriod)<SUB>2331</SUB>> ]
-"5622" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2332</SUB>> ]
-"5628" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mFrameBuckets[numPeriods] += elapsedTime)<SUB>2333</SUB>> ]
-"5650" [label = <(getBE,getBE())<SUB>2337</SUB>> ]
-"5651" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>2337</SUB>> ]
-"5671" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2346</SUB>> ]
-"5679" [label = <(size,mTexturePool.size())<SUB>2347</SUB>> ]
-"5687" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2348</SUB>> ]
-"5693" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>2349</SUB>> ]
-"5697" [label = <(getRenderEngine,getRenderEngine())<SUB>2350</SUB>> ]
-"5698" [label = <(FIELD_IDENTIFIER,genTextures,genTextures)<SUB>2350</SUB>> ]
-"5701" [label = <(data,mTexturePool.data())<SUB>2350</SUB>> ]
-"5709" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2351</SUB>> ]
-"5715" [label = <(&lt;operator&gt;.greaterThan,mTexturePool.size() &gt; mTexturePoolSize)<SUB>2352</SUB>> ]
-"5772" [label = <(GraphicBufferAllocator::get,GraphicBufferAllocator::get())<SUB>2369</SUB>> ]
-"5776" [label = <(FIELD_IDENTIFIER,getTotalSize,getTotalSize)<SUB>2369</SUB>> ]
-"5236" [label = <(METHOD_REF,ANY anonymous_lambda_22 (),())<SUB>2225</SUB>> ]
-"5258" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2229</SUB>> ]
-"5270" [label = <(FIELD_IDENTIFIER,make_shared,make_shared)<SUB>2231</SUB>> ]
-"5274" [label = <(getRenderSurface,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface())<SUB>2231</SUB>> ]
-"5281" [label = <(FIELD_IDENTIFIER,getClientTargetAcquireFence,getClientTargetAcquireFence)<SUB>2231</SUB>> ]
-"5323" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2242</SUB>> ]
-"5403" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2271</SUB>> ]
-"5408" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>2271</SUB>> ]
-"5437" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2276</SUB>> ]
-"5448" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>2279</SUB>> ]
-"5453" [label = <(FIELD_IDENTIFIER,enableHardwareVsync,enableHardwareVsync)<SUB>2280</SUB>> ]
-"5469" [label = <(FIELD_IDENTIFIER,setActualPresentFence,setActualPresentFence)<SUB>2288</SUB>> ]
-"5471" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>2289</SUB>> ]
-"5607" [label = <(getBE,getBE())<SUB>2330</SUB>> ]
-"5608" [label = <(FIELD_IDENTIFIER,mLastSwapTime,mLastSwapTime)<SUB>2330</SUB>> ]
-"5616" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2331</SUB>> ]
-"5623" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>2332</SUB>> ]
-"5629" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[numPeriods])<SUB>2333</SUB>> ]
-"5637" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] += elapsedTime)<SUB>2335</SUB>> ]
-"5680" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2347</SUB>> ]
-"5689" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2348</SUB>> ]
-"5702" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.data)<SUB>2350</SUB>> ]
-"5711" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2351</SUB>> ]
-"5716" [label = <(size,mTexturePool.size())<SUB>2352</SUB>> ]
-"5723" [label = <(&lt;operator&gt;.assignment,deleteCount = mTexturePool.size() - mTexturePoolSize)<SUB>2353</SUB>> ]
-"5732" [label = <(&lt;operator&gt;.assignment,offset = mTexturePoolSize)<SUB>2354</SUB>> ]
-"5735" [label = <(deleteTextures,getRenderEngine().deleteTextures(deleteCount, mTexturePool.data() + offset))<SUB>2355</SUB>> ]
-"5746" [label = <(resize,mTexturePool.resize(mTexturePoolSize))<SUB>2356</SUB>> ]
-"5751" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>2357</SUB>> ]
-"5773" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get)<SUB>2369</SUB>> ]
-"5260" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2229</SUB>> ]
-"5275" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface)<SUB>2231</SUB>> ]
-"5473" [label = <(FIELD_IDENTIFIER,move,move)<SUB>2289</SUB>> ]
-"5481" [label = <(&lt;operator&gt;.assignment,presentTime = getHwComposer().getRefreshTimestamp(*display-&gt;getId()))<SUB>2293</SUB>> ]
-"5492" [label = <(setActualPresentTime,mAnimFrameTracker.setActualPresentTime(presentTime))<SUB>2294</SUB>> ]
-"5618" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2331</SUB>> ]
-"5625" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>2332</SUB>> ]
-"5630" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>2333</SUB>> ]
-"5638" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>2335</SUB>> ]
-"5682" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2347</SUB>> ]
-"5704" [label = <(FIELD_IDENTIFIER,data,data)<SUB>2350</SUB>> ]
-"5717" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2352</SUB>> ]
-"5725" [label = <(&lt;operator&gt;.subtraction,mTexturePool.size() - mTexturePoolSize)<SUB>2353</SUB>> ]
-"5736" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().deleteTextures)<SUB>2355</SUB>> ]
-"5740" [label = <(&lt;operator&gt;.addition,mTexturePool.data() + offset)<SUB>2355</SUB>> ]
-"5747" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.resize)<SUB>2356</SUB>> ]
-"5753" [label = <(size,mTexturePool.size())<SUB>2357</SUB>> ]
-"5775" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2369</SUB>> ]
-"5276" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2231</SUB>> ]
-"5280" [label = <(FIELD_IDENTIFIER,getRenderSurface,getRenderSurface)<SUB>2231</SUB>> ]
-"5483" [label = <(getRefreshTimestamp,getHwComposer().getRefreshTimestamp(*display-&gt;getId()))<SUB>2293</SUB>> ]
-"5493" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setActualPresentTime)<SUB>2294</SUB>> ]
-"5631" [label = <(getBE,getBE())<SUB>2333</SUB>> ]
-"5632" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>2333</SUB>> ]
-"5639" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>2335</SUB>> ]
-"5642" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2335</SUB>> ]
-"5719" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2352</SUB>> ]
-"5726" [label = <(size,mTexturePool.size())<SUB>2353</SUB>> ]
-"5737" [label = <(getRenderEngine,getRenderEngine())<SUB>2355</SUB>> ]
-"5738" [label = <(FIELD_IDENTIFIER,deleteTextures,deleteTextures)<SUB>2355</SUB>> ]
-"5741" [label = <(data,mTexturePool.data())<SUB>2355</SUB>> ]
-"5749" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>2356</SUB>> ]
-"5754" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2357</SUB>> ]
-"5277" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2231</SUB>> ]
-"5484" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getRefreshTimestamp)<SUB>2293</SUB>> ]
-"5487" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2293</SUB>> ]
-"5495" [label = <(FIELD_IDENTIFIER,setActualPresentTime,setActualPresentTime)<SUB>2294</SUB>> ]
-"5640" [label = <(getBE,getBE())<SUB>2335</SUB>> ]
-"5641" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>2335</SUB>> ]
-"5643" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>2335</SUB>> ]
-"5727" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2353</SUB>> ]
-"5742" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.data)<SUB>2355</SUB>> ]
-"5756" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2357</SUB>> ]
-"5279" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2231</SUB>> ]
-"5485" [label = <(getHwComposer,getHwComposer())<SUB>2293</SUB>> ]
-"5486" [label = <(FIELD_IDENTIFIER,getRefreshTimestamp,getRefreshTimestamp)<SUB>2293</SUB>> ]
-"5488" [label = <(getId,display-&gt;getId())<SUB>2293</SUB>> ]
-"5645" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>2335</SUB>> ]
-"5729" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2353</SUB>> ]
-"5744" [label = <(FIELD_IDENTIFIER,data,data)<SUB>2355</SUB>> ]
-"5489" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2293</SUB>> ]
-"5491" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2293</SUB>> ]
-"5210" [label = <(METHOD,postComposition)<SUB>2215</SUB>> ]
-"5777" [label = <(METHOD_RETURN,void)<SUB>2215</SUB>> ]
-  "5212" -> "5213" 
-  "5213" -> "5218" 
-  "5216" -> "5226" 
-  "5229" -> "5241" 
-  "5238" -> "5248" 
-  "5244" -> "5252" 
-  "5244" -> "5260" 
-  "5296" -> "5303" 
-  "5302" -> "5310" 
-  "5309" -> "5334" 
-  "5328" -> "5342" 
-  "5339" -> "5350" 
-  "5347" -> "5358" 
-  "5353" -> "5366" 
-  "5379" -> "5387" 
-  "5384" -> "5394" 
-  "5391" -> "5398" 
-  "5391" -> "5403" 
-  "5425" -> "5439" 
-  "5501" -> "5511" 
-  "5501" -> "5518" 
-  "5501" -> "5522" 
-  "5519" -> "5530" 
-  "5525" -> "5538" 
-  "5533" -> "5543" 
-  "5540" -> "5548" 
-  "5590" -> "5596" 
-  "5590" -> "5607" 
-  "5653" -> "5660" 
-  "5658" -> "5664" 
-  "5218" -> "5216" 
-  "5231" -> "5236" 
-  "5231" -> "5229" 
-  "5239" -> "5238" 
-  "5245" -> "5244" 
-  "5252" -> "5270" 
-  "5252" -> "5295" 
-  "5297" -> "5296" 
-  "5303" -> "5306" 
-  "5306" -> "5302" 
-  "5310" -> "5317" 
-  "5310" -> "5326" 
-  "5313" -> "5309" 
-  "5330" -> "5328" 
-  "5340" -> "5339" 
-  "5348" -> "5351" 
-  "5351" -> "5347" 
-  "5355" -> "5353" 
-  "5362" -> "5377" 
-  "5374" -> "5382" 
-  "5380" -> "5383" 
-  "5383" -> "5379" 
-  "5385" -> "5388" 
-  "5388" -> "5384" 
-  "5392" -> "5391" 
-  "5396" -> "5422" 
-  "5396" -> "5431" 
-  "5396" -> "5427" 
-  "5427" -> "5425" 
-  "5439" -> "5443" 
-  "5439" -> "5448" 
-  "5439" -> "5457" 
-  "5439" -> "5504" 
-  "5502" -> "5501" 
-  "5520" -> "5519" 
-  "5527" -> "5525" 
-  "5535" -> "5533" 
-  "5541" -> "5544" 
-  "5544" -> "5540" 
-  "5548" -> "5552" 
-  "5548" -> "5580" 
-  "5548" -> "5586" 
-  "5580" -> "5588" 
-  "5580" -> "5592" 
-  "5592" -> "5590" 
-  "5654" -> "5653" 
-  "5659" -> "5658" 
-  "5664" -> "5671" 
-  "5766" -> "5777" 
-  "5766" -> "5775" 
-  "5223" -> "5226" 
-  "5223" -> "5231" 
-  "5240" -> "5243" 
-  "5243" -> "5239" 
-  "5246" -> "5245" 
-  "5254" -> "5252" 
-  "5264" -> "5285" 
-  "5282" -> "5299" 
-  "5298" -> "5301" 
-  "5301" -> "5297" 
-  "5315" -> "5313" 
-  "5324" -> "5313" 
-  "5331" -> "5336" 
-  "5336" -> "5330" 
-  "5341" -> "5344" 
-  "5344" -> "5340" 
-  "5350" -> "5348" 
+"5228" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2216</SUB>> ]
+"5229" [label = <(ALOGV,ALOGV(&quot;postComposition&quot;))<SUB>2217</SUB>> ]
+"5232" [label = <(&lt;operator&gt;.assignment,dequeueReadyTime = systemTime())<SUB>2219</SUB>> ]
+"5245" [label = <(&lt;operator&gt;.assignment,* display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()).get())<SUB>2224</SUB>> ]
+"5254" [label = <(updateSignalTimes,getBE().mGlCompositionDoneTimeline.updateSignalTimes())<SUB>2226</SUB>> ]
+"5260" [label = <(&lt;operator&gt;.greaterThan,std::shared_ptr&lt;FenceTime&gt; glCompositionDoneFenceTime)<SUB>2227</SUB>> ]
+"5312" [label = <(updateSignalTimes,getBE().mDisplayTimeline.updateSignalTimes())<SUB>2238</SUB>> ]
+"5318" [label = <(&lt;operator&gt;.assignment,mPreviousPresentFences[1] = mPreviousPresentFences[0])<SUB>2239</SUB>> ]
+"5325" [label = <(&lt;operator&gt;.assignment,mPreviousPresentFences[0] =\012            display ? getHwComposer().getPresentFence(*display-&gt;getId()) : Fence::NO_FENCE)<SUB>2240</SUB>> ]
+"5344" [label = <(&lt;operator&gt;.assignment,presentFenceTime = std::make_shared&lt;FenceTime&gt;(mPreviousPresentFences[0]))<SUB>2242</SUB>> ]
+"5355" [label = <(push,getBE().mDisplayTimeline.push(presentFenceTime))<SUB>2243</SUB>> ]
+"5363" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(&amp;stats))<SUB>2246</SUB>> ]
+"5369" [label = <(updateCompositorTiming,updateCompositorTiming(stats, mCompositionEngine-&gt;getLastFrameRefreshTimestamp(),\012                           presentFenceTime))<SUB>2251</SUB>> ]
+"5395" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012 const bool frameLatched = layer-&gt;onPostComposition(display, glCompositionDoneFenceTime,\012                                                           presentFenceTime, compositorTiming);\012 if (frameLatched) {\012            recordBufferingStats(layer-&gt;getName(), layer-&gt;getOccupancyHistory(false));\012 }\012 }))<SUB>2259</SUB>> ]
+"5400" [label = <(addPresentFence,mTransactionCompletedThread.addPresentFence(mPreviousPresentFences[0]))<SUB>2267</SUB>> ]
+"5407" [label = <(sendCallbacks,mTransactionCompletedThread.sendCallbacks())<SUB>2268</SUB>> ]
+"5441" [label = <(&lt;operator&gt;.assignment,isDisplayConnected = display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2275</SUB>> ]
+"5517" [label = <(incrementTotalFrames,mTimeStats-&gt;incrementTotalFrames())<SUB>2298</SUB>> ]
+"5535" [label = <(setPresentFenceGlobal,mTimeStats-&gt;setPresentFenceGlobal(presentFenceTime))<SUB>2307</SUB>> ]
+"5541" [label = <(&lt;operator&gt;.assignment,sfConnections = mScheduler-&gt;getEventThreadConnectionCount(mSfConnectionHandle))<SUB>2309</SUB>> ]
+"5549" [label = <(&lt;operator&gt;.assignment,appConnections = mScheduler-&gt;getEventThreadConnectionCount(mAppConnectionHandle))<SUB>2310</SUB>> ]
+"5556" [label = <(recordDisplayEventConnectionCount,mTimeStats-&gt;recordDisplayEventConnectionCount(sfConnections + appConnections))<SUB>2311</SUB>> ]
+"5606" [label = <(&lt;operator&gt;.assignment,currentTime = systemTime())<SUB>2325</SUB>> ]
+"5669" [label = <(&lt;operator&gt;.assignment,getBE().mLastSwapTime = currentTime)<SUB>2338</SUB>> ]
+"5674" [label = <(cleanupPostRender,getRenderEngine().cleanupPostRender())<SUB>2341</SUB>> ]
+"5234" [label = <(systemTime,systemTime())<SUB>2219</SUB>> ]
+"5247" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()).get())<SUB>2224</SUB>> ]
+"5255" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline.updateSignalTimes)<SUB>2226</SUB>> ]
+"5261" [label = <(&lt;operator&gt;.lessThan,std::shared_ptr&lt;FenceTime)<SUB>2227</SUB>> ]
+"5268" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;getCompositionDisplay()-&gt;getState().usesClientComposition)<SUB>2228</SUB>> ]
+"5313" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline.updateSignalTimes)<SUB>2238</SUB>> ]
+"5319" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[1])<SUB>2239</SUB>> ]
+"5322" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2239</SUB>> ]
+"5326" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2240</SUB>> ]
+"5329" [label = <(&lt;operator&gt;.conditional,display ? getHwComposer().getPresentFence(*display-&gt;getId()) : Fence::NO_FENCE)<SUB>2241</SUB>> ]
+"5346" [label = <(&lt;operator&gt;.greaterThan,std::make_shared&lt;FenceTime&gt;(mPreviousPresentFences[0]))<SUB>2242</SUB>> ]
+"5356" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline.push)<SUB>2243</SUB>> ]
+"5364" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>2246</SUB>> ]
+"5367" [label = <(&lt;operator&gt;.addressOf,&amp;stats)<SUB>2246</SUB>> ]
+"5371" [label = <(getLastFrameRefreshTimestamp,mCompositionEngine-&gt;getLastFrameRefreshTimestamp())<SUB>2251</SUB>> ]
+"5378" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(getBE().mCompositorTimingLock))<SUB>2255</SUB>> ]
+"5390" [label = <(&lt;operator&gt;.assignment,compositorTiming = getBE().mCompositorTiming)<SUB>2256</SUB>> ]
+"5396" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>2259</SUB>> ]
+"5399" [label = <(METHOD_REF,ANY anonymous_lambda_23 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012 const bool frameLatched = layer-&gt;onPostComposition(display, glCompositionDoneFenceTime,\012                                                           presentFenceTime, compositorTiming);\012 if (frameLatched) {\012            recordBufferingStats(layer-&gt;getName(), layer-&gt;getOccupancyHistory(false));\012 }\012 }))<SUB>2259</SUB>> ]
+"5401" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.addPresentFence)<SUB>2267</SUB>> ]
+"5404" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2267</SUB>> ]
+"5408" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.sendCallbacks)<SUB>2268</SUB>> ]
+"5412" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary() &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON &amp;&amp;\012        presentFenceTime-&gt;isValid())<SUB>2270</SUB>> ]
+"5443" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2275</SUB>> ]
+"5455" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>2277</SUB>> ]
+"5518" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementTotalFrames)<SUB>2298</SUB>> ]
+"5536" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;setPresentFenceGlobal)<SUB>2307</SUB>> ]
+"5543" [label = <(getEventThreadConnectionCount,mScheduler-&gt;getEventThreadConnectionCount(mSfConnectionHandle))<SUB>2309</SUB>> ]
+"5551" [label = <(getEventThreadConnectionCount,mScheduler-&gt;getEventThreadConnectionCount(mAppConnectionHandle))<SUB>2310</SUB>> ]
+"5557" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;recordDisplayEventConnectionCount)<SUB>2311</SUB>> ]
+"5560" [label = <(&lt;operator&gt;.addition,sfConnections + appConnections)<SUB>2311</SUB>> ]
+"5564" [label = <(&lt;operator&gt;.greaterThan,mLastJankDuration &gt; 0)<SUB>2313</SUB>> ]
+"5596" [label = <(&lt;operator&gt;.logicalAnd,isDisplayConnected &amp;&amp; !display-&gt;isPoweredOn())<SUB>2321</SUB>> ]
+"5608" [label = <(systemTime,systemTime())<SUB>2325</SUB>> ]
+"5670" [label = <(&lt;operator&gt;.fieldAccess,getBE().mLastSwapTime)<SUB>2338</SUB>> ]
+"5675" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().cleanupPostRender)<SUB>2341</SUB>> ]
+"5680" [label = <(lock,lock(mTexturePoolMutex))<SUB>2344</SUB>> ]
+"5782" [label = <(ATRACE_ENABLED,ATRACE_ENABLED())<SUB>2366</SUB>> ]
+"5239" [label = <(releasePendingBuffer,layer-&gt;releasePendingBuffer(dequeueReadyTime))<SUB>2221</SUB>> ]
+"5256" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline)<SUB>2226</SUB>> ]
+"5259" [label = <(FIELD_IDENTIFIER,updateSignalTimes,updateSignalTimes)<SUB>2226</SUB>> ]
+"5262" [label = <(&lt;operator&gt;.fieldAccess,std::shared_ptr)<SUB>2227</SUB>> ]
+"5270" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().usesClientComposition)<SUB>2228</SUB>> ]
+"5280" [label = <(&lt;operator&gt;.assignment,glCompositionDoneFenceTime =\012                std::make_shared&lt;FenceTime&gt;(display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence()))<SUB>2229</SUB>> ]
+"5298" [label = <(push,getBE().mGlCompositionDoneTimeline.push(glCompositionDoneFenceTime))<SUB>2233</SUB>> ]
+"5314" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline)<SUB>2238</SUB>> ]
+"5317" [label = <(FIELD_IDENTIFIER,updateSignalTimes,updateSignalTimes)<SUB>2238</SUB>> ]
+"5331" [label = <(getPresentFence,getHwComposer().getPresentFence(*display-&gt;getId()))<SUB>2241</SUB>> ]
+"5340" [label = <(&lt;operator&gt;.fieldAccess,Fence::NO_FENCE)<SUB>2241</SUB>> ]
+"5347" [label = <(&lt;operator&gt;.lessThan,std::make_shared&lt;FenceTime)<SUB>2242</SUB>> ]
+"5352" [label = <(&lt;operator&gt;.indirectIndexAccess,mPreviousPresentFences[0])<SUB>2242</SUB>> ]
+"5357" [label = <(&lt;operator&gt;.fieldAccess,getBE().mDisplayTimeline)<SUB>2243</SUB>> ]
+"5360" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2243</SUB>> ]
+"5366" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>2246</SUB>> ]
+"5372" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getLastFrameRefreshTimestamp)<SUB>2251</SUB>> ]
+"5379" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>2255</SUB>> ]
+"5386" [label = <(lock,lock(getBE().mCompositorTimingLock))<SUB>2255</SUB>> ]
+"5392" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTiming)<SUB>2256</SUB>> ]
+"5398" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2259</SUB>> ]
+"5403" [label = <(FIELD_IDENTIFIER,addPresentFence,addPresentFence)<SUB>2267</SUB>> ]
+"5410" [label = <(FIELD_IDENTIFIER,sendCallbacks,sendCallbacks)<SUB>2268</SUB>> ]
+"5413" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary() &amp;&amp; display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>2270</SUB>> ]
+"5430" [label = <(isValid,presentFenceTime-&gt;isValid())<SUB>2271</SUB>> ]
+"5435" [label = <(addPresentFence,mScheduler-&gt;addPresentFence(presentFenceTime))<SUB>2272</SUB>> ]
+"5445" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>2275</SUB>> ]
+"5473" [label = <(&lt;operator&gt;.assignment,mAnimCompositionPending = false)<SUB>2284</SUB>> ]
+"5513" [label = <(advanceFrame,mAnimFrameTracker.advanceFrame())<SUB>2295</SUB>> ]
+"5520" [label = <(FIELD_IDENTIFIER,incrementTotalFrames,incrementTotalFrames)<SUB>2298</SUB>> ]
+"5524" [label = <(incrementClientCompositionFrames,mTimeStats-&gt;incrementClientCompositionFrames())<SUB>2300</SUB>> ]
+"5531" [label = <(incrementClientCompositionReusedFrames,mTimeStats-&gt;incrementClientCompositionReusedFrames())<SUB>2304</SUB>> ]
+"5538" [label = <(FIELD_IDENTIFIER,setPresentFenceGlobal,setPresentFenceGlobal)<SUB>2307</SUB>> ]
+"5544" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventThreadConnectionCount)<SUB>2309</SUB>> ]
+"5552" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventThreadConnectionCount)<SUB>2310</SUB>> ]
+"5559" [label = <(FIELD_IDENTIFIER,recordDisplayEventConnectionCount,recordDisplayEventConnectionCount)<SUB>2311</SUB>> ]
+"5568" [label = <(ATRACE_NAME,ATRACE_NAME(&quot;Jank detected&quot;))<SUB>2314</SUB>> ]
+"5571" [label = <(&lt;operator&gt;.assignment,jankyDurationMillis = mLastJankDuration / (1000 * 1000))<SUB>2315</SUB>> ]
+"5578" [label = <(android::util::stats_write,android::util::stats_write(android::util::DISPLAY_JANK_REPORTED, jankyDurationMillis,\012                                   mMissedFrameJankCount))<SUB>2316</SUB>> ]
+"5591" [label = <(&lt;operator&gt;.assignment,mLastJankDuration = -1)<SUB>2318</SUB>> ]
+"5598" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPoweredOn())<SUB>2321</SUB>> ]
+"5604" [label = <(RETURN,return;,return;)<SUB>2322</SUB>> ]
+"5612" [label = <(&lt;operator&gt;.assignment,mHasPoweredOff = false)<SUB>2327</SUB>> ]
+"5671" [label = <(getBE,getBE())<SUB>2338</SUB>> ]
+"5672" [label = <(FIELD_IDENTIFIER,mLastSwapTime,mLastSwapTime)<SUB>2338</SUB>> ]
+"5676" [label = <(getRenderEngine,getRenderEngine())<SUB>2341</SUB>> ]
+"5677" [label = <(FIELD_IDENTIFIER,cleanupPostRender,cleanupPostRender)<SUB>2341</SUB>> ]
+"5683" [label = <(&lt;operator&gt;.lessThan,mTexturePool.size() &lt; mTexturePoolSize)<SUB>2345</SUB>> ]
+"5777" [label = <(notifyNewContent,mRegionSamplingThread-&gt;notifyNewContent())<SUB>2361</SUB>> ]
+"5784" [label = <(ATRACE_INT64,ATRACE_INT64(&quot;Total Buffer Size&quot;, GraphicBufferAllocator::get().getTotalSize()))<SUB>2368</SUB>> ]
+"5240" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;releasePendingBuffer)<SUB>2221</SUB>> ]
+"5249" [label = <(get,().get())<SUB>2224</SUB>> ]
+"5257" [label = <(getBE,getBE())<SUB>2226</SUB>> ]
+"5258" [label = <(FIELD_IDENTIFIER,mGlCompositionDoneTimeline,mGlCompositionDoneTimeline)<SUB>2226</SUB>> ]
+"5264" [label = <(FIELD_IDENTIFIER,shared_ptr,shared_ptr)<SUB>2227</SUB>> ]
+"5271" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>2228</SUB>> ]
+"5278" [label = <(FIELD_IDENTIFIER,usesClientComposition,usesClientComposition)<SUB>2228</SUB>> ]
+"5282" [label = <(&lt;operator&gt;.greaterThan,std::make_shared&lt;FenceTime&gt;(display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence()))<SUB>2230</SUB>> ]
+"5299" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline.push)<SUB>2233</SUB>> ]
+"5307" [label = <(&lt;operator&gt;.assignment,glCompositionDoneFenceTime = FenceTime::NO_FENCE)<SUB>2235</SUB>> ]
+"5315" [label = <(getBE,getBE())<SUB>2238</SUB>> ]
+"5316" [label = <(FIELD_IDENTIFIER,mDisplayTimeline,mDisplayTimeline)<SUB>2238</SUB>> ]
+"5332" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getPresentFence)<SUB>2241</SUB>> ]
+"5335" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2241</SUB>> ]
+"5342" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>2241</SUB>> ]
+"5348" [label = <(&lt;operator&gt;.fieldAccess,std::make_shared)<SUB>2242</SUB>> ]
+"5358" [label = <(getBE,getBE())<SUB>2243</SUB>> ]
+"5359" [label = <(FIELD_IDENTIFIER,mDisplayTimeline,mDisplayTimeline)<SUB>2243</SUB>> ]
+"5374" [label = <(FIELD_IDENTIFIER,getLastFrameRefreshTimestamp,getLastFrameRefreshTimestamp)<SUB>2251</SUB>> ]
+"5380" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>2255</SUB>> ]
+"5383" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>2255</SUB>> ]
+"5387" [label = <(&lt;operator&gt;.fieldAccess,getBE().mCompositorTimingLock)<SUB>2255</SUB>> ]
+"5393" [label = <(getBE,getBE())<SUB>2256</SUB>> ]
+"5394" [label = <(FIELD_IDENTIFIER,mCompositorTiming,mCompositorTiming)<SUB>2256</SUB>> ]
+"5414" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; display-&gt;isPrimary())<SUB>2270</SUB>> ]
+"5420" [label = <(&lt;operator&gt;.equals,display-&gt;getPowerMode() == hal::PowerMode::ON)<SUB>2270</SUB>> ]
+"5431" [label = <(&lt;operator&gt;.indirectFieldAccess,presentFenceTime-&gt;isValid)<SUB>2271</SUB>> ]
+"5436" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;addPresentFence)<SUB>2272</SUB>> ]
+"5446" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>2275</SUB>> ]
+"5449" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2275</SUB>> ]
+"5459" [label = <(&lt;operator&gt;.logicalAnd,isDisplayConnected &amp;&amp; display-&gt;isPoweredOn())<SUB>2278</SUB>> ]
+"5477" [label = <(isValid,presentFenceTime-&gt;isValid())<SUB>2286</SUB>> ]
+"5514" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.advanceFrame)<SUB>2295</SUB>> ]
+"5525" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementClientCompositionFrames)<SUB>2300</SUB>> ]
+"5532" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;incrementClientCompositionReusedFrames)<SUB>2304</SUB>> ]
+"5546" [label = <(FIELD_IDENTIFIER,getEventThreadConnectionCount,getEventThreadConnectionCount)<SUB>2309</SUB>> ]
+"5554" [label = <(FIELD_IDENTIFIER,getEventThreadConnectionCount,getEventThreadConnectionCount)<SUB>2310</SUB>> ]
+"5573" [label = <(&lt;operator&gt;.division,mLastJankDuration / (1000 * 1000))<SUB>2315</SUB>> ]
+"5579" [label = <(&lt;operator&gt;.fieldAccess,android::util::stats_write)<SUB>2316</SUB>> ]
+"5584" [label = <(&lt;operator&gt;.fieldAccess,android::util::DISPLAY_JANK_REPORTED)<SUB>2316</SUB>> ]
+"5593" [label = <(&lt;operator&gt;.minus,-1)<SUB>2318</SUB>> ]
+"5599" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>2321</SUB>> ]
+"5618" [label = <(&lt;operator&gt;.assignment,elapsedTime = currentTime - getBE().mLastSwapTime)<SUB>2329</SUB>> ]
+"5626" [label = <(&lt;operator&gt;.assignment,numPeriods = static_cast&lt;size_t&gt;(elapsedTime / stats.vsyncPeriod))<SUB>2330</SUB>> ]
+"5664" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mTotalTime += elapsedTime)<SUB>2336</SUB>> ]
+"5684" [label = <(size,mTexturePool.size())<SUB>2345</SUB>> ]
+"5691" [label = <(&lt;operator&gt;.assignment,refillCount = mTexturePoolSize - mTexturePool.size())<SUB>2346</SUB>> ]
+"5700" [label = <(&lt;operator&gt;.assignment,offset = mTexturePool.size())<SUB>2347</SUB>> ]
+"5706" [label = <(resize,mTexturePool.resize(mTexturePoolSize))<SUB>2348</SUB>> ]
+"5711" [label = <(genTextures,getRenderEngine().genTextures(refillCount, mTexturePool.data() + offset))<SUB>2349</SUB>> ]
+"5722" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>2350</SUB>> ]
+"5778" [label = <(&lt;operator&gt;.indirectFieldAccess,mRegionSamplingThread-&gt;notifyNewContent)<SUB>2361</SUB>> ]
+"5786" [label = <(getTotalSize,GraphicBufferAllocator::get().getTotalSize())<SUB>2368</SUB>> ]
+"5242" [label = <(FIELD_IDENTIFIER,releasePendingBuffer,releasePendingBuffer)<SUB>2221</SUB>> ]
+"5250" [label = <(&lt;operator&gt;.fieldAccess,().get)<SUB>2224</SUB>> ]
+"5272" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>2228</SUB>> ]
+"5283" [label = <(&lt;operator&gt;.lessThan,std::make_shared&lt;FenceTime)<SUB>2230</SUB>> ]
+"5288" [label = <(getClientTargetAcquireFence,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence())<SUB>2230</SUB>> ]
+"5300" [label = <(&lt;operator&gt;.fieldAccess,getBE().mGlCompositionDoneTimeline)<SUB>2233</SUB>> ]
+"5303" [label = <(FIELD_IDENTIFIER,push,push)<SUB>2233</SUB>> ]
+"5309" [label = <(&lt;operator&gt;.fieldAccess,FenceTime::NO_FENCE)<SUB>2235</SUB>> ]
+"5333" [label = <(getHwComposer,getHwComposer())<SUB>2241</SUB>> ]
+"5334" [label = <(FIELD_IDENTIFIER,getPresentFence,getPresentFence)<SUB>2241</SUB>> ]
+"5336" [label = <(getId,display-&gt;getId())<SUB>2241</SUB>> ]
+"5350" [label = <(FIELD_IDENTIFIER,make_shared,make_shared)<SUB>2242</SUB>> ]
+"5382" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>2255</SUB>> ]
+"5385" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>2255</SUB>> ]
+"5388" [label = <(getBE,getBE())<SUB>2255</SUB>> ]
+"5389" [label = <(FIELD_IDENTIFIER,mCompositorTimingLock,mCompositorTimingLock)<SUB>2255</SUB>> ]
+"5416" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2270</SUB>> ]
+"5421" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>2270</SUB>> ]
+"5425" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2270</SUB>> ]
+"5433" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>2271</SUB>> ]
+"5438" [label = <(FIELD_IDENTIFIER,addPresentFence,addPresentFence)<SUB>2272</SUB>> ]
+"5447" [label = <(getHwComposer,getHwComposer())<SUB>2275</SUB>> ]
+"5448" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>2275</SUB>> ]
+"5450" [label = <(getId,display-&gt;getId())<SUB>2275</SUB>> ]
+"5461" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>2278</SUB>> ]
+"5466" [label = <(enableHardwareVsync,mScheduler-&gt;enableHardwareVsync())<SUB>2279</SUB>> ]
+"5478" [label = <(&lt;operator&gt;.indirectFieldAccess,presentFenceTime-&gt;isValid)<SUB>2286</SUB>> ]
+"5482" [label = <(setActualPresentFence,mAnimFrameTracker.setActualPresentFence(\012                    std::move(presentFenceTime)))<SUB>2287</SUB>> ]
+"5516" [label = <(FIELD_IDENTIFIER,advanceFrame,advanceFrame)<SUB>2295</SUB>> ]
+"5527" [label = <(FIELD_IDENTIFIER,incrementClientCompositionFrames,incrementClientCompositionFrames)<SUB>2300</SUB>> ]
+"5534" [label = <(FIELD_IDENTIFIER,incrementClientCompositionReusedFrames,incrementClientCompositionReusedFrames)<SUB>2304</SUB>> ]
+"5575" [label = <(&lt;operator&gt;.multiplication,1000 * 1000)<SUB>2315</SUB>> ]
+"5580" [label = <(&lt;operator&gt;.fieldAccess,android::util)<SUB>2316</SUB>> ]
+"5583" [label = <(FIELD_IDENTIFIER,stats_write,stats_write)<SUB>2316</SUB>> ]
+"5585" [label = <(&lt;operator&gt;.fieldAccess,android::util)<SUB>2316</SUB>> ]
+"5588" [label = <(FIELD_IDENTIFIER,DISPLAY_JANK_REPORTED,DISPLAY_JANK_REPORTED)<SUB>2316</SUB>> ]
+"5600" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>2321</SUB>> ]
+"5620" [label = <(&lt;operator&gt;.subtraction,currentTime - getBE().mLastSwapTime)<SUB>2329</SUB>> ]
+"5628" [label = <(&lt;operator&gt;.cast,static_cast&lt;size_t&gt;(elapsedTime / stats.vsyncPeriod))<SUB>2330</SUB>> ]
+"5636" [label = <(&lt;operator&gt;.lessThan,numPeriods &lt; SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2331</SUB>> ]
+"5665" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>2336</SUB>> ]
+"5685" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2345</SUB>> ]
+"5693" [label = <(&lt;operator&gt;.subtraction,mTexturePoolSize - mTexturePool.size())<SUB>2346</SUB>> ]
+"5702" [label = <(size,mTexturePool.size())<SUB>2347</SUB>> ]
+"5707" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.resize)<SUB>2348</SUB>> ]
+"5712" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().genTextures)<SUB>2349</SUB>> ]
+"5716" [label = <(&lt;operator&gt;.addition,mTexturePool.data() + offset)<SUB>2349</SUB>> ]
+"5724" [label = <(size,mTexturePool.size())<SUB>2350</SUB>> ]
+"5780" [label = <(FIELD_IDENTIFIER,notifyNewContent,notifyNewContent)<SUB>2361</SUB>> ]
+"5787" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get().getTotalSize)<SUB>2368</SUB>> ]
+"5251" [label = <(android.SurfaceFlinger.postComposition.anonymous_lambda_22,())<SUB>2224</SUB>> ]
+"5253" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2224</SUB>> ]
+"5273" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2228</SUB>> ]
+"5277" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>2228</SUB>> ]
+"5284" [label = <(&lt;operator&gt;.fieldAccess,std::make_shared)<SUB>2230</SUB>> ]
+"5289" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface()\012 -&gt;getClientTargetAcquireFence)<SUB>2230</SUB>> ]
+"5301" [label = <(getBE,getBE())<SUB>2233</SUB>> ]
+"5302" [label = <(FIELD_IDENTIFIER,mGlCompositionDoneTimeline,mGlCompositionDoneTimeline)<SUB>2233</SUB>> ]
+"5311" [label = <(FIELD_IDENTIFIER,NO_FENCE,NO_FENCE)<SUB>2235</SUB>> ]
+"5337" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2241</SUB>> ]
+"5417" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2270</SUB>> ]
+"5422" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>2270</SUB>> ]
+"5426" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2270</SUB>> ]
+"5429" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2270</SUB>> ]
+"5451" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2275</SUB>> ]
+"5462" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>2278</SUB>> ]
+"5467" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;enableHardwareVsync)<SUB>2279</SUB>> ]
+"5480" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>2286</SUB>> ]
+"5483" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setActualPresentFence)<SUB>2287</SUB>> ]
+"5486" [label = <(std::move,std::move(presentFenceTime))<SUB>2288</SUB>> ]
+"5602" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>2321</SUB>> ]
+"5622" [label = <(&lt;operator&gt;.fieldAccess,getBE().mLastSwapTime)<SUB>2329</SUB>> ]
+"5629" [label = <(UNKNOWN,size_t,size_t)<SUB>2330</SUB>> ]
+"5630" [label = <(&lt;operator&gt;.division,elapsedTime / stats.vsyncPeriod)<SUB>2330</SUB>> ]
+"5638" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2331</SUB>> ]
+"5644" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mFrameBuckets[numPeriods] += elapsedTime)<SUB>2332</SUB>> ]
+"5666" [label = <(getBE,getBE())<SUB>2336</SUB>> ]
+"5667" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>2336</SUB>> ]
+"5687" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2345</SUB>> ]
+"5695" [label = <(size,mTexturePool.size())<SUB>2346</SUB>> ]
+"5703" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2347</SUB>> ]
+"5709" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>2348</SUB>> ]
+"5713" [label = <(getRenderEngine,getRenderEngine())<SUB>2349</SUB>> ]
+"5714" [label = <(FIELD_IDENTIFIER,genTextures,genTextures)<SUB>2349</SUB>> ]
+"5717" [label = <(data,mTexturePool.data())<SUB>2349</SUB>> ]
+"5725" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2350</SUB>> ]
+"5731" [label = <(&lt;operator&gt;.greaterThan,mTexturePool.size() &gt; mTexturePoolSize)<SUB>2351</SUB>> ]
+"5788" [label = <(GraphicBufferAllocator::get,GraphicBufferAllocator::get())<SUB>2368</SUB>> ]
+"5792" [label = <(FIELD_IDENTIFIER,getTotalSize,getTotalSize)<SUB>2368</SUB>> ]
+"5252" [label = <(METHOD_REF,ANY anonymous_lambda_22 (),())<SUB>2224</SUB>> ]
+"5274" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2228</SUB>> ]
+"5286" [label = <(FIELD_IDENTIFIER,make_shared,make_shared)<SUB>2230</SUB>> ]
+"5290" [label = <(getRenderSurface,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface())<SUB>2230</SUB>> ]
+"5297" [label = <(FIELD_IDENTIFIER,getClientTargetAcquireFence,getClientTargetAcquireFence)<SUB>2230</SUB>> ]
+"5339" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2241</SUB>> ]
+"5419" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2270</SUB>> ]
+"5424" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>2270</SUB>> ]
+"5453" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2275</SUB>> ]
+"5464" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>2278</SUB>> ]
+"5469" [label = <(FIELD_IDENTIFIER,enableHardwareVsync,enableHardwareVsync)<SUB>2279</SUB>> ]
+"5485" [label = <(FIELD_IDENTIFIER,setActualPresentFence,setActualPresentFence)<SUB>2287</SUB>> ]
+"5487" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>2288</SUB>> ]
+"5623" [label = <(getBE,getBE())<SUB>2329</SUB>> ]
+"5624" [label = <(FIELD_IDENTIFIER,mLastSwapTime,mLastSwapTime)<SUB>2329</SUB>> ]
+"5632" [label = <(&lt;operator&gt;.fieldAccess,stats.vsyncPeriod)<SUB>2330</SUB>> ]
+"5639" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>2331</SUB>> ]
+"5645" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[numPeriods])<SUB>2332</SUB>> ]
+"5653" [label = <(&lt;operator&gt;.assignmentPlus,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] += elapsedTime)<SUB>2334</SUB>> ]
+"5696" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2346</SUB>> ]
+"5705" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2347</SUB>> ]
+"5718" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.data)<SUB>2349</SUB>> ]
+"5727" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2350</SUB>> ]
+"5732" [label = <(size,mTexturePool.size())<SUB>2351</SUB>> ]
+"5739" [label = <(&lt;operator&gt;.assignment,deleteCount = mTexturePool.size() - mTexturePoolSize)<SUB>2352</SUB>> ]
+"5748" [label = <(&lt;operator&gt;.assignment,offset = mTexturePoolSize)<SUB>2353</SUB>> ]
+"5751" [label = <(deleteTextures,getRenderEngine().deleteTextures(deleteCount, mTexturePool.data() + offset))<SUB>2354</SUB>> ]
+"5762" [label = <(resize,mTexturePool.resize(mTexturePoolSize))<SUB>2355</SUB>> ]
+"5767" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>2356</SUB>> ]
+"5789" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get)<SUB>2368</SUB>> ]
+"5276" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2228</SUB>> ]
+"5291" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()\012 -&gt;getRenderSurface)<SUB>2230</SUB>> ]
+"5489" [label = <(FIELD_IDENTIFIER,move,move)<SUB>2288</SUB>> ]
+"5497" [label = <(&lt;operator&gt;.assignment,presentTime = getHwComposer().getRefreshTimestamp(*display-&gt;getId()))<SUB>2292</SUB>> ]
+"5508" [label = <(setActualPresentTime,mAnimFrameTracker.setActualPresentTime(presentTime))<SUB>2293</SUB>> ]
+"5634" [label = <(FIELD_IDENTIFIER,vsyncPeriod,vsyncPeriod)<SUB>2330</SUB>> ]
+"5641" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>2331</SUB>> ]
+"5646" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>2332</SUB>> ]
+"5654" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>2334</SUB>> ]
+"5698" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2346</SUB>> ]
+"5720" [label = <(FIELD_IDENTIFIER,data,data)<SUB>2349</SUB>> ]
+"5733" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2351</SUB>> ]
+"5741" [label = <(&lt;operator&gt;.subtraction,mTexturePool.size() - mTexturePoolSize)<SUB>2352</SUB>> ]
+"5752" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().deleteTextures)<SUB>2354</SUB>> ]
+"5756" [label = <(&lt;operator&gt;.addition,mTexturePool.data() + offset)<SUB>2354</SUB>> ]
+"5763" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.resize)<SUB>2355</SUB>> ]
+"5769" [label = <(size,mTexturePool.size())<SUB>2356</SUB>> ]
+"5791" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2368</SUB>> ]
+"5292" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2230</SUB>> ]
+"5296" [label = <(FIELD_IDENTIFIER,getRenderSurface,getRenderSurface)<SUB>2230</SUB>> ]
+"5499" [label = <(getRefreshTimestamp,getHwComposer().getRefreshTimestamp(*display-&gt;getId()))<SUB>2292</SUB>> ]
+"5509" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setActualPresentTime)<SUB>2293</SUB>> ]
+"5647" [label = <(getBE,getBE())<SUB>2332</SUB>> ]
+"5648" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>2332</SUB>> ]
+"5655" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>2334</SUB>> ]
+"5658" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>2334</SUB>> ]
+"5735" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2351</SUB>> ]
+"5742" [label = <(size,mTexturePool.size())<SUB>2352</SUB>> ]
+"5753" [label = <(getRenderEngine,getRenderEngine())<SUB>2354</SUB>> ]
+"5754" [label = <(FIELD_IDENTIFIER,deleteTextures,deleteTextures)<SUB>2354</SUB>> ]
+"5757" [label = <(data,mTexturePool.data())<SUB>2354</SUB>> ]
+"5765" [label = <(FIELD_IDENTIFIER,resize,resize)<SUB>2355</SUB>> ]
+"5770" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2356</SUB>> ]
+"5293" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2230</SUB>> ]
+"5500" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getRefreshTimestamp)<SUB>2292</SUB>> ]
+"5503" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2292</SUB>> ]
+"5511" [label = <(FIELD_IDENTIFIER,setActualPresentTime,setActualPresentTime)<SUB>2293</SUB>> ]
+"5656" [label = <(getBE,getBE())<SUB>2334</SUB>> ]
+"5657" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>2334</SUB>> ]
+"5659" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>2334</SUB>> ]
+"5743" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>2352</SUB>> ]
+"5758" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.data)<SUB>2354</SUB>> ]
+"5772" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2356</SUB>> ]
+"5295" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2230</SUB>> ]
+"5501" [label = <(getHwComposer,getHwComposer())<SUB>2292</SUB>> ]
+"5502" [label = <(FIELD_IDENTIFIER,getRefreshTimestamp,getRefreshTimestamp)<SUB>2292</SUB>> ]
+"5504" [label = <(getId,display-&gt;getId())<SUB>2292</SUB>> ]
+"5661" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>2334</SUB>> ]
+"5745" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2352</SUB>> ]
+"5760" [label = <(FIELD_IDENTIFIER,data,data)<SUB>2354</SUB>> ]
+"5505" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2292</SUB>> ]
+"5507" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2292</SUB>> ]
+"5226" [label = <(METHOD,postComposition)<SUB>2214</SUB>> ]
+"5793" [label = <(METHOD_RETURN,void)<SUB>2214</SUB>> ]
+  "5228" -> "5229" 
+  "5229" -> "5234" 
+  "5232" -> "5242" 
+  "5245" -> "5257" 
+  "5254" -> "5264" 
+  "5260" -> "5268" 
+  "5260" -> "5276" 
+  "5312" -> "5319" 
+  "5318" -> "5326" 
+  "5325" -> "5350" 
+  "5344" -> "5358" 
+  "5355" -> "5366" 
+  "5363" -> "5374" 
+  "5369" -> "5382" 
+  "5395" -> "5403" 
+  "5400" -> "5410" 
+  "5407" -> "5414" 
+  "5407" -> "5419" 
+  "5441" -> "5455" 
+  "5517" -> "5527" 
+  "5517" -> "5534" 
+  "5517" -> "5538" 
+  "5535" -> "5546" 
+  "5541" -> "5554" 
+  "5549" -> "5559" 
+  "5556" -> "5564" 
+  "5606" -> "5612" 
+  "5606" -> "5623" 
+  "5669" -> "5676" 
+  "5674" -> "5680" 
+  "5234" -> "5232" 
+  "5247" -> "5252" 
+  "5247" -> "5245" 
+  "5255" -> "5254" 
+  "5261" -> "5260" 
+  "5268" -> "5286" 
+  "5268" -> "5311" 
+  "5313" -> "5312" 
+  "5319" -> "5322" 
+  "5322" -> "5318" 
+  "5326" -> "5333" 
+  "5326" -> "5342" 
+  "5329" -> "5325" 
+  "5346" -> "5344" 
   "5356" -> "5355" 
-  "5363" -> "5372" 
-  "5370" -> "5362" 
-  "5376" -> "5374" 
-  "5382" -> "5380" 
-  "5387" -> "5385" 
-  "5394" -> "5392" 
-  "5397" -> "5396" 
-  "5397" -> "5417" 
-  "5414" -> "5396" 
-  "5419" -> "5431" 
-  "5419" -> "5427" 
-  "5429" -> "5427" 
-  "5457" -> "5464" 
-  "5497" -> "5504" 
-  "5504" -> "5502" 
-  "5508" -> "5518" 
-  "5508" -> "5522" 
-  "5515" -> "5522" 
-  "5522" -> "5520" 
-  "5528" -> "5527" 
+  "5364" -> "5367" 
+  "5367" -> "5363" 
+  "5371" -> "5369" 
+  "5378" -> "5393" 
+  "5390" -> "5398" 
+  "5396" -> "5399" 
+  "5399" -> "5395" 
+  "5401" -> "5404" 
+  "5404" -> "5400" 
+  "5408" -> "5407" 
+  "5412" -> "5438" 
+  "5412" -> "5447" 
+  "5412" -> "5443" 
+  "5443" -> "5441" 
+  "5455" -> "5459" 
+  "5455" -> "5464" 
+  "5455" -> "5473" 
+  "5455" -> "5520" 
+  "5518" -> "5517" 
   "5536" -> "5535" 
   "5543" -> "5541" 
-  "5552" -> "5559" 
-  "5555" -> "5564" 
-  "5562" -> "5577" 
-  "5575" -> "5580" 
-  "5575" -> "5586" 
-  "5582" -> "5580" 
-  "5588" -> "5777" 
-  "5596" -> "5655" 
-  "5655" -> "5656" 
-  "5656" -> "5654" 
-  "5660" -> "5661" 
-  "5661" -> "5659" 
-  "5667" -> "5682" 
-  "5667" -> "5719" 
-  "5761" -> "5766" 
-  "5768" -> "5777" 
-  "5224" -> "5223" 
-  "5233" -> "5229" 
-  "5241" -> "5242" 
-  "5242" -> "5240" 
-  "5248" -> "5246" 
-  "5255" -> "5262" 
-  "5262" -> "5254" 
-  "5266" -> "5264" 
-  "5283" -> "5282" 
-  "5291" -> "5299" 
-  "5299" -> "5300" 
-  "5300" -> "5298" 
-  "5316" -> "5323" 
-  "5319" -> "5315" 
-  "5326" -> "5324" 
-  "5332" -> "5331" 
-  "5342" -> "5343" 
-  "5343" -> "5341" 
-  "5358" -> "5356" 
-  "5364" -> "5369" 
-  "5367" -> "5363" 
-  "5371" -> "5370" 
-  "5377" -> "5378" 
-  "5378" -> "5376" 
-  "5398" -> "5397" 
-  "5398" -> "5408" 
-  "5404" -> "5397" 
-  "5415" -> "5414" 
-  "5420" -> "5419" 
-  "5430" -> "5437" 
-  "5433" -> "5429" 
-  "5443" -> "5453" 
-  "5443" -> "5457" 
-  "5443" -> "5504" 
-  "5461" -> "5469" 
-  "5461" -> "5485" 
-  "5461" -> "5500" 
-  "5498" -> "5497" 
-  "5509" -> "5508" 
-  "5516" -> "5515" 
-  "5530" -> "5528" 
-  "5538" -> "5536" 
-  "5557" -> "5555" 
-  "5563" -> "5569" 
-  "5568" -> "5562" 
-  "5577" -> "5575" 
-  "5583" -> "5582" 
-  "5602" -> "5613" 
-  "5610" -> "5625" 
-  "5648" -> "5655" 
-  "5668" -> "5667" 
-  "5675" -> "5689" 
-  "5684" -> "5693" 
-  "5690" -> "5697" 
-  "5695" -> "5711" 
-  "5762" -> "5761" 
-  "5770" -> "5768" 
-  "5226" -> "5224" 
-  "5234" -> "5233" 
-  "5256" -> "5255" 
-  "5267" -> "5279" 
-  "5272" -> "5266" 
-  "5284" -> "5287" 
-  "5287" -> "5283" 
-  "5293" -> "5291" 
-  "5317" -> "5318" 
-  "5318" -> "5316" 
-  "5320" -> "5319" 
-  "5334" -> "5332" 
+  "5551" -> "5549" 
+  "5557" -> "5560" 
+  "5560" -> "5556" 
+  "5564" -> "5568" 
+  "5564" -> "5596" 
+  "5564" -> "5602" 
+  "5596" -> "5604" 
+  "5596" -> "5608" 
+  "5608" -> "5606" 
+  "5670" -> "5669" 
+  "5675" -> "5674" 
+  "5680" -> "5687" 
+  "5782" -> "5793" 
+  "5782" -> "5791" 
+  "5239" -> "5242" 
+  "5239" -> "5247" 
+  "5256" -> "5259" 
+  "5259" -> "5255" 
+  "5262" -> "5261" 
+  "5270" -> "5268" 
+  "5280" -> "5301" 
+  "5298" -> "5315" 
+  "5314" -> "5317" 
+  "5317" -> "5313" 
+  "5331" -> "5329" 
+  "5340" -> "5329" 
+  "5347" -> "5352" 
+  "5352" -> "5346" 
+  "5357" -> "5360" 
+  "5360" -> "5356" 
   "5366" -> "5364" 
-  "5369" -> "5367" 
-  "5372" -> "5373" 
-  "5373" -> "5371" 
-  "5400" -> "5398" 
-  "5405" -> "5410" 
-  "5409" -> "5404" 
-  "5417" -> "5415" 
-  "5422" -> "5420" 
-  "5431" -> "5432" 
-  "5432" -> "5430" 
-  "5434" -> "5433" 
+  "5372" -> "5371" 
+  "5379" -> "5388" 
+  "5386" -> "5378" 
+  "5392" -> "5390" 
+  "5398" -> "5396" 
+  "5403" -> "5401" 
+  "5410" -> "5408" 
+  "5413" -> "5412" 
+  "5413" -> "5433" 
+  "5430" -> "5412" 
+  "5435" -> "5447" 
+  "5435" -> "5443" 
   "5445" -> "5443" 
-  "5450" -> "5457" 
-  "5450" -> "5504" 
-  "5462" -> "5461" 
-  "5466" -> "5500" 
-  "5500" -> "5498" 
-  "5511" -> "5509" 
-  "5518" -> "5516" 
+  "5473" -> "5480" 
+  "5513" -> "5520" 
+  "5520" -> "5518" 
+  "5524" -> "5534" 
+  "5524" -> "5538" 
+  "5531" -> "5538" 
+  "5538" -> "5536" 
+  "5544" -> "5543" 
+  "5552" -> "5551" 
   "5559" -> "5557" 
-  "5564" -> "5567" 
-  "5567" -> "5563" 
-  "5569" -> "5572" 
-  "5572" -> "5568" 
-  "5584" -> "5583" 
-  "5604" -> "5602" 
-  "5612" -> "5610" 
-  "5620" -> "5631" 
-  "5620" -> "5640" 
-  "5649" -> "5648" 
-  "5669" -> "5668" 
+  "5568" -> "5575" 
+  "5571" -> "5580" 
+  "5578" -> "5593" 
+  "5591" -> "5596" 
+  "5591" -> "5602" 
+  "5598" -> "5596" 
+  "5604" -> "5793" 
+  "5612" -> "5671" 
+  "5671" -> "5672" 
+  "5672" -> "5670" 
+  "5676" -> "5677" 
   "5677" -> "5675" 
-  "5686" -> "5684" 
-  "5691" -> "5690" 
-  "5696" -> "5704" 
-  "5700" -> "5695" 
-  "5708" -> "5706" 
-  "5764" -> "5762" 
-  "5771" -> "5770" 
-  "5235" -> "5237" 
-  "5237" -> "5234" 
-  "5257" -> "5261" 
-  "5261" -> "5256" 
-  "5268" -> "5267" 
-  "5273" -> "5272" 
-  "5285" -> "5286" 
-  "5286" -> "5284" 
-  "5295" -> "5293" 
-  "5321" -> "5320" 
-  "5401" -> "5400" 
-  "5406" -> "5405" 
-  "5410" -> "5413" 
-  "5413" -> "5409" 
-  "5435" -> "5434" 
-  "5446" -> "5445" 
+  "5683" -> "5698" 
+  "5683" -> "5735" 
+  "5777" -> "5782" 
+  "5784" -> "5793" 
+  "5240" -> "5239" 
+  "5249" -> "5245" 
+  "5257" -> "5258" 
+  "5258" -> "5256" 
+  "5264" -> "5262" 
+  "5271" -> "5278" 
+  "5278" -> "5270" 
+  "5282" -> "5280" 
+  "5299" -> "5298" 
+  "5307" -> "5315" 
+  "5315" -> "5316" 
+  "5316" -> "5314" 
+  "5332" -> "5339" 
+  "5335" -> "5331" 
+  "5342" -> "5340" 
+  "5348" -> "5347" 
+  "5358" -> "5359" 
+  "5359" -> "5357" 
+  "5374" -> "5372" 
+  "5380" -> "5385" 
+  "5383" -> "5379" 
+  "5387" -> "5386" 
+  "5393" -> "5394" 
+  "5394" -> "5392" 
+  "5414" -> "5413" 
+  "5414" -> "5424" 
+  "5420" -> "5413" 
+  "5431" -> "5430" 
+  "5436" -> "5435" 
+  "5446" -> "5453" 
+  "5449" -> "5445" 
+  "5459" -> "5469" 
+  "5459" -> "5473" 
+  "5459" -> "5520" 
+  "5477" -> "5485" 
+  "5477" -> "5501" 
+  "5477" -> "5516" 
+  "5514" -> "5513" 
+  "5525" -> "5524" 
+  "5532" -> "5531" 
+  "5546" -> "5544" 
+  "5554" -> "5552" 
+  "5573" -> "5571" 
+  "5579" -> "5585" 
+  "5584" -> "5578" 
+  "5593" -> "5591" 
+  "5599" -> "5598" 
+  "5618" -> "5629" 
+  "5626" -> "5641" 
+  "5664" -> "5671" 
+  "5684" -> "5683" 
+  "5691" -> "5705" 
+  "5700" -> "5709" 
+  "5706" -> "5713" 
+  "5711" -> "5727" 
+  "5778" -> "5777" 
+  "5786" -> "5784" 
+  "5242" -> "5240" 
+  "5250" -> "5249" 
+  "5272" -> "5271" 
+  "5283" -> "5295" 
+  "5288" -> "5282" 
+  "5300" -> "5303" 
+  "5303" -> "5299" 
+  "5309" -> "5307" 
+  "5333" -> "5334" 
+  "5334" -> "5332" 
+  "5336" -> "5335" 
+  "5350" -> "5348" 
+  "5382" -> "5380" 
+  "5385" -> "5383" 
+  "5388" -> "5389" 
+  "5389" -> "5387" 
+  "5416" -> "5414" 
+  "5421" -> "5426" 
+  "5425" -> "5420" 
+  "5433" -> "5431" 
+  "5438" -> "5436" 
+  "5447" -> "5448" 
+  "5448" -> "5446" 
+  "5450" -> "5449" 
+  "5461" -> "5459" 
+  "5466" -> "5473" 
+  "5466" -> "5520" 
+  "5478" -> "5477" 
+  "5482" -> "5516" 
+  "5516" -> "5514" 
+  "5527" -> "5525" 
+  "5534" -> "5532" 
+  "5575" -> "5573" 
+  "5580" -> "5583" 
+  "5583" -> "5579" 
+  "5585" -> "5588" 
+  "5588" -> "5584" 
+  "5600" -> "5599" 
+  "5620" -> "5618" 
+  "5628" -> "5626" 
+  "5636" -> "5647" 
+  "5636" -> "5656" 
+  "5665" -> "5664" 
+  "5685" -> "5684" 
+  "5693" -> "5691" 
+  "5702" -> "5700" 
+  "5707" -> "5706" 
+  "5712" -> "5720" 
+  "5716" -> "5711" 
+  "5724" -> "5722" 
+  "5780" -> "5778" 
+  "5787" -> "5786" 
+  "5251" -> "5253" 
+  "5253" -> "5250" 
+  "5273" -> "5277" 
+  "5277" -> "5272" 
+  "5284" -> "5283" 
+  "5289" -> "5288" 
+  "5301" -> "5302" 
+  "5302" -> "5300" 
+  "5311" -> "5309" 
+  "5337" -> "5336" 
+  "5417" -> "5416" 
+  "5422" -> "5421" 
+  "5426" -> "5429" 
+  "5429" -> "5425" 
   "5451" -> "5450" 
-  "5464" -> "5462" 
-  "5467" -> "5473" 
-  "5470" -> "5466" 
-  "5586" -> "5584" 
-  "5606" -> "5604" 
-  "5613" -> "5618" 
-  "5614" -> "5612" 
+  "5462" -> "5461" 
+  "5467" -> "5466" 
+  "5480" -> "5478" 
+  "5483" -> "5489" 
+  "5486" -> "5482" 
+  "5602" -> "5600" 
   "5622" -> "5620" 
-  "5628" -> "5650" 
-  "5650" -> "5651" 
-  "5651" -> "5649" 
-  "5671" -> "5669" 
-  "5679" -> "5677" 
-  "5687" -> "5686" 
-  "5693" -> "5691" 
-  "5697" -> "5698" 
-  "5698" -> "5696" 
-  "5701" -> "5700" 
-  "5709" -> "5708" 
-  "5715" -> "5729" 
-  "5772" -> "5776" 
-  "5776" -> "5771" 
-  "5236" -> "5235" 
-  "5258" -> "5257" 
-  "5270" -> "5268" 
-  "5274" -> "5281" 
-  "5281" -> "5273" 
-  "5323" -> "5321" 
-  "5403" -> "5401" 
-  "5408" -> "5406" 
-  "5437" -> "5435" 
-  "5448" -> "5446" 
+  "5629" -> "5634" 
+  "5630" -> "5628" 
+  "5638" -> "5636" 
+  "5644" -> "5666" 
+  "5666" -> "5667" 
+  "5667" -> "5665" 
+  "5687" -> "5685" 
+  "5695" -> "5693" 
+  "5703" -> "5702" 
+  "5709" -> "5707" 
+  "5713" -> "5714" 
+  "5714" -> "5712" 
+  "5717" -> "5716" 
+  "5725" -> "5724" 
+  "5731" -> "5745" 
+  "5788" -> "5792" 
+  "5792" -> "5787" 
+  "5252" -> "5251" 
+  "5274" -> "5273" 
+  "5286" -> "5284" 
+  "5290" -> "5297" 
+  "5297" -> "5289" 
+  "5339" -> "5337" 
+  "5419" -> "5417" 
+  "5424" -> "5422" 
   "5453" -> "5451" 
+  "5464" -> "5462" 
   "5469" -> "5467" 
-  "5471" -> "5470" 
-  "5607" -> "5608" 
-  "5608" -> "5606" 
-  "5616" -> "5614" 
-  "5623" -> "5622" 
-  "5629" -> "5628" 
-  "5637" -> "5650" 
-  "5680" -> "5679" 
-  "5689" -> "5687" 
-  "5702" -> "5701" 
-  "5711" -> "5709" 
-  "5716" -> "5715" 
-  "5723" -> "5732" 
-  "5732" -> "5737" 
-  "5735" -> "5749" 
-  "5746" -> "5756" 
-  "5773" -> "5772" 
-  "5260" -> "5258" 
-  "5275" -> "5274" 
-  "5473" -> "5471" 
-  "5481" -> "5495" 
-  "5492" -> "5500" 
-  "5618" -> "5616" 
-  "5625" -> "5623" 
-  "5630" -> "5629" 
-  "5638" -> "5637" 
-  "5682" -> "5680" 
-  "5704" -> "5702" 
-  "5717" -> "5716" 
-  "5725" -> "5723" 
-  "5736" -> "5744" 
-  "5740" -> "5735" 
-  "5747" -> "5746" 
-  "5753" -> "5751" 
-  "5775" -> "5773" 
-  "5276" -> "5280" 
-  "5280" -> "5275" 
-  "5483" -> "5481" 
-  "5493" -> "5492" 
-  "5631" -> "5632" 
+  "5485" -> "5483" 
+  "5487" -> "5486" 
+  "5623" -> "5624" 
+  "5624" -> "5622" 
   "5632" -> "5630" 
-  "5639" -> "5645" 
-  "5642" -> "5638" 
-  "5719" -> "5717" 
-  "5726" -> "5725" 
-  "5737" -> "5738" 
-  "5738" -> "5736" 
-  "5741" -> "5740" 
-  "5749" -> "5747" 
-  "5754" -> "5753" 
-  "5277" -> "5276" 
-  "5484" -> "5491" 
-  "5487" -> "5483" 
-  "5495" -> "5493" 
-  "5640" -> "5641" 
+  "5639" -> "5638" 
+  "5645" -> "5644" 
+  "5653" -> "5666" 
+  "5696" -> "5695" 
+  "5705" -> "5703" 
+  "5718" -> "5717" 
+  "5727" -> "5725" 
+  "5732" -> "5731" 
+  "5739" -> "5748" 
+  "5748" -> "5753" 
+  "5751" -> "5765" 
+  "5762" -> "5772" 
+  "5789" -> "5788" 
+  "5276" -> "5274" 
+  "5291" -> "5290" 
+  "5489" -> "5487" 
+  "5497" -> "5511" 
+  "5508" -> "5516" 
+  "5634" -> "5632" 
   "5641" -> "5639" 
-  "5643" -> "5642" 
-  "5727" -> "5726" 
+  "5646" -> "5645" 
+  "5654" -> "5653" 
+  "5698" -> "5696" 
+  "5720" -> "5718" 
+  "5733" -> "5732" 
+  "5741" -> "5739" 
+  "5752" -> "5760" 
+  "5756" -> "5751" 
+  "5763" -> "5762" 
+  "5769" -> "5767" 
+  "5791" -> "5789" 
+  "5292" -> "5296" 
+  "5296" -> "5291" 
+  "5499" -> "5497" 
+  "5509" -> "5508" 
+  "5647" -> "5648" 
+  "5648" -> "5646" 
+  "5655" -> "5661" 
+  "5658" -> "5654" 
+  "5735" -> "5733" 
   "5742" -> "5741" 
-  "5756" -> "5754" 
-  "5279" -> "5277" 
-  "5485" -> "5486" 
-  "5486" -> "5484" 
-  "5488" -> "5487" 
-  "5645" -> "5643" 
-  "5729" -> "5727" 
-  "5744" -> "5742" 
-  "5489" -> "5488" 
-  "5491" -> "5489" 
-  "5210" -> "5212" 
+  "5753" -> "5754" 
+  "5754" -> "5752" 
+  "5757" -> "5756" 
+  "5765" -> "5763" 
+  "5770" -> "5769" 
+  "5293" -> "5292" 
+  "5500" -> "5507" 
+  "5503" -> "5499" 
+  "5511" -> "5509" 
+  "5656" -> "5657" 
+  "5657" -> "5655" 
+  "5659" -> "5658" 
+  "5743" -> "5742" 
+  "5758" -> "5757" 
+  "5772" -> "5770" 
+  "5295" -> "5293" 
+  "5501" -> "5502" 
+  "5502" -> "5500" 
+  "5504" -> "5503" 
+  "5661" -> "5659" 
+  "5745" -> "5743" 
+  "5760" -> "5758" 
+  "5505" -> "5504" 
+  "5507" -> "5505" 
+  "5226" -> "5228" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/159-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/159-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/159-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/159-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,19 +1,19 @@
 digraph "getLayerClipBoundsForDisplay" {  
-"5782" [label = <(RETURN,return displayDevice.getViewport().toFloatRect();,return displayDevice.getViewport().toFloatRect();)<SUB>2374</SUB>> ]
-"5783" [label = <(toFloatRect,displayDevice.getViewport().toFloatRect())<SUB>2374</SUB>> ]
-"5784" [label = <(&lt;operator&gt;.fieldAccess,displayDevice.getViewport().toFloatRect)<SUB>2374</SUB>> ]
-"5785" [label = <(getViewport,displayDevice.getViewport())<SUB>2374</SUB>> ]
-"5789" [label = <(FIELD_IDENTIFIER,toFloatRect,toFloatRect)<SUB>2374</SUB>> ]
-"5786" [label = <(&lt;operator&gt;.fieldAccess,displayDevice.getViewport)<SUB>2374</SUB>> ]
-"5788" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>2374</SUB>> ]
-"5779" [label = <(METHOD,getLayerClipBoundsForDisplay)<SUB>2373</SUB>> ]
-"5790" [label = <(METHOD_RETURN,FloatRect)<SUB>2373</SUB>> ]
-  "5782" -> "5790" 
-  "5783" -> "5782" 
-  "5784" -> "5783" 
-  "5785" -> "5789" 
-  "5789" -> "5784" 
-  "5786" -> "5785" 
-  "5788" -> "5786" 
-  "5779" -> "5788" 
+"5798" [label = <(RETURN,return displayDevice.getViewport().toFloatRect();,return displayDevice.getViewport().toFloatRect();)<SUB>2373</SUB>> ]
+"5799" [label = <(toFloatRect,displayDevice.getViewport().toFloatRect())<SUB>2373</SUB>> ]
+"5800" [label = <(&lt;operator&gt;.fieldAccess,displayDevice.getViewport().toFloatRect)<SUB>2373</SUB>> ]
+"5801" [label = <(getViewport,displayDevice.getViewport())<SUB>2373</SUB>> ]
+"5805" [label = <(FIELD_IDENTIFIER,toFloatRect,toFloatRect)<SUB>2373</SUB>> ]
+"5802" [label = <(&lt;operator&gt;.fieldAccess,displayDevice.getViewport)<SUB>2373</SUB>> ]
+"5804" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>2373</SUB>> ]
+"5795" [label = <(METHOD,getLayerClipBoundsForDisplay)<SUB>2372</SUB>> ]
+"5806" [label = <(METHOD_RETURN,FloatRect)<SUB>2372</SUB>> ]
+  "5798" -> "5806" 
+  "5799" -> "5798" 
+  "5800" -> "5799" 
+  "5801" -> "5805" 
+  "5805" -> "5800" 
+  "5802" -> "5801" 
+  "5804" -> "5802" 
+  "5795" -> "5804" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/16-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/16-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/16-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/16-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_23" {  
-"74" [label = <(METHOD,anonymous_lambda_23)<SUB>2260</SUB>> ]
-"77" [label = <(METHOD_RETURN,ANY)<SUB>2260</SUB>> ]
+"74" [label = <(METHOD,anonymous_lambda_23)<SUB>2259</SUB>> ]
+"77" [label = <(METHOD_RETURN,ANY)<SUB>2259</SUB>> ]
   "74" -> "77" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/160-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/160-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/160-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/160-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,57 +1,57 @@
 digraph "computeLayerBounds" {  
-"5802" [label = <(&lt;operator&gt;.assignment,&amp; displayDevice = pair.second)<SUB>2379</SUB>> ]
-"5808" [label = <(&lt;operator&gt;.assignment,display = displayDevice-&gt;getCompositionDisplay())<SUB>2380</SUB>> ]
-"5804" [label = <(&lt;operator&gt;.fieldAccess,pair.second)<SUB>2379</SUB>> ]
-"5810" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>2380</SUB>> ]
-"5806" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2379</SUB>> ]
-"5811" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>2380</SUB>> ]
-"5836" [label = <(computeBounds,layer-&gt;computeBounds(getLayerClipBoundsForDisplay(*displayDevice), ui::Transform(),\012 0.f /* shadowRadius */))<SUB>2387</SUB>> ]
-"5813" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2380</SUB>> ]
-"5821" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>2383</SUB>> ]
-"5837" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;computeBounds)<SUB>2387</SUB>> ]
-"5840" [label = <(getLayerClipBoundsForDisplay,getLayerClipBoundsForDisplay(*displayDevice))<SUB>2387</SUB>> ]
-"5843" [label = <(ui::Transform,ui::Transform())<SUB>2387</SUB>> ]
-"5822" [label = <(belongsInOutput,display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>2383</SUB>> ]
-"5839" [label = <(FIELD_IDENTIFIER,computeBounds,computeBounds)<SUB>2387</SUB>> ]
-"5841" [label = <(&lt;operator&gt;.indirection,*displayDevice)<SUB>2387</SUB>> ]
-"5844" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>2387</SUB>> ]
-"5823" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;belongsInOutput)<SUB>2383</SUB>> ]
-"5826" [label = <(getLayerStack,layer-&gt;getLayerStack())<SUB>2383</SUB>> ]
-"5830" [label = <(getPrimaryDisplayOnly,layer-&gt;getPrimaryDisplayOnly())<SUB>2383</SUB>> ]
-"5846" [label = <(FIELD_IDENTIFIER,Transform,Transform)<SUB>2387</SUB>> ]
-"5825" [label = <(FIELD_IDENTIFIER,belongsInOutput,belongsInOutput)<SUB>2383</SUB>> ]
-"5827" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getLayerStack)<SUB>2383</SUB>> ]
-"5831" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getPrimaryDisplayOnly)<SUB>2383</SUB>> ]
-"5829" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>2383</SUB>> ]
-"5833" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayOnly,getPrimaryDisplayOnly)<SUB>2383</SUB>> ]
-"5792" [label = <(METHOD,computeLayerBounds)<SUB>2377</SUB>> ]
-"5848" [label = <(METHOD_RETURN,void)<SUB>2377</SUB>> ]
-  "5802" -> "5813" 
-  "5808" -> "5825" 
-  "5804" -> "5802" 
-  "5810" -> "5808" 
-  "5806" -> "5804" 
-  "5811" -> "5810" 
-  "5836" -> "5848" 
-  "5836" -> "5806" 
-  "5836" -> "5825" 
-  "5813" -> "5811" 
-  "5821" -> "5839" 
-  "5837" -> "5841" 
-  "5840" -> "5846" 
-  "5843" -> "5836" 
-  "5822" -> "5821" 
-  "5839" -> "5837" 
-  "5841" -> "5840" 
-  "5844" -> "5843" 
-  "5823" -> "5829" 
-  "5826" -> "5833" 
-  "5830" -> "5822" 
-  "5846" -> "5844" 
-  "5825" -> "5823" 
+"5818" [label = <(&lt;operator&gt;.assignment,&amp; displayDevice = pair.second)<SUB>2378</SUB>> ]
+"5824" [label = <(&lt;operator&gt;.assignment,display = displayDevice-&gt;getCompositionDisplay())<SUB>2379</SUB>> ]
+"5820" [label = <(&lt;operator&gt;.fieldAccess,pair.second)<SUB>2378</SUB>> ]
+"5826" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>2379</SUB>> ]
+"5822" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2378</SUB>> ]
+"5827" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>2379</SUB>> ]
+"5852" [label = <(computeBounds,layer-&gt;computeBounds(getLayerClipBoundsForDisplay(*displayDevice), ui::Transform(),\012 0.f /* shadowRadius */))<SUB>2386</SUB>> ]
+"5829" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2379</SUB>> ]
+"5837" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>2382</SUB>> ]
+"5853" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;computeBounds)<SUB>2386</SUB>> ]
+"5856" [label = <(getLayerClipBoundsForDisplay,getLayerClipBoundsForDisplay(*displayDevice))<SUB>2386</SUB>> ]
+"5859" [label = <(ui::Transform,ui::Transform())<SUB>2386</SUB>> ]
+"5838" [label = <(belongsInOutput,display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>2382</SUB>> ]
+"5855" [label = <(FIELD_IDENTIFIER,computeBounds,computeBounds)<SUB>2386</SUB>> ]
+"5857" [label = <(&lt;operator&gt;.indirection,*displayDevice)<SUB>2386</SUB>> ]
+"5860" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>2386</SUB>> ]
+"5839" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;belongsInOutput)<SUB>2382</SUB>> ]
+"5842" [label = <(getLayerStack,layer-&gt;getLayerStack())<SUB>2382</SUB>> ]
+"5846" [label = <(getPrimaryDisplayOnly,layer-&gt;getPrimaryDisplayOnly())<SUB>2382</SUB>> ]
+"5862" [label = <(FIELD_IDENTIFIER,Transform,Transform)<SUB>2386</SUB>> ]
+"5841" [label = <(FIELD_IDENTIFIER,belongsInOutput,belongsInOutput)<SUB>2382</SUB>> ]
+"5843" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getLayerStack)<SUB>2382</SUB>> ]
+"5847" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getPrimaryDisplayOnly)<SUB>2382</SUB>> ]
+"5845" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>2382</SUB>> ]
+"5849" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayOnly,getPrimaryDisplayOnly)<SUB>2382</SUB>> ]
+"5808" [label = <(METHOD,computeLayerBounds)<SUB>2376</SUB>> ]
+"5864" [label = <(METHOD_RETURN,void)<SUB>2376</SUB>> ]
+  "5818" -> "5829" 
+  "5824" -> "5841" 
+  "5820" -> "5818" 
+  "5826" -> "5824" 
+  "5822" -> "5820" 
   "5827" -> "5826" 
-  "5831" -> "5830" 
+  "5852" -> "5864" 
+  "5852" -> "5822" 
+  "5852" -> "5841" 
   "5829" -> "5827" 
-  "5833" -> "5831" 
-  "5792" -> "5806" 
+  "5837" -> "5855" 
+  "5853" -> "5857" 
+  "5856" -> "5862" 
+  "5859" -> "5852" 
+  "5838" -> "5837" 
+  "5855" -> "5853" 
+  "5857" -> "5856" 
+  "5860" -> "5859" 
+  "5839" -> "5845" 
+  "5842" -> "5849" 
+  "5846" -> "5838" 
+  "5862" -> "5860" 
+  "5841" -> "5839" 
+  "5843" -> "5842" 
+  "5847" -> "5846" 
+  "5845" -> "5843" 
+  "5849" -> "5847" 
+  "5808" -> "5822" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/161-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/161-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/161-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/161-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,49 +1,49 @@
 digraph "postFrame" {  
-"5853" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>2394</SUB>> ]
-"5855" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>2394</SUB>> ]
-"5860" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2395</SUB>> ]
-"5862" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>2395</SUB>> ]
-"5873" [label = <(&lt;operator&gt;.assignment,flipCount = display-&gt;getPageFlipCount())<SUB>2396</SUB>> ]
-"5857" [label = <(android.SurfaceFlinger.postFrame.anonymous_lambda_25,())<SUB>2394</SUB>> ]
-"5863" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>2395</SUB>> ]
-"5866" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2395</SUB>> ]
-"5875" [label = <(getPageFlipCount,display-&gt;getPageFlipCount())<SUB>2396</SUB>> ]
-"5880" [label = <(&lt;operator&gt;.equals,flipCount % LOG_FRAME_STATS_PERIOD == 0)<SUB>2397</SUB>> ]
-"5858" [label = <(METHOD_REF,ANY anonymous_lambda_25 (),())<SUB>2394</SUB>> ]
-"5864" [label = <(getHwComposer,getHwComposer())<SUB>2395</SUB>> ]
-"5865" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>2395</SUB>> ]
-"5867" [label = <(getId,display-&gt;getId())<SUB>2395</SUB>> ]
-"5876" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPageFlipCount)<SUB>2396</SUB>> ]
-"5881" [label = <(&lt;operator&gt;.modulo,flipCount % LOG_FRAME_STATS_PERIOD)<SUB>2397</SUB>> ]
-"5886" [label = <(logFrameStats,logFrameStats())<SUB>2398</SUB>> ]
-"5868" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2395</SUB>> ]
-"5878" [label = <(FIELD_IDENTIFIER,getPageFlipCount,getPageFlipCount)<SUB>2396</SUB>> ]
-"5870" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2395</SUB>> ]
-"5850" [label = <(METHOD,postFrame)<SUB>2393</SUB>> ]
-"5887" [label = <(METHOD_RETURN,void)<SUB>2393</SUB>> ]
-  "5853" -> "5864" 
-  "5853" -> "5860" 
-  "5855" -> "5858" 
-  "5855" -> "5853" 
-  "5860" -> "5887" 
-  "5860" -> "5878" 
-  "5862" -> "5860" 
-  "5873" -> "5881" 
-  "5857" -> "5853" 
-  "5863" -> "5870" 
-  "5866" -> "5862" 
-  "5875" -> "5873" 
-  "5880" -> "5886" 
-  "5880" -> "5887" 
-  "5858" -> "5857" 
-  "5864" -> "5865" 
-  "5865" -> "5863" 
-  "5867" -> "5866" 
-  "5876" -> "5875" 
-  "5881" -> "5880" 
-  "5886" -> "5887" 
-  "5868" -> "5867" 
+"5869" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>2393</SUB>> ]
+"5871" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>2393</SUB>> ]
+"5876" [label = <(&lt;operator&gt;.logicalAnd,display &amp;&amp; getHwComposer().isConnected(*display-&gt;getId()))<SUB>2394</SUB>> ]
+"5878" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>2394</SUB>> ]
+"5889" [label = <(&lt;operator&gt;.assignment,flipCount = display-&gt;getPageFlipCount())<SUB>2395</SUB>> ]
+"5873" [label = <(android.SurfaceFlinger.postFrame.anonymous_lambda_25,())<SUB>2393</SUB>> ]
+"5879" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>2394</SUB>> ]
+"5882" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>2394</SUB>> ]
+"5891" [label = <(getPageFlipCount,display-&gt;getPageFlipCount())<SUB>2395</SUB>> ]
+"5896" [label = <(&lt;operator&gt;.equals,flipCount % LOG_FRAME_STATS_PERIOD == 0)<SUB>2396</SUB>> ]
+"5874" [label = <(METHOD_REF,ANY anonymous_lambda_25 (),())<SUB>2393</SUB>> ]
+"5880" [label = <(getHwComposer,getHwComposer())<SUB>2394</SUB>> ]
+"5881" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>2394</SUB>> ]
+"5883" [label = <(getId,display-&gt;getId())<SUB>2394</SUB>> ]
+"5892" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPageFlipCount)<SUB>2395</SUB>> ]
+"5897" [label = <(&lt;operator&gt;.modulo,flipCount % LOG_FRAME_STATS_PERIOD)<SUB>2396</SUB>> ]
+"5902" [label = <(logFrameStats,logFrameStats())<SUB>2397</SUB>> ]
+"5884" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2394</SUB>> ]
+"5894" [label = <(FIELD_IDENTIFIER,getPageFlipCount,getPageFlipCount)<SUB>2395</SUB>> ]
+"5886" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2394</SUB>> ]
+"5866" [label = <(METHOD,postFrame)<SUB>2392</SUB>> ]
+"5903" [label = <(METHOD_RETURN,void)<SUB>2392</SUB>> ]
+  "5869" -> "5880" 
+  "5869" -> "5876" 
+  "5871" -> "5874" 
+  "5871" -> "5869" 
+  "5876" -> "5903" 
+  "5876" -> "5894" 
   "5878" -> "5876" 
-  "5870" -> "5868" 
-  "5850" -> "5855" 
+  "5889" -> "5897" 
+  "5873" -> "5869" 
+  "5879" -> "5886" 
+  "5882" -> "5878" 
+  "5891" -> "5889" 
+  "5896" -> "5902" 
+  "5896" -> "5903" 
+  "5874" -> "5873" 
+  "5880" -> "5881" 
+  "5881" -> "5879" 
+  "5883" -> "5882" 
+  "5892" -> "5891" 
+  "5897" -> "5896" 
+  "5902" -> "5903" 
+  "5884" -> "5883" 
+  "5894" -> "5892" 
+  "5886" -> "5884" 
+  "5866" -> "5871" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/162-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/162-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/162-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/162-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,31 +1,31 @@
 digraph "handleTransaction" {  
-"5892" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2405</SUB>> ]
-"5894" [label = <(drawingState,drawingState(mDrawingState))<SUB>2411</SUB>> ]
-"5897" [label = <(_l,_l(mStateLock))<SUB>2413</SUB>> ]
-"5899" [label = <(&lt;operator&gt;.assignment,mDebugInTransaction = systemTime())<SUB>2414</SUB>> ]
-"5902" [label = <(onTransactionHandled,mVSyncModulator-&gt;onTransactionHandled())<SUB>2422</SUB>> ]
-"5906" [label = <(&lt;operator&gt;.assignment,transactionFlags = getTransactionFlags(eTransactionMask))<SUB>2423</SUB>> ]
-"5910" [label = <(handleTransactionLocked,handleTransactionLocked(transactionFlags))<SUB>2424</SUB>> ]
-"5912" [label = <(&lt;operator&gt;.assignment,mDebugInTransaction = 0)<SUB>2426</SUB>> ]
-"5915" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>2427</SUB>> ]
-"5901" [label = <(systemTime,systemTime())<SUB>2414</SUB>> ]
-"5903" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onTransactionHandled)<SUB>2422</SUB>> ]
-"5908" [label = <(getTransactionFlags,getTransactionFlags(eTransactionMask))<SUB>2423</SUB>> ]
-"5905" [label = <(FIELD_IDENTIFIER,onTransactionHandled,onTransactionHandled)<SUB>2422</SUB>> ]
-"5889" [label = <(METHOD,handleTransaction)<SUB>2403</SUB>> ]
-"5916" [label = <(METHOD_RETURN,void)<SUB>2403</SUB>> ]
-  "5892" -> "5894" 
-  "5894" -> "5897" 
-  "5897" -> "5901" 
-  "5899" -> "5905" 
-  "5902" -> "5908" 
-  "5906" -> "5910" 
-  "5910" -> "5912" 
-  "5912" -> "5915" 
-  "5915" -> "5916" 
-  "5901" -> "5899" 
-  "5903" -> "5902" 
-  "5908" -> "5906" 
-  "5905" -> "5903" 
-  "5889" -> "5892" 
+"5908" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2404</SUB>> ]
+"5910" [label = <(drawingState,drawingState(mDrawingState))<SUB>2410</SUB>> ]
+"5913" [label = <(_l,_l(mStateLock))<SUB>2412</SUB>> ]
+"5915" [label = <(&lt;operator&gt;.assignment,mDebugInTransaction = systemTime())<SUB>2413</SUB>> ]
+"5918" [label = <(onTransactionHandled,mVSyncModulator-&gt;onTransactionHandled())<SUB>2421</SUB>> ]
+"5922" [label = <(&lt;operator&gt;.assignment,transactionFlags = getTransactionFlags(eTransactionMask))<SUB>2422</SUB>> ]
+"5926" [label = <(handleTransactionLocked,handleTransactionLocked(transactionFlags))<SUB>2423</SUB>> ]
+"5928" [label = <(&lt;operator&gt;.assignment,mDebugInTransaction = 0)<SUB>2425</SUB>> ]
+"5931" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>2426</SUB>> ]
+"5917" [label = <(systemTime,systemTime())<SUB>2413</SUB>> ]
+"5919" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onTransactionHandled)<SUB>2421</SUB>> ]
+"5924" [label = <(getTransactionFlags,getTransactionFlags(eTransactionMask))<SUB>2422</SUB>> ]
+"5921" [label = <(FIELD_IDENTIFIER,onTransactionHandled,onTransactionHandled)<SUB>2421</SUB>> ]
+"5905" [label = <(METHOD,handleTransaction)<SUB>2402</SUB>> ]
+"5932" [label = <(METHOD_RETURN,void)<SUB>2402</SUB>> ]
+  "5908" -> "5910" 
+  "5910" -> "5913" 
+  "5913" -> "5917" 
+  "5915" -> "5921" 
+  "5918" -> "5924" 
+  "5922" -> "5926" 
+  "5926" -> "5928" 
+  "5928" -> "5931" 
+  "5931" -> "5932" 
+  "5917" -> "5915" 
+  "5919" -> "5918" 
+  "5924" -> "5922" 
+  "5921" -> "5919" 
+  "5905" -> "5908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/163-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/163-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/163-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/163-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,264 +1,264 @@
 digraph "processDisplayHotplugEventsLocked" {  
-"6131" [label = <(clear,mPendingHotplugEvents.clear())<SUB>2484</SUB>> ]
-"6132" [label = <(&lt;operator&gt;.fieldAccess,mPendingHotplugEvents.clear)<SUB>2484</SUB>> ]
-"5925" [label = <(&lt;operator&gt;.assignment,info =\012                getHwComposer().onHotplug(event.hwcDisplayId, event.connection))<SUB>2433</SUB>> ]
-"5943" [label = <(&lt;operator&gt;.assignment,displayId = info-&gt;id)<SUB>2440</SUB>> ]
-"5949" [label = <(&lt;operator&gt;.assignment,it = mPhysicalDisplayTokens.find(displayId))<SUB>2441</SUB>> ]
-"6130" [label = <(processDisplayChangesLocked,processDisplayChangesLocked())<SUB>2481</SUB>> ]
-"6134" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2484</SUB>> ]
-"5927" [label = <(onHotplug,getHwComposer().onHotplug(event.hwcDisplayId, event.connection))<SUB>2434</SUB>> ]
-"5938" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>2436</SUB>> ]
-"5945" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;id)<SUB>2440</SUB>> ]
-"5951" [label = <(find,mPhysicalDisplayTokens.find(displayId))<SUB>2441</SUB>> ]
-"5957" [label = <(&lt;operator&gt;.equals,event.connection == hal::Connection::CONNECTED)<SUB>2443</SUB>> ]
-"5928" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().onHotplug)<SUB>2434</SUB>> ]
-"5931" [label = <(&lt;operator&gt;.fieldAccess,event.hwcDisplayId)<SUB>2434</SUB>> ]
-"5934" [label = <(&lt;operator&gt;.fieldAccess,event.connection)<SUB>2434</SUB>> ]
-"5947" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2440</SUB>> ]
-"5952" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.find)<SUB>2441</SUB>> ]
-"5958" [label = <(&lt;operator&gt;.fieldAccess,event.connection)<SUB>2443</SUB>> ]
-"5961" [label = <(&lt;operator&gt;.fieldAccess,hal::Connection::CONNECTED)<SUB>2443</SUB>> ]
-"5929" [label = <(getHwComposer,getHwComposer())<SUB>2434</SUB>> ]
-"5930" [label = <(FIELD_IDENTIFIER,onHotplug,onHotplug)<SUB>2434</SUB>> ]
-"5933" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2434</SUB>> ]
-"5936" [label = <(FIELD_IDENTIFIER,connection,connection)<SUB>2434</SUB>> ]
-"5954" [label = <(FIELD_IDENTIFIER,find,find)<SUB>2441</SUB>> ]
-"5960" [label = <(FIELD_IDENTIFIER,connection,connection)<SUB>2443</SUB>> ]
-"5962" [label = <(&lt;operator&gt;.fieldAccess,hal::Connection)<SUB>2443</SUB>> ]
-"5965" [label = <(FIELD_IDENTIFIER,CONNECTED,CONNECTED)<SUB>2443</SUB>> ]
-"5968" [label = <(&lt;operator&gt;.equals,it == mPhysicalDisplayTokens.end())<SUB>2444</SUB>> ]
-"6077" [label = <(ALOGV,ALOGV(&quot;Removing display %s&quot;, to_string(displayId).c_str()))<SUB>2470</SUB>> ]
-"6085" [label = <(&lt;operator&gt;.assignment,index = mCurrentState.displays.indexOfKey(it-&gt;second))<SUB>2472</SUB>> ]
-"6125" [label = <(erase,mPhysicalDisplayTokens.erase(it))<SUB>2478</SUB>> ]
-"5970" [label = <(end,mPhysicalDisplayTokens.end())<SUB>2444</SUB>> ]
-"5975" [label = <(ALOGV,ALOGV(&quot;Creating display %s&quot;, to_string(displayId).c_str()))<SUB>2445</SUB>> ]
-"5995" [label = <(&lt;operator&gt;.assignment,state.physical = {displayId, getHwComposer().getDisplayConnectionType(displayId),\012                                  event.hwcDisplayId})<SUB>2452</SUB>> ]
-"5999" [label = <(&lt;operator&gt;.assignment,state.isSecure = true)<SUB>2454</SUB>> ]
-"6004" [label = <(&lt;operator&gt;.assignment,state.displayName = info-&gt;name)<SUB>2455</SUB>> ]
-"6011" [label = <(&lt;operator&gt;.assignment,sp&lt;IBinder&gt; token = new BBinder())<SUB>2457</SUB>> ]
-"6019" [label = <(add,mCurrentState.displays.add(token, state))<SUB>2458</SUB>> ]
-"6027" [label = <(emplace,mPhysicalDisplayTokens.emplace(displayId, std::move(token)))<SUB>2459</SUB>> ]
-"6037" [label = <(saveDisplayCreation,mInterceptor-&gt;saveDisplayCreation(state))<SUB>2461</SUB>> ]
-"6079" [label = <(c_str,to_string(displayId).c_str())<SUB>2470</SUB>> ]
-"6087" [label = <(indexOfKey,mCurrentState.displays.indexOfKey(it-&gt;second))<SUB>2472</SUB>> ]
-"6097" [label = <(&lt;operator&gt;.greaterEqualsThan,index &gt;= 0)<SUB>2473</SUB>> ]
-"6126" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.erase)<SUB>2478</SUB>> ]
-"5971" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.end)<SUB>2444</SUB>> ]
-"5977" [label = <(c_str,to_string(displayId).c_str())<SUB>2445</SUB>> ]
-"5983" [label = <(&lt;operator&gt;.equals,event.hwcDisplayId == getHwComposer().getInternalHwcDisplayId())<SUB>2447</SUB>> ]
-"5996" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2452</SUB>> ]
-"6000" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2454</SUB>> ]
-"6005" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2455</SUB>> ]
-"6008" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;name)<SUB>2455</SUB>> ]
-"6012" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; token)<SUB>2457</SUB>> ]
-"6017" [label = <(&lt;operator&gt;.new,new BBinder())<SUB>2457</SUB>> ]
-"6020" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.add)<SUB>2458</SUB>> ]
-"6028" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.emplace)<SUB>2459</SUB>> ]
-"6032" [label = <(std::move,std::move(token))<SUB>2459</SUB>> ]
-"6038" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveDisplayCreation)<SUB>2461</SUB>> ]
-"6044" [label = <(ALOGV,ALOGV(&quot;Recreating display %s&quot;, to_string(displayId).c_str()))<SUB>2463</SUB>> ]
-"6052" [label = <(&lt;operator&gt;.assignment,token = it-&gt;second)<SUB>2465</SUB>> ]
-"6058" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.editValueFor(token))<SUB>2466</SUB>> ]
-"6067" [label = <(&lt;operator&gt;.assignment,state.sequenceId = DisplayDeviceState{}.sequenceId)<SUB>2467</SUB>> ]
-"6080" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2470</SUB>> ]
-"6088" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.indexOfKey)<SUB>2472</SUB>> ]
-"6093" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>2472</SUB>> ]
-"6102" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.valueAt(index))<SUB>2474</SUB>> ]
-"6111" [label = <(saveDisplayDeletion,mInterceptor-&gt;saveDisplayDeletion(state.sequenceId))<SUB>2475</SUB>> ]
-"6118" [label = <(removeItemsAt,mCurrentState.displays.removeItemsAt(index))<SUB>2476</SUB>> ]
-"6128" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2478</SUB>> ]
-"5973" [label = <(FIELD_IDENTIFIER,end,end)<SUB>2444</SUB>> ]
-"5978" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2445</SUB>> ]
-"5984" [label = <(&lt;operator&gt;.fieldAccess,event.hwcDisplayId)<SUB>2447</SUB>> ]
-"5987" [label = <(getInternalHwcDisplayId,getHwComposer().getInternalHwcDisplayId())<SUB>2447</SUB>> ]
-"5992" [label = <(initScheduler,initScheduler(displayId))<SUB>2448</SUB>> ]
-"5998" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2452</SUB>> ]
-"6002" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2454</SUB>> ]
-"6007" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2455</SUB>> ]
-"6010" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2455</SUB>> ]
-"6013" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>2457</SUB>> ]
-"6021" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2458</SUB>> ]
-"6024" [label = <(FIELD_IDENTIFIER,add,add)<SUB>2458</SUB>> ]
-"6030" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2459</SUB>> ]
-"6033" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>2459</SUB>> ]
-"6040" [label = <(FIELD_IDENTIFIER,saveDisplayCreation,saveDisplayCreation)<SUB>2461</SUB>> ]
-"6046" [label = <(c_str,to_string(displayId).c_str())<SUB>2463</SUB>> ]
-"6054" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>2465</SUB>> ]
-"6060" [label = <(editValueFor,mCurrentState.displays.editValueFor(token))<SUB>2466</SUB>> ]
-"6068" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2467</SUB>> ]
-"6071" [label = <(&lt;operator&gt;.fieldAccess,DisplayDeviceState{}.sequenceId)<SUB>2467</SUB>> ]
-"6081" [label = <(to_string,to_string(displayId))<SUB>2470</SUB>> ]
-"6083" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2470</SUB>> ]
-"6089" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2472</SUB>> ]
-"6092" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2472</SUB>> ]
-"6095" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2472</SUB>> ]
-"6104" [label = <(valueAt,mCurrentState.displays.valueAt(index))<SUB>2474</SUB>> ]
-"6112" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveDisplayDeletion)<SUB>2475</SUB>> ]
-"6115" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2475</SUB>> ]
-"6119" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.removeItemsAt)<SUB>2476</SUB>> ]
-"5979" [label = <(to_string,to_string(displayId))<SUB>2445</SUB>> ]
-"5981" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2445</SUB>> ]
-"5986" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2447</SUB>> ]
-"5988" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getInternalHwcDisplayId)<SUB>2447</SUB>> ]
-"6023" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2458</SUB>> ]
-"6035" [label = <(FIELD_IDENTIFIER,move,move)<SUB>2459</SUB>> ]
-"6047" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2463</SUB>> ]
-"6056" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2465</SUB>> ]
-"6061" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.editValueFor)<SUB>2466</SUB>> ]
-"6070" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2467</SUB>> ]
-"6072" [label = <(DisplayDeviceState,DisplayDeviceState{})<SUB>2467</SUB>> ]
-"6074" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2467</SUB>> ]
-"6091" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2472</SUB>> ]
-"6105" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.valueAt)<SUB>2474</SUB>> ]
-"6114" [label = <(FIELD_IDENTIFIER,saveDisplayDeletion,saveDisplayDeletion)<SUB>2475</SUB>> ]
-"6117" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2475</SUB>> ]
-"6120" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2476</SUB>> ]
-"6123" [label = <(FIELD_IDENTIFIER,removeItemsAt,removeItemsAt)<SUB>2476</SUB>> ]
-"5989" [label = <(getHwComposer,getHwComposer())<SUB>2447</SUB>> ]
-"5990" [label = <(FIELD_IDENTIFIER,getInternalHwcDisplayId,getInternalHwcDisplayId)<SUB>2447</SUB>> ]
-"6048" [label = <(to_string,to_string(displayId))<SUB>2463</SUB>> ]
-"6050" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2463</SUB>> ]
-"6062" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2466</SUB>> ]
-"6065" [label = <(FIELD_IDENTIFIER,editValueFor,editValueFor)<SUB>2466</SUB>> ]
-"6073" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>2467</SUB>> ]
-"6106" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2474</SUB>> ]
-"6109" [label = <(FIELD_IDENTIFIER,valueAt,valueAt)<SUB>2474</SUB>> ]
-"6122" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2476</SUB>> ]
-"6064" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2466</SUB>> ]
-"6108" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2474</SUB>> ]
-"5918" [label = <(METHOD,processDisplayHotplugEventsLocked)<SUB>2431</SUB>> ]
-"6135" [label = <(METHOD_RETURN,void)<SUB>2431</SUB>> ]
-  "6131" -> "6135" 
-  "6132" -> "6131" 
-  "5925" -> "5938" 
-  "5943" -> "5954" 
-  "5949" -> "5960" 
-  "6130" -> "5929" 
-  "6130" -> "6134" 
-  "6134" -> "6132" 
-  "5927" -> "5925" 
-  "5938" -> "5947" 
-  "5945" -> "5943" 
-  "5951" -> "5949" 
-  "5957" -> "5973" 
-  "5957" -> "6081" 
-  "5928" -> "5933" 
-  "5931" -> "5936" 
-  "5934" -> "5927" 
-  "5947" -> "5945" 
-  "5952" -> "5951" 
-  "5958" -> "5962" 
-  "5961" -> "5957" 
-  "5929" -> "5930" 
-  "5930" -> "5928" 
-  "5933" -> "5931" 
-  "5936" -> "5934" 
-  "5954" -> "5952" 
-  "5960" -> "5958" 
-  "5962" -> "5965" 
-  "5965" -> "5961" 
-  "5968" -> "5979" 
-  "5968" -> "6048" 
-  "6077" -> "6091" 
-  "6085" -> "6097" 
-  "6125" -> "6130" 
+"6147" [label = <(clear,mPendingHotplugEvents.clear())<SUB>2483</SUB>> ]
+"6148" [label = <(&lt;operator&gt;.fieldAccess,mPendingHotplugEvents.clear)<SUB>2483</SUB>> ]
+"5941" [label = <(&lt;operator&gt;.assignment,info =\012                getHwComposer().onHotplug(event.hwcDisplayId, event.connection))<SUB>2432</SUB>> ]
+"5959" [label = <(&lt;operator&gt;.assignment,displayId = info-&gt;id)<SUB>2439</SUB>> ]
+"5965" [label = <(&lt;operator&gt;.assignment,it = mPhysicalDisplayTokens.find(displayId))<SUB>2440</SUB>> ]
+"6146" [label = <(processDisplayChangesLocked,processDisplayChangesLocked())<SUB>2480</SUB>> ]
+"6150" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2483</SUB>> ]
+"5943" [label = <(onHotplug,getHwComposer().onHotplug(event.hwcDisplayId, event.connection))<SUB>2433</SUB>> ]
+"5954" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>2435</SUB>> ]
+"5961" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;id)<SUB>2439</SUB>> ]
+"5967" [label = <(find,mPhysicalDisplayTokens.find(displayId))<SUB>2440</SUB>> ]
+"5973" [label = <(&lt;operator&gt;.equals,event.connection == hal::Connection::CONNECTED)<SUB>2442</SUB>> ]
+"5944" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().onHotplug)<SUB>2433</SUB>> ]
+"5947" [label = <(&lt;operator&gt;.fieldAccess,event.hwcDisplayId)<SUB>2433</SUB>> ]
+"5950" [label = <(&lt;operator&gt;.fieldAccess,event.connection)<SUB>2433</SUB>> ]
+"5963" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2439</SUB>> ]
+"5968" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.find)<SUB>2440</SUB>> ]
+"5974" [label = <(&lt;operator&gt;.fieldAccess,event.connection)<SUB>2442</SUB>> ]
+"5977" [label = <(&lt;operator&gt;.fieldAccess,hal::Connection::CONNECTED)<SUB>2442</SUB>> ]
+"5945" [label = <(getHwComposer,getHwComposer())<SUB>2433</SUB>> ]
+"5946" [label = <(FIELD_IDENTIFIER,onHotplug,onHotplug)<SUB>2433</SUB>> ]
+"5949" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2433</SUB>> ]
+"5952" [label = <(FIELD_IDENTIFIER,connection,connection)<SUB>2433</SUB>> ]
+"5970" [label = <(FIELD_IDENTIFIER,find,find)<SUB>2440</SUB>> ]
+"5976" [label = <(FIELD_IDENTIFIER,connection,connection)<SUB>2442</SUB>> ]
+"5978" [label = <(&lt;operator&gt;.fieldAccess,hal::Connection)<SUB>2442</SUB>> ]
+"5981" [label = <(FIELD_IDENTIFIER,CONNECTED,CONNECTED)<SUB>2442</SUB>> ]
+"5984" [label = <(&lt;operator&gt;.equals,it == mPhysicalDisplayTokens.end())<SUB>2443</SUB>> ]
+"6093" [label = <(ALOGV,ALOGV(&quot;Removing display %s&quot;, to_string(displayId).c_str()))<SUB>2469</SUB>> ]
+"6101" [label = <(&lt;operator&gt;.assignment,index = mCurrentState.displays.indexOfKey(it-&gt;second))<SUB>2471</SUB>> ]
+"6141" [label = <(erase,mPhysicalDisplayTokens.erase(it))<SUB>2477</SUB>> ]
+"5986" [label = <(end,mPhysicalDisplayTokens.end())<SUB>2443</SUB>> ]
+"5991" [label = <(ALOGV,ALOGV(&quot;Creating display %s&quot;, to_string(displayId).c_str()))<SUB>2444</SUB>> ]
+"6011" [label = <(&lt;operator&gt;.assignment,state.physical = {displayId, getHwComposer().getDisplayConnectionType(displayId),\012                                  event.hwcDisplayId})<SUB>2451</SUB>> ]
+"6015" [label = <(&lt;operator&gt;.assignment,state.isSecure = true)<SUB>2453</SUB>> ]
+"6020" [label = <(&lt;operator&gt;.assignment,state.displayName = info-&gt;name)<SUB>2454</SUB>> ]
+"6027" [label = <(&lt;operator&gt;.assignment,sp&lt;IBinder&gt; token = new BBinder())<SUB>2456</SUB>> ]
+"6035" [label = <(add,mCurrentState.displays.add(token, state))<SUB>2457</SUB>> ]
+"6043" [label = <(emplace,mPhysicalDisplayTokens.emplace(displayId, std::move(token)))<SUB>2458</SUB>> ]
+"6053" [label = <(saveDisplayCreation,mInterceptor-&gt;saveDisplayCreation(state))<SUB>2460</SUB>> ]
+"6095" [label = <(c_str,to_string(displayId).c_str())<SUB>2469</SUB>> ]
+"6103" [label = <(indexOfKey,mCurrentState.displays.indexOfKey(it-&gt;second))<SUB>2471</SUB>> ]
+"6113" [label = <(&lt;operator&gt;.greaterEqualsThan,index &gt;= 0)<SUB>2472</SUB>> ]
+"6142" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.erase)<SUB>2477</SUB>> ]
+"5987" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.end)<SUB>2443</SUB>> ]
+"5993" [label = <(c_str,to_string(displayId).c_str())<SUB>2444</SUB>> ]
+"5999" [label = <(&lt;operator&gt;.equals,event.hwcDisplayId == getHwComposer().getInternalHwcDisplayId())<SUB>2446</SUB>> ]
+"6012" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2451</SUB>> ]
+"6016" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2453</SUB>> ]
+"6021" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2454</SUB>> ]
+"6024" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;name)<SUB>2454</SUB>> ]
+"6028" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; token)<SUB>2456</SUB>> ]
+"6033" [label = <(&lt;operator&gt;.new,new BBinder())<SUB>2456</SUB>> ]
+"6036" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.add)<SUB>2457</SUB>> ]
+"6044" [label = <(&lt;operator&gt;.fieldAccess,mPhysicalDisplayTokens.emplace)<SUB>2458</SUB>> ]
+"6048" [label = <(std::move,std::move(token))<SUB>2458</SUB>> ]
+"6054" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveDisplayCreation)<SUB>2460</SUB>> ]
+"6060" [label = <(ALOGV,ALOGV(&quot;Recreating display %s&quot;, to_string(displayId).c_str()))<SUB>2462</SUB>> ]
+"6068" [label = <(&lt;operator&gt;.assignment,token = it-&gt;second)<SUB>2464</SUB>> ]
+"6074" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.editValueFor(token))<SUB>2465</SUB>> ]
+"6083" [label = <(&lt;operator&gt;.assignment,state.sequenceId = DisplayDeviceState{}.sequenceId)<SUB>2466</SUB>> ]
+"6096" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2469</SUB>> ]
+"6104" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.indexOfKey)<SUB>2471</SUB>> ]
+"6109" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>2471</SUB>> ]
+"6118" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.valueAt(index))<SUB>2473</SUB>> ]
+"6127" [label = <(saveDisplayDeletion,mInterceptor-&gt;saveDisplayDeletion(state.sequenceId))<SUB>2474</SUB>> ]
+"6134" [label = <(removeItemsAt,mCurrentState.displays.removeItemsAt(index))<SUB>2475</SUB>> ]
+"6144" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2477</SUB>> ]
+"5989" [label = <(FIELD_IDENTIFIER,end,end)<SUB>2443</SUB>> ]
+"5994" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2444</SUB>> ]
+"6000" [label = <(&lt;operator&gt;.fieldAccess,event.hwcDisplayId)<SUB>2446</SUB>> ]
+"6003" [label = <(getInternalHwcDisplayId,getHwComposer().getInternalHwcDisplayId())<SUB>2446</SUB>> ]
+"6008" [label = <(initScheduler,initScheduler(displayId))<SUB>2447</SUB>> ]
+"6014" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2451</SUB>> ]
+"6018" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2453</SUB>> ]
+"6023" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2454</SUB>> ]
+"6026" [label = <(FIELD_IDENTIFIER,name,name)<SUB>2454</SUB>> ]
+"6029" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>2456</SUB>> ]
+"6037" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2457</SUB>> ]
+"6040" [label = <(FIELD_IDENTIFIER,add,add)<SUB>2457</SUB>> ]
+"6046" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2458</SUB>> ]
+"6049" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>2458</SUB>> ]
+"6056" [label = <(FIELD_IDENTIFIER,saveDisplayCreation,saveDisplayCreation)<SUB>2460</SUB>> ]
+"6062" [label = <(c_str,to_string(displayId).c_str())<SUB>2462</SUB>> ]
+"6070" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>2464</SUB>> ]
+"6076" [label = <(editValueFor,mCurrentState.displays.editValueFor(token))<SUB>2465</SUB>> ]
+"6084" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2466</SUB>> ]
+"6087" [label = <(&lt;operator&gt;.fieldAccess,DisplayDeviceState{}.sequenceId)<SUB>2466</SUB>> ]
+"6097" [label = <(to_string,to_string(displayId))<SUB>2469</SUB>> ]
+"6099" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2469</SUB>> ]
+"6105" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2471</SUB>> ]
+"6108" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2471</SUB>> ]
+"6111" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2471</SUB>> ]
+"6120" [label = <(valueAt,mCurrentState.displays.valueAt(index))<SUB>2473</SUB>> ]
+"6128" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveDisplayDeletion)<SUB>2474</SUB>> ]
+"6131" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2474</SUB>> ]
+"6135" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.removeItemsAt)<SUB>2475</SUB>> ]
+"5995" [label = <(to_string,to_string(displayId))<SUB>2444</SUB>> ]
+"5997" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2444</SUB>> ]
+"6002" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2446</SUB>> ]
+"6004" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getInternalHwcDisplayId)<SUB>2446</SUB>> ]
+"6039" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2457</SUB>> ]
+"6051" [label = <(FIELD_IDENTIFIER,move,move)<SUB>2458</SUB>> ]
+"6063" [label = <(&lt;operator&gt;.fieldAccess,to_string(displayId).c_str)<SUB>2462</SUB>> ]
+"6072" [label = <(FIELD_IDENTIFIER,second,second)<SUB>2464</SUB>> ]
+"6077" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.editValueFor)<SUB>2465</SUB>> ]
+"6086" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2466</SUB>> ]
+"6088" [label = <(DisplayDeviceState,DisplayDeviceState{})<SUB>2466</SUB>> ]
+"6090" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2466</SUB>> ]
+"6107" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2471</SUB>> ]
+"6121" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.valueAt)<SUB>2473</SUB>> ]
+"6130" [label = <(FIELD_IDENTIFIER,saveDisplayDeletion,saveDisplayDeletion)<SUB>2474</SUB>> ]
+"6133" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2474</SUB>> ]
+"6136" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2475</SUB>> ]
+"6139" [label = <(FIELD_IDENTIFIER,removeItemsAt,removeItemsAt)<SUB>2475</SUB>> ]
+"6005" [label = <(getHwComposer,getHwComposer())<SUB>2446</SUB>> ]
+"6006" [label = <(FIELD_IDENTIFIER,getInternalHwcDisplayId,getInternalHwcDisplayId)<SUB>2446</SUB>> ]
+"6064" [label = <(to_string,to_string(displayId))<SUB>2462</SUB>> ]
+"6066" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>2462</SUB>> ]
+"6078" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2465</SUB>> ]
+"6081" [label = <(FIELD_IDENTIFIER,editValueFor,editValueFor)<SUB>2465</SUB>> ]
+"6089" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>2466</SUB>> ]
+"6122" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2473</SUB>> ]
+"6125" [label = <(FIELD_IDENTIFIER,valueAt,valueAt)<SUB>2473</SUB>> ]
+"6138" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2475</SUB>> ]
+"6080" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2465</SUB>> ]
+"6124" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2473</SUB>> ]
+"5934" [label = <(METHOD,processDisplayHotplugEventsLocked)<SUB>2430</SUB>> ]
+"6151" [label = <(METHOD_RETURN,void)<SUB>2430</SUB>> ]
+  "6147" -> "6151" 
+  "6148" -> "6147" 
+  "5941" -> "5954" 
+  "5959" -> "5970" 
+  "5965" -> "5976" 
+  "6146" -> "5945" 
+  "6146" -> "6150" 
+  "6150" -> "6148" 
+  "5943" -> "5941" 
+  "5954" -> "5963" 
+  "5961" -> "5959" 
+  "5967" -> "5965" 
+  "5973" -> "5989" 
+  "5973" -> "6097" 
+  "5944" -> "5949" 
+  "5947" -> "5952" 
+  "5950" -> "5943" 
+  "5963" -> "5961" 
+  "5968" -> "5967" 
+  "5974" -> "5978" 
+  "5977" -> "5973" 
+  "5945" -> "5946" 
+  "5946" -> "5944" 
+  "5949" -> "5947" 
+  "5952" -> "5950" 
   "5970" -> "5968" 
-  "5975" -> "5986" 
-  "5995" -> "6002" 
-  "5999" -> "6007" 
-  "6004" -> "6013" 
-  "6011" -> "6023" 
-  "6019" -> "6030" 
-  "6027" -> "6040" 
-  "6037" -> "6130" 
-  "6079" -> "6077" 
-  "6087" -> "6085" 
-  "6097" -> "6108" 
-  "6097" -> "6128" 
-  "6126" -> "6125" 
-  "5971" -> "5970" 
-  "5977" -> "5975" 
-  "5983" -> "5992" 
-  "5983" -> "5998" 
-  "5996" -> "5995" 
-  "6000" -> "5999" 
-  "6005" -> "6010" 
-  "6008" -> "6004" 
-  "6012" -> "6017" 
-  "6017" -> "6011" 
-  "6020" -> "6019" 
-  "6028" -> "6035" 
-  "6032" -> "6027" 
-  "6038" -> "6037" 
-  "6044" -> "6056" 
-  "6052" -> "6064" 
-  "6058" -> "6070" 
-  "6067" -> "6130" 
-  "6080" -> "6079" 
-  "6088" -> "6095" 
-  "6093" -> "6087" 
-  "6102" -> "6114" 
-  "6111" -> "6122" 
-  "6118" -> "6128" 
-  "6128" -> "6126" 
-  "5973" -> "5971" 
-  "5978" -> "5977" 
-  "5984" -> "5989" 
-  "5987" -> "5983" 
-  "5992" -> "5998" 
-  "5998" -> "5996" 
-  "6002" -> "6000" 
-  "6007" -> "6005" 
-  "6010" -> "6008" 
-  "6013" -> "6012" 
-  "6021" -> "6024" 
-  "6024" -> "6020" 
-  "6030" -> "6028" 
-  "6033" -> "6032" 
-  "6040" -> "6038" 
-  "6046" -> "6044" 
-  "6054" -> "6052" 
-  "6060" -> "6058" 
-  "6068" -> "6073" 
-  "6071" -> "6067" 
-  "6081" -> "6083" 
-  "6083" -> "6080" 
-  "6089" -> "6092" 
-  "6092" -> "6088" 
-  "6095" -> "6093" 
-  "6104" -> "6102" 
-  "6112" -> "6117" 
-  "6115" -> "6111" 
-  "6119" -> "6118" 
-  "5979" -> "5981" 
-  "5981" -> "5978" 
+  "5976" -> "5974" 
+  "5978" -> "5981" 
+  "5981" -> "5977" 
+  "5984" -> "5995" 
+  "5984" -> "6064" 
+  "6093" -> "6107" 
+  "6101" -> "6113" 
+  "6141" -> "6146" 
   "5986" -> "5984" 
-  "5988" -> "5987" 
+  "5991" -> "6002" 
+  "6011" -> "6018" 
+  "6015" -> "6023" 
+  "6020" -> "6029" 
+  "6027" -> "6039" 
+  "6035" -> "6046" 
+  "6043" -> "6056" 
+  "6053" -> "6146" 
+  "6095" -> "6093" 
+  "6103" -> "6101" 
+  "6113" -> "6124" 
+  "6113" -> "6144" 
+  "6142" -> "6141" 
+  "5987" -> "5986" 
+  "5993" -> "5991" 
+  "5999" -> "6008" 
+  "5999" -> "6014" 
+  "6012" -> "6011" 
+  "6016" -> "6015" 
+  "6021" -> "6026" 
+  "6024" -> "6020" 
+  "6028" -> "6033" 
+  "6033" -> "6027" 
+  "6036" -> "6035" 
+  "6044" -> "6051" 
+  "6048" -> "6043" 
+  "6054" -> "6053" 
+  "6060" -> "6072" 
+  "6068" -> "6080" 
+  "6074" -> "6086" 
+  "6083" -> "6146" 
+  "6096" -> "6095" 
+  "6104" -> "6111" 
+  "6109" -> "6103" 
+  "6118" -> "6130" 
+  "6127" -> "6138" 
+  "6134" -> "6144" 
+  "6144" -> "6142" 
+  "5989" -> "5987" 
+  "5994" -> "5993" 
+  "6000" -> "6005" 
+  "6003" -> "5999" 
+  "6008" -> "6014" 
+  "6014" -> "6012" 
+  "6018" -> "6016" 
   "6023" -> "6021" 
-  "6035" -> "6033" 
-  "6047" -> "6046" 
+  "6026" -> "6024" 
+  "6029" -> "6028" 
+  "6037" -> "6040" 
+  "6040" -> "6036" 
+  "6046" -> "6044" 
+  "6049" -> "6048" 
   "6056" -> "6054" 
-  "6061" -> "6060" 
+  "6062" -> "6060" 
   "6070" -> "6068" 
-  "6072" -> "6074" 
-  "6074" -> "6071" 
-  "6091" -> "6089" 
-  "6105" -> "6104" 
-  "6114" -> "6112" 
-  "6117" -> "6115" 
-  "6120" -> "6123" 
-  "6123" -> "6119" 
-  "5989" -> "5990" 
-  "5990" -> "5988" 
-  "6048" -> "6050" 
-  "6050" -> "6047" 
-  "6062" -> "6065" 
-  "6065" -> "6061" 
-  "6073" -> "6072" 
-  "6106" -> "6109" 
-  "6109" -> "6105" 
-  "6122" -> "6120" 
-  "6064" -> "6062" 
-  "6108" -> "6106" 
-  "5918" -> "5929" 
+  "6076" -> "6074" 
+  "6084" -> "6089" 
+  "6087" -> "6083" 
+  "6097" -> "6099" 
+  "6099" -> "6096" 
+  "6105" -> "6108" 
+  "6108" -> "6104" 
+  "6111" -> "6109" 
+  "6120" -> "6118" 
+  "6128" -> "6133" 
+  "6131" -> "6127" 
+  "6135" -> "6134" 
+  "5995" -> "5997" 
+  "5997" -> "5994" 
+  "6002" -> "6000" 
+  "6004" -> "6003" 
+  "6039" -> "6037" 
+  "6051" -> "6049" 
+  "6063" -> "6062" 
+  "6072" -> "6070" 
+  "6077" -> "6076" 
+  "6086" -> "6084" 
+  "6088" -> "6090" 
+  "6090" -> "6087" 
+  "6107" -> "6105" 
+  "6121" -> "6120" 
+  "6130" -> "6128" 
+  "6133" -> "6131" 
+  "6136" -> "6139" 
+  "6139" -> "6135" 
+  "6005" -> "6006" 
+  "6006" -> "6004" 
+  "6064" -> "6066" 
+  "6066" -> "6063" 
+  "6078" -> "6081" 
+  "6081" -> "6077" 
+  "6089" -> "6088" 
+  "6122" -> "6125" 
+  "6125" -> "6121" 
+  "6138" -> "6136" 
+  "6080" -> "6078" 
+  "6124" -> "6122" 
+  "5934" -> "5945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/164-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/164-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/164-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/164-cfg.dot	2023-06-07 19:33:06.607398409 +0330
@@ -1,17 +1,17 @@
 digraph "dispatchDisplayHotplugEvent" {  
-"6141" [label = <(onHotplugReceived,mScheduler-&gt;onHotplugReceived(mAppConnectionHandle, displayId, connected))<SUB>2488</SUB>> ]
-"6148" [label = <(onHotplugReceived,mScheduler-&gt;onHotplugReceived(mSfConnectionHandle, displayId, connected))<SUB>2489</SUB>> ]
-"6142" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onHotplugReceived)<SUB>2488</SUB>> ]
-"6149" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onHotplugReceived)<SUB>2489</SUB>> ]
-"6144" [label = <(FIELD_IDENTIFIER,onHotplugReceived,onHotplugReceived)<SUB>2488</SUB>> ]
-"6151" [label = <(FIELD_IDENTIFIER,onHotplugReceived,onHotplugReceived)<SUB>2489</SUB>> ]
-"6137" [label = <(METHOD,dispatchDisplayHotplugEvent)<SUB>2487</SUB>> ]
-"6155" [label = <(METHOD_RETURN,void)<SUB>2487</SUB>> ]
-  "6141" -> "6151" 
-  "6148" -> "6155" 
-  "6142" -> "6141" 
-  "6149" -> "6148" 
-  "6144" -> "6142" 
-  "6151" -> "6149" 
-  "6137" -> "6144" 
+"6157" [label = <(onHotplugReceived,mScheduler-&gt;onHotplugReceived(mAppConnectionHandle, displayId, connected))<SUB>2487</SUB>> ]
+"6164" [label = <(onHotplugReceived,mScheduler-&gt;onHotplugReceived(mSfConnectionHandle, displayId, connected))<SUB>2488</SUB>> ]
+"6158" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onHotplugReceived)<SUB>2487</SUB>> ]
+"6165" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onHotplugReceived)<SUB>2488</SUB>> ]
+"6160" [label = <(FIELD_IDENTIFIER,onHotplugReceived,onHotplugReceived)<SUB>2487</SUB>> ]
+"6167" [label = <(FIELD_IDENTIFIER,onHotplugReceived,onHotplugReceived)<SUB>2488</SUB>> ]
+"6153" [label = <(METHOD,dispatchDisplayHotplugEvent)<SUB>2486</SUB>> ]
+"6171" [label = <(METHOD_RETURN,void)<SUB>2486</SUB>> ]
+  "6157" -> "6167" 
+  "6164" -> "6171" 
+  "6158" -> "6157" 
+  "6165" -> "6164" 
+  "6160" -> "6158" 
+  "6167" -> "6165" 
+  "6153" -> "6160" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/165-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/165-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/165-cfg.dot	2023-06-07 19:33:00.377398984 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/165-cfg.dot	2023-06-07 19:33:06.617398410 +0330
@@ -1,417 +1,417 @@
 digraph "setupNewDisplayDeviceInternal" {  
-"6165" [label = <(&lt;operator&gt;.assignment,displayId = compositionDisplay-&gt;getDisplayId())<SUB>2498</SUB>> ]
-"6172" [label = <(creationArgs,creationArgs(this, displayToken, compositionDisplay))<SUB>2499</SUB>> ]
-"6176" [label = <(&lt;operator&gt;.assignment,creationArgs.sequenceId = state.sequenceId)<SUB>2500</SUB>> ]
-"6183" [label = <(&lt;operator&gt;.assignment,creationArgs.isSecure = state.isSecure)<SUB>2501</SUB>> ]
-"6190" [label = <(&lt;operator&gt;.assignment,creationArgs.displaySurface = displaySurface)<SUB>2502</SUB>> ]
-"6195" [label = <(&lt;operator&gt;.assignment,creationArgs.hasWideColorGamut = false)<SUB>2503</SUB>> ]
-"6200" [label = <(&lt;operator&gt;.assignment,creationArgs.supportedPerFrameMetadata = 0)<SUB>2504</SUB>> ]
-"6222" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = displayId &amp;&amp; displayId == getInternalDisplayIdLocked())<SUB>2510</SUB>> ]
-"6229" [label = <(&lt;operator&gt;.assignment,creationArgs.isPrimary = isInternalDisplay)<SUB>2511</SUB>> ]
-"6313" [label = <(&lt;operator&gt;.assignment,nativeWindowSurface = getFactory().createNativeWindowSurface(producer))<SUB>2532</SUB>> ]
-"6321" [label = <(&lt;operator&gt;.assignment,nativeWindow = nativeWindowSurface-&gt;getNativeWindow())<SUB>2533</SUB>> ]
-"6327" [label = <(&lt;operator&gt;.assignment,creationArgs.nativeWindow = nativeWindow)<SUB>2534</SUB>> ]
-"6347" [label = <(&lt;operator&gt;.assignment,creationArgs.physicalOrientation =\012            isInternalDisplay ? internalDisplayOrientation : ui::ROTATION_0)<SUB>2543</SUB>> ]
-"6357" [label = <(&lt;operator&gt;.assignment,creationArgs.initialPowerMode = state.isVirtual() ? hal::PowerMode::ON : hal::PowerMode::OFF)<SUB>2547</SUB>> ]
-"6376" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getFactory().createDisplayDevice(creationArgs))<SUB>2549</SUB>> ]
-"6397" [label = <(&lt;operator&gt;.assignment,defaultColorMode = ColorMode::NATIVE)<SUB>2555</SUB>> ]
-"6403" [label = <(&lt;operator&gt;.assignment,defaultDataSpace = Dataspace::UNKNOWN)<SUB>2556</SUB>> ]
-"6424" [label = <(setColorProfile,display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012            compositionengine::Output::ColorProfile{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN}))<SUB>2561</SUB>> ]
-"6466" [label = <(setLayerStack,display-&gt;setLayerStack(state.layerStack))<SUB>2571</SUB>> ]
-"6473" [label = <(setProjection,display-&gt;setProjection(state.orientation, state.viewport, state.frame))<SUB>2572</SUB>> ]
-"6486" [label = <(setDisplayName,display-&gt;setDisplayName(state.displayName))<SUB>2573</SUB>> ]
-"6493" [label = <(RETURN,return display;,return display;)<SUB>2575</SUB>> ]
-"6167" [label = <(getDisplayId,compositionDisplay-&gt;getDisplayId())<SUB>2498</SUB>> ]
-"6177" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.sequenceId)<SUB>2500</SUB>> ]
-"6180" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2500</SUB>> ]
-"6184" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.isSecure)<SUB>2501</SUB>> ]
-"6187" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2501</SUB>> ]
-"6191" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.displaySurface)<SUB>2502</SUB>> ]
-"6196" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hasWideColorGamut)<SUB>2503</SUB>> ]
-"6201" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.supportedPerFrameMetadata)<SUB>2504</SUB>> ]
-"6224" [label = <(&lt;operator&gt;.logicalAnd,displayId &amp;&amp; displayId == getInternalDisplayIdLocked())<SUB>2510</SUB>> ]
-"6230" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.isPrimary)<SUB>2511</SUB>> ]
-"6235" [label = <(&lt;operator&gt;.logicalAnd,useColorManagement &amp;&amp; displayId)<SUB>2513</SUB>> ]
-"6315" [label = <(createNativeWindowSurface,getFactory().createNativeWindowSurface(producer))<SUB>2532</SUB>> ]
-"6323" [label = <(getNativeWindow,nativeWindowSurface-&gt;getNativeWindow())<SUB>2533</SUB>> ]
-"6328" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.nativeWindow)<SUB>2534</SUB>> ]
-"6333" [label = <(isVirtual,state.isVirtual())<SUB>2539</SUB>> ]
-"6348" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.physicalOrientation)<SUB>2543</SUB>> ]
-"6351" [label = <(&lt;operator&gt;.conditional,isInternalDisplay ? internalDisplayOrientation : ui::ROTATION_0)<SUB>2544</SUB>> ]
-"6358" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.initialPowerMode)<SUB>2547</SUB>> ]
-"6361" [label = <(&lt;operator&gt;.conditional,state.isVirtual() ? hal::PowerMode::ON : hal::PowerMode::OFF)<SUB>2547</SUB>> ]
-"6377" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>2549</SUB>> ]
-"6382" [label = <(createDisplayDevice,getFactory().createDisplayDevice(creationArgs))<SUB>2549</SUB>> ]
-"6388" [label = <(&lt;operator&gt;.greaterEqualsThan,maxFrameBufferAcquiredBuffers &gt;= 3)<SUB>2551</SUB>> ]
-"6399" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::NATIVE)<SUB>2555</SUB>> ]
-"6405" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::UNKNOWN)<SUB>2556</SUB>> ]
-"6409" [label = <(hasWideColorGamut,display-&gt;hasWideColorGamut())<SUB>2557</SUB>> ]
-"6425" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;setColorProfile)<SUB>2561</SUB>> ]
-"6431" [label = <(compositionengine::Output::ColorProfile,compositionengine::Output::ColorProfile{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN})<SUB>2562</SUB>> ]
-"6442" [label = <(&lt;operator&gt;.logicalNot,!state.isVirtual())<SUB>2565</SUB>> ]
-"6467" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setLayerStack)<SUB>2571</SUB>> ]
-"6470" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>2571</SUB>> ]
-"6474" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setProjection)<SUB>2572</SUB>> ]
-"6477" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>2572</SUB>> ]
-"6480" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>2572</SUB>> ]
-"6483" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>2572</SUB>> ]
-"6487" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setDisplayName)<SUB>2573</SUB>> ]
-"6490" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2573</SUB>> ]
-"6168" [label = <(&lt;operator&gt;.indirectFieldAccess,compositionDisplay-&gt;getDisplayId)<SUB>2498</SUB>> ]
-"6179" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2500</SUB>> ]
-"6182" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2500</SUB>> ]
-"6186" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2501</SUB>> ]
-"6189" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2501</SUB>> ]
-"6193" [label = <(FIELD_IDENTIFIER,displaySurface,displaySurface)<SUB>2502</SUB>> ]
-"6198" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2503</SUB>> ]
-"6203" [label = <(FIELD_IDENTIFIER,supportedPerFrameMetadata,supportedPerFrameMetadata)<SUB>2504</SUB>> ]
-"6208" [label = <(&lt;operator&gt;.assignment,&amp; physical = state.physical)<SUB>2506</SUB>> ]
-"6214" [label = <(&lt;operator&gt;.assignment,creationArgs.connectionType = physical-&gt;type)<SUB>2507</SUB>> ]
-"6226" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>2510</SUB>> ]
-"6232" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2511</SUB>> ]
-"6239" [label = <(&lt;operator&gt;.assignment,std::vector&lt;ColorMode&gt; modes = getHwComposer().getColorModes(*displayId))<SUB>2514</SUB>> ]
-"6292" [label = <(getHdrCapabilities,getHwComposer().getHdrCapabilities(*displayId, &amp;creationArgs.hdrCapabilities))<SUB>2527</SUB>> ]
-"6302" [label = <(&lt;operator&gt;.assignment,creationArgs.supportedPerFrameMetadata =\012                getHwComposer().getSupportedPerFrameMetadata(*displayId))<SUB>2528</SUB>> ]
-"6316" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createNativeWindowSurface)<SUB>2532</SUB>> ]
-"6324" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindowSurface-&gt;getNativeWindow)<SUB>2533</SUB>> ]
-"6330" [label = <(FIELD_IDENTIFIER,nativeWindow,nativeWindow)<SUB>2534</SUB>> ]
-"6334" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2539</SUB>> ]
-"6338" [label = <(setSwapInterval,nativeWindow-&gt;setSwapInterval(nativeWindow.get(), 0))<SUB>2540</SUB>> ]
-"6350" [label = <(FIELD_IDENTIFIER,physicalOrientation,physicalOrientation)<SUB>2543</SUB>> ]
-"6354" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_0)<SUB>2544</SUB>> ]
-"6360" [label = <(FIELD_IDENTIFIER,initialPowerMode,initialPowerMode)<SUB>2547</SUB>> ]
-"6362" [label = <(isVirtual,state.isVirtual())<SUB>2547</SUB>> ]
-"6366" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2547</SUB>> ]
-"6371" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>2547</SUB>> ]
-"6378" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>2549</SUB>> ]
-"6383" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createDisplayDevice)<SUB>2549</SUB>> ]
-"6392" [label = <(preallocateBuffers,nativeWindowSurface-&gt;preallocateBuffers())<SUB>2552</SUB>> ]
-"6401" [label = <(FIELD_IDENTIFIER,NATIVE,NATIVE)<SUB>2555</SUB>> ]
-"6407" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>2556</SUB>> ]
-"6410" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasWideColorGamut)<SUB>2557</SUB>> ]
-"6414" [label = <(&lt;operator&gt;.assignment,defaultColorMode = ColorMode::SRGB)<SUB>2558</SUB>> ]
-"6419" [label = <(&lt;operator&gt;.assignment,defaultDataSpace = Dataspace::V0_SRGB)<SUB>2559</SUB>> ]
-"6426" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2561</SUB>> ]
-"6430" [label = <(FIELD_IDENTIFIER,setColorProfile,setColorProfile)<SUB>2561</SUB>> ]
-"6432" [label = <(&lt;operator&gt;.arrayInitializer,{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN})<SUB>2562</SUB>> ]
-"6443" [label = <(isVirtual,state.isVirtual())<SUB>2565</SUB>> ]
-"6448" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>2566</SUB>> ]
-"6452" [label = <(&lt;operator&gt;.assignment,activeConfigId = HwcConfigIndexType(getHwComposer().getActiveConfigIndex(*displayId)))<SUB>2567</SUB>> ]
-"6461" [label = <(setActiveConfig,display-&gt;setActiveConfig(activeConfigId))<SUB>2568</SUB>> ]
-"6469" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>2571</SUB>> ]
-"6472" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2571</SUB>> ]
-"6476" [label = <(FIELD_IDENTIFIER,setProjection,setProjection)<SUB>2572</SUB>> ]
-"6479" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2572</SUB>> ]
-"6482" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2572</SUB>> ]
-"6485" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2572</SUB>> ]
-"6489" [label = <(FIELD_IDENTIFIER,setDisplayName,setDisplayName)<SUB>2573</SUB>> ]
-"6492" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2573</SUB>> ]
-"6170" [label = <(FIELD_IDENTIFIER,getDisplayId,getDisplayId)<SUB>2498</SUB>> ]
-"6210" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2506</SUB>> ]
-"6215" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.connectionType)<SUB>2507</SUB>> ]
-"6218" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;type)<SUB>2507</SUB>> ]
-"6228" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>2510</SUB>> ]
-"6240" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>2514</SUB>> ]
-"6247" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>2514</SUB>> ]
-"6293" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getHdrCapabilities)<SUB>2527</SUB>> ]
-"6296" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2527</SUB>> ]
-"6298" [label = <(&lt;operator&gt;.addressOf,&amp;creationArgs.hdrCapabilities)<SUB>2527</SUB>> ]
-"6303" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.supportedPerFrameMetadata)<SUB>2528</SUB>> ]
-"6306" [label = <(getSupportedPerFrameMetadata,getHwComposer().getSupportedPerFrameMetadata(*displayId))<SUB>2529</SUB>> ]
-"6317" [label = <(getFactory,getFactory())<SUB>2532</SUB>> ]
-"6318" [label = <(FIELD_IDENTIFIER,createNativeWindowSurface,createNativeWindowSurface)<SUB>2532</SUB>> ]
-"6326" [label = <(FIELD_IDENTIFIER,getNativeWindow,getNativeWindow)<SUB>2533</SUB>> ]
-"6336" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2539</SUB>> ]
-"6339" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindow-&gt;setSwapInterval)<SUB>2540</SUB>> ]
-"6342" [label = <(get,nativeWindow.get())<SUB>2540</SUB>> ]
-"6356" [label = <(FIELD_IDENTIFIER,ROTATION_0,ROTATION_0)<SUB>2544</SUB>> ]
-"6363" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2547</SUB>> ]
-"6367" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2547</SUB>> ]
-"6370" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2547</SUB>> ]
-"6372" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2547</SUB>> ]
-"6375" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>2547</SUB>> ]
-"6384" [label = <(getFactory,getFactory())<SUB>2549</SUB>> ]
-"6385" [label = <(FIELD_IDENTIFIER,createDisplayDevice,createDisplayDevice)<SUB>2549</SUB>> ]
-"6393" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindowSurface-&gt;preallocateBuffers)<SUB>2552</SUB>> ]
-"6412" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2557</SUB>> ]
-"6416" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::SRGB)<SUB>2558</SUB>> ]
-"6421" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::V0_SRGB)<SUB>2559</SUB>> ]
-"6427" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2561</SUB>> ]
-"6435" [label = <(&lt;operator&gt;.fieldAccess,RenderIntent::COLORIMETRIC)<SUB>2563</SUB>> ]
-"6438" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::UNKNOWN)<SUB>2564</SUB>> ]
-"6444" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2565</SUB>> ]
-"6449" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2566</SUB>> ]
-"6454" [label = <(HwcConfigIndexType,HwcConfigIndexType(getHwComposer().getActiveConfigIndex(*displayId)))<SUB>2567</SUB>> ]
-"6462" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>2568</SUB>> ]
-"6212" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2506</SUB>> ]
-"6217" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>2507</SUB>> ]
-"6220" [label = <(FIELD_IDENTIFIER,type,type)<SUB>2507</SUB>> ]
-"6241" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>2514</SUB>> ]
-"6248" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>2514</SUB>> ]
-"6251" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2514</SUB>> ]
-"6266" [label = <(&lt;operator&gt;.assignment,std::vector&lt;RenderIntent&gt; renderIntents =\012                    getHwComposer().getRenderIntents(*displayId, colorMode))<SUB>2520</SUB>> ]
-"6281" [label = <(emplace,creationArgs.hwcColorModes.emplace(colorMode, renderIntents))<SUB>2522</SUB>> ]
-"6294" [label = <(getHwComposer,getHwComposer())<SUB>2527</SUB>> ]
-"6295" [label = <(FIELD_IDENTIFIER,getHdrCapabilities,getHdrCapabilities)<SUB>2527</SUB>> ]
-"6299" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hdrCapabilities)<SUB>2527</SUB>> ]
-"6305" [label = <(FIELD_IDENTIFIER,supportedPerFrameMetadata,supportedPerFrameMetadata)<SUB>2528</SUB>> ]
-"6307" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getSupportedPerFrameMetadata)<SUB>2529</SUB>> ]
-"6310" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2529</SUB>> ]
-"6341" [label = <(FIELD_IDENTIFIER,setSwapInterval,setSwapInterval)<SUB>2540</SUB>> ]
-"6343" [label = <(&lt;operator&gt;.fieldAccess,nativeWindow.get)<SUB>2540</SUB>> ]
-"6365" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2547</SUB>> ]
-"6395" [label = <(FIELD_IDENTIFIER,preallocateBuffers,preallocateBuffers)<SUB>2552</SUB>> ]
-"6418" [label = <(FIELD_IDENTIFIER,SRGB,SRGB)<SUB>2558</SUB>> ]
-"6423" [label = <(FIELD_IDENTIFIER,V0_SRGB,V0_SRGB)<SUB>2559</SUB>> ]
-"6429" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2561</SUB>> ]
-"6437" [label = <(FIELD_IDENTIFIER,COLORIMETRIC,COLORIMETRIC)<SUB>2563</SUB>> ]
-"6440" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>2564</SUB>> ]
-"6446" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2565</SUB>> ]
-"6455" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(*displayId))<SUB>2567</SUB>> ]
-"6464" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>2568</SUB>> ]
-"6242" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2514</SUB>> ]
-"6249" [label = <(getHwComposer,getHwComposer())<SUB>2514</SUB>> ]
-"6250" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>2514</SUB>> ]
-"6258" [label = <(isWideColorMode,isWideColorMode(colorMode))<SUB>2516</SUB>> ]
-"6267" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;RenderIntent&gt; renderIntents)<SUB>2520</SUB>> ]
-"6274" [label = <(getRenderIntents,getHwComposer().getRenderIntents(*displayId, colorMode))<SUB>2521</SUB>> ]
-"6282" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hwcColorModes.emplace)<SUB>2522</SUB>> ]
-"6301" [label = <(FIELD_IDENTIFIER,hdrCapabilities,hdrCapabilities)<SUB>2527</SUB>> ]
-"6308" [label = <(getHwComposer,getHwComposer())<SUB>2529</SUB>> ]
-"6309" [label = <(FIELD_IDENTIFIER,getSupportedPerFrameMetadata,getSupportedPerFrameMetadata)<SUB>2529</SUB>> ]
-"6345" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2540</SUB>> ]
-"6456" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>2567</SUB>> ]
-"6459" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2567</SUB>> ]
-"6244" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2514</SUB>> ]
-"6261" [label = <(&lt;operator&gt;.assignment,creationArgs.hasWideColorGamut = true)<SUB>2517</SUB>> ]
-"6268" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;RenderIntent)<SUB>2520</SUB>> ]
-"6275" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getRenderIntents)<SUB>2521</SUB>> ]
-"6278" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2521</SUB>> ]
-"6283" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hwcColorModes)<SUB>2522</SUB>> ]
-"6286" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2522</SUB>> ]
-"6457" [label = <(getHwComposer,getHwComposer())<SUB>2567</SUB>> ]
-"6458" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>2567</SUB>> ]
-"6262" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hasWideColorGamut)<SUB>2517</SUB>> ]
-"6269" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2520</SUB>> ]
-"6276" [label = <(getHwComposer,getHwComposer())<SUB>2521</SUB>> ]
-"6277" [label = <(FIELD_IDENTIFIER,getRenderIntents,getRenderIntents)<SUB>2521</SUB>> ]
-"6285" [label = <(FIELD_IDENTIFIER,hwcColorModes,hwcColorModes)<SUB>2522</SUB>> ]
-"6264" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2517</SUB>> ]
-"6271" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2520</SUB>> ]
-"6157" [label = <(METHOD,setupNewDisplayDeviceInternal)<SUB>2492</SUB>> ]
-"6495" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>2492</SUB>> ]
-  "6165" -> "6172" 
-  "6172" -> "6179" 
-  "6176" -> "6186" 
-  "6183" -> "6193" 
-  "6190" -> "6198" 
-  "6195" -> "6203" 
-  "6200" -> "6212" 
-  "6222" -> "6232" 
-  "6229" -> "6235" 
-  "6313" -> "6326" 
-  "6321" -> "6330" 
-  "6327" -> "6336" 
-  "6347" -> "6360" 
-  "6357" -> "6378" 
-  "6376" -> "6388" 
-  "6397" -> "6407" 
-  "6403" -> "6412" 
-  "6424" -> "6446" 
-  "6466" -> "6476" 
-  "6473" -> "6489" 
-  "6486" -> "6493" 
-  "6493" -> "6495" 
-  "6167" -> "6165" 
-  "6177" -> "6182" 
-  "6180" -> "6176" 
-  "6184" -> "6189" 
-  "6187" -> "6183" 
-  "6191" -> "6190" 
-  "6196" -> "6195" 
-  "6201" -> "6200" 
-  "6224" -> "6222" 
-  "6230" -> "6229" 
-  "6235" -> "6244" 
-  "6235" -> "6294" 
-  "6235" -> "6317" 
-  "6315" -> "6313" 
-  "6323" -> "6321" 
-  "6328" -> "6327" 
-  "6333" -> "6341" 
-  "6333" -> "6350" 
-  "6348" -> "6351" 
-  "6348" -> "6356" 
-  "6351" -> "6347" 
-  "6358" -> "6365" 
-  "6361" -> "6357" 
-  "6377" -> "6384" 
-  "6382" -> "6376" 
-  "6388" -> "6395" 
-  "6388" -> "6401" 
-  "6399" -> "6397" 
-  "6405" -> "6403" 
-  "6409" -> "6418" 
-  "6409" -> "6429" 
-  "6425" -> "6437" 
-  "6431" -> "6424" 
-  "6442" -> "6449" 
-  "6442" -> "6469" 
-  "6467" -> "6472" 
-  "6470" -> "6466" 
-  "6474" -> "6479" 
-  "6477" -> "6482" 
-  "6480" -> "6485" 
-  "6483" -> "6473" 
-  "6487" -> "6492" 
-  "6490" -> "6486" 
-  "6168" -> "6167" 
-  "6179" -> "6177" 
-  "6182" -> "6180" 
-  "6186" -> "6184" 
-  "6189" -> "6187" 
-  "6193" -> "6191" 
+"6181" [label = <(&lt;operator&gt;.assignment,displayId = compositionDisplay-&gt;getDisplayId())<SUB>2497</SUB>> ]
+"6188" [label = <(creationArgs,creationArgs(this, displayToken, compositionDisplay))<SUB>2498</SUB>> ]
+"6192" [label = <(&lt;operator&gt;.assignment,creationArgs.sequenceId = state.sequenceId)<SUB>2499</SUB>> ]
+"6199" [label = <(&lt;operator&gt;.assignment,creationArgs.isSecure = state.isSecure)<SUB>2500</SUB>> ]
+"6206" [label = <(&lt;operator&gt;.assignment,creationArgs.displaySurface = displaySurface)<SUB>2501</SUB>> ]
+"6211" [label = <(&lt;operator&gt;.assignment,creationArgs.hasWideColorGamut = false)<SUB>2502</SUB>> ]
+"6216" [label = <(&lt;operator&gt;.assignment,creationArgs.supportedPerFrameMetadata = 0)<SUB>2503</SUB>> ]
+"6238" [label = <(&lt;operator&gt;.assignment,isInternalDisplay = displayId &amp;&amp; displayId == getInternalDisplayIdLocked())<SUB>2509</SUB>> ]
+"6245" [label = <(&lt;operator&gt;.assignment,creationArgs.isPrimary = isInternalDisplay)<SUB>2510</SUB>> ]
+"6329" [label = <(&lt;operator&gt;.assignment,nativeWindowSurface = getFactory().createNativeWindowSurface(producer))<SUB>2531</SUB>> ]
+"6337" [label = <(&lt;operator&gt;.assignment,nativeWindow = nativeWindowSurface-&gt;getNativeWindow())<SUB>2532</SUB>> ]
+"6343" [label = <(&lt;operator&gt;.assignment,creationArgs.nativeWindow = nativeWindow)<SUB>2533</SUB>> ]
+"6363" [label = <(&lt;operator&gt;.assignment,creationArgs.physicalOrientation =\012            isInternalDisplay ? internalDisplayOrientation : ui::ROTATION_0)<SUB>2542</SUB>> ]
+"6373" [label = <(&lt;operator&gt;.assignment,creationArgs.initialPowerMode = state.isVirtual() ? hal::PowerMode::ON : hal::PowerMode::OFF)<SUB>2546</SUB>> ]
+"6392" [label = <(&lt;operator&gt;.assignment,sp&lt;DisplayDevice&gt; display = getFactory().createDisplayDevice(creationArgs))<SUB>2548</SUB>> ]
+"6413" [label = <(&lt;operator&gt;.assignment,defaultColorMode = ColorMode::NATIVE)<SUB>2554</SUB>> ]
+"6419" [label = <(&lt;operator&gt;.assignment,defaultDataSpace = Dataspace::UNKNOWN)<SUB>2555</SUB>> ]
+"6440" [label = <(setColorProfile,display-&gt;getCompositionDisplay()-&gt;setColorProfile(\012            compositionengine::Output::ColorProfile{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN}))<SUB>2560</SUB>> ]
+"6482" [label = <(setLayerStack,display-&gt;setLayerStack(state.layerStack))<SUB>2570</SUB>> ]
+"6489" [label = <(setProjection,display-&gt;setProjection(state.orientation, state.viewport, state.frame))<SUB>2571</SUB>> ]
+"6502" [label = <(setDisplayName,display-&gt;setDisplayName(state.displayName))<SUB>2572</SUB>> ]
+"6509" [label = <(RETURN,return display;,return display;)<SUB>2574</SUB>> ]
+"6183" [label = <(getDisplayId,compositionDisplay-&gt;getDisplayId())<SUB>2497</SUB>> ]
+"6193" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.sequenceId)<SUB>2499</SUB>> ]
+"6196" [label = <(&lt;operator&gt;.fieldAccess,state.sequenceId)<SUB>2499</SUB>> ]
+"6200" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.isSecure)<SUB>2500</SUB>> ]
+"6203" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2500</SUB>> ]
+"6207" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.displaySurface)<SUB>2501</SUB>> ]
+"6212" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hasWideColorGamut)<SUB>2502</SUB>> ]
+"6217" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.supportedPerFrameMetadata)<SUB>2503</SUB>> ]
+"6240" [label = <(&lt;operator&gt;.logicalAnd,displayId &amp;&amp; displayId == getInternalDisplayIdLocked())<SUB>2509</SUB>> ]
+"6246" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.isPrimary)<SUB>2510</SUB>> ]
+"6251" [label = <(&lt;operator&gt;.logicalAnd,useColorManagement &amp;&amp; displayId)<SUB>2512</SUB>> ]
+"6331" [label = <(createNativeWindowSurface,getFactory().createNativeWindowSurface(producer))<SUB>2531</SUB>> ]
+"6339" [label = <(getNativeWindow,nativeWindowSurface-&gt;getNativeWindow())<SUB>2532</SUB>> ]
+"6344" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.nativeWindow)<SUB>2533</SUB>> ]
+"6349" [label = <(isVirtual,state.isVirtual())<SUB>2538</SUB>> ]
+"6364" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.physicalOrientation)<SUB>2542</SUB>> ]
+"6367" [label = <(&lt;operator&gt;.conditional,isInternalDisplay ? internalDisplayOrientation : ui::ROTATION_0)<SUB>2543</SUB>> ]
+"6374" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.initialPowerMode)<SUB>2546</SUB>> ]
+"6377" [label = <(&lt;operator&gt;.conditional,state.isVirtual() ? hal::PowerMode::ON : hal::PowerMode::OFF)<SUB>2546</SUB>> ]
+"6393" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>2548</SUB>> ]
+"6398" [label = <(createDisplayDevice,getFactory().createDisplayDevice(creationArgs))<SUB>2548</SUB>> ]
+"6404" [label = <(&lt;operator&gt;.greaterEqualsThan,maxFrameBufferAcquiredBuffers &gt;= 3)<SUB>2550</SUB>> ]
+"6415" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::NATIVE)<SUB>2554</SUB>> ]
+"6421" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::UNKNOWN)<SUB>2555</SUB>> ]
+"6425" [label = <(hasWideColorGamut,display-&gt;hasWideColorGamut())<SUB>2556</SUB>> ]
+"6441" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;setColorProfile)<SUB>2560</SUB>> ]
+"6447" [label = <(compositionengine::Output::ColorProfile,compositionengine::Output::ColorProfile{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN})<SUB>2561</SUB>> ]
+"6458" [label = <(&lt;operator&gt;.logicalNot,!state.isVirtual())<SUB>2564</SUB>> ]
+"6483" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setLayerStack)<SUB>2570</SUB>> ]
+"6486" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>2570</SUB>> ]
+"6490" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setProjection)<SUB>2571</SUB>> ]
+"6493" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>2571</SUB>> ]
+"6496" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>2571</SUB>> ]
+"6499" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>2571</SUB>> ]
+"6503" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setDisplayName)<SUB>2572</SUB>> ]
+"6506" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2572</SUB>> ]
+"6184" [label = <(&lt;operator&gt;.indirectFieldAccess,compositionDisplay-&gt;getDisplayId)<SUB>2497</SUB>> ]
+"6195" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2499</SUB>> ]
+"6198" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2499</SUB>> ]
+"6202" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2500</SUB>> ]
+"6205" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2500</SUB>> ]
+"6209" [label = <(FIELD_IDENTIFIER,displaySurface,displaySurface)<SUB>2501</SUB>> ]
+"6214" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2502</SUB>> ]
+"6219" [label = <(FIELD_IDENTIFIER,supportedPerFrameMetadata,supportedPerFrameMetadata)<SUB>2503</SUB>> ]
+"6224" [label = <(&lt;operator&gt;.assignment,&amp; physical = state.physical)<SUB>2505</SUB>> ]
+"6230" [label = <(&lt;operator&gt;.assignment,creationArgs.connectionType = physical-&gt;type)<SUB>2506</SUB>> ]
+"6242" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>2509</SUB>> ]
+"6248" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2510</SUB>> ]
+"6255" [label = <(&lt;operator&gt;.assignment,std::vector&lt;ColorMode&gt; modes = getHwComposer().getColorModes(*displayId))<SUB>2513</SUB>> ]
+"6308" [label = <(getHdrCapabilities,getHwComposer().getHdrCapabilities(*displayId, &amp;creationArgs.hdrCapabilities))<SUB>2526</SUB>> ]
+"6318" [label = <(&lt;operator&gt;.assignment,creationArgs.supportedPerFrameMetadata =\012                getHwComposer().getSupportedPerFrameMetadata(*displayId))<SUB>2527</SUB>> ]
+"6332" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createNativeWindowSurface)<SUB>2531</SUB>> ]
+"6340" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindowSurface-&gt;getNativeWindow)<SUB>2532</SUB>> ]
+"6346" [label = <(FIELD_IDENTIFIER,nativeWindow,nativeWindow)<SUB>2533</SUB>> ]
+"6350" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2538</SUB>> ]
+"6354" [label = <(setSwapInterval,nativeWindow-&gt;setSwapInterval(nativeWindow.get(), 0))<SUB>2539</SUB>> ]
+"6366" [label = <(FIELD_IDENTIFIER,physicalOrientation,physicalOrientation)<SUB>2542</SUB>> ]
+"6370" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_0)<SUB>2543</SUB>> ]
+"6376" [label = <(FIELD_IDENTIFIER,initialPowerMode,initialPowerMode)<SUB>2546</SUB>> ]
+"6378" [label = <(isVirtual,state.isVirtual())<SUB>2546</SUB>> ]
+"6382" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2546</SUB>> ]
+"6387" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>2546</SUB>> ]
+"6394" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>2548</SUB>> ]
+"6399" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createDisplayDevice)<SUB>2548</SUB>> ]
+"6408" [label = <(preallocateBuffers,nativeWindowSurface-&gt;preallocateBuffers())<SUB>2551</SUB>> ]
+"6417" [label = <(FIELD_IDENTIFIER,NATIVE,NATIVE)<SUB>2554</SUB>> ]
+"6423" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>2555</SUB>> ]
+"6426" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasWideColorGamut)<SUB>2556</SUB>> ]
+"6430" [label = <(&lt;operator&gt;.assignment,defaultColorMode = ColorMode::SRGB)<SUB>2557</SUB>> ]
+"6435" [label = <(&lt;operator&gt;.assignment,defaultDataSpace = Dataspace::V0_SRGB)<SUB>2558</SUB>> ]
+"6442" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2560</SUB>> ]
+"6446" [label = <(FIELD_IDENTIFIER,setColorProfile,setColorProfile)<SUB>2560</SUB>> ]
+"6448" [label = <(&lt;operator&gt;.arrayInitializer,{defaultColorMode, defaultDataSpace,\012 RenderIntent::COLORIMETRIC,\012 Dataspace::UNKNOWN})<SUB>2561</SUB>> ]
+"6459" [label = <(isVirtual,state.isVirtual())<SUB>2564</SUB>> ]
+"6464" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>2565</SUB>> ]
+"6468" [label = <(&lt;operator&gt;.assignment,activeConfigId = HwcConfigIndexType(getHwComposer().getActiveConfigIndex(*displayId)))<SUB>2566</SUB>> ]
+"6477" [label = <(setActiveConfig,display-&gt;setActiveConfig(activeConfigId))<SUB>2567</SUB>> ]
+"6485" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>2570</SUB>> ]
+"6488" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2570</SUB>> ]
+"6492" [label = <(FIELD_IDENTIFIER,setProjection,setProjection)<SUB>2571</SUB>> ]
+"6495" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2571</SUB>> ]
+"6498" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2571</SUB>> ]
+"6501" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2571</SUB>> ]
+"6505" [label = <(FIELD_IDENTIFIER,setDisplayName,setDisplayName)<SUB>2572</SUB>> ]
+"6508" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2572</SUB>> ]
+"6186" [label = <(FIELD_IDENTIFIER,getDisplayId,getDisplayId)<SUB>2497</SUB>> ]
+"6226" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2505</SUB>> ]
+"6231" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.connectionType)<SUB>2506</SUB>> ]
+"6234" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;type)<SUB>2506</SUB>> ]
+"6244" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>2509</SUB>> ]
+"6256" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>2513</SUB>> ]
+"6263" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>2513</SUB>> ]
+"6309" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getHdrCapabilities)<SUB>2526</SUB>> ]
+"6312" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2526</SUB>> ]
+"6314" [label = <(&lt;operator&gt;.addressOf,&amp;creationArgs.hdrCapabilities)<SUB>2526</SUB>> ]
+"6319" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.supportedPerFrameMetadata)<SUB>2527</SUB>> ]
+"6322" [label = <(getSupportedPerFrameMetadata,getHwComposer().getSupportedPerFrameMetadata(*displayId))<SUB>2528</SUB>> ]
+"6333" [label = <(getFactory,getFactory())<SUB>2531</SUB>> ]
+"6334" [label = <(FIELD_IDENTIFIER,createNativeWindowSurface,createNativeWindowSurface)<SUB>2531</SUB>> ]
+"6342" [label = <(FIELD_IDENTIFIER,getNativeWindow,getNativeWindow)<SUB>2532</SUB>> ]
+"6352" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2538</SUB>> ]
+"6355" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindow-&gt;setSwapInterval)<SUB>2539</SUB>> ]
+"6358" [label = <(get,nativeWindow.get())<SUB>2539</SUB>> ]
+"6372" [label = <(FIELD_IDENTIFIER,ROTATION_0,ROTATION_0)<SUB>2543</SUB>> ]
+"6379" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2546</SUB>> ]
+"6383" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2546</SUB>> ]
+"6386" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2546</SUB>> ]
+"6388" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2546</SUB>> ]
+"6391" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>2546</SUB>> ]
+"6400" [label = <(getFactory,getFactory())<SUB>2548</SUB>> ]
+"6401" [label = <(FIELD_IDENTIFIER,createDisplayDevice,createDisplayDevice)<SUB>2548</SUB>> ]
+"6409" [label = <(&lt;operator&gt;.indirectFieldAccess,nativeWindowSurface-&gt;preallocateBuffers)<SUB>2551</SUB>> ]
+"6428" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2556</SUB>> ]
+"6432" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::SRGB)<SUB>2557</SUB>> ]
+"6437" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::V0_SRGB)<SUB>2558</SUB>> ]
+"6443" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2560</SUB>> ]
+"6451" [label = <(&lt;operator&gt;.fieldAccess,RenderIntent::COLORIMETRIC)<SUB>2562</SUB>> ]
+"6454" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::UNKNOWN)<SUB>2563</SUB>> ]
+"6460" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2564</SUB>> ]
+"6465" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2565</SUB>> ]
+"6470" [label = <(HwcConfigIndexType,HwcConfigIndexType(getHwComposer().getActiveConfigIndex(*displayId)))<SUB>2566</SUB>> ]
+"6478" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>2567</SUB>> ]
+"6228" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2505</SUB>> ]
+"6233" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>2506</SUB>> ]
+"6236" [label = <(FIELD_IDENTIFIER,type,type)<SUB>2506</SUB>> ]
+"6257" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>2513</SUB>> ]
+"6264" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>2513</SUB>> ]
+"6267" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2513</SUB>> ]
+"6282" [label = <(&lt;operator&gt;.assignment,std::vector&lt;RenderIntent&gt; renderIntents =\012                    getHwComposer().getRenderIntents(*displayId, colorMode))<SUB>2519</SUB>> ]
+"6297" [label = <(emplace,creationArgs.hwcColorModes.emplace(colorMode, renderIntents))<SUB>2521</SUB>> ]
+"6310" [label = <(getHwComposer,getHwComposer())<SUB>2526</SUB>> ]
+"6311" [label = <(FIELD_IDENTIFIER,getHdrCapabilities,getHdrCapabilities)<SUB>2526</SUB>> ]
+"6315" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hdrCapabilities)<SUB>2526</SUB>> ]
+"6321" [label = <(FIELD_IDENTIFIER,supportedPerFrameMetadata,supportedPerFrameMetadata)<SUB>2527</SUB>> ]
+"6323" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getSupportedPerFrameMetadata)<SUB>2528</SUB>> ]
+"6326" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2528</SUB>> ]
+"6357" [label = <(FIELD_IDENTIFIER,setSwapInterval,setSwapInterval)<SUB>2539</SUB>> ]
+"6359" [label = <(&lt;operator&gt;.fieldAccess,nativeWindow.get)<SUB>2539</SUB>> ]
+"6381" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2546</SUB>> ]
+"6411" [label = <(FIELD_IDENTIFIER,preallocateBuffers,preallocateBuffers)<SUB>2551</SUB>> ]
+"6434" [label = <(FIELD_IDENTIFIER,SRGB,SRGB)<SUB>2557</SUB>> ]
+"6439" [label = <(FIELD_IDENTIFIER,V0_SRGB,V0_SRGB)<SUB>2558</SUB>> ]
+"6445" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2560</SUB>> ]
+"6453" [label = <(FIELD_IDENTIFIER,COLORIMETRIC,COLORIMETRIC)<SUB>2562</SUB>> ]
+"6456" [label = <(FIELD_IDENTIFIER,UNKNOWN,UNKNOWN)<SUB>2563</SUB>> ]
+"6462" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2564</SUB>> ]
+"6471" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(*displayId))<SUB>2566</SUB>> ]
+"6480" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>2567</SUB>> ]
+"6258" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2513</SUB>> ]
+"6265" [label = <(getHwComposer,getHwComposer())<SUB>2513</SUB>> ]
+"6266" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>2513</SUB>> ]
+"6274" [label = <(isWideColorMode,isWideColorMode(colorMode))<SUB>2515</SUB>> ]
+"6283" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;RenderIntent&gt; renderIntents)<SUB>2519</SUB>> ]
+"6290" [label = <(getRenderIntents,getHwComposer().getRenderIntents(*displayId, colorMode))<SUB>2520</SUB>> ]
+"6298" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hwcColorModes.emplace)<SUB>2521</SUB>> ]
+"6317" [label = <(FIELD_IDENTIFIER,hdrCapabilities,hdrCapabilities)<SUB>2526</SUB>> ]
+"6324" [label = <(getHwComposer,getHwComposer())<SUB>2528</SUB>> ]
+"6325" [label = <(FIELD_IDENTIFIER,getSupportedPerFrameMetadata,getSupportedPerFrameMetadata)<SUB>2528</SUB>> ]
+"6361" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2539</SUB>> ]
+"6472" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>2566</SUB>> ]
+"6475" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2566</SUB>> ]
+"6260" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2513</SUB>> ]
+"6277" [label = <(&lt;operator&gt;.assignment,creationArgs.hasWideColorGamut = true)<SUB>2516</SUB>> ]
+"6284" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;RenderIntent)<SUB>2519</SUB>> ]
+"6291" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getRenderIntents)<SUB>2520</SUB>> ]
+"6294" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2520</SUB>> ]
+"6299" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hwcColorModes)<SUB>2521</SUB>> ]
+"6302" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2521</SUB>> ]
+"6473" [label = <(getHwComposer,getHwComposer())<SUB>2566</SUB>> ]
+"6474" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>2566</SUB>> ]
+"6278" [label = <(&lt;operator&gt;.fieldAccess,creationArgs.hasWideColorGamut)<SUB>2516</SUB>> ]
+"6285" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2519</SUB>> ]
+"6292" [label = <(getHwComposer,getHwComposer())<SUB>2520</SUB>> ]
+"6293" [label = <(FIELD_IDENTIFIER,getRenderIntents,getRenderIntents)<SUB>2520</SUB>> ]
+"6301" [label = <(FIELD_IDENTIFIER,hwcColorModes,hwcColorModes)<SUB>2521</SUB>> ]
+"6280" [label = <(FIELD_IDENTIFIER,hasWideColorGamut,hasWideColorGamut)<SUB>2516</SUB>> ]
+"6287" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2519</SUB>> ]
+"6173" [label = <(METHOD,setupNewDisplayDeviceInternal)<SUB>2491</SUB>> ]
+"6511" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>2491</SUB>> ]
+  "6181" -> "6188" 
+  "6188" -> "6195" 
+  "6192" -> "6202" 
+  "6199" -> "6209" 
+  "6206" -> "6214" 
+  "6211" -> "6219" 
+  "6216" -> "6228" 
+  "6238" -> "6248" 
+  "6245" -> "6251" 
+  "6329" -> "6342" 
+  "6337" -> "6346" 
+  "6343" -> "6352" 
+  "6363" -> "6376" 
+  "6373" -> "6394" 
+  "6392" -> "6404" 
+  "6413" -> "6423" 
+  "6419" -> "6428" 
+  "6440" -> "6462" 
+  "6482" -> "6492" 
+  "6489" -> "6505" 
+  "6502" -> "6509" 
+  "6509" -> "6511" 
+  "6183" -> "6181" 
+  "6193" -> "6198" 
+  "6196" -> "6192" 
+  "6200" -> "6205" 
+  "6203" -> "6199" 
+  "6207" -> "6206" 
+  "6212" -> "6211" 
+  "6217" -> "6216" 
+  "6240" -> "6238" 
+  "6246" -> "6245" 
+  "6251" -> "6260" 
+  "6251" -> "6310" 
+  "6251" -> "6333" 
+  "6331" -> "6329" 
+  "6339" -> "6337" 
+  "6344" -> "6343" 
+  "6349" -> "6357" 
+  "6349" -> "6366" 
+  "6364" -> "6367" 
+  "6364" -> "6372" 
+  "6367" -> "6363" 
+  "6374" -> "6381" 
+  "6377" -> "6373" 
+  "6393" -> "6400" 
+  "6398" -> "6392" 
+  "6404" -> "6411" 
+  "6404" -> "6417" 
+  "6415" -> "6413" 
+  "6421" -> "6419" 
+  "6425" -> "6434" 
+  "6425" -> "6445" 
+  "6441" -> "6453" 
+  "6447" -> "6440" 
+  "6458" -> "6465" 
+  "6458" -> "6485" 
+  "6483" -> "6488" 
+  "6486" -> "6482" 
+  "6490" -> "6495" 
+  "6493" -> "6498" 
+  "6496" -> "6501" 
+  "6499" -> "6489" 
+  "6503" -> "6508" 
+  "6506" -> "6502" 
+  "6184" -> "6183" 
+  "6195" -> "6193" 
   "6198" -> "6196" 
-  "6203" -> "6201" 
-  "6208" -> "6217" 
-  "6208" -> "6224" 
-  "6208" -> "6228" 
-  "6214" -> "6224" 
-  "6214" -> "6228" 
+  "6202" -> "6200" 
+  "6205" -> "6203" 
+  "6209" -> "6207" 
+  "6214" -> "6212" 
+  "6219" -> "6217" 
+  "6224" -> "6233" 
+  "6224" -> "6240" 
+  "6224" -> "6244" 
+  "6230" -> "6240" 
+  "6230" -> "6244" 
+  "6242" -> "6240" 
+  "6248" -> "6246" 
+  "6255" -> "6274" 
+  "6308" -> "6321" 
+  "6318" -> "6333" 
+  "6332" -> "6331" 
+  "6340" -> "6339" 
+  "6346" -> "6344" 
+  "6350" -> "6349" 
+  "6354" -> "6366" 
+  "6366" -> "6364" 
+  "6370" -> "6367" 
+  "6376" -> "6374" 
+  "6378" -> "6383" 
+  "6378" -> "6388" 
+  "6382" -> "6377" 
+  "6387" -> "6377" 
+  "6394" -> "6393" 
+  "6399" -> "6398" 
+  "6408" -> "6417" 
+  "6417" -> "6415" 
+  "6423" -> "6421" 
+  "6426" -> "6425" 
+  "6430" -> "6439" 
+  "6435" -> "6445" 
+  "6442" -> "6446" 
+  "6446" -> "6441" 
+  "6448" -> "6447" 
+  "6459" -> "6458" 
+  "6464" -> "6473" 
+  "6468" -> "6480" 
+  "6477" -> "6485" 
+  "6485" -> "6483" 
+  "6488" -> "6486" 
+  "6492" -> "6490" 
+  "6495" -> "6493" 
+  "6498" -> "6496" 
+  "6501" -> "6499" 
+  "6505" -> "6503" 
+  "6508" -> "6506" 
+  "6186" -> "6184" 
   "6226" -> "6224" 
-  "6232" -> "6230" 
-  "6239" -> "6258" 
-  "6292" -> "6305" 
-  "6302" -> "6317" 
-  "6316" -> "6315" 
-  "6324" -> "6323" 
-  "6330" -> "6328" 
-  "6334" -> "6333" 
-  "6338" -> "6350" 
-  "6350" -> "6348" 
-  "6354" -> "6351" 
-  "6360" -> "6358" 
-  "6362" -> "6367" 
-  "6362" -> "6372" 
-  "6366" -> "6361" 
-  "6371" -> "6361" 
-  "6378" -> "6377" 
-  "6383" -> "6382" 
-  "6392" -> "6401" 
+  "6231" -> "6236" 
+  "6234" -> "6230" 
+  "6244" -> "6242" 
+  "6256" -> "6265" 
+  "6263" -> "6255" 
+  "6309" -> "6312" 
+  "6312" -> "6317" 
+  "6314" -> "6308" 
+  "6319" -> "6324" 
+  "6322" -> "6318" 
+  "6333" -> "6334" 
+  "6334" -> "6332" 
+  "6342" -> "6340" 
+  "6352" -> "6350" 
+  "6355" -> "6361" 
+  "6358" -> "6354" 
+  "6372" -> "6370" 
+  "6379" -> "6378" 
+  "6383" -> "6386" 
+  "6386" -> "6382" 
+  "6388" -> "6391" 
+  "6391" -> "6387" 
+  "6400" -> "6401" 
   "6401" -> "6399" 
-  "6407" -> "6405" 
-  "6410" -> "6409" 
-  "6414" -> "6423" 
-  "6419" -> "6429" 
-  "6426" -> "6430" 
-  "6430" -> "6425" 
-  "6432" -> "6431" 
+  "6409" -> "6408" 
+  "6428" -> "6426" 
+  "6432" -> "6430" 
+  "6437" -> "6435" 
   "6443" -> "6442" 
-  "6448" -> "6457" 
-  "6452" -> "6464" 
-  "6461" -> "6469" 
-  "6469" -> "6467" 
-  "6472" -> "6470" 
-  "6476" -> "6474" 
-  "6479" -> "6477" 
-  "6482" -> "6480" 
-  "6485" -> "6483" 
-  "6489" -> "6487" 
-  "6492" -> "6490" 
-  "6170" -> "6168" 
-  "6210" -> "6208" 
-  "6215" -> "6220" 
-  "6218" -> "6214" 
+  "6451" -> "6456" 
+  "6454" -> "6448" 
+  "6460" -> "6459" 
+  "6465" -> "6464" 
+  "6470" -> "6468" 
+  "6478" -> "6477" 
   "6228" -> "6226" 
-  "6240" -> "6249" 
-  "6247" -> "6239" 
-  "6293" -> "6296" 
-  "6296" -> "6301" 
-  "6298" -> "6292" 
-  "6303" -> "6308" 
-  "6306" -> "6302" 
-  "6317" -> "6318" 
-  "6318" -> "6316" 
-  "6326" -> "6324" 
-  "6336" -> "6334" 
-  "6339" -> "6345" 
-  "6342" -> "6338" 
-  "6356" -> "6354" 
-  "6363" -> "6362" 
-  "6367" -> "6370" 
-  "6370" -> "6366" 
-  "6372" -> "6375" 
-  "6375" -> "6371" 
-  "6384" -> "6385" 
-  "6385" -> "6383" 
-  "6393" -> "6392" 
-  "6412" -> "6410" 
-  "6416" -> "6414" 
-  "6421" -> "6419" 
-  "6427" -> "6426" 
-  "6435" -> "6440" 
-  "6438" -> "6432" 
-  "6444" -> "6443" 
-  "6449" -> "6448" 
-  "6454" -> "6452" 
-  "6462" -> "6461" 
-  "6212" -> "6210" 
-  "6217" -> "6215" 
-  "6220" -> "6218" 
-  "6241" -> "6240" 
-  "6248" -> "6251" 
-  "6251" -> "6247" 
-  "6266" -> "6285" 
-  "6281" -> "6258" 
-  "6281" -> "6294" 
-  "6281" -> "6317" 
-  "6294" -> "6295" 
-  "6295" -> "6293" 
-  "6299" -> "6298" 
-  "6305" -> "6303" 
-  "6307" -> "6310" 
-  "6310" -> "6306" 
-  "6341" -> "6339" 
-  "6343" -> "6342" 
-  "6365" -> "6363" 
-  "6395" -> "6393" 
-  "6418" -> "6416" 
-  "6423" -> "6421" 
-  "6429" -> "6427" 
-  "6437" -> "6435" 
-  "6440" -> "6438" 
-  "6446" -> "6444" 
-  "6455" -> "6454" 
-  "6464" -> "6462" 
-  "6242" -> "6241" 
-  "6249" -> "6250" 
-  "6250" -> "6248" 
-  "6258" -> "6264" 
-  "6258" -> "6271" 
-  "6267" -> "6276" 
-  "6274" -> "6266" 
-  "6282" -> "6281" 
+  "6233" -> "6231" 
+  "6236" -> "6234" 
+  "6257" -> "6256" 
+  "6264" -> "6267" 
+  "6267" -> "6263" 
+  "6282" -> "6301" 
+  "6297" -> "6274" 
+  "6297" -> "6310" 
+  "6297" -> "6333" 
+  "6310" -> "6311" 
+  "6311" -> "6309" 
+  "6315" -> "6314" 
+  "6321" -> "6319" 
+  "6323" -> "6326" 
+  "6326" -> "6322" 
+  "6357" -> "6355" 
+  "6359" -> "6358" 
+  "6381" -> "6379" 
+  "6411" -> "6409" 
+  "6434" -> "6432" 
+  "6439" -> "6437" 
+  "6445" -> "6443" 
+  "6453" -> "6451" 
+  "6456" -> "6454" 
+  "6462" -> "6460" 
+  "6471" -> "6470" 
+  "6480" -> "6478" 
+  "6258" -> "6257" 
+  "6265" -> "6266" 
+  "6266" -> "6264" 
+  "6274" -> "6280" 
+  "6274" -> "6287" 
+  "6283" -> "6292" 
+  "6290" -> "6282" 
+  "6298" -> "6297" 
+  "6317" -> "6315" 
+  "6324" -> "6325" 
+  "6325" -> "6323" 
+  "6361" -> "6359" 
+  "6472" -> "6475" 
+  "6475" -> "6471" 
+  "6260" -> "6258" 
+  "6277" -> "6287" 
+  "6284" -> "6283" 
+  "6291" -> "6294" 
+  "6294" -> "6290" 
+  "6299" -> "6302" 
+  "6302" -> "6298" 
+  "6473" -> "6474" 
+  "6474" -> "6472" 
+  "6278" -> "6277" 
+  "6285" -> "6284" 
+  "6292" -> "6293" 
+  "6293" -> "6291" 
   "6301" -> "6299" 
-  "6308" -> "6309" 
-  "6309" -> "6307" 
-  "6345" -> "6343" 
-  "6456" -> "6459" 
-  "6459" -> "6455" 
-  "6244" -> "6242" 
-  "6261" -> "6271" 
-  "6268" -> "6267" 
-  "6275" -> "6278" 
-  "6278" -> "6274" 
-  "6283" -> "6286" 
-  "6286" -> "6282" 
-  "6457" -> "6458" 
-  "6458" -> "6456" 
-  "6262" -> "6261" 
-  "6269" -> "6268" 
-  "6276" -> "6277" 
-  "6277" -> "6275" 
-  "6285" -> "6283" 
-  "6264" -> "6262" 
-  "6271" -> "6269" 
-  "6157" -> "6170" 
+  "6280" -> "6278" 
+  "6287" -> "6285" 
+  "6173" -> "6186" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/166-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/166-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/166-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/166-cfg.dot	2023-06-07 19:33:06.617398410 +0330
@@ -1,416 +1,416 @@
 digraph "processDisplayAdded" {  
-"6502" [label = <(&lt;operator&gt;.assignment,width = 0)<SUB>2580</SUB>> ]
-"6506" [label = <(&lt;operator&gt;.assignment,height = 0)<SUB>2581</SUB>> ]
-"6510" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_UNKNOWN))<SUB>2582</SUB>> ]
-"6643" [label = <(setPixels,builder.setPixels(ui::Size(width, height)))<SUB>2609</SUB>> ]
-"6653" [label = <(setPixelFormat,builder.setPixelFormat(pixelFormat))<SUB>2610</SUB>> ]
-"6658" [label = <(setIsSecure,builder.setIsSecure(state.isSecure))<SUB>2611</SUB>> ]
-"6665" [label = <(setLayerStackId,builder.setLayerStackId(state.layerStack))<SUB>2612</SUB>> ]
-"6672" [label = <(setPowerAdvisor,builder.setPowerAdvisor(&amp;mPowerAdvisor))<SUB>2613</SUB>> ]
-"6678" [label = <(setUseHwcVirtualDisplays,builder.setUseHwcVirtualDisplays(mUseHwcVirtualDisplays || getHwComposer().isUsingVrComposer()))<SUB>2614</SUB>> ]
-"6688" [label = <(setName,builder.setName(state.displayName))<SUB>2615</SUB>> ]
-"6696" [label = <(&lt;operator&gt;.assignment,compositionDisplay = getCompositionEngine().createDisplay(builder.build()))<SUB>2616</SUB>> ]
-"6706" [label = <(&lt;operator&gt;.greaterThan,sp&lt;compositionengine::DisplaySurface&gt; displaySurface)<SUB>2618</SUB>> ]
-"6713" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferProducer&gt; producer)<SUB>2619</SUB>> ]
-"6718" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferProducer&gt; bqProducer)<SUB>2620</SUB>> ]
-"6723" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferConsumer&gt; bqConsumer)<SUB>2621</SUB>> ]
-"6728" [label = <(createBufferQueue,getFactory().createBufferQueue(&amp;bqProducer, &amp;bqConsumer, /*consumerIsSurfaceFlinger =*/false))<SUB>2622</SUB>> ]
-"6737" [label = <(&lt;operator&gt;.assignment,std::optional&lt;DisplayId&gt; displayId = compositionDisplay-&gt;getId())<SUB>2624</SUB>> ]
-"6810" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displaySurface))<SUB>2645</SUB>> ]
-"6814" [label = <(&lt;operator&gt;.assignment,display = setupNewDisplayDeviceInternal(displayToken, compositionDisplay, state,\012                                                       displaySurface, producer))<SUB>2646</SUB>> ]
-"6822" [label = <(emplace,mDisplays.emplace(displayToken, display))<SUB>2648</SUB>> ]
-"6512" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_UNKNOWN))<SUB>2582</SUB>> ]
-"6516" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2583</SUB>> ]
-"6644" [label = <(&lt;operator&gt;.fieldAccess,builder.setPixels)<SUB>2609</SUB>> ]
-"6647" [label = <(ui::Size,ui::Size(width, height))<SUB>2609</SUB>> ]
-"6654" [label = <(&lt;operator&gt;.fieldAccess,builder.setPixelFormat)<SUB>2610</SUB>> ]
-"6659" [label = <(&lt;operator&gt;.fieldAccess,builder.setIsSecure)<SUB>2611</SUB>> ]
-"6662" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2611</SUB>> ]
-"6666" [label = <(&lt;operator&gt;.fieldAccess,builder.setLayerStackId)<SUB>2612</SUB>> ]
-"6669" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>2612</SUB>> ]
-"6673" [label = <(&lt;operator&gt;.fieldAccess,builder.setPowerAdvisor)<SUB>2613</SUB>> ]
-"6676" [label = <(&lt;operator&gt;.addressOf,&amp;mPowerAdvisor)<SUB>2613</SUB>> ]
-"6679" [label = <(&lt;operator&gt;.fieldAccess,builder.setUseHwcVirtualDisplays)<SUB>2614</SUB>> ]
-"6682" [label = <(&lt;operator&gt;.logicalOr,mUseHwcVirtualDisplays || getHwComposer().isUsingVrComposer())<SUB>2614</SUB>> ]
-"6689" [label = <(&lt;operator&gt;.fieldAccess,builder.setName)<SUB>2615</SUB>> ]
-"6692" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2615</SUB>> ]
-"6698" [label = <(createDisplay,getCompositionEngine().createDisplay(builder.build()))<SUB>2616</SUB>> ]
-"6707" [label = <(&lt;operator&gt;.lessThan,sp&lt;compositionengine::DisplaySurface)<SUB>2618</SUB>> ]
-"6714" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferProducer)<SUB>2619</SUB>> ]
-"6719" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferProducer)<SUB>2620</SUB>> ]
-"6724" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferConsumer)<SUB>2621</SUB>> ]
-"6729" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferQueue)<SUB>2622</SUB>> ]
-"6732" [label = <(&lt;operator&gt;.addressOf,&amp;bqProducer)<SUB>2622</SUB>> ]
-"6734" [label = <(&lt;operator&gt;.addressOf,&amp;bqConsumer)<SUB>2622</SUB>> ]
-"6738" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;DisplayId&gt; displayId)<SUB>2624</SUB>> ]
-"6745" [label = <(getId,compositionDisplay-&gt;getId())<SUB>2624</SUB>> ]
-"6750" [label = <(isVirtual,state.isVirtual())<SUB>2626</SUB>> ]
-"6811" [label = <(&lt;operator&gt;.logicalNot,!displaySurface)<SUB>2645</SUB>> ]
-"6816" [label = <(setupNewDisplayDeviceInternal,setupNewDisplayDeviceInternal(displayToken, compositionDisplay, state,\012                                                       displaySurface, producer))<SUB>2646</SUB>> ]
-"6823" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.emplace)<SUB>2648</SUB>> ]
-"6829" [label = <(&lt;operator&gt;.logicalNot,!state.isVirtual())<SUB>2649</SUB>> ]
-"6844" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2654</SUB>> ]
-"6513" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2582</SUB>> ]
-"6518" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2583</SUB>> ]
-"6521" [label = <(&lt;operator&gt;.assignment,&amp; activeConfig =\012                getCompositionEngine().getHwComposer().getActiveConfig(state.physical-&gt;id))<SUB>2584</SUB>> ]
-"6535" [label = <(&lt;operator&gt;.assignment,width = activeConfig-&gt;getWidth())<SUB>2586</SUB>> ]
-"6541" [label = <(&lt;operator&gt;.assignment,height = activeConfig-&gt;getHeight())<SUB>2587</SUB>> ]
-"6547" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_RGBA_8888))<SUB>2588</SUB>> ]
-"6626" [label = <(&lt;operator&gt;.assignment,&amp; physical = state.physical)<SUB>2606</SUB>> ]
-"6632" [label = <(setPhysical,builder.setPhysical({physical-&gt;id, physical-&gt;type}))<SUB>2607</SUB>> ]
-"6646" [label = <(FIELD_IDENTIFIER,setPixels,setPixels)<SUB>2609</SUB>> ]
-"6648" [label = <(&lt;operator&gt;.fieldAccess,ui::Size)<SUB>2609</SUB>> ]
-"6656" [label = <(FIELD_IDENTIFIER,setPixelFormat,setPixelFormat)<SUB>2610</SUB>> ]
-"6661" [label = <(FIELD_IDENTIFIER,setIsSecure,setIsSecure)<SUB>2611</SUB>> ]
-"6664" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2611</SUB>> ]
-"6668" [label = <(FIELD_IDENTIFIER,setLayerStackId,setLayerStackId)<SUB>2612</SUB>> ]
-"6671" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2612</SUB>> ]
-"6675" [label = <(FIELD_IDENTIFIER,setPowerAdvisor,setPowerAdvisor)<SUB>2613</SUB>> ]
-"6681" [label = <(FIELD_IDENTIFIER,setUseHwcVirtualDisplays,setUseHwcVirtualDisplays)<SUB>2614</SUB>> ]
-"6684" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>2614</SUB>> ]
-"6691" [label = <(FIELD_IDENTIFIER,setName,setName)<SUB>2615</SUB>> ]
-"6694" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2615</SUB>> ]
-"6699" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().createDisplay)<SUB>2616</SUB>> ]
-"6702" [label = <(build,builder.build())<SUB>2616</SUB>> ]
-"6709" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::DisplaySurface)<SUB>2618</SUB>> ]
-"6730" [label = <(getFactory,getFactory())<SUB>2622</SUB>> ]
-"6731" [label = <(FIELD_IDENTIFIER,createBufferQueue,createBufferQueue)<SUB>2622</SUB>> ]
-"6739" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;DisplayId)<SUB>2624</SUB>> ]
-"6746" [label = <(&lt;operator&gt;.indirectFieldAccess,compositionDisplay-&gt;getId)<SUB>2624</SUB>> ]
-"6751" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2626</SUB>> ]
-"6755" [label = <(&lt;operator&gt;.assignment,sp&lt;VirtualDisplaySurface&gt; vds =\012 new VirtualDisplaySurface(getHwComposer(), displayId, state.surface, bqProducer,\012                                          bqConsumer, state.displayName))<SUB>2627</SUB>> ]
-"6773" [label = <(&lt;operator&gt;.assignment,displaySurface = vds)<SUB>2631</SUB>> ]
-"6776" [label = <(&lt;operator&gt;.assignment,producer = vds)<SUB>2632</SUB>> ]
-"6825" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2648</SUB>> ]
-"6830" [label = <(isVirtual,state.isVirtual())<SUB>2649</SUB>> ]
-"6835" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>2650</SUB>> ]
-"6838" [label = <(dispatchDisplayHotplugEvent,dispatchDisplayHotplugEvent(displayId-&gt;value, true))<SUB>2651</SUB>> ]
-"6845" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2654</SUB>> ]
-"6849" [label = <(onPrimaryDisplayAreaChanged,mScheduler-&gt;onPrimaryDisplayAreaChanged(display-&gt;getWidth() * display-&gt;getHeight()))<SUB>2655</SUB>> ]
-"6523" [label = <(getActiveConfig,getCompositionEngine().getHwComposer().getActiveConfig(state.physical-&gt;id))<SUB>2585</SUB>> ]
-"6537" [label = <(getWidth,activeConfig-&gt;getWidth())<SUB>2586</SUB>> ]
-"6543" [label = <(getHeight,activeConfig-&gt;getHeight())<SUB>2587</SUB>> ]
-"6549" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_RGBA_8888))<SUB>2588</SUB>> ]
-"6628" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2606</SUB>> ]
-"6633" [label = <(&lt;operator&gt;.fieldAccess,builder.setPhysical)<SUB>2607</SUB>> ]
-"6636" [label = <(&lt;operator&gt;.arrayInitializer,{physical-&gt;id, physical-&gt;type})<SUB>2607</SUB>> ]
-"6650" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>2609</SUB>> ]
-"6685" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>2614</SUB>> ]
-"6700" [label = <(getCompositionEngine,getCompositionEngine())<SUB>2616</SUB>> ]
-"6701" [label = <(FIELD_IDENTIFIER,createDisplay,createDisplay)<SUB>2616</SUB>> ]
-"6703" [label = <(&lt;operator&gt;.fieldAccess,builder.build)<SUB>2616</SUB>> ]
-"6711" [label = <(FIELD_IDENTIFIER,DisplaySurface,DisplaySurface)<SUB>2618</SUB>> ]
-"6740" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>2624</SUB>> ]
-"6748" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2624</SUB>> ]
-"6753" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2626</SUB>> ]
-"6756" [label = <(&lt;operator&gt;.greaterThan,sp&lt;VirtualDisplaySurface&gt; vds)<SUB>2627</SUB>> ]
-"6761" [label = <(&lt;operator&gt;.new,new VirtualDisplaySurface(getHwComposer(), displayId, state.surface, bqProducer,\012                                          bqConsumer, state.displayName))<SUB>2628</SUB>> ]
-"6781" [label = <(ALOGE_IF,ALOGE_IF(state.surface != nullptr,\012 &quot;adding a supported display, but rendering &quot;\012 &quot;surface is provided (%p), ignoring it&quot;,\012                 state.surface.get()))<SUB>2634</SUB>> ]
-"6794" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>2639</SUB>> ]
-"6797" [label = <(&lt;operator&gt;.assignment,displaySurface = new FramebufferSurface(getHwComposer(), *displayId, bqConsumer,\012                                                maxGraphicsWidth, maxGraphicsHeight))<SUB>2640</SUB>> ]
-"6807" [label = <(&lt;operator&gt;.assignment,producer = bqProducer)<SUB>2642</SUB>> ]
-"6831" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2649</SUB>> ]
-"6836" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2650</SUB>> ]
-"6839" [label = <(&lt;operator&gt;.indirectFieldAccess,displayId-&gt;value)<SUB>2651</SUB>> ]
-"6847" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2654</SUB>> ]
-"6850" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayAreaChanged)<SUB>2655</SUB>> ]
-"6853" [label = <(&lt;operator&gt;.multiplication,display-&gt;getWidth() * display-&gt;getHeight())<SUB>2655</SUB>> ]
-"6524" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().getHwComposer().getActiveConfig)<SUB>2585</SUB>> ]
-"6530" [label = <(&lt;operator&gt;.indirectFieldAccess,state.physical-&gt;id)<SUB>2585</SUB>> ]
-"6538" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getWidth)<SUB>2586</SUB>> ]
-"6544" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getHeight)<SUB>2587</SUB>> ]
-"6550" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2588</SUB>> ]
-"6555" [label = <(&lt;operator&gt;.notEquals,state.surface != nullptr)<SUB>2589</SUB>> ]
-"6630" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2606</SUB>> ]
-"6635" [label = <(FIELD_IDENTIFIER,setPhysical,setPhysical)<SUB>2607</SUB>> ]
-"6637" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;id)<SUB>2607</SUB>> ]
-"6640" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;type)<SUB>2607</SUB>> ]
-"6686" [label = <(getHwComposer,getHwComposer())<SUB>2614</SUB>> ]
-"6687" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>2614</SUB>> ]
-"6705" [label = <(FIELD_IDENTIFIER,build,build)<SUB>2616</SUB>> ]
-"6742" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>2624</SUB>> ]
-"6757" [label = <(&lt;operator&gt;.lessThan,sp&lt;VirtualDisplaySurface)<SUB>2627</SUB>> ]
-"6763" [label = <(getHwComposer,getHwComposer())<SUB>2628</SUB>> ]
-"6765" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2628</SUB>> ]
-"6770" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2629</SUB>> ]
-"6782" [label = <(&lt;operator&gt;.notEquals,state.surface != nullptr)<SUB>2634</SUB>> ]
-"6788" [label = <(get,state.surface.get())<SUB>2637</SUB>> ]
-"6795" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2639</SUB>> ]
-"6799" [label = <(&lt;operator&gt;.new,new FramebufferSurface(getHwComposer(), *displayId, bqConsumer,\012                                                maxGraphicsWidth, maxGraphicsHeight))<SUB>2640</SUB>> ]
-"6833" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2649</SUB>> ]
-"6841" [label = <(FIELD_IDENTIFIER,value,value)<SUB>2651</SUB>> ]
-"6852" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayAreaChanged,onPrimaryDisplayAreaChanged)<SUB>2655</SUB>> ]
-"6854" [label = <(getWidth,display-&gt;getWidth())<SUB>2655</SUB>> ]
-"6858" [label = <(getHeight,display-&gt;getHeight())<SUB>2655</SUB>> ]
-"6525" [label = <(getHwComposer,getCompositionEngine().getHwComposer())<SUB>2585</SUB>> ]
-"6529" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>2585</SUB>> ]
-"6531" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2585</SUB>> ]
-"6534" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2585</SUB>> ]
-"6540" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>2586</SUB>> ]
-"6546" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>2587</SUB>> ]
-"6556" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2589</SUB>> ]
-"6562" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_WIDTH, &amp;width))<SUB>2590</SUB>> ]
-"6573" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query width (%d)&quot;, status))<SUB>2591</SUB>> ]
-"6579" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_HEIGHT, &amp;height))<SUB>2592</SUB>> ]
-"6590" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query height (%d)&quot;, status))<SUB>2593</SUB>> ]
-"6597" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_FORMAT, &amp;intPixelFormat))<SUB>2595</SUB>> ]
-"6608" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query format (%d)&quot;, status))<SUB>2596</SUB>> ]
-"6614" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(intPixelFormat))<SUB>2597</SUB>> ]
-"6639" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2607</SUB>> ]
-"6642" [label = <(FIELD_IDENTIFIER,type,type)<SUB>2607</SUB>> ]
-"6767" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2628</SUB>> ]
-"6772" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2629</SUB>> ]
-"6783" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2634</SUB>> ]
-"6789" [label = <(&lt;operator&gt;.fieldAccess,state.surface.get)<SUB>2637</SUB>> ]
-"6801" [label = <(getHwComposer,getHwComposer())<SUB>2640</SUB>> ]
-"6802" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2640</SUB>> ]
-"6855" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getWidth)<SUB>2655</SUB>> ]
-"6859" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getHeight)<SUB>2655</SUB>> ]
-"6526" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().getHwComposer)<SUB>2585</SUB>> ]
-"6533" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2585</SUB>> ]
-"6558" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2589</SUB>> ]
-"6564" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_WIDTH, &amp;width))<SUB>2590</SUB>> ]
-"6574" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2591</SUB>> ]
-"6581" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_HEIGHT, &amp;height))<SUB>2592</SUB>> ]
-"6591" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2593</SUB>> ]
-"6599" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_FORMAT, &amp;intPixelFormat))<SUB>2595</SUB>> ]
-"6609" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2596</SUB>> ]
-"6616" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(intPixelFormat))<SUB>2597</SUB>> ]
-"6621" [label = <(RETURN,return;,return;)<SUB>2602</SUB>> ]
-"6785" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2634</SUB>> ]
-"6790" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2637</SUB>> ]
-"6793" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2637</SUB>> ]
-"6857" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>2655</SUB>> ]
-"6861" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>2655</SUB>> ]
-"6527" [label = <(getCompositionEngine,getCompositionEngine())<SUB>2585</SUB>> ]
-"6528" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>2585</SUB>> ]
-"6565" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2590</SUB>> ]
-"6571" [label = <(&lt;operator&gt;.addressOf,&amp;width)<SUB>2590</SUB>> ]
-"6582" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2592</SUB>> ]
-"6588" [label = <(&lt;operator&gt;.addressOf,&amp;height)<SUB>2592</SUB>> ]
-"6600" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2595</SUB>> ]
-"6606" [label = <(&lt;operator&gt;.addressOf,&amp;intPixelFormat)<SUB>2595</SUB>> ]
-"6617" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2597</SUB>> ]
-"6792" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2637</SUB>> ]
-"6566" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2590</SUB>> ]
-"6569" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2590</SUB>> ]
-"6583" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2592</SUB>> ]
-"6586" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2592</SUB>> ]
-"6601" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2595</SUB>> ]
-"6604" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2595</SUB>> ]
-"6568" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2590</SUB>> ]
-"6585" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2592</SUB>> ]
-"6603" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2595</SUB>> ]
-"6497" [label = <(METHOD,processDisplayAdded)<SUB>2578</SUB>> ]
-"6862" [label = <(METHOD_RETURN,void)<SUB>2578</SUB>> ]
-  "6502" -> "6506" 
-  "6506" -> "6513" 
-  "6510" -> "6518" 
-  "6643" -> "6656" 
-  "6653" -> "6661" 
-  "6658" -> "6668" 
-  "6665" -> "6675" 
-  "6672" -> "6681" 
-  "6678" -> "6691" 
-  "6688" -> "6700" 
-  "6696" -> "6711" 
-  "6706" -> "6714" 
-  "6713" -> "6719" 
-  "6718" -> "6724" 
-  "6723" -> "6730" 
-  "6728" -> "6742" 
-  "6737" -> "6753" 
-  "6810" -> "6816" 
-  "6814" -> "6825" 
-  "6822" -> "6833" 
-  "6512" -> "6510" 
-  "6516" -> "6527" 
-  "6516" -> "6558" 
-  "6644" -> "6650" 
-  "6647" -> "6643" 
-  "6654" -> "6653" 
-  "6659" -> "6664" 
-  "6662" -> "6658" 
-  "6666" -> "6671" 
-  "6669" -> "6665" 
-  "6673" -> "6676" 
-  "6676" -> "6672" 
-  "6679" -> "6686" 
-  "6679" -> "6682" 
-  "6682" -> "6678" 
-  "6689" -> "6694" 
+"6518" [label = <(&lt;operator&gt;.assignment,width = 0)<SUB>2579</SUB>> ]
+"6522" [label = <(&lt;operator&gt;.assignment,height = 0)<SUB>2580</SUB>> ]
+"6526" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_UNKNOWN))<SUB>2581</SUB>> ]
+"6659" [label = <(setPixels,builder.setPixels(ui::Size(width, height)))<SUB>2608</SUB>> ]
+"6669" [label = <(setPixelFormat,builder.setPixelFormat(pixelFormat))<SUB>2609</SUB>> ]
+"6674" [label = <(setIsSecure,builder.setIsSecure(state.isSecure))<SUB>2610</SUB>> ]
+"6681" [label = <(setLayerStackId,builder.setLayerStackId(state.layerStack))<SUB>2611</SUB>> ]
+"6688" [label = <(setPowerAdvisor,builder.setPowerAdvisor(&amp;mPowerAdvisor))<SUB>2612</SUB>> ]
+"6694" [label = <(setUseHwcVirtualDisplays,builder.setUseHwcVirtualDisplays(mUseHwcVirtualDisplays || getHwComposer().isUsingVrComposer()))<SUB>2613</SUB>> ]
+"6704" [label = <(setName,builder.setName(state.displayName))<SUB>2614</SUB>> ]
+"6712" [label = <(&lt;operator&gt;.assignment,compositionDisplay = getCompositionEngine().createDisplay(builder.build()))<SUB>2615</SUB>> ]
+"6722" [label = <(&lt;operator&gt;.greaterThan,sp&lt;compositionengine::DisplaySurface&gt; displaySurface)<SUB>2617</SUB>> ]
+"6729" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferProducer&gt; producer)<SUB>2618</SUB>> ]
+"6734" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferProducer&gt; bqProducer)<SUB>2619</SUB>> ]
+"6739" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IGraphicBufferConsumer&gt; bqConsumer)<SUB>2620</SUB>> ]
+"6744" [label = <(createBufferQueue,getFactory().createBufferQueue(&amp;bqProducer, &amp;bqConsumer, /*consumerIsSurfaceFlinger =*/false))<SUB>2621</SUB>> ]
+"6753" [label = <(&lt;operator&gt;.assignment,std::optional&lt;DisplayId&gt; displayId = compositionDisplay-&gt;getId())<SUB>2623</SUB>> ]
+"6826" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displaySurface))<SUB>2644</SUB>> ]
+"6830" [label = <(&lt;operator&gt;.assignment,display = setupNewDisplayDeviceInternal(displayToken, compositionDisplay, state,\012                                                       displaySurface, producer))<SUB>2645</SUB>> ]
+"6838" [label = <(emplace,mDisplays.emplace(displayToken, display))<SUB>2647</SUB>> ]
+"6528" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_UNKNOWN))<SUB>2581</SUB>> ]
+"6532" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2582</SUB>> ]
+"6660" [label = <(&lt;operator&gt;.fieldAccess,builder.setPixels)<SUB>2608</SUB>> ]
+"6663" [label = <(ui::Size,ui::Size(width, height))<SUB>2608</SUB>> ]
+"6670" [label = <(&lt;operator&gt;.fieldAccess,builder.setPixelFormat)<SUB>2609</SUB>> ]
+"6675" [label = <(&lt;operator&gt;.fieldAccess,builder.setIsSecure)<SUB>2610</SUB>> ]
+"6678" [label = <(&lt;operator&gt;.fieldAccess,state.isSecure)<SUB>2610</SUB>> ]
+"6682" [label = <(&lt;operator&gt;.fieldAccess,builder.setLayerStackId)<SUB>2611</SUB>> ]
+"6685" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>2611</SUB>> ]
+"6689" [label = <(&lt;operator&gt;.fieldAccess,builder.setPowerAdvisor)<SUB>2612</SUB>> ]
+"6692" [label = <(&lt;operator&gt;.addressOf,&amp;mPowerAdvisor)<SUB>2612</SUB>> ]
+"6695" [label = <(&lt;operator&gt;.fieldAccess,builder.setUseHwcVirtualDisplays)<SUB>2613</SUB>> ]
+"6698" [label = <(&lt;operator&gt;.logicalOr,mUseHwcVirtualDisplays || getHwComposer().isUsingVrComposer())<SUB>2613</SUB>> ]
+"6705" [label = <(&lt;operator&gt;.fieldAccess,builder.setName)<SUB>2614</SUB>> ]
+"6708" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2614</SUB>> ]
+"6714" [label = <(createDisplay,getCompositionEngine().createDisplay(builder.build()))<SUB>2615</SUB>> ]
+"6723" [label = <(&lt;operator&gt;.lessThan,sp&lt;compositionengine::DisplaySurface)<SUB>2617</SUB>> ]
+"6730" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferProducer)<SUB>2618</SUB>> ]
+"6735" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferProducer)<SUB>2619</SUB>> ]
+"6740" [label = <(&lt;operator&gt;.lessThan,sp&lt;IGraphicBufferConsumer)<SUB>2620</SUB>> ]
+"6745" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferQueue)<SUB>2621</SUB>> ]
+"6748" [label = <(&lt;operator&gt;.addressOf,&amp;bqProducer)<SUB>2621</SUB>> ]
+"6750" [label = <(&lt;operator&gt;.addressOf,&amp;bqConsumer)<SUB>2621</SUB>> ]
+"6754" [label = <(&lt;operator&gt;.greaterThan,std::optional&lt;DisplayId&gt; displayId)<SUB>2623</SUB>> ]
+"6761" [label = <(getId,compositionDisplay-&gt;getId())<SUB>2623</SUB>> ]
+"6766" [label = <(isVirtual,state.isVirtual())<SUB>2625</SUB>> ]
+"6827" [label = <(&lt;operator&gt;.logicalNot,!displaySurface)<SUB>2644</SUB>> ]
+"6832" [label = <(setupNewDisplayDeviceInternal,setupNewDisplayDeviceInternal(displayToken, compositionDisplay, state,\012                                                       displaySurface, producer))<SUB>2645</SUB>> ]
+"6839" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.emplace)<SUB>2647</SUB>> ]
+"6845" [label = <(&lt;operator&gt;.logicalNot,!state.isVirtual())<SUB>2648</SUB>> ]
+"6860" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2653</SUB>> ]
+"6529" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2581</SUB>> ]
+"6534" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2582</SUB>> ]
+"6537" [label = <(&lt;operator&gt;.assignment,&amp; activeConfig =\012                getCompositionEngine().getHwComposer().getActiveConfig(state.physical-&gt;id))<SUB>2583</SUB>> ]
+"6551" [label = <(&lt;operator&gt;.assignment,width = activeConfig-&gt;getWidth())<SUB>2585</SUB>> ]
+"6557" [label = <(&lt;operator&gt;.assignment,height = activeConfig-&gt;getHeight())<SUB>2586</SUB>> ]
+"6563" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_RGBA_8888))<SUB>2587</SUB>> ]
+"6642" [label = <(&lt;operator&gt;.assignment,&amp; physical = state.physical)<SUB>2605</SUB>> ]
+"6648" [label = <(setPhysical,builder.setPhysical({physical-&gt;id, physical-&gt;type}))<SUB>2606</SUB>> ]
+"6662" [label = <(FIELD_IDENTIFIER,setPixels,setPixels)<SUB>2608</SUB>> ]
+"6664" [label = <(&lt;operator&gt;.fieldAccess,ui::Size)<SUB>2608</SUB>> ]
+"6672" [label = <(FIELD_IDENTIFIER,setPixelFormat,setPixelFormat)<SUB>2609</SUB>> ]
+"6677" [label = <(FIELD_IDENTIFIER,setIsSecure,setIsSecure)<SUB>2610</SUB>> ]
+"6680" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>2610</SUB>> ]
+"6684" [label = <(FIELD_IDENTIFIER,setLayerStackId,setLayerStackId)<SUB>2611</SUB>> ]
+"6687" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2611</SUB>> ]
+"6691" [label = <(FIELD_IDENTIFIER,setPowerAdvisor,setPowerAdvisor)<SUB>2612</SUB>> ]
+"6697" [label = <(FIELD_IDENTIFIER,setUseHwcVirtualDisplays,setUseHwcVirtualDisplays)<SUB>2613</SUB>> ]
+"6700" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>2613</SUB>> ]
+"6707" [label = <(FIELD_IDENTIFIER,setName,setName)<SUB>2614</SUB>> ]
+"6710" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2614</SUB>> ]
+"6715" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().createDisplay)<SUB>2615</SUB>> ]
+"6718" [label = <(build,builder.build())<SUB>2615</SUB>> ]
+"6725" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::DisplaySurface)<SUB>2617</SUB>> ]
+"6746" [label = <(getFactory,getFactory())<SUB>2621</SUB>> ]
+"6747" [label = <(FIELD_IDENTIFIER,createBufferQueue,createBufferQueue)<SUB>2621</SUB>> ]
+"6755" [label = <(&lt;operator&gt;.lessThan,std::optional&lt;DisplayId)<SUB>2623</SUB>> ]
+"6762" [label = <(&lt;operator&gt;.indirectFieldAccess,compositionDisplay-&gt;getId)<SUB>2623</SUB>> ]
+"6767" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2625</SUB>> ]
+"6771" [label = <(&lt;operator&gt;.assignment,sp&lt;VirtualDisplaySurface&gt; vds =\012 new VirtualDisplaySurface(getHwComposer(), displayId, state.surface, bqProducer,\012                                          bqConsumer, state.displayName))<SUB>2626</SUB>> ]
+"6789" [label = <(&lt;operator&gt;.assignment,displaySurface = vds)<SUB>2630</SUB>> ]
+"6792" [label = <(&lt;operator&gt;.assignment,producer = vds)<SUB>2631</SUB>> ]
+"6841" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2647</SUB>> ]
+"6846" [label = <(isVirtual,state.isVirtual())<SUB>2648</SUB>> ]
+"6851" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>2649</SUB>> ]
+"6854" [label = <(dispatchDisplayHotplugEvent,dispatchDisplayHotplugEvent(displayId-&gt;value, true))<SUB>2650</SUB>> ]
+"6861" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2653</SUB>> ]
+"6865" [label = <(onPrimaryDisplayAreaChanged,mScheduler-&gt;onPrimaryDisplayAreaChanged(display-&gt;getWidth() * display-&gt;getHeight()))<SUB>2654</SUB>> ]
+"6539" [label = <(getActiveConfig,getCompositionEngine().getHwComposer().getActiveConfig(state.physical-&gt;id))<SUB>2584</SUB>> ]
+"6553" [label = <(getWidth,activeConfig-&gt;getWidth())<SUB>2585</SUB>> ]
+"6559" [label = <(getHeight,activeConfig-&gt;getHeight())<SUB>2586</SUB>> ]
+"6565" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(PIXEL_FORMAT_RGBA_8888))<SUB>2587</SUB>> ]
+"6644" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2605</SUB>> ]
+"6649" [label = <(&lt;operator&gt;.fieldAccess,builder.setPhysical)<SUB>2606</SUB>> ]
+"6652" [label = <(&lt;operator&gt;.arrayInitializer,{physical-&gt;id, physical-&gt;type})<SUB>2606</SUB>> ]
+"6666" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>2608</SUB>> ]
+"6701" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>2613</SUB>> ]
+"6716" [label = <(getCompositionEngine,getCompositionEngine())<SUB>2615</SUB>> ]
+"6717" [label = <(FIELD_IDENTIFIER,createDisplay,createDisplay)<SUB>2615</SUB>> ]
+"6719" [label = <(&lt;operator&gt;.fieldAccess,builder.build)<SUB>2615</SUB>> ]
+"6727" [label = <(FIELD_IDENTIFIER,DisplaySurface,DisplaySurface)<SUB>2617</SUB>> ]
+"6756" [label = <(&lt;operator&gt;.fieldAccess,std::optional)<SUB>2623</SUB>> ]
+"6764" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2623</SUB>> ]
+"6769" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2625</SUB>> ]
+"6772" [label = <(&lt;operator&gt;.greaterThan,sp&lt;VirtualDisplaySurface&gt; vds)<SUB>2626</SUB>> ]
+"6777" [label = <(&lt;operator&gt;.new,new VirtualDisplaySurface(getHwComposer(), displayId, state.surface, bqProducer,\012                                          bqConsumer, state.displayName))<SUB>2627</SUB>> ]
+"6797" [label = <(ALOGE_IF,ALOGE_IF(state.surface != nullptr,\012 &quot;adding a supported display, but rendering &quot;\012 &quot;surface is provided (%p), ignoring it&quot;,\012                 state.surface.get()))<SUB>2633</SUB>> ]
+"6810" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>2638</SUB>> ]
+"6813" [label = <(&lt;operator&gt;.assignment,displaySurface = new FramebufferSurface(getHwComposer(), *displayId, bqConsumer,\012                                                maxGraphicsWidth, maxGraphicsHeight))<SUB>2639</SUB>> ]
+"6823" [label = <(&lt;operator&gt;.assignment,producer = bqProducer)<SUB>2641</SUB>> ]
+"6847" [label = <(&lt;operator&gt;.fieldAccess,state.isVirtual)<SUB>2648</SUB>> ]
+"6852" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2649</SUB>> ]
+"6855" [label = <(&lt;operator&gt;.indirectFieldAccess,displayId-&gt;value)<SUB>2650</SUB>> ]
+"6863" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2653</SUB>> ]
+"6866" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayAreaChanged)<SUB>2654</SUB>> ]
+"6869" [label = <(&lt;operator&gt;.multiplication,display-&gt;getWidth() * display-&gt;getHeight())<SUB>2654</SUB>> ]
+"6540" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().getHwComposer().getActiveConfig)<SUB>2584</SUB>> ]
+"6546" [label = <(&lt;operator&gt;.indirectFieldAccess,state.physical-&gt;id)<SUB>2584</SUB>> ]
+"6554" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getWidth)<SUB>2585</SUB>> ]
+"6560" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getHeight)<SUB>2586</SUB>> ]
+"6566" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2587</SUB>> ]
+"6571" [label = <(&lt;operator&gt;.notEquals,state.surface != nullptr)<SUB>2588</SUB>> ]
+"6646" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2605</SUB>> ]
+"6651" [label = <(FIELD_IDENTIFIER,setPhysical,setPhysical)<SUB>2606</SUB>> ]
+"6653" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;id)<SUB>2606</SUB>> ]
+"6656" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;type)<SUB>2606</SUB>> ]
+"6702" [label = <(getHwComposer,getHwComposer())<SUB>2613</SUB>> ]
+"6703" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>2613</SUB>> ]
+"6721" [label = <(FIELD_IDENTIFIER,build,build)<SUB>2615</SUB>> ]
+"6758" [label = <(FIELD_IDENTIFIER,optional,optional)<SUB>2623</SUB>> ]
+"6773" [label = <(&lt;operator&gt;.lessThan,sp&lt;VirtualDisplaySurface)<SUB>2626</SUB>> ]
+"6779" [label = <(getHwComposer,getHwComposer())<SUB>2627</SUB>> ]
+"6781" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2627</SUB>> ]
+"6786" [label = <(&lt;operator&gt;.fieldAccess,state.displayName)<SUB>2628</SUB>> ]
+"6798" [label = <(&lt;operator&gt;.notEquals,state.surface != nullptr)<SUB>2633</SUB>> ]
+"6804" [label = <(get,state.surface.get())<SUB>2636</SUB>> ]
+"6811" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2638</SUB>> ]
+"6815" [label = <(&lt;operator&gt;.new,new FramebufferSurface(getHwComposer(), *displayId, bqConsumer,\012                                                maxGraphicsWidth, maxGraphicsHeight))<SUB>2639</SUB>> ]
+"6849" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2648</SUB>> ]
+"6857" [label = <(FIELD_IDENTIFIER,value,value)<SUB>2650</SUB>> ]
+"6868" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayAreaChanged,onPrimaryDisplayAreaChanged)<SUB>2654</SUB>> ]
+"6870" [label = <(getWidth,display-&gt;getWidth())<SUB>2654</SUB>> ]
+"6874" [label = <(getHeight,display-&gt;getHeight())<SUB>2654</SUB>> ]
+"6541" [label = <(getHwComposer,getCompositionEngine().getHwComposer())<SUB>2584</SUB>> ]
+"6545" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>2584</SUB>> ]
+"6547" [label = <(&lt;operator&gt;.fieldAccess,state.physical)<SUB>2584</SUB>> ]
+"6550" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2584</SUB>> ]
+"6556" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>2585</SUB>> ]
+"6562" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>2586</SUB>> ]
+"6572" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2588</SUB>> ]
+"6578" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_WIDTH, &amp;width))<SUB>2589</SUB>> ]
+"6589" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query width (%d)&quot;, status))<SUB>2590</SUB>> ]
+"6595" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_HEIGHT, &amp;height))<SUB>2591</SUB>> ]
+"6606" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query height (%d)&quot;, status))<SUB>2592</SUB>> ]
+"6613" [label = <(&lt;operator&gt;.assignment,status = state.surface-&gt;query(NATIVE_WINDOW_FORMAT, &amp;intPixelFormat))<SUB>2594</SUB>> ]
+"6624" [label = <(ALOGE_IF,ALOGE_IF(status != NO_ERROR, &quot;Unable to query format (%d)&quot;, status))<SUB>2595</SUB>> ]
+"6630" [label = <(&lt;operator&gt;.assignment,pixelFormat = static_cast&lt;ui::PixelFormat&gt;(intPixelFormat))<SUB>2596</SUB>> ]
+"6655" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2606</SUB>> ]
+"6658" [label = <(FIELD_IDENTIFIER,type,type)<SUB>2606</SUB>> ]
+"6783" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2627</SUB>> ]
+"6788" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>2628</SUB>> ]
+"6799" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2633</SUB>> ]
+"6805" [label = <(&lt;operator&gt;.fieldAccess,state.surface.get)<SUB>2636</SUB>> ]
+"6817" [label = <(getHwComposer,getHwComposer())<SUB>2639</SUB>> ]
+"6818" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>2639</SUB>> ]
+"6871" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getWidth)<SUB>2654</SUB>> ]
+"6875" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getHeight)<SUB>2654</SUB>> ]
+"6542" [label = <(&lt;operator&gt;.fieldAccess,getCompositionEngine().getHwComposer)<SUB>2584</SUB>> ]
+"6549" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2584</SUB>> ]
+"6574" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2588</SUB>> ]
+"6580" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_WIDTH, &amp;width))<SUB>2589</SUB>> ]
+"6590" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2590</SUB>> ]
+"6597" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_HEIGHT, &amp;height))<SUB>2591</SUB>> ]
+"6607" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2592</SUB>> ]
+"6615" [label = <(query,state.surface-&gt;query(NATIVE_WINDOW_FORMAT, &amp;intPixelFormat))<SUB>2594</SUB>> ]
+"6625" [label = <(&lt;operator&gt;.notEquals,status != NO_ERROR)<SUB>2595</SUB>> ]
+"6632" [label = <(&lt;operator&gt;.cast,static_cast&lt;ui::PixelFormat&gt;(intPixelFormat))<SUB>2596</SUB>> ]
+"6637" [label = <(RETURN,return;,return;)<SUB>2601</SUB>> ]
+"6801" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2633</SUB>> ]
+"6806" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2636</SUB>> ]
+"6809" [label = <(FIELD_IDENTIFIER,get,get)<SUB>2636</SUB>> ]
+"6873" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>2654</SUB>> ]
+"6877" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>2654</SUB>> ]
+"6543" [label = <(getCompositionEngine,getCompositionEngine())<SUB>2584</SUB>> ]
+"6544" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>2584</SUB>> ]
+"6581" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2589</SUB>> ]
+"6587" [label = <(&lt;operator&gt;.addressOf,&amp;width)<SUB>2589</SUB>> ]
+"6598" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2591</SUB>> ]
+"6604" [label = <(&lt;operator&gt;.addressOf,&amp;height)<SUB>2591</SUB>> ]
+"6616" [label = <(&lt;operator&gt;.indirectFieldAccess,state.surface-&gt;query)<SUB>2594</SUB>> ]
+"6622" [label = <(&lt;operator&gt;.addressOf,&amp;intPixelFormat)<SUB>2594</SUB>> ]
+"6633" [label = <(UNKNOWN,ui::PixelFormat,ui::PixelFormat)<SUB>2596</SUB>> ]
+"6808" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2636</SUB>> ]
+"6582" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2589</SUB>> ]
+"6585" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2589</SUB>> ]
+"6599" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2591</SUB>> ]
+"6602" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2591</SUB>> ]
+"6617" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>2594</SUB>> ]
+"6620" [label = <(FIELD_IDENTIFIER,query,query)<SUB>2594</SUB>> ]
+"6584" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2589</SUB>> ]
+"6601" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2591</SUB>> ]
+"6619" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2594</SUB>> ]
+"6513" [label = <(METHOD,processDisplayAdded)<SUB>2577</SUB>> ]
+"6878" [label = <(METHOD_RETURN,void)<SUB>2577</SUB>> ]
+  "6518" -> "6522" 
+  "6522" -> "6529" 
+  "6526" -> "6534" 
+  "6659" -> "6672" 
+  "6669" -> "6677" 
+  "6674" -> "6684" 
+  "6681" -> "6691" 
+  "6688" -> "6697" 
+  "6694" -> "6707" 
+  "6704" -> "6716" 
+  "6712" -> "6727" 
+  "6722" -> "6730" 
+  "6729" -> "6735" 
+  "6734" -> "6740" 
+  "6739" -> "6746" 
+  "6744" -> "6758" 
+  "6753" -> "6769" 
+  "6826" -> "6832" 
+  "6830" -> "6841" 
+  "6838" -> "6849" 
+  "6528" -> "6526" 
+  "6532" -> "6543" 
+  "6532" -> "6574" 
+  "6660" -> "6666" 
+  "6663" -> "6659" 
+  "6670" -> "6669" 
+  "6675" -> "6680" 
+  "6678" -> "6674" 
+  "6682" -> "6687" 
+  "6685" -> "6681" 
+  "6689" -> "6692" 
   "6692" -> "6688" 
-  "6698" -> "6696" 
-  "6707" -> "6706" 
-  "6714" -> "6713" 
-  "6719" -> "6718" 
-  "6724" -> "6723" 
-  "6729" -> "6732" 
-  "6732" -> "6734" 
-  "6734" -> "6728" 
-  "6738" -> "6748" 
-  "6745" -> "6737" 
-  "6750" -> "6757" 
-  "6750" -> "6785" 
-  "6811" -> "6810" 
-  "6816" -> "6814" 
-  "6823" -> "6822" 
-  "6829" -> "6836" 
-  "6829" -> "6847" 
-  "6844" -> "6862" 
-  "6844" -> "6852" 
-  "6513" -> "6512" 
-  "6518" -> "6516" 
-  "6521" -> "6540" 
-  "6535" -> "6546" 
-  "6541" -> "6550" 
-  "6547" -> "6630" 
-  "6626" -> "6635" 
-  "6626" -> "6646" 
-  "6632" -> "6646" 
-  "6646" -> "6644" 
-  "6648" -> "6647" 
-  "6656" -> "6654" 
-  "6661" -> "6659" 
-  "6664" -> "6662" 
-  "6668" -> "6666" 
-  "6671" -> "6669" 
-  "6675" -> "6673" 
-  "6681" -> "6679" 
-  "6684" -> "6682" 
-  "6691" -> "6689" 
-  "6694" -> "6692" 
-  "6699" -> "6705" 
-  "6702" -> "6698" 
-  "6709" -> "6707" 
-  "6730" -> "6731" 
-  "6731" -> "6729" 
-  "6739" -> "6738" 
-  "6746" -> "6745" 
-  "6751" -> "6750" 
-  "6755" -> "6773" 
-  "6773" -> "6776" 
-  "6776" -> "6811" 
-  "6825" -> "6823" 
-  "6830" -> "6829" 
-  "6835" -> "6841" 
-  "6838" -> "6847" 
-  "6845" -> "6844" 
-  "6849" -> "6862" 
-  "6523" -> "6521" 
-  "6537" -> "6535" 
-  "6543" -> "6541" 
-  "6549" -> "6547" 
-  "6628" -> "6626" 
-  "6633" -> "6639" 
-  "6636" -> "6632" 
-  "6650" -> "6648" 
-  "6685" -> "6684" 
-  "6700" -> "6701" 
-  "6701" -> "6699" 
-  "6703" -> "6702" 
-  "6711" -> "6709" 
+  "6695" -> "6702" 
+  "6695" -> "6698" 
+  "6698" -> "6694" 
+  "6705" -> "6710" 
+  "6708" -> "6704" 
+  "6714" -> "6712" 
+  "6723" -> "6722" 
+  "6730" -> "6729" 
+  "6735" -> "6734" 
   "6740" -> "6739" 
-  "6748" -> "6746" 
-  "6753" -> "6751" 
-  "6756" -> "6763" 
-  "6761" -> "6755" 
-  "6781" -> "6795" 
-  "6794" -> "6801" 
-  "6797" -> "6807" 
-  "6807" -> "6811" 
-  "6831" -> "6830" 
-  "6836" -> "6835" 
+  "6745" -> "6748" 
+  "6748" -> "6750" 
+  "6750" -> "6744" 
+  "6754" -> "6764" 
+  "6761" -> "6753" 
+  "6766" -> "6773" 
+  "6766" -> "6801" 
+  "6827" -> "6826" 
+  "6832" -> "6830" 
   "6839" -> "6838" 
-  "6847" -> "6845" 
-  "6850" -> "6857" 
-  "6853" -> "6849" 
-  "6524" -> "6533" 
-  "6530" -> "6523" 
-  "6538" -> "6537" 
-  "6544" -> "6543" 
-  "6550" -> "6549" 
-  "6555" -> "6621" 
-  "6555" -> "6568" 
-  "6630" -> "6628" 
-  "6635" -> "6633" 
-  "6637" -> "6642" 
-  "6640" -> "6636" 
-  "6686" -> "6687" 
+  "6845" -> "6852" 
+  "6845" -> "6863" 
+  "6860" -> "6878" 
+  "6860" -> "6868" 
+  "6529" -> "6528" 
+  "6534" -> "6532" 
+  "6537" -> "6556" 
+  "6551" -> "6562" 
+  "6557" -> "6566" 
+  "6563" -> "6646" 
+  "6642" -> "6651" 
+  "6642" -> "6662" 
+  "6648" -> "6662" 
+  "6662" -> "6660" 
+  "6664" -> "6663" 
+  "6672" -> "6670" 
+  "6677" -> "6675" 
+  "6680" -> "6678" 
+  "6684" -> "6682" 
   "6687" -> "6685" 
-  "6705" -> "6703" 
-  "6742" -> "6740" 
-  "6757" -> "6756" 
-  "6763" -> "6767" 
-  "6765" -> "6772" 
-  "6770" -> "6761" 
-  "6782" -> "6792" 
-  "6788" -> "6781" 
-  "6795" -> "6794" 
-  "6799" -> "6797" 
-  "6833" -> "6831" 
+  "6691" -> "6689" 
+  "6697" -> "6695" 
+  "6700" -> "6698" 
+  "6707" -> "6705" 
+  "6710" -> "6708" 
+  "6715" -> "6721" 
+  "6718" -> "6714" 
+  "6725" -> "6723" 
+  "6746" -> "6747" 
+  "6747" -> "6745" 
+  "6755" -> "6754" 
+  "6762" -> "6761" 
+  "6767" -> "6766" 
+  "6771" -> "6789" 
+  "6789" -> "6792" 
+  "6792" -> "6827" 
   "6841" -> "6839" 
-  "6852" -> "6850" 
-  "6854" -> "6861" 
-  "6858" -> "6853" 
-  "6525" -> "6529" 
-  "6529" -> "6524" 
-  "6531" -> "6534" 
-  "6534" -> "6530" 
-  "6540" -> "6538" 
-  "6546" -> "6544" 
-  "6556" -> "6555" 
-  "6562" -> "6574" 
-  "6573" -> "6585" 
-  "6579" -> "6591" 
-  "6590" -> "6603" 
-  "6597" -> "6609" 
-  "6608" -> "6617" 
-  "6614" -> "6630" 
-  "6639" -> "6637" 
-  "6642" -> "6640" 
-  "6767" -> "6765" 
-  "6772" -> "6770" 
-  "6783" -> "6782" 
-  "6789" -> "6788" 
-  "6801" -> "6802" 
-  "6802" -> "6799" 
+  "6846" -> "6845" 
+  "6851" -> "6857" 
+  "6854" -> "6863" 
+  "6861" -> "6860" 
+  "6865" -> "6878" 
+  "6539" -> "6537" 
+  "6553" -> "6551" 
+  "6559" -> "6557" 
+  "6565" -> "6563" 
+  "6644" -> "6642" 
+  "6649" -> "6655" 
+  "6652" -> "6648" 
+  "6666" -> "6664" 
+  "6701" -> "6700" 
+  "6716" -> "6717" 
+  "6717" -> "6715" 
+  "6719" -> "6718" 
+  "6727" -> "6725" 
+  "6756" -> "6755" 
+  "6764" -> "6762" 
+  "6769" -> "6767" 
+  "6772" -> "6779" 
+  "6777" -> "6771" 
+  "6797" -> "6811" 
+  "6810" -> "6817" 
+  "6813" -> "6823" 
+  "6823" -> "6827" 
+  "6847" -> "6846" 
+  "6852" -> "6851" 
   "6855" -> "6854" 
-  "6859" -> "6858" 
-  "6526" -> "6525" 
-  "6533" -> "6531" 
-  "6558" -> "6556" 
-  "6564" -> "6562" 
-  "6574" -> "6573" 
-  "6581" -> "6579" 
-  "6591" -> "6590" 
-  "6599" -> "6597" 
-  "6609" -> "6608" 
-  "6616" -> "6614" 
-  "6621" -> "6862" 
-  "6785" -> "6783" 
-  "6790" -> "6793" 
-  "6793" -> "6789" 
+  "6863" -> "6861" 
+  "6866" -> "6873" 
+  "6869" -> "6865" 
+  "6540" -> "6549" 
+  "6546" -> "6539" 
+  "6554" -> "6553" 
+  "6560" -> "6559" 
+  "6566" -> "6565" 
+  "6571" -> "6637" 
+  "6571" -> "6584" 
+  "6646" -> "6644" 
+  "6651" -> "6649" 
+  "6653" -> "6658" 
+  "6656" -> "6652" 
+  "6702" -> "6703" 
+  "6703" -> "6701" 
+  "6721" -> "6719" 
+  "6758" -> "6756" 
+  "6773" -> "6772" 
+  "6779" -> "6783" 
+  "6781" -> "6788" 
+  "6786" -> "6777" 
+  "6798" -> "6808" 
+  "6804" -> "6797" 
+  "6811" -> "6810" 
+  "6815" -> "6813" 
+  "6849" -> "6847" 
   "6857" -> "6855" 
-  "6861" -> "6859" 
-  "6527" -> "6528" 
-  "6528" -> "6526" 
-  "6565" -> "6571" 
-  "6571" -> "6564" 
-  "6582" -> "6588" 
-  "6588" -> "6581" 
-  "6600" -> "6606" 
-  "6606" -> "6599" 
-  "6617" -> "6616" 
-  "6792" -> "6790" 
-  "6566" -> "6569" 
-  "6569" -> "6565" 
-  "6583" -> "6586" 
-  "6586" -> "6582" 
-  "6601" -> "6604" 
-  "6604" -> "6600" 
-  "6568" -> "6566" 
-  "6585" -> "6583" 
-  "6603" -> "6601" 
-  "6497" -> "6502" 
+  "6868" -> "6866" 
+  "6870" -> "6877" 
+  "6874" -> "6869" 
+  "6541" -> "6545" 
+  "6545" -> "6540" 
+  "6547" -> "6550" 
+  "6550" -> "6546" 
+  "6556" -> "6554" 
+  "6562" -> "6560" 
+  "6572" -> "6571" 
+  "6578" -> "6590" 
+  "6589" -> "6601" 
+  "6595" -> "6607" 
+  "6606" -> "6619" 
+  "6613" -> "6625" 
+  "6624" -> "6633" 
+  "6630" -> "6646" 
+  "6655" -> "6653" 
+  "6658" -> "6656" 
+  "6783" -> "6781" 
+  "6788" -> "6786" 
+  "6799" -> "6798" 
+  "6805" -> "6804" 
+  "6817" -> "6818" 
+  "6818" -> "6815" 
+  "6871" -> "6870" 
+  "6875" -> "6874" 
+  "6542" -> "6541" 
+  "6549" -> "6547" 
+  "6574" -> "6572" 
+  "6580" -> "6578" 
+  "6590" -> "6589" 
+  "6597" -> "6595" 
+  "6607" -> "6606" 
+  "6615" -> "6613" 
+  "6625" -> "6624" 
+  "6632" -> "6630" 
+  "6637" -> "6878" 
+  "6801" -> "6799" 
+  "6806" -> "6809" 
+  "6809" -> "6805" 
+  "6873" -> "6871" 
+  "6877" -> "6875" 
+  "6543" -> "6544" 
+  "6544" -> "6542" 
+  "6581" -> "6587" 
+  "6587" -> "6580" 
+  "6598" -> "6604" 
+  "6604" -> "6597" 
+  "6616" -> "6622" 
+  "6622" -> "6615" 
+  "6633" -> "6632" 
+  "6808" -> "6806" 
+  "6582" -> "6585" 
+  "6585" -> "6581" 
+  "6599" -> "6602" 
+  "6602" -> "6598" 
+  "6617" -> "6620" 
+  "6620" -> "6616" 
+  "6584" -> "6582" 
+  "6601" -> "6599" 
+  "6619" -> "6617" 
+  "6513" -> "6518" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/167-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/167-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/167-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/167-cfg.dot	2023-06-07 19:33:06.617398410 +0330
@@ -1,49 +1,49 @@
 digraph "processDisplayRemoved" {  
-"6901" [label = <(erase,mDisplays.erase(displayToken))<SUB>2671</SUB>> ]
-"6902" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.erase)<SUB>2671</SUB>> ]
-"6870" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2660</SUB>> ]
-"6876" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>2662</SUB>> ]
-"6882" [label = <(disconnect,display-&gt;disconnect())<SUB>2663</SUB>> ]
-"6904" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2671</SUB>> ]
-"6872" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2660</SUB>> ]
-"6878" [label = <(getId,display-&gt;getId())<SUB>2662</SUB>> ]
-"6883" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;disconnect)<SUB>2663</SUB>> ]
-"6887" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isVirtual())<SUB>2665</SUB>> ]
-"6879" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2662</SUB>> ]
-"6885" [label = <(FIELD_IDENTIFIER,disconnect,disconnect)<SUB>2663</SUB>> ]
-"6888" [label = <(isVirtual,display-&gt;isVirtual())<SUB>2665</SUB>> ]
-"6893" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>2666</SUB>> ]
-"6896" [label = <(dispatchDisplayHotplugEvent,dispatchDisplayHotplugEvent(displayId-&gt;value, false))<SUB>2667</SUB>> ]
-"6881" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2662</SUB>> ]
-"6889" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>2665</SUB>> ]
-"6894" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2666</SUB>> ]
-"6897" [label = <(&lt;operator&gt;.indirectFieldAccess,displayId-&gt;value)<SUB>2667</SUB>> ]
-"6891" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2665</SUB>> ]
-"6899" [label = <(FIELD_IDENTIFIER,value,value)<SUB>2667</SUB>> ]
-"6864" [label = <(METHOD,processDisplayRemoved)<SUB>2659</SUB>> ]
-"6906" [label = <(METHOD_RETURN,void)<SUB>2659</SUB>> ]
-  "6901" -> "6906" 
-  "6902" -> "6901" 
-  "6870" -> "6881" 
-  "6870" -> "6904" 
-  "6876" -> "6885" 
-  "6882" -> "6891" 
-  "6904" -> "6902" 
-  "6872" -> "6870" 
-  "6878" -> "6876" 
-  "6883" -> "6882" 
-  "6887" -> "6894" 
-  "6887" -> "6904" 
-  "6879" -> "6878" 
-  "6885" -> "6883" 
-  "6888" -> "6887" 
-  "6893" -> "6899" 
-  "6896" -> "6904" 
-  "6881" -> "6879" 
-  "6889" -> "6888" 
-  "6894" -> "6893" 
-  "6897" -> "6896" 
-  "6891" -> "6889" 
-  "6899" -> "6897" 
-  "6864" -> "6872" 
+"6917" [label = <(erase,mDisplays.erase(displayToken))<SUB>2670</SUB>> ]
+"6918" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.erase)<SUB>2670</SUB>> ]
+"6886" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2659</SUB>> ]
+"6892" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>2661</SUB>> ]
+"6898" [label = <(disconnect,display-&gt;disconnect())<SUB>2662</SUB>> ]
+"6920" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2670</SUB>> ]
+"6888" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2659</SUB>> ]
+"6894" [label = <(getId,display-&gt;getId())<SUB>2661</SUB>> ]
+"6899" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;disconnect)<SUB>2662</SUB>> ]
+"6903" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isVirtual())<SUB>2664</SUB>> ]
+"6895" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2661</SUB>> ]
+"6901" [label = <(FIELD_IDENTIFIER,disconnect,disconnect)<SUB>2662</SUB>> ]
+"6904" [label = <(isVirtual,display-&gt;isVirtual())<SUB>2664</SUB>> ]
+"6909" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>2665</SUB>> ]
+"6912" [label = <(dispatchDisplayHotplugEvent,dispatchDisplayHotplugEvent(displayId-&gt;value, false))<SUB>2666</SUB>> ]
+"6897" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2661</SUB>> ]
+"6905" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>2664</SUB>> ]
+"6910" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>2665</SUB>> ]
+"6913" [label = <(&lt;operator&gt;.indirectFieldAccess,displayId-&gt;value)<SUB>2666</SUB>> ]
+"6907" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>2664</SUB>> ]
+"6915" [label = <(FIELD_IDENTIFIER,value,value)<SUB>2666</SUB>> ]
+"6880" [label = <(METHOD,processDisplayRemoved)<SUB>2658</SUB>> ]
+"6922" [label = <(METHOD_RETURN,void)<SUB>2658</SUB>> ]
+  "6917" -> "6922" 
+  "6918" -> "6917" 
+  "6886" -> "6897" 
+  "6886" -> "6920" 
+  "6892" -> "6901" 
+  "6898" -> "6907" 
+  "6920" -> "6918" 
+  "6888" -> "6886" 
+  "6894" -> "6892" 
+  "6899" -> "6898" 
+  "6903" -> "6910" 
+  "6903" -> "6920" 
+  "6895" -> "6894" 
+  "6901" -> "6899" 
+  "6904" -> "6903" 
+  "6909" -> "6915" 
+  "6912" -> "6920" 
+  "6897" -> "6895" 
+  "6905" -> "6904" 
+  "6910" -> "6909" 
+  "6913" -> "6912" 
+  "6907" -> "6905" 
+  "6915" -> "6913" 
+  "6880" -> "6888" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/168-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/168-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/168-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/168-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,262 +1,262 @@
 digraph "processDisplayChanged" {  
-"6914" [label = <(&lt;operator&gt;.assignment,currentBinder = IInterface::asBinder(currentState.surface))<SUB>2677</SUB>> ]
-"6924" [label = <(&lt;operator&gt;.assignment,drawingBinder = IInterface::asBinder(drawingState.surface))<SUB>2678</SUB>> ]
-"6916" [label = <(IInterface::asBinder,IInterface::asBinder(currentState.surface))<SUB>2677</SUB>> ]
-"6926" [label = <(IInterface::asBinder,IInterface::asBinder(drawingState.surface))<SUB>2678</SUB>> ]
-"6934" [label = <(&lt;operator&gt;.logicalOr,currentBinder != drawingBinder || currentState.sequenceId != drawingState.sequenceId)<SUB>2679</SUB>> ]
-"6917" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>2677</SUB>> ]
-"6920" [label = <(&lt;operator&gt;.fieldAccess,currentState.surface)<SUB>2677</SUB>> ]
-"6927" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>2678</SUB>> ]
-"6930" [label = <(&lt;operator&gt;.fieldAccess,drawingState.surface)<SUB>2678</SUB>> ]
-"6935" [label = <(&lt;operator&gt;.notEquals,currentBinder != drawingBinder)<SUB>2679</SUB>> ]
-"6938" [label = <(&lt;operator&gt;.notEquals,currentState.sequenceId != drawingState.sequenceId)<SUB>2679</SUB>> ]
-"6958" [label = <(erase,mDisplays.erase(displayToken))<SUB>2684</SUB>> ]
-"6982" [label = <(processDisplayAdded,processDisplayAdded(displayToken, currentState))<SUB>2688</SUB>> ]
-"7002" [label = <(RETURN,return;,return;)<SUB>2693</SUB>> ]
-"7006" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2696</SUB>> ]
-"6919" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>2677</SUB>> ]
-"6922" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2677</SUB>> ]
-"6929" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>2678</SUB>> ]
-"6932" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2678</SUB>> ]
-"6939" [label = <(&lt;operator&gt;.fieldAccess,currentState.sequenceId)<SUB>2679</SUB>> ]
-"6942" [label = <(&lt;operator&gt;.fieldAccess,drawingState.sequenceId)<SUB>2679</SUB>> ]
-"6959" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.erase)<SUB>2684</SUB>> ]
-"6986" [label = <(&lt;operator&gt;.fieldAccess,currentState.physical)<SUB>2689</SUB>> ]
-"7008" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2696</SUB>> ]
-"7012" [label = <(&lt;operator&gt;.notEquals,currentState.layerStack != drawingState.layerStack)<SUB>2697</SUB>> ]
-"7028" [label = <(&lt;operator&gt;.logicalOr,(currentState.orientation != drawingState.orientation) ||\012 (currentState.viewport != drawingState.viewport) ||\012 (currentState.frame != drawingState.frame))<SUB>2700</SUB>> ]
-"7066" [label = <(&lt;operator&gt;.logicalOr,currentState.width != drawingState.width ||\012            currentState.height != drawingState.height)<SUB>2706</SUB>> ]
-"6941" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2679</SUB>> ]
-"6944" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2679</SUB>> ]
-"6949" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2681</SUB>> ]
-"6954" [label = <(disconnect,display-&gt;disconnect())<SUB>2682</SUB>> ]
-"6961" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2684</SUB>> ]
-"6966" [label = <(&lt;operator&gt;.assignment,&amp; physical = currentState.physical)<SUB>2685</SUB>> ]
-"6972" [label = <(allocatePhysicalDisplay,getHwComposer().allocatePhysicalDisplay(physical-&gt;hwcDisplayId, physical-&gt;id))<SUB>2686</SUB>> ]
-"6988" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2689</SUB>> ]
-"6991" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2690</SUB>> ]
-"6995" [label = <(setPowerModeInternal,setPowerModeInternal(display, hal::PowerMode::ON))<SUB>2691</SUB>> ]
-"7013" [label = <(&lt;operator&gt;.fieldAccess,currentState.layerStack)<SUB>2697</SUB>> ]
-"7016" [label = <(&lt;operator&gt;.fieldAccess,drawingState.layerStack)<SUB>2697</SUB>> ]
-"7020" [label = <(setLayerStack,display-&gt;setLayerStack(currentState.layerStack))<SUB>2698</SUB>> ]
-"7029" [label = <(&lt;operator&gt;.logicalOr,(currentState.orientation != drawingState.orientation) ||\012 (currentState.viewport != drawingState.viewport))<SUB>2700</SUB>> ]
-"7044" [label = <(&lt;operator&gt;.notEquals,currentState.frame != drawingState.frame)<SUB>2702</SUB>> ]
-"7052" [label = <(setProjection,display-&gt;setProjection(currentState.orientation, currentState.viewport,\012                                   currentState.frame))<SUB>2703</SUB>> ]
-"7067" [label = <(&lt;operator&gt;.notEquals,currentState.width != drawingState.width)<SUB>2706</SUB>> ]
-"7074" [label = <(&lt;operator&gt;.notEquals,currentState.height != drawingState.height)<SUB>2707</SUB>> ]
-"7082" [label = <(setDisplaySize,display-&gt;setDisplaySize(currentState.width, currentState.height))<SUB>2708</SUB>> ]
-"6951" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2681</SUB>> ]
-"6955" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;disconnect)<SUB>2682</SUB>> ]
-"6968" [label = <(&lt;operator&gt;.fieldAccess,currentState.physical)<SUB>2685</SUB>> ]
-"6973" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().allocatePhysicalDisplay)<SUB>2686</SUB>> ]
-"6976" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;hwcDisplayId)<SUB>2686</SUB>> ]
-"6979" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;id)<SUB>2686</SUB>> ]
-"6993" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2690</SUB>> ]
-"6997" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2691</SUB>> ]
-"7015" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2697</SUB>> ]
-"7018" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2697</SUB>> ]
-"7021" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setLayerStack)<SUB>2698</SUB>> ]
-"7024" [label = <(&lt;operator&gt;.fieldAccess,currentState.layerStack)<SUB>2698</SUB>> ]
-"7030" [label = <(&lt;operator&gt;.notEquals,currentState.orientation != drawingState.orientation)<SUB>2700</SUB>> ]
-"7037" [label = <(&lt;operator&gt;.notEquals,currentState.viewport != drawingState.viewport)<SUB>2701</SUB>> ]
-"7045" [label = <(&lt;operator&gt;.fieldAccess,currentState.frame)<SUB>2702</SUB>> ]
-"7048" [label = <(&lt;operator&gt;.fieldAccess,drawingState.frame)<SUB>2702</SUB>> ]
-"7053" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setProjection)<SUB>2703</SUB>> ]
-"7056" [label = <(&lt;operator&gt;.fieldAccess,currentState.orientation)<SUB>2703</SUB>> ]
-"7059" [label = <(&lt;operator&gt;.fieldAccess,currentState.viewport)<SUB>2703</SUB>> ]
-"7062" [label = <(&lt;operator&gt;.fieldAccess,currentState.frame)<SUB>2704</SUB>> ]
-"7068" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2706</SUB>> ]
-"7071" [label = <(&lt;operator&gt;.fieldAccess,drawingState.width)<SUB>2706</SUB>> ]
-"7075" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2707</SUB>> ]
-"7078" [label = <(&lt;operator&gt;.fieldAccess,drawingState.height)<SUB>2707</SUB>> ]
-"7083" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setDisplaySize)<SUB>2708</SUB>> ]
-"7086" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2708</SUB>> ]
-"7089" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2708</SUB>> ]
-"7093" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2710</SUB>> ]
-"6957" [label = <(FIELD_IDENTIFIER,disconnect,disconnect)<SUB>2682</SUB>> ]
-"6970" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2685</SUB>> ]
-"6974" [label = <(getHwComposer,getHwComposer())<SUB>2686</SUB>> ]
-"6975" [label = <(FIELD_IDENTIFIER,allocatePhysicalDisplay,allocatePhysicalDisplay)<SUB>2686</SUB>> ]
-"6978" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2686</SUB>> ]
-"6981" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2686</SUB>> ]
-"6998" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2691</SUB>> ]
-"7001" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2691</SUB>> ]
-"7023" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>2698</SUB>> ]
-"7026" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2698</SUB>> ]
-"7031" [label = <(&lt;operator&gt;.fieldAccess,currentState.orientation)<SUB>2700</SUB>> ]
-"7034" [label = <(&lt;operator&gt;.fieldAccess,drawingState.orientation)<SUB>2700</SUB>> ]
-"7038" [label = <(&lt;operator&gt;.fieldAccess,currentState.viewport)<SUB>2701</SUB>> ]
-"7041" [label = <(&lt;operator&gt;.fieldAccess,drawingState.viewport)<SUB>2701</SUB>> ]
-"7047" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2702</SUB>> ]
-"7050" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2702</SUB>> ]
-"7055" [label = <(FIELD_IDENTIFIER,setProjection,setProjection)<SUB>2703</SUB>> ]
-"7058" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2703</SUB>> ]
-"7061" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2703</SUB>> ]
-"7064" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2704</SUB>> ]
-"7070" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2706</SUB>> ]
-"7073" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2706</SUB>> ]
-"7077" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2707</SUB>> ]
-"7080" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2707</SUB>> ]
-"7085" [label = <(FIELD_IDENTIFIER,setDisplaySize,setDisplaySize)<SUB>2708</SUB>> ]
-"7088" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2708</SUB>> ]
-"7091" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2708</SUB>> ]
-"7094" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2710</SUB>> ]
-"7098" [label = <(onPrimaryDisplayAreaChanged,mScheduler-&gt;onPrimaryDisplayAreaChanged(currentState.width * currentState.height))<SUB>2711</SUB>> ]
-"7112" [label = <(setViewport,mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize()))<SUB>2715</SUB>> ]
-"7033" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2700</SUB>> ]
-"7036" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2700</SUB>> ]
-"7040" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2701</SUB>> ]
-"7043" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2701</SUB>> ]
-"7096" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2710</SUB>> ]
-"7099" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayAreaChanged)<SUB>2711</SUB>> ]
-"7102" [label = <(&lt;operator&gt;.multiplication,currentState.width * currentState.height)<SUB>2711</SUB>> ]
-"7113" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateOverlay-&gt;setViewport)<SUB>2715</SUB>> ]
-"7116" [label = <(getSize,display-&gt;getSize())<SUB>2715</SUB>> ]
-"7101" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayAreaChanged,onPrimaryDisplayAreaChanged)<SUB>2711</SUB>> ]
-"7103" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2711</SUB>> ]
-"7106" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2711</SUB>> ]
-"7115" [label = <(FIELD_IDENTIFIER,setViewport,setViewport)<SUB>2715</SUB>> ]
-"7117" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSize)<SUB>2715</SUB>> ]
-"7105" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2711</SUB>> ]
-"7108" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2711</SUB>> ]
-"7119" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>2715</SUB>> ]
-"6908" [label = <(METHOD,processDisplayChanged)<SUB>2674</SUB>> ]
-"7120" [label = <(METHOD_RETURN,void)<SUB>2674</SUB>> ]
-  "6914" -> "6929" 
-  "6924" -> "6935" 
-  "6916" -> "6914" 
-  "6926" -> "6924" 
-  "6934" -> "6951" 
-  "6934" -> "7008" 
-  "6917" -> "6922" 
-  "6920" -> "6916" 
-  "6927" -> "6932" 
-  "6930" -> "6926" 
-  "6935" -> "6934" 
-  "6935" -> "6941" 
-  "6938" -> "6934" 
-  "6958" -> "6970" 
-  "6982" -> "6988" 
-  "7002" -> "7120" 
-  "7006" -> "7120" 
-  "7006" -> "7015" 
-  "6919" -> "6917" 
-  "6922" -> "6920" 
-  "6929" -> "6927" 
+"6930" [label = <(&lt;operator&gt;.assignment,currentBinder = IInterface::asBinder(currentState.surface))<SUB>2676</SUB>> ]
+"6940" [label = <(&lt;operator&gt;.assignment,drawingBinder = IInterface::asBinder(drawingState.surface))<SUB>2677</SUB>> ]
+"6932" [label = <(IInterface::asBinder,IInterface::asBinder(currentState.surface))<SUB>2676</SUB>> ]
+"6942" [label = <(IInterface::asBinder,IInterface::asBinder(drawingState.surface))<SUB>2677</SUB>> ]
+"6950" [label = <(&lt;operator&gt;.logicalOr,currentBinder != drawingBinder || currentState.sequenceId != drawingState.sequenceId)<SUB>2678</SUB>> ]
+"6933" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>2676</SUB>> ]
+"6936" [label = <(&lt;operator&gt;.fieldAccess,currentState.surface)<SUB>2676</SUB>> ]
+"6943" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>2677</SUB>> ]
+"6946" [label = <(&lt;operator&gt;.fieldAccess,drawingState.surface)<SUB>2677</SUB>> ]
+"6951" [label = <(&lt;operator&gt;.notEquals,currentBinder != drawingBinder)<SUB>2678</SUB>> ]
+"6954" [label = <(&lt;operator&gt;.notEquals,currentState.sequenceId != drawingState.sequenceId)<SUB>2678</SUB>> ]
+"6974" [label = <(erase,mDisplays.erase(displayToken))<SUB>2683</SUB>> ]
+"6998" [label = <(processDisplayAdded,processDisplayAdded(displayToken, currentState))<SUB>2687</SUB>> ]
+"7018" [label = <(RETURN,return;,return;)<SUB>2692</SUB>> ]
+"7022" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2695</SUB>> ]
+"6935" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>2676</SUB>> ]
+"6938" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2676</SUB>> ]
+"6945" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>2677</SUB>> ]
+"6948" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>2677</SUB>> ]
+"6955" [label = <(&lt;operator&gt;.fieldAccess,currentState.sequenceId)<SUB>2678</SUB>> ]
+"6958" [label = <(&lt;operator&gt;.fieldAccess,drawingState.sequenceId)<SUB>2678</SUB>> ]
+"6975" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.erase)<SUB>2683</SUB>> ]
+"7002" [label = <(&lt;operator&gt;.fieldAccess,currentState.physical)<SUB>2688</SUB>> ]
+"7024" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2695</SUB>> ]
+"7028" [label = <(&lt;operator&gt;.notEquals,currentState.layerStack != drawingState.layerStack)<SUB>2696</SUB>> ]
+"7044" [label = <(&lt;operator&gt;.logicalOr,(currentState.orientation != drawingState.orientation) ||\012 (currentState.viewport != drawingState.viewport) ||\012 (currentState.frame != drawingState.frame))<SUB>2699</SUB>> ]
+"7082" [label = <(&lt;operator&gt;.logicalOr,currentState.width != drawingState.width ||\012            currentState.height != drawingState.height)<SUB>2705</SUB>> ]
+"6957" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2678</SUB>> ]
+"6960" [label = <(FIELD_IDENTIFIER,sequenceId,sequenceId)<SUB>2678</SUB>> ]
+"6965" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2680</SUB>> ]
+"6970" [label = <(disconnect,display-&gt;disconnect())<SUB>2681</SUB>> ]
+"6977" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>2683</SUB>> ]
+"6982" [label = <(&lt;operator&gt;.assignment,&amp; physical = currentState.physical)<SUB>2684</SUB>> ]
+"6988" [label = <(allocatePhysicalDisplay,getHwComposer().allocatePhysicalDisplay(physical-&gt;hwcDisplayId, physical-&gt;id))<SUB>2685</SUB>> ]
+"7004" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2688</SUB>> ]
+"7007" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>2689</SUB>> ]
+"7011" [label = <(setPowerModeInternal,setPowerModeInternal(display, hal::PowerMode::ON))<SUB>2690</SUB>> ]
+"7029" [label = <(&lt;operator&gt;.fieldAccess,currentState.layerStack)<SUB>2696</SUB>> ]
+"7032" [label = <(&lt;operator&gt;.fieldAccess,drawingState.layerStack)<SUB>2696</SUB>> ]
+"7036" [label = <(setLayerStack,display-&gt;setLayerStack(currentState.layerStack))<SUB>2697</SUB>> ]
+"7045" [label = <(&lt;operator&gt;.logicalOr,(currentState.orientation != drawingState.orientation) ||\012 (currentState.viewport != drawingState.viewport))<SUB>2699</SUB>> ]
+"7060" [label = <(&lt;operator&gt;.notEquals,currentState.frame != drawingState.frame)<SUB>2701</SUB>> ]
+"7068" [label = <(setProjection,display-&gt;setProjection(currentState.orientation, currentState.viewport,\012                                   currentState.frame))<SUB>2702</SUB>> ]
+"7083" [label = <(&lt;operator&gt;.notEquals,currentState.width != drawingState.width)<SUB>2705</SUB>> ]
+"7090" [label = <(&lt;operator&gt;.notEquals,currentState.height != drawingState.height)<SUB>2706</SUB>> ]
+"7098" [label = <(setDisplaySize,display-&gt;setDisplaySize(currentState.width, currentState.height))<SUB>2707</SUB>> ]
+"6967" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2680</SUB>> ]
+"6971" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;disconnect)<SUB>2681</SUB>> ]
+"6984" [label = <(&lt;operator&gt;.fieldAccess,currentState.physical)<SUB>2684</SUB>> ]
+"6989" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().allocatePhysicalDisplay)<SUB>2685</SUB>> ]
+"6992" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;hwcDisplayId)<SUB>2685</SUB>> ]
+"6995" [label = <(&lt;operator&gt;.indirectFieldAccess,physical-&gt;id)<SUB>2685</SUB>> ]
+"7009" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>2689</SUB>> ]
+"7013" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>2690</SUB>> ]
+"7031" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2696</SUB>> ]
+"7034" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2696</SUB>> ]
+"7037" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setLayerStack)<SUB>2697</SUB>> ]
+"7040" [label = <(&lt;operator&gt;.fieldAccess,currentState.layerStack)<SUB>2697</SUB>> ]
+"7046" [label = <(&lt;operator&gt;.notEquals,currentState.orientation != drawingState.orientation)<SUB>2699</SUB>> ]
+"7053" [label = <(&lt;operator&gt;.notEquals,currentState.viewport != drawingState.viewport)<SUB>2700</SUB>> ]
+"7061" [label = <(&lt;operator&gt;.fieldAccess,currentState.frame)<SUB>2701</SUB>> ]
+"7064" [label = <(&lt;operator&gt;.fieldAccess,drawingState.frame)<SUB>2701</SUB>> ]
+"7069" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setProjection)<SUB>2702</SUB>> ]
+"7072" [label = <(&lt;operator&gt;.fieldAccess,currentState.orientation)<SUB>2702</SUB>> ]
+"7075" [label = <(&lt;operator&gt;.fieldAccess,currentState.viewport)<SUB>2702</SUB>> ]
+"7078" [label = <(&lt;operator&gt;.fieldAccess,currentState.frame)<SUB>2703</SUB>> ]
+"7084" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2705</SUB>> ]
+"7087" [label = <(&lt;operator&gt;.fieldAccess,drawingState.width)<SUB>2705</SUB>> ]
+"7091" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2706</SUB>> ]
+"7094" [label = <(&lt;operator&gt;.fieldAccess,drawingState.height)<SUB>2706</SUB>> ]
+"7099" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setDisplaySize)<SUB>2707</SUB>> ]
+"7102" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2707</SUB>> ]
+"7105" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2707</SUB>> ]
+"7109" [label = <(isPrimary,display-&gt;isPrimary())<SUB>2709</SUB>> ]
+"6973" [label = <(FIELD_IDENTIFIER,disconnect,disconnect)<SUB>2681</SUB>> ]
+"6986" [label = <(FIELD_IDENTIFIER,physical,physical)<SUB>2684</SUB>> ]
+"6990" [label = <(getHwComposer,getHwComposer())<SUB>2685</SUB>> ]
+"6991" [label = <(FIELD_IDENTIFIER,allocatePhysicalDisplay,allocatePhysicalDisplay)<SUB>2685</SUB>> ]
+"6994" [label = <(FIELD_IDENTIFIER,hwcDisplayId,hwcDisplayId)<SUB>2685</SUB>> ]
+"6997" [label = <(FIELD_IDENTIFIER,id,id)<SUB>2685</SUB>> ]
+"7014" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2690</SUB>> ]
+"7017" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>2690</SUB>> ]
+"7039" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>2697</SUB>> ]
+"7042" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>2697</SUB>> ]
+"7047" [label = <(&lt;operator&gt;.fieldAccess,currentState.orientation)<SUB>2699</SUB>> ]
+"7050" [label = <(&lt;operator&gt;.fieldAccess,drawingState.orientation)<SUB>2699</SUB>> ]
+"7054" [label = <(&lt;operator&gt;.fieldAccess,currentState.viewport)<SUB>2700</SUB>> ]
+"7057" [label = <(&lt;operator&gt;.fieldAccess,drawingState.viewport)<SUB>2700</SUB>> ]
+"7063" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2701</SUB>> ]
+"7066" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2701</SUB>> ]
+"7071" [label = <(FIELD_IDENTIFIER,setProjection,setProjection)<SUB>2702</SUB>> ]
+"7074" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2702</SUB>> ]
+"7077" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2702</SUB>> ]
+"7080" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>2703</SUB>> ]
+"7086" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2705</SUB>> ]
+"7089" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2705</SUB>> ]
+"7093" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2706</SUB>> ]
+"7096" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2706</SUB>> ]
+"7101" [label = <(FIELD_IDENTIFIER,setDisplaySize,setDisplaySize)<SUB>2707</SUB>> ]
+"7104" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2707</SUB>> ]
+"7107" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2707</SUB>> ]
+"7110" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>2709</SUB>> ]
+"7114" [label = <(onPrimaryDisplayAreaChanged,mScheduler-&gt;onPrimaryDisplayAreaChanged(currentState.width * currentState.height))<SUB>2710</SUB>> ]
+"7128" [label = <(setViewport,mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize()))<SUB>2714</SUB>> ]
+"7049" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2699</SUB>> ]
+"7052" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>2699</SUB>> ]
+"7056" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2700</SUB>> ]
+"7059" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>2700</SUB>> ]
+"7112" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>2709</SUB>> ]
+"7115" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayAreaChanged)<SUB>2710</SUB>> ]
+"7118" [label = <(&lt;operator&gt;.multiplication,currentState.width * currentState.height)<SUB>2710</SUB>> ]
+"7129" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateOverlay-&gt;setViewport)<SUB>2714</SUB>> ]
+"7132" [label = <(getSize,display-&gt;getSize())<SUB>2714</SUB>> ]
+"7117" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayAreaChanged,onPrimaryDisplayAreaChanged)<SUB>2710</SUB>> ]
+"7119" [label = <(&lt;operator&gt;.fieldAccess,currentState.width)<SUB>2710</SUB>> ]
+"7122" [label = <(&lt;operator&gt;.fieldAccess,currentState.height)<SUB>2710</SUB>> ]
+"7131" [label = <(FIELD_IDENTIFIER,setViewport,setViewport)<SUB>2714</SUB>> ]
+"7133" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSize)<SUB>2714</SUB>> ]
+"7121" [label = <(FIELD_IDENTIFIER,width,width)<SUB>2710</SUB>> ]
+"7124" [label = <(FIELD_IDENTIFIER,height,height)<SUB>2710</SUB>> ]
+"7135" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>2714</SUB>> ]
+"6924" [label = <(METHOD,processDisplayChanged)<SUB>2673</SUB>> ]
+"7136" [label = <(METHOD_RETURN,void)<SUB>2673</SUB>> ]
+  "6930" -> "6945" 
+  "6940" -> "6951" 
   "6932" -> "6930" 
-  "6939" -> "6944" 
-  "6942" -> "6938" 
-  "6959" -> "6958" 
-  "6986" -> "7002" 
-  "6986" -> "6993" 
-  "7008" -> "7006" 
-  "7012" -> "7023" 
-  "7012" -> "7033" 
-  "7028" -> "7055" 
-  "7028" -> "7070" 
-  "7066" -> "7120" 
-  "7066" -> "7085" 
-  "6941" -> "6939" 
-  "6944" -> "6942" 
-  "6949" -> "6957" 
-  "6949" -> "6961" 
-  "6954" -> "6961" 
-  "6961" -> "6959" 
-  "6966" -> "6974" 
-  "6966" -> "6982" 
-  "6972" -> "6982" 
-  "6988" -> "6986" 
-  "6991" -> "6998" 
-  "6995" -> "7002" 
-  "7013" -> "7018" 
-  "7016" -> "7012" 
-  "7020" -> "7033" 
-  "7029" -> "7028" 
-  "7029" -> "7047" 
-  "7044" -> "7028" 
-  "7052" -> "7070" 
-  "7067" -> "7066" 
-  "7067" -> "7077" 
-  "7074" -> "7066" 
-  "7082" -> "7096" 
-  "6951" -> "6949" 
-  "6955" -> "6954" 
-  "6968" -> "6966" 
-  "6973" -> "6978" 
-  "6976" -> "6981" 
-  "6979" -> "6972" 
-  "6993" -> "6991" 
-  "6997" -> "6995" 
-  "7015" -> "7013" 
-  "7018" -> "7016" 
-  "7021" -> "7026" 
-  "7024" -> "7020" 
-  "7030" -> "7029" 
-  "7030" -> "7040" 
-  "7037" -> "7029" 
-  "7045" -> "7050" 
-  "7048" -> "7044" 
-  "7053" -> "7058" 
-  "7056" -> "7061" 
-  "7059" -> "7064" 
-  "7062" -> "7052" 
-  "7068" -> "7073" 
-  "7071" -> "7067" 
-  "7075" -> "7080" 
-  "7078" -> "7074" 
-  "7083" -> "7088" 
-  "7086" -> "7091" 
-  "7089" -> "7082" 
-  "7093" -> "7101" 
-  "7093" -> "7120" 
-  "7093" -> "7115" 
+  "6942" -> "6940" 
+  "6950" -> "6967" 
+  "6950" -> "7024" 
+  "6933" -> "6938" 
+  "6936" -> "6932" 
+  "6943" -> "6948" 
+  "6946" -> "6942" 
+  "6951" -> "6950" 
+  "6951" -> "6957" 
+  "6954" -> "6950" 
+  "6974" -> "6986" 
+  "6998" -> "7004" 
+  "7018" -> "7136" 
+  "7022" -> "7136" 
+  "7022" -> "7031" 
+  "6935" -> "6933" 
+  "6938" -> "6936" 
+  "6945" -> "6943" 
+  "6948" -> "6946" 
+  "6955" -> "6960" 
+  "6958" -> "6954" 
+  "6975" -> "6974" 
+  "7002" -> "7018" 
+  "7002" -> "7009" 
+  "7024" -> "7022" 
+  "7028" -> "7039" 
+  "7028" -> "7049" 
+  "7044" -> "7071" 
+  "7044" -> "7086" 
+  "7082" -> "7136" 
+  "7082" -> "7101" 
   "6957" -> "6955" 
-  "6970" -> "6968" 
-  "6974" -> "6975" 
-  "6975" -> "6973" 
-  "6978" -> "6976" 
-  "6981" -> "6979" 
-  "6998" -> "7001" 
-  "7001" -> "6997" 
-  "7023" -> "7021" 
-  "7026" -> "7024" 
-  "7031" -> "7036" 
-  "7034" -> "7030" 
-  "7038" -> "7043" 
-  "7041" -> "7037" 
-  "7047" -> "7045" 
-  "7050" -> "7048" 
-  "7055" -> "7053" 
-  "7058" -> "7056" 
-  "7061" -> "7059" 
-  "7064" -> "7062" 
-  "7070" -> "7068" 
-  "7073" -> "7071" 
+  "6960" -> "6958" 
+  "6965" -> "6973" 
+  "6965" -> "6977" 
+  "6970" -> "6977" 
+  "6977" -> "6975" 
+  "6982" -> "6990" 
+  "6982" -> "6998" 
+  "6988" -> "6998" 
+  "7004" -> "7002" 
+  "7007" -> "7014" 
+  "7011" -> "7018" 
+  "7029" -> "7034" 
+  "7032" -> "7028" 
+  "7036" -> "7049" 
+  "7045" -> "7044" 
+  "7045" -> "7063" 
+  "7060" -> "7044" 
+  "7068" -> "7086" 
+  "7083" -> "7082" 
+  "7083" -> "7093" 
+  "7090" -> "7082" 
+  "7098" -> "7112" 
+  "6967" -> "6965" 
+  "6971" -> "6970" 
+  "6984" -> "6982" 
+  "6989" -> "6994" 
+  "6992" -> "6997" 
+  "6995" -> "6988" 
+  "7009" -> "7007" 
+  "7013" -> "7011" 
+  "7031" -> "7029" 
+  "7034" -> "7032" 
+  "7037" -> "7042" 
+  "7040" -> "7036" 
+  "7046" -> "7045" 
+  "7046" -> "7056" 
+  "7053" -> "7045" 
+  "7061" -> "7066" 
+  "7064" -> "7060" 
+  "7069" -> "7074" 
+  "7072" -> "7077" 
+  "7075" -> "7080" 
+  "7078" -> "7068" 
+  "7084" -> "7089" 
+  "7087" -> "7083" 
+  "7091" -> "7096" 
+  "7094" -> "7090" 
+  "7099" -> "7104" 
+  "7102" -> "7107" 
+  "7105" -> "7098" 
+  "7109" -> "7117" 
+  "7109" -> "7136" 
+  "7109" -> "7131" 
+  "6973" -> "6971" 
+  "6986" -> "6984" 
+  "6990" -> "6991" 
+  "6991" -> "6989" 
+  "6994" -> "6992" 
+  "6997" -> "6995" 
+  "7014" -> "7017" 
+  "7017" -> "7013" 
+  "7039" -> "7037" 
+  "7042" -> "7040" 
+  "7047" -> "7052" 
+  "7050" -> "7046" 
+  "7054" -> "7059" 
+  "7057" -> "7053" 
+  "7063" -> "7061" 
+  "7066" -> "7064" 
+  "7071" -> "7069" 
+  "7074" -> "7072" 
   "7077" -> "7075" 
   "7080" -> "7078" 
-  "7085" -> "7083" 
-  "7088" -> "7086" 
-  "7091" -> "7089" 
-  "7094" -> "7093" 
-  "7098" -> "7120" 
-  "7098" -> "7115" 
-  "7112" -> "7120" 
-  "7033" -> "7031" 
-  "7036" -> "7034" 
-  "7040" -> "7038" 
-  "7043" -> "7041" 
+  "7086" -> "7084" 
+  "7089" -> "7087" 
+  "7093" -> "7091" 
   "7096" -> "7094" 
-  "7099" -> "7105" 
-  "7102" -> "7098" 
-  "7113" -> "7119" 
-  "7116" -> "7112" 
   "7101" -> "7099" 
-  "7103" -> "7108" 
-  "7106" -> "7102" 
-  "7115" -> "7113" 
-  "7117" -> "7116" 
-  "7105" -> "7103" 
-  "7108" -> "7106" 
-  "7119" -> "7117" 
-  "6908" -> "6919" 
+  "7104" -> "7102" 
+  "7107" -> "7105" 
+  "7110" -> "7109" 
+  "7114" -> "7136" 
+  "7114" -> "7131" 
+  "7128" -> "7136" 
+  "7049" -> "7047" 
+  "7052" -> "7050" 
+  "7056" -> "7054" 
+  "7059" -> "7057" 
+  "7112" -> "7110" 
+  "7115" -> "7121" 
+  "7118" -> "7114" 
+  "7129" -> "7135" 
+  "7132" -> "7128" 
+  "7117" -> "7115" 
+  "7119" -> "7124" 
+  "7122" -> "7118" 
+  "7131" -> "7129" 
+  "7133" -> "7132" 
+  "7121" -> "7119" 
+  "7124" -> "7122" 
+  "7135" -> "7133" 
+  "6924" -> "6935" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/169-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/169-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/169-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/169-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,116 +1,116 @@
 digraph "processDisplayChangesLocked" {  
-"7125" [label = <(curr,&amp; curr(mCurrentState.displays))<SUB>2725</SUB>> ]
-"7130" [label = <(draw,&amp; draw(mDrawingState.displays))<SUB>2726</SUB>> ]
-"7238" [label = <(&lt;operator&gt;.assignment,mDrawingState.displays = mCurrentState.displays)<SUB>2758</SUB>> ]
-"7126" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2725</SUB>> ]
-"7131" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>2726</SUB>> ]
-"7135" [label = <(&lt;operator&gt;.logicalNot,!curr.isIdenticalTo(draw))<SUB>2727</SUB>> ]
-"7239" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>2758</SUB>> ]
-"7242" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2758</SUB>> ]
-"7128" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2725</SUB>> ]
-"7133" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2726</SUB>> ]
-"7136" [label = <(isIdenticalTo,curr.isIdenticalTo(draw))<SUB>2727</SUB>> ]
-"7142" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2728</SUB>> ]
-"7241" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2758</SUB>> ]
-"7244" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2758</SUB>> ]
-"7137" [label = <(&lt;operator&gt;.fieldAccess,curr.isIdenticalTo)<SUB>2727</SUB>> ]
-"7151" [label = <(&lt;operator&gt;.lessThan,i &lt; draw.size())<SUB>2734</SUB>> ]
-"7157" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>2734</SUB>> ]
-"7207" [label = <(&lt;operator&gt;.lessThan,i &lt; curr.size())<SUB>2750</SUB>> ]
-"7213" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>2750</SUB>> ]
-"7139" [label = <(FIELD_IDENTIFIER,isIdenticalTo,isIdenticalTo)<SUB>2727</SUB>> ]
-"7148" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2734</SUB>> ]
-"7153" [label = <(size,draw.size())<SUB>2734</SUB>> ]
-"7161" [label = <(&lt;operator&gt;.assignment,&amp; displayToken = draw.keyAt(i))<SUB>2735</SUB>> ]
-"7169" [label = <(&lt;operator&gt;.assignment,j = curr.indexOfKey(displayToken))<SUB>2736</SUB>> ]
-"7204" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2750</SUB>> ]
-"7209" [label = <(size,curr.size())<SUB>2750</SUB>> ]
-"7217" [label = <(&lt;operator&gt;.assignment,&amp; displayToken = curr.keyAt(i))<SUB>2751</SUB>> ]
-"7154" [label = <(&lt;operator&gt;.fieldAccess,draw.size)<SUB>2734</SUB>> ]
-"7163" [label = <(keyAt,draw.keyAt(i))<SUB>2735</SUB>> ]
-"7171" [label = <(indexOfKey,curr.indexOfKey(displayToken))<SUB>2736</SUB>> ]
-"7177" [label = <(&lt;operator&gt;.lessThan,j &lt; 0)<SUB>2737</SUB>> ]
-"7210" [label = <(&lt;operator&gt;.fieldAccess,curr.size)<SUB>2750</SUB>> ]
-"7219" [label = <(keyAt,curr.keyAt(i))<SUB>2751</SUB>> ]
-"7225" [label = <(&lt;operator&gt;.lessThan,draw.indexOfKey(displayToken) &lt; 0)<SUB>2752</SUB>> ]
-"7156" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2734</SUB>> ]
-"7164" [label = <(&lt;operator&gt;.fieldAccess,draw.keyAt)<SUB>2735</SUB>> ]
-"7172" [label = <(&lt;operator&gt;.fieldAccess,curr.indexOfKey)<SUB>2736</SUB>> ]
-"7181" [label = <(processDisplayRemoved,processDisplayRemoved(displayToken))<SUB>2739</SUB>> ]
-"7212" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2750</SUB>> ]
-"7220" [label = <(&lt;operator&gt;.fieldAccess,curr.keyAt)<SUB>2751</SUB>> ]
-"7226" [label = <(indexOfKey,draw.indexOfKey(displayToken))<SUB>2752</SUB>> ]
-"7233" [label = <(processDisplayAdded,processDisplayAdded(displayToken, curr[i]))<SUB>2753</SUB>> ]
-"7166" [label = <(FIELD_IDENTIFIER,keyAt,keyAt)<SUB>2735</SUB>> ]
-"7174" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2736</SUB>> ]
-"7186" [label = <(&lt;operator&gt;.assignment,&amp; currentState = curr[j])<SUB>2742</SUB>> ]
-"7192" [label = <(&lt;operator&gt;.assignment,&amp; drawingState = draw[i])<SUB>2743</SUB>> ]
-"7197" [label = <(processDisplayChanged,processDisplayChanged(displayToken, currentState, drawingState))<SUB>2744</SUB>> ]
-"7222" [label = <(FIELD_IDENTIFIER,keyAt,keyAt)<SUB>2751</SUB>> ]
-"7227" [label = <(&lt;operator&gt;.fieldAccess,draw.indexOfKey)<SUB>2752</SUB>> ]
-"7235" [label = <(&lt;operator&gt;.indirectIndexAccess,curr[i])<SUB>2753</SUB>> ]
-"7188" [label = <(&lt;operator&gt;.indirectIndexAccess,curr[j])<SUB>2742</SUB>> ]
-"7194" [label = <(&lt;operator&gt;.indirectIndexAccess,draw[i])<SUB>2743</SUB>> ]
-"7229" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2752</SUB>> ]
-"7122" [label = <(METHOD,processDisplayChangesLocked)<SUB>2721</SUB>> ]
-"7245" [label = <(METHOD_RETURN,void)<SUB>2721</SUB>> ]
-  "7125" -> "7133" 
-  "7130" -> "7139" 
-  "7238" -> "7245" 
-  "7126" -> "7125" 
-  "7131" -> "7130" 
-  "7135" -> "7142" 
-  "7135" -> "7241" 
-  "7239" -> "7244" 
-  "7242" -> "7238" 
-  "7128" -> "7126" 
-  "7133" -> "7131" 
-  "7136" -> "7135" 
-  "7142" -> "7148" 
-  "7241" -> "7239" 
-  "7244" -> "7242" 
-  "7137" -> "7136" 
-  "7151" -> "7166" 
-  "7151" -> "7204" 
-  "7157" -> "7156" 
-  "7207" -> "7222" 
-  "7207" -> "7241" 
-  "7213" -> "7212" 
-  "7139" -> "7137" 
-  "7148" -> "7156" 
-  "7153" -> "7151" 
-  "7161" -> "7174" 
-  "7169" -> "7177" 
-  "7204" -> "7212" 
-  "7209" -> "7207" 
-  "7217" -> "7229" 
-  "7154" -> "7153" 
-  "7163" -> "7161" 
-  "7171" -> "7169" 
-  "7177" -> "7181" 
-  "7177" -> "7188" 
-  "7210" -> "7209" 
-  "7219" -> "7217" 
-  "7225" -> "7235" 
-  "7225" -> "7213" 
-  "7156" -> "7154" 
-  "7164" -> "7163" 
-  "7172" -> "7171" 
-  "7181" -> "7157" 
-  "7212" -> "7210" 
-  "7220" -> "7219" 
+"7141" [label = <(curr,&amp; curr(mCurrentState.displays))<SUB>2724</SUB>> ]
+"7146" [label = <(draw,&amp; draw(mDrawingState.displays))<SUB>2725</SUB>> ]
+"7254" [label = <(&lt;operator&gt;.assignment,mDrawingState.displays = mCurrentState.displays)<SUB>2757</SUB>> ]
+"7142" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2724</SUB>> ]
+"7147" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>2725</SUB>> ]
+"7151" [label = <(&lt;operator&gt;.logicalNot,!curr.isIdenticalTo(draw))<SUB>2726</SUB>> ]
+"7255" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>2757</SUB>> ]
+"7258" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>2757</SUB>> ]
+"7144" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2724</SUB>> ]
+"7149" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2725</SUB>> ]
+"7152" [label = <(isIdenticalTo,curr.isIdenticalTo(draw))<SUB>2726</SUB>> ]
+"7158" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2727</SUB>> ]
+"7257" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2757</SUB>> ]
+"7260" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>2757</SUB>> ]
+"7153" [label = <(&lt;operator&gt;.fieldAccess,curr.isIdenticalTo)<SUB>2726</SUB>> ]
+"7167" [label = <(&lt;operator&gt;.lessThan,i &lt; draw.size())<SUB>2733</SUB>> ]
+"7173" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>2733</SUB>> ]
+"7223" [label = <(&lt;operator&gt;.lessThan,i &lt; curr.size())<SUB>2749</SUB>> ]
+"7229" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>2749</SUB>> ]
+"7155" [label = <(FIELD_IDENTIFIER,isIdenticalTo,isIdenticalTo)<SUB>2726</SUB>> ]
+"7164" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2733</SUB>> ]
+"7169" [label = <(size,draw.size())<SUB>2733</SUB>> ]
+"7177" [label = <(&lt;operator&gt;.assignment,&amp; displayToken = draw.keyAt(i))<SUB>2734</SUB>> ]
+"7185" [label = <(&lt;operator&gt;.assignment,j = curr.indexOfKey(displayToken))<SUB>2735</SUB>> ]
+"7220" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2749</SUB>> ]
+"7225" [label = <(size,curr.size())<SUB>2749</SUB>> ]
+"7233" [label = <(&lt;operator&gt;.assignment,&amp; displayToken = curr.keyAt(i))<SUB>2750</SUB>> ]
+"7170" [label = <(&lt;operator&gt;.fieldAccess,draw.size)<SUB>2733</SUB>> ]
+"7179" [label = <(keyAt,draw.keyAt(i))<SUB>2734</SUB>> ]
+"7187" [label = <(indexOfKey,curr.indexOfKey(displayToken))<SUB>2735</SUB>> ]
+"7193" [label = <(&lt;operator&gt;.lessThan,j &lt; 0)<SUB>2736</SUB>> ]
+"7226" [label = <(&lt;operator&gt;.fieldAccess,curr.size)<SUB>2749</SUB>> ]
+"7235" [label = <(keyAt,curr.keyAt(i))<SUB>2750</SUB>> ]
+"7241" [label = <(&lt;operator&gt;.lessThan,draw.indexOfKey(displayToken) &lt; 0)<SUB>2751</SUB>> ]
+"7172" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2733</SUB>> ]
+"7180" [label = <(&lt;operator&gt;.fieldAccess,draw.keyAt)<SUB>2734</SUB>> ]
+"7188" [label = <(&lt;operator&gt;.fieldAccess,curr.indexOfKey)<SUB>2735</SUB>> ]
+"7197" [label = <(processDisplayRemoved,processDisplayRemoved(displayToken))<SUB>2738</SUB>> ]
+"7228" [label = <(FIELD_IDENTIFIER,size,size)<SUB>2749</SUB>> ]
+"7236" [label = <(&lt;operator&gt;.fieldAccess,curr.keyAt)<SUB>2750</SUB>> ]
+"7242" [label = <(indexOfKey,draw.indexOfKey(displayToken))<SUB>2751</SUB>> ]
+"7249" [label = <(processDisplayAdded,processDisplayAdded(displayToken, curr[i]))<SUB>2752</SUB>> ]
+"7182" [label = <(FIELD_IDENTIFIER,keyAt,keyAt)<SUB>2734</SUB>> ]
+"7190" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2735</SUB>> ]
+"7202" [label = <(&lt;operator&gt;.assignment,&amp; currentState = curr[j])<SUB>2741</SUB>> ]
+"7208" [label = <(&lt;operator&gt;.assignment,&amp; drawingState = draw[i])<SUB>2742</SUB>> ]
+"7213" [label = <(processDisplayChanged,processDisplayChanged(displayToken, currentState, drawingState))<SUB>2743</SUB>> ]
+"7238" [label = <(FIELD_IDENTIFIER,keyAt,keyAt)<SUB>2750</SUB>> ]
+"7243" [label = <(&lt;operator&gt;.fieldAccess,draw.indexOfKey)<SUB>2751</SUB>> ]
+"7251" [label = <(&lt;operator&gt;.indirectIndexAccess,curr[i])<SUB>2752</SUB>> ]
+"7204" [label = <(&lt;operator&gt;.indirectIndexAccess,curr[j])<SUB>2741</SUB>> ]
+"7210" [label = <(&lt;operator&gt;.indirectIndexAccess,draw[i])<SUB>2742</SUB>> ]
+"7245" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>2751</SUB>> ]
+"7138" [label = <(METHOD,processDisplayChangesLocked)<SUB>2720</SUB>> ]
+"7261" [label = <(METHOD_RETURN,void)<SUB>2720</SUB>> ]
+  "7141" -> "7149" 
+  "7146" -> "7155" 
+  "7254" -> "7261" 
+  "7142" -> "7141" 
+  "7147" -> "7146" 
+  "7151" -> "7158" 
+  "7151" -> "7257" 
+  "7255" -> "7260" 
+  "7258" -> "7254" 
+  "7144" -> "7142" 
+  "7149" -> "7147" 
+  "7152" -> "7151" 
+  "7158" -> "7164" 
+  "7257" -> "7255" 
+  "7260" -> "7258" 
+  "7153" -> "7152" 
+  "7167" -> "7182" 
+  "7167" -> "7220" 
+  "7173" -> "7172" 
+  "7223" -> "7238" 
+  "7223" -> "7257" 
+  "7229" -> "7228" 
+  "7155" -> "7153" 
+  "7164" -> "7172" 
+  "7169" -> "7167" 
+  "7177" -> "7190" 
+  "7185" -> "7193" 
+  "7220" -> "7228" 
+  "7225" -> "7223" 
+  "7233" -> "7245" 
+  "7170" -> "7169" 
+  "7179" -> "7177" 
+  "7187" -> "7185" 
+  "7193" -> "7197" 
+  "7193" -> "7204" 
   "7226" -> "7225" 
-  "7233" -> "7213" 
-  "7166" -> "7164" 
-  "7174" -> "7172" 
-  "7186" -> "7194" 
-  "7192" -> "7197" 
-  "7197" -> "7157" 
-  "7222" -> "7220" 
-  "7227" -> "7226" 
   "7235" -> "7233" 
-  "7188" -> "7186" 
-  "7194" -> "7192" 
-  "7229" -> "7227" 
-  "7122" -> "7128" 
+  "7241" -> "7251" 
+  "7241" -> "7229" 
+  "7172" -> "7170" 
+  "7180" -> "7179" 
+  "7188" -> "7187" 
+  "7197" -> "7173" 
+  "7228" -> "7226" 
+  "7236" -> "7235" 
+  "7242" -> "7241" 
+  "7249" -> "7229" 
+  "7182" -> "7180" 
+  "7190" -> "7188" 
+  "7202" -> "7210" 
+  "7208" -> "7213" 
+  "7213" -> "7173" 
+  "7238" -> "7236" 
+  "7243" -> "7242" 
+  "7251" -> "7249" 
+  "7204" -> "7202" 
+  "7210" -> "7208" 
+  "7245" -> "7243" 
+  "7138" -> "7144" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/17-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/17-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/17-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/17-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_24" {  
-"79" [label = <(METHOD,anonymous_lambda_24)<SUB>2378</SUB>> ]
-"81" [label = <(METHOD_RETURN,ANY)<SUB>2378</SUB>> ]
+"79" [label = <(METHOD,anonymous_lambda_24)<SUB>2377</SUB>> ]
+"81" [label = <(METHOD_RETURN,ANY)<SUB>2377</SUB>> ]
   "79" -> "81" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/170-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/170-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/170-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/170-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,81 +1,81 @@
 digraph "handleTransactionLocked" {  
-"7251" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>2763</SUB>> ]
-"7257" [label = <(traverse,mCurrentState.traverse([expectedPresentTime](Layer* layer) {\012        layer-&gt;notifyAvailableFrames(expectedPresentTime);\012 }))<SUB>2766</SUB>> ]
-"7325" [label = <(commitInputWindowCommands,commitInputWindowCommands())<SUB>2893</SUB>> ]
-"7326" [label = <(commitTransaction,commitTransaction())<SUB>2894</SUB>> ]
-"7253" [label = <(load,mExpectedPresentTime.load())<SUB>2763</SUB>> ]
-"7258" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>2766</SUB>> ]
-"7261" [label = <(METHOD_REF,ANY anonymous_lambda_26 (Layer* layer),mCurrentState.traverse([expectedPresentTime](Layer* layer) {\012        layer-&gt;notifyAvailableFrames(expectedPresentTime);\012 }))<SUB>2766</SUB>> ]
-"7263" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp; eTraversalNeeded) || mForceTraversal)<SUB>2775</SUB>> ]
-"7278" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eDisplayTransactionNeeded)<SUB>2795</SUB>> ]
-"7285" [label = <(&lt;operator&gt;.and,transactionFlags &amp; (eTransformHintUpdateNeeded | eDisplayTransactionNeeded))<SUB>2800</SUB>> ]
-"7254" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>2763</SUB>> ]
-"7260" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2766</SUB>> ]
-"7264" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eTraversalNeeded)<SUB>2775</SUB>> ]
-"7269" [label = <(&lt;operator&gt;.assignment,mForceTraversal = false)<SUB>2776</SUB>> ]
-"7272" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012 const uint32_t flags = layer-&gt;doTransaction(0);\012 if (flags &amp; Layer::eVisibleRegion)\012                mVisibleRegionsDirty = true;\012\012 if (flags &amp; Layer::eInputInfoChanged) {\012                mInputInfoChanged = true;\012 }\012 }))<SUB>2777</SUB>> ]
-"7282" [label = <(processDisplayChangesLocked,processDisplayChangesLocked())<SUB>2796</SUB>> ]
-"7283" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>2797</SUB>> ]
-"7287" [label = <(&lt;operator&gt;.or,eTransformHintUpdateNeeded | eDisplayTransactionNeeded)<SUB>2800</SUB>> ]
-"7293" [label = <(&lt;operator&gt;.assignment,currentlayerStack = 0)<SUB>2821</SUB>> ]
-"7297" [label = <(&lt;operator&gt;.assignment,first = true)<SUB>2822</SUB>> ]
-"7300" [label = <(UNKNOWN,mCurrentState.traverse([&amp;](Layer* layer) REQUIRES(mStateLock) {\012 // NOTE: we rely on the fact that layers are sorted by\012 // layerStack first (so we don't have to traverse the list\012 // of displays for every layer).\012 uint32_t layerStack = layer-&gt;getLayerStack();\012 if (first || currentlayerStack != layerStack) {\012                currentlayerStack = layerStack;\012 // figure out if this layerstack is mirrored\012 // (more than one display) if so, pick the default display,\012 // if not, pick the only display it's on.\012                hintDisplay = nullptr;\012 for (const auto&amp; [token, display] : mDisplays) {\012 if (display-&gt;getCompositionDisplay()\012 -&gt;belongsInOutput(layer-&gt;getLayerStack(),\012                                                  layer-&gt;getPrimaryDisplayOnly())) {\012 if (hintDisplay) {\012                            hintDisplay = nullptr;\012 break;\012 } else {\012                            hintDisplay = display;\012 }\012 }\012 }\012 }\012\012 if (!hintDisplay) {\012 // NOTE: TEMPORARY FIX ONLY. Real fix should cause layers to\012 // redraw after transform hint changes. See bug 8508397.\012\012 // could be null when this layer is using a layerStack\012 // that is not visible on any display. Also can occur at\012 // screen off/on times.\012                hintDisplay = getDefaultDisplayDeviceLocked();\012 }\012\012 // could be null if there is no display available at all to get\012 // the transform hint from.\012 if (hintDisplay) {\012                layer-&gt;updateTransformHint(hintDisplay-&gt;getTransformHint());\012 }\012\012            first = false;\012 },mCurrentState.traverse([&amp;](Layer* layer) REQUIRES(mStateLock) {\012 // NOTE: we rely on the fact that layers are sorted by\012 // layerStack first (so we don't have to traverse the list\012 // of displays for every layer).\012 uint32_t layerStack = layer-&gt;getLayerStack();\012 if (first || currentlayerStack != layerStack) {\012                currentlayerStack = layerStack;\012 // figure out if this layerstack is mirrored\012 // (more than one display) if so, pick the default display,\012 // if not, pick the only display it's on.\012                hintDisplay = nullptr;\012 for (const auto&amp; [token, display] : mDisplays) {\012 if (display-&gt;getCompositionDisplay()\012 -&gt;belongsInOutput(layer-&gt;getLayerStack(),\012                                                  layer-&gt;getPrimaryDisplayOnly())) {\012 if (hintDisplay) {\012                            hintDisplay = nullptr;\012 break;\012 } else {\012                            hintDisplay = display;\012 }\012 }\012 }\012 }\012\012 if (!hintDisplay) {\012 // NOTE: TEMPORARY FIX ONLY. Real fix should cause layers to\012 // redraw after transform hint changes. See bug 8508397.\012\012 // could be null when this layer is using a layerStack\012 // that is not visible on any display. Also can occur at\012 // screen off/on times.\012                hintDisplay = getDefaultDisplayDeviceLocked();\012 }\012\012 // could be null if there is no display available at all to get\012 // the transform hint from.\012 if (hintDisplay) {\012                layer-&gt;updateTransformHint(hintDisplay-&gt;getTransformHint());\012 }\012\012            first = false;\012 })<SUB>2823</SUB>> ]
-"7301" [label = <(UNKNOWN,);,);)<SUB>2865</SUB>> ]
-"7305" [label = <(&lt;operator&gt;.assignment,mLayersAdded = false)<SUB>2873</SUB>> ]
-"7308" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2875</SUB>> ]
-"7314" [label = <(&lt;operator&gt;.assignment,mLayersRemoved = false)<SUB>2881</SUB>> ]
-"7317" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2882</SUB>> ]
-"7320" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 if (mLayersPendingRemoval.indexOf(layer) &gt;= 0) {\012 // this layer is not visible anymore\012 Region visibleReg;\012                visibleReg.set(layer-&gt;getScreenBounds());\012                invalidateLayerStack(layer, visibleReg);\012 }\012 }))<SUB>2883</SUB>> ]
-"7256" [label = <(FIELD_IDENTIFIER,load,load)<SUB>2763</SUB>> ]
-"7273" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>2777</SUB>> ]
-"7276" [label = <(METHOD_REF,ANY anonymous_lambda_27 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012 const uint32_t flags = layer-&gt;doTransaction(0);\012 if (flags &amp; Layer::eVisibleRegion)\012                mVisibleRegionsDirty = true;\012\012 if (flags &amp; Layer::eInputInfoChanged) {\012                mInputInfoChanged = true;\012 }\012 }))<SUB>2777</SUB>> ]
-"7321" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>2883</SUB>> ]
-"7324" [label = <(METHOD_REF,ANY anonymous_lambda_28 (Layer* layer),mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 if (mLayersPendingRemoval.indexOf(layer) &gt;= 0) {\012 // this layer is not visible anymore\012 Region visibleReg;\012                visibleReg.set(layer-&gt;getScreenBounds());\012                invalidateLayerStack(layer, visibleReg);\012 }\012 }))<SUB>2883</SUB>> ]
-"7275" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2777</SUB>> ]
-"7323" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>2883</SUB>> ]
-"7247" [label = <(METHOD,handleTransactionLocked)<SUB>2761</SUB>> ]
-"7327" [label = <(METHOD_RETURN,void)<SUB>2761</SUB>> ]
-  "7251" -> "7260" 
-  "7257" -> "7264" 
-  "7325" -> "7326" 
-  "7326" -> "7327" 
-  "7253" -> "7251" 
-  "7258" -> "7261" 
-  "7261" -> "7257" 
-  "7263" -> "7269" 
-  "7263" -> "7278" 
-  "7278" -> "7282" 
-  "7278" -> "7287" 
-  "7285" -> "7293" 
-  "7285" -> "7305" 
-  "7285" -> "7325" 
-  "7285" -> "7314" 
-  "7254" -> "7253" 
-  "7260" -> "7258" 
-  "7264" -> "7263" 
-  "7269" -> "7275" 
-  "7272" -> "7278" 
-  "7282" -> "7283" 
-  "7283" -> "7287" 
-  "7287" -> "7285" 
-  "7293" -> "7297" 
-  "7297" -> "7300" 
-  "7300" -> "7301" 
-  "7301" -> "7305" 
-  "7301" -> "7325" 
-  "7301" -> "7314" 
-  "7305" -> "7308" 
-  "7308" -> "7325" 
-  "7308" -> "7314" 
-  "7314" -> "7317" 
-  "7317" -> "7323" 
-  "7320" -> "7325" 
-  "7256" -> "7254" 
-  "7273" -> "7276" 
-  "7276" -> "7272" 
+"7267" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>2762</SUB>> ]
+"7273" [label = <(traverse,mCurrentState.traverse([expectedPresentTime](Layer* layer) {\012        layer-&gt;notifyAvailableFrames(expectedPresentTime);\012 }))<SUB>2765</SUB>> ]
+"7341" [label = <(commitInputWindowCommands,commitInputWindowCommands())<SUB>2892</SUB>> ]
+"7342" [label = <(commitTransaction,commitTransaction())<SUB>2893</SUB>> ]
+"7269" [label = <(load,mExpectedPresentTime.load())<SUB>2762</SUB>> ]
+"7274" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>2765</SUB>> ]
+"7277" [label = <(METHOD_REF,ANY anonymous_lambda_26 (Layer* layer),mCurrentState.traverse([expectedPresentTime](Layer* layer) {\012        layer-&gt;notifyAvailableFrames(expectedPresentTime);\012 }))<SUB>2765</SUB>> ]
+"7279" [label = <(&lt;operator&gt;.logicalOr,(transactionFlags &amp; eTraversalNeeded) || mForceTraversal)<SUB>2774</SUB>> ]
+"7294" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eDisplayTransactionNeeded)<SUB>2794</SUB>> ]
+"7301" [label = <(&lt;operator&gt;.and,transactionFlags &amp; (eTransformHintUpdateNeeded | eDisplayTransactionNeeded))<SUB>2799</SUB>> ]
+"7270" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>2762</SUB>> ]
+"7276" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2765</SUB>> ]
+"7280" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eTraversalNeeded)<SUB>2774</SUB>> ]
+"7285" [label = <(&lt;operator&gt;.assignment,mForceTraversal = false)<SUB>2775</SUB>> ]
+"7288" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012 const uint32_t flags = layer-&gt;doTransaction(0);\012 if (flags &amp; Layer::eVisibleRegion)\012                mVisibleRegionsDirty = true;\012\012 if (flags &amp; Layer::eInputInfoChanged) {\012                mInputInfoChanged = true;\012 }\012 }))<SUB>2776</SUB>> ]
+"7298" [label = <(processDisplayChangesLocked,processDisplayChangesLocked())<SUB>2795</SUB>> ]
+"7299" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>2796</SUB>> ]
+"7303" [label = <(&lt;operator&gt;.or,eTransformHintUpdateNeeded | eDisplayTransactionNeeded)<SUB>2799</SUB>> ]
+"7309" [label = <(&lt;operator&gt;.assignment,currentlayerStack = 0)<SUB>2820</SUB>> ]
+"7313" [label = <(&lt;operator&gt;.assignment,first = true)<SUB>2821</SUB>> ]
+"7316" [label = <(UNKNOWN,mCurrentState.traverse([&amp;](Layer* layer) REQUIRES(mStateLock) {\012 // NOTE: we rely on the fact that layers are sorted by\012 // layerStack first (so we don't have to traverse the list\012 // of displays for every layer).\012 uint32_t layerStack = layer-&gt;getLayerStack();\012 if (first || currentlayerStack != layerStack) {\012                currentlayerStack = layerStack;\012 // figure out if this layerstack is mirrored\012 // (more than one display) if so, pick the default display,\012 // if not, pick the only display it's on.\012                hintDisplay = nullptr;\012 for (const auto&amp; [token, display] : mDisplays) {\012 if (display-&gt;getCompositionDisplay()\012 -&gt;belongsInOutput(layer-&gt;getLayerStack(),\012                                                  layer-&gt;getPrimaryDisplayOnly())) {\012 if (hintDisplay) {\012                            hintDisplay = nullptr;\012 break;\012 } else {\012                            hintDisplay = display;\012 }\012 }\012 }\012 }\012\012 if (!hintDisplay) {\012 // NOTE: TEMPORARY FIX ONLY. Real fix should cause layers to\012 // redraw after transform hint changes. See bug 8508397.\012\012 // could be null when this layer is using a layerStack\012 // that is not visible on any display. Also can occur at\012 // screen off/on times.\012                hintDisplay = getDefaultDisplayDeviceLocked();\012 }\012\012 // could be null if there is no display available at all to get\012 // the transform hint from.\012 if (hintDisplay) {\012                layer-&gt;updateTransformHint(hintDisplay-&gt;getTransformHint());\012 }\012\012            first = false;\012 },mCurrentState.traverse([&amp;](Layer* layer) REQUIRES(mStateLock) {\012 // NOTE: we rely on the fact that layers are sorted by\012 // layerStack first (so we don't have to traverse the list\012 // of displays for every layer).\012 uint32_t layerStack = layer-&gt;getLayerStack();\012 if (first || currentlayerStack != layerStack) {\012                currentlayerStack = layerStack;\012 // figure out if this layerstack is mirrored\012 // (more than one display) if so, pick the default display,\012 // if not, pick the only display it's on.\012                hintDisplay = nullptr;\012 for (const auto&amp; [token, display] : mDisplays) {\012 if (display-&gt;getCompositionDisplay()\012 -&gt;belongsInOutput(layer-&gt;getLayerStack(),\012                                                  layer-&gt;getPrimaryDisplayOnly())) {\012 if (hintDisplay) {\012                            hintDisplay = nullptr;\012 break;\012 } else {\012                            hintDisplay = display;\012 }\012 }\012 }\012 }\012\012 if (!hintDisplay) {\012 // NOTE: TEMPORARY FIX ONLY. Real fix should cause layers to\012 // redraw after transform hint changes. See bug 8508397.\012\012 // could be null when this layer is using a layerStack\012 // that is not visible on any display. Also can occur at\012 // screen off/on times.\012                hintDisplay = getDefaultDisplayDeviceLocked();\012 }\012\012 // could be null if there is no display available at all to get\012 // the transform hint from.\012 if (hintDisplay) {\012                layer-&gt;updateTransformHint(hintDisplay-&gt;getTransformHint());\012 }\012\012            first = false;\012 })<SUB>2822</SUB>> ]
+"7317" [label = <(UNKNOWN,);,);)<SUB>2864</SUB>> ]
+"7321" [label = <(&lt;operator&gt;.assignment,mLayersAdded = false)<SUB>2872</SUB>> ]
+"7324" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2874</SUB>> ]
+"7330" [label = <(&lt;operator&gt;.assignment,mLayersRemoved = false)<SUB>2880</SUB>> ]
+"7333" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>2881</SUB>> ]
+"7336" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 if (mLayersPendingRemoval.indexOf(layer) &gt;= 0) {\012 // this layer is not visible anymore\012 Region visibleReg;\012                visibleReg.set(layer-&gt;getScreenBounds());\012                invalidateLayerStack(layer, visibleReg);\012 }\012 }))<SUB>2882</SUB>> ]
+"7272" [label = <(FIELD_IDENTIFIER,load,load)<SUB>2762</SUB>> ]
+"7289" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>2776</SUB>> ]
+"7292" [label = <(METHOD_REF,ANY anonymous_lambda_27 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012 const uint32_t flags = layer-&gt;doTransaction(0);\012 if (flags &amp; Layer::eVisibleRegion)\012                mVisibleRegionsDirty = true;\012\012 if (flags &amp; Layer::eInputInfoChanged) {\012                mInputInfoChanged = true;\012 }\012 }))<SUB>2776</SUB>> ]
+"7337" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>2882</SUB>> ]
+"7340" [label = <(METHOD_REF,ANY anonymous_lambda_28 (Layer* layer),mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 if (mLayersPendingRemoval.indexOf(layer) &gt;= 0) {\012 // this layer is not visible anymore\012 Region visibleReg;\012                visibleReg.set(layer-&gt;getScreenBounds());\012                invalidateLayerStack(layer, visibleReg);\012 }\012 }))<SUB>2882</SUB>> ]
+"7291" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>2776</SUB>> ]
+"7339" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>2882</SUB>> ]
+"7263" [label = <(METHOD,handleTransactionLocked)<SUB>2760</SUB>> ]
+"7343" [label = <(METHOD_RETURN,void)<SUB>2760</SUB>> ]
+  "7267" -> "7276" 
+  "7273" -> "7280" 
+  "7341" -> "7342" 
+  "7342" -> "7343" 
+  "7269" -> "7267" 
+  "7274" -> "7277" 
+  "7277" -> "7273" 
+  "7279" -> "7285" 
+  "7279" -> "7294" 
+  "7294" -> "7298" 
+  "7294" -> "7303" 
+  "7301" -> "7309" 
+  "7301" -> "7321" 
+  "7301" -> "7341" 
+  "7301" -> "7330" 
+  "7270" -> "7269" 
+  "7276" -> "7274" 
+  "7280" -> "7279" 
+  "7285" -> "7291" 
+  "7288" -> "7294" 
+  "7298" -> "7299" 
+  "7299" -> "7303" 
+  "7303" -> "7301" 
+  "7309" -> "7313" 
+  "7313" -> "7316" 
+  "7316" -> "7317" 
+  "7317" -> "7321" 
+  "7317" -> "7341" 
+  "7317" -> "7330" 
   "7321" -> "7324" 
-  "7324" -> "7320" 
-  "7275" -> "7273" 
-  "7323" -> "7321" 
-  "7247" -> "7256" 
+  "7324" -> "7341" 
+  "7324" -> "7330" 
+  "7330" -> "7333" 
+  "7333" -> "7339" 
+  "7336" -> "7341" 
+  "7272" -> "7270" 
+  "7289" -> "7292" 
+  "7292" -> "7288" 
+  "7337" -> "7340" 
+  "7340" -> "7336" 
+  "7291" -> "7289" 
+  "7339" -> "7337" 
+  "7263" -> "7272" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/171-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/171-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/171-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/171-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,32 +1,32 @@
 digraph "updateInputFlinger" {  
-"7331" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2898</SUB>> ]
-"7354" [label = <(clear,mInputWindowCommands.clear())<SUB>2912</SUB>> ]
-"7333" [label = <(&lt;operator&gt;.logicalNot,!mInputFlinger)<SUB>2899</SUB>> ]
-"7338" [label = <(&lt;operator&gt;.logicalOr,mVisibleRegionsDirty || mInputInfoChanged)<SUB>2903</SUB>> ]
-"7355" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.clear)<SUB>2912</SUB>> ]
-"7336" [label = <(RETURN,return;,return;)<SUB>2900</SUB>> ]
-"7342" [label = <(&lt;operator&gt;.assignment,mInputInfoChanged = false)<SUB>2904</SUB>> ]
-"7345" [label = <(updateInputWindowInfo,updateInputWindowInfo())<SUB>2905</SUB>> ]
-"7357" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2912</SUB>> ]
-"7349" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.syncInputWindows)<SUB>2906</SUB>> ]
-"7351" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>2906</SUB>> ]
-"7353" [label = <(setInputWindowsFinished,setInputWindowsFinished())<SUB>2909</SUB>> ]
-"7329" [label = <(METHOD,updateInputFlinger)<SUB>2897</SUB>> ]
-"7358" [label = <(METHOD_RETURN,void)<SUB>2897</SUB>> ]
-  "7331" -> "7333" 
+"7347" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>2897</SUB>> ]
+"7370" [label = <(clear,mInputWindowCommands.clear())<SUB>2911</SUB>> ]
+"7349" [label = <(&lt;operator&gt;.logicalNot,!mInputFlinger)<SUB>2898</SUB>> ]
+"7354" [label = <(&lt;operator&gt;.logicalOr,mVisibleRegionsDirty || mInputInfoChanged)<SUB>2902</SUB>> ]
+"7371" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.clear)<SUB>2911</SUB>> ]
+"7352" [label = <(RETURN,return;,return;)<SUB>2899</SUB>> ]
+"7358" [label = <(&lt;operator&gt;.assignment,mInputInfoChanged = false)<SUB>2903</SUB>> ]
+"7361" [label = <(updateInputWindowInfo,updateInputWindowInfo())<SUB>2904</SUB>> ]
+"7373" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2911</SUB>> ]
+"7365" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.syncInputWindows)<SUB>2905</SUB>> ]
+"7367" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>2905</SUB>> ]
+"7369" [label = <(setInputWindowsFinished,setInputWindowsFinished())<SUB>2908</SUB>> ]
+"7345" [label = <(METHOD,updateInputFlinger)<SUB>2896</SUB>> ]
+"7374" [label = <(METHOD_RETURN,void)<SUB>2896</SUB>> ]
+  "7347" -> "7349" 
+  "7370" -> "7374" 
+  "7349" -> "7352" 
+  "7349" -> "7354" 
   "7354" -> "7358" 
-  "7333" -> "7336" 
-  "7333" -> "7338" 
-  "7338" -> "7342" 
-  "7338" -> "7351" 
-  "7355" -> "7354" 
-  "7336" -> "7358" 
-  "7342" -> "7345" 
-  "7345" -> "7357" 
-  "7357" -> "7355" 
-  "7349" -> "7353" 
-  "7349" -> "7357" 
-  "7351" -> "7349" 
-  "7353" -> "7357" 
-  "7329" -> "7331" 
+  "7354" -> "7367" 
+  "7371" -> "7370" 
+  "7352" -> "7374" 
+  "7358" -> "7361" 
+  "7361" -> "7373" 
+  "7373" -> "7371" 
+  "7365" -> "7369" 
+  "7365" -> "7373" 
+  "7367" -> "7365" 
+  "7369" -> "7373" 
+  "7345" -> "7347" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/172-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/172-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/172-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/172-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,33 +1,33 @@
 digraph "updateInputWindowInfo" {  
-"7362" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;InputWindowInfo&gt; inputHandles)<SUB>2916</SUB>> ]
-"7369" [label = <(traverseInReverseZOrder,mDrawingState.traverseInReverseZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;needsInputInfo()) {\012 // When calculating the screen bounds we ignore the transparent region since it may\012 // result in an unwanted offset.\012            inputHandles.push_back(layer-&gt;fillInputInfo());\012 }\012 }))<SUB>2918</SUB>> ]
-"7374" [label = <(setInputWindows,mInputFlinger-&gt;setInputWindows(inputHandles,\012                                   mInputWindowCommands.syncInputWindows ? mSetInputWindowsListener\012 : nullptr))<SUB>2926</SUB>> ]
-"7363" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;InputWindowInfo)<SUB>2916</SUB>> ]
-"7370" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInReverseZOrder)<SUB>2918</SUB>> ]
-"7373" [label = <(METHOD_REF,ANY anonymous_lambda_29 (Layer* layer),mDrawingState.traverseInReverseZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;needsInputInfo()) {\012 // When calculating the screen bounds we ignore the transparent region since it may\012 // result in an unwanted offset.\012            inputHandles.push_back(layer-&gt;fillInputInfo());\012 }\012 }))<SUB>2918</SUB>> ]
-"7375" [label = <(&lt;operator&gt;.indirectFieldAccess,mInputFlinger-&gt;setInputWindows)<SUB>2926</SUB>> ]
-"7379" [label = <(&lt;operator&gt;.conditional,mInputWindowCommands.syncInputWindows ? mSetInputWindowsListener\012 : nullptr)<SUB>2927</SUB>> ]
-"7364" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2916</SUB>> ]
-"7372" [label = <(FIELD_IDENTIFIER,traverseInReverseZOrder,traverseInReverseZOrder)<SUB>2918</SUB>> ]
-"7377" [label = <(FIELD_IDENTIFIER,setInputWindows,setInputWindows)<SUB>2926</SUB>> ]
-"7380" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.syncInputWindows)<SUB>2927</SUB>> ]
-"7366" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2916</SUB>> ]
-"7382" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>2927</SUB>> ]
-"7360" [label = <(METHOD,updateInputWindowInfo)<SUB>2915</SUB>> ]
-"7385" [label = <(METHOD_RETURN,void)<SUB>2915</SUB>> ]
-  "7362" -> "7372" 
-  "7369" -> "7377" 
-  "7374" -> "7385" 
-  "7363" -> "7362" 
-  "7370" -> "7373" 
-  "7373" -> "7369" 
-  "7375" -> "7382" 
-  "7379" -> "7374" 
-  "7364" -> "7363" 
-  "7372" -> "7370" 
-  "7377" -> "7375" 
+"7378" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;InputWindowInfo&gt; inputHandles)<SUB>2915</SUB>> ]
+"7385" [label = <(traverseInReverseZOrder,mDrawingState.traverseInReverseZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;needsInputInfo()) {\012 // When calculating the screen bounds we ignore the transparent region since it may\012 // result in an unwanted offset.\012            inputHandles.push_back(layer-&gt;fillInputInfo());\012 }\012 }))<SUB>2917</SUB>> ]
+"7390" [label = <(setInputWindows,mInputFlinger-&gt;setInputWindows(inputHandles,\012                                   mInputWindowCommands.syncInputWindows ? mSetInputWindowsListener\012 : nullptr))<SUB>2925</SUB>> ]
+"7379" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;InputWindowInfo)<SUB>2915</SUB>> ]
+"7386" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInReverseZOrder)<SUB>2917</SUB>> ]
+"7389" [label = <(METHOD_REF,ANY anonymous_lambda_29 (Layer* layer),mDrawingState.traverseInReverseZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;needsInputInfo()) {\012 // When calculating the screen bounds we ignore the transparent region since it may\012 // result in an unwanted offset.\012            inputHandles.push_back(layer-&gt;fillInputInfo());\012 }\012 }))<SUB>2917</SUB>> ]
+"7391" [label = <(&lt;operator&gt;.indirectFieldAccess,mInputFlinger-&gt;setInputWindows)<SUB>2925</SUB>> ]
+"7395" [label = <(&lt;operator&gt;.conditional,mInputWindowCommands.syncInputWindows ? mSetInputWindowsListener\012 : nullptr)<SUB>2926</SUB>> ]
+"7380" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>2915</SUB>> ]
+"7388" [label = <(FIELD_IDENTIFIER,traverseInReverseZOrder,traverseInReverseZOrder)<SUB>2917</SUB>> ]
+"7393" [label = <(FIELD_IDENTIFIER,setInputWindows,setInputWindows)<SUB>2925</SUB>> ]
+"7396" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.syncInputWindows)<SUB>2926</SUB>> ]
+"7382" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>2915</SUB>> ]
+"7398" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>2926</SUB>> ]
+"7376" [label = <(METHOD,updateInputWindowInfo)<SUB>2914</SUB>> ]
+"7401" [label = <(METHOD_RETURN,void)<SUB>2914</SUB>> ]
+  "7378" -> "7388" 
+  "7385" -> "7393" 
+  "7390" -> "7401" 
+  "7379" -> "7378" 
+  "7386" -> "7389" 
+  "7389" -> "7385" 
+  "7391" -> "7398" 
+  "7395" -> "7390" 
   "7380" -> "7379" 
-  "7366" -> "7364" 
+  "7388" -> "7386" 
+  "7393" -> "7391" 
+  "7396" -> "7395" 
   "7382" -> "7380" 
-  "7360" -> "7366" 
+  "7398" -> "7396" 
+  "7376" -> "7382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/173-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/173-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/173-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/173-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,17 +1,17 @@
 digraph "commitInputWindowCommands" {  
-"7389" [label = <(merge,mInputWindowCommands.merge(mPendingInputWindowCommands))<SUB>2932</SUB>> ]
-"7394" [label = <(clear,mPendingInputWindowCommands.clear())<SUB>2933</SUB>> ]
-"7390" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.merge)<SUB>2932</SUB>> ]
-"7395" [label = <(&lt;operator&gt;.fieldAccess,mPendingInputWindowCommands.clear)<SUB>2933</SUB>> ]
-"7392" [label = <(FIELD_IDENTIFIER,merge,merge)<SUB>2932</SUB>> ]
-"7397" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2933</SUB>> ]
-"7387" [label = <(METHOD,commitInputWindowCommands)<SUB>2931</SUB>> ]
-"7398" [label = <(METHOD_RETURN,void)<SUB>2931</SUB>> ]
-  "7389" -> "7397" 
-  "7394" -> "7398" 
-  "7390" -> "7389" 
-  "7395" -> "7394" 
-  "7392" -> "7390" 
-  "7397" -> "7395" 
-  "7387" -> "7392" 
+"7405" [label = <(merge,mInputWindowCommands.merge(mPendingInputWindowCommands))<SUB>2931</SUB>> ]
+"7410" [label = <(clear,mPendingInputWindowCommands.clear())<SUB>2932</SUB>> ]
+"7406" [label = <(&lt;operator&gt;.fieldAccess,mInputWindowCommands.merge)<SUB>2931</SUB>> ]
+"7411" [label = <(&lt;operator&gt;.fieldAccess,mPendingInputWindowCommands.clear)<SUB>2932</SUB>> ]
+"7408" [label = <(FIELD_IDENTIFIER,merge,merge)<SUB>2931</SUB>> ]
+"7413" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>2932</SUB>> ]
+"7403" [label = <(METHOD,commitInputWindowCommands)<SUB>2930</SUB>> ]
+"7414" [label = <(METHOD_RETURN,void)<SUB>2930</SUB>> ]
+  "7405" -> "7413" 
+  "7410" -> "7414" 
+  "7406" -> "7405" 
+  "7411" -> "7410" 
+  "7408" -> "7406" 
+  "7413" -> "7411" 
+  "7403" -> "7408" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/174-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/174-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/174-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/174-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,45 +1,45 @@
 digraph "updateCursorAsync" {  
-"7428" [label = <(updateCursorAsync,mCompositionEngine-&gt;updateCursorAsync(refreshArgs))<SUB>2944</SUB>> ]
-"7404" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>2938</SUB>> ]
-"7429" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;updateCursorAsync)<SUB>2944</SUB>> ]
-"7431" [label = <(FIELD_IDENTIFIER,updateCursorAsync,updateCursorAsync)<SUB>2944</SUB>> ]
-"7406" [label = <(android.SurfaceFlinger.updateCursorAsync.anonymous_lambda_30,())<SUB>2938</SUB>> ]
-"7413" [label = <(getId,display-&gt;getId())<SUB>2939</SUB>> ]
-"7407" [label = <(METHOD_REF,ANY anonymous_lambda_30 (),())<SUB>2938</SUB>> ]
-"7414" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2939</SUB>> ]
-"7418" [label = <(push_back,refreshArgs.outputs.push_back(display-&gt;getCompositionDisplay()))<SUB>2940</SUB>> ]
-"7416" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2939</SUB>> ]
-"7419" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.push_back)<SUB>2940</SUB>> ]
-"7424" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2940</SUB>> ]
-"7420" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2940</SUB>> ]
-"7423" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2940</SUB>> ]
-"7425" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2940</SUB>> ]
-"7422" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2940</SUB>> ]
-"7427" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2940</SUB>> ]
-"7400" [label = <(METHOD,updateCursorAsync)<SUB>2936</SUB>> ]
-"7433" [label = <(METHOD_RETURN,void)<SUB>2936</SUB>> ]
-  "7428" -> "7433" 
-  "7404" -> "7407" 
-  "7404" -> "7416" 
-  "7404" -> "7431" 
-  "7429" -> "7428" 
-  "7431" -> "7429" 
-  "7406" -> "7416" 
-  "7406" -> "7431" 
-  "7413" -> "7416" 
-  "7413" -> "7431" 
-  "7413" -> "7422" 
-  "7407" -> "7406" 
-  "7414" -> "7413" 
-  "7418" -> "7416" 
-  "7418" -> "7431" 
-  "7416" -> "7414" 
-  "7419" -> "7427" 
-  "7424" -> "7418" 
+"7444" [label = <(updateCursorAsync,mCompositionEngine-&gt;updateCursorAsync(refreshArgs))<SUB>2943</SUB>> ]
+"7420" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>2937</SUB>> ]
+"7445" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;updateCursorAsync)<SUB>2943</SUB>> ]
+"7447" [label = <(FIELD_IDENTIFIER,updateCursorAsync,updateCursorAsync)<SUB>2943</SUB>> ]
+"7422" [label = <(android.SurfaceFlinger.updateCursorAsync.anonymous_lambda_30,())<SUB>2937</SUB>> ]
+"7429" [label = <(getId,display-&gt;getId())<SUB>2938</SUB>> ]
+"7423" [label = <(METHOD_REF,ANY anonymous_lambda_30 (),())<SUB>2937</SUB>> ]
+"7430" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>2938</SUB>> ]
+"7434" [label = <(push_back,refreshArgs.outputs.push_back(display-&gt;getCompositionDisplay()))<SUB>2939</SUB>> ]
+"7432" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>2938</SUB>> ]
+"7435" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs.push_back)<SUB>2939</SUB>> ]
+"7440" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>2939</SUB>> ]
+"7436" [label = <(&lt;operator&gt;.fieldAccess,refreshArgs.outputs)<SUB>2939</SUB>> ]
+"7439" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>2939</SUB>> ]
+"7441" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>2939</SUB>> ]
+"7438" [label = <(FIELD_IDENTIFIER,outputs,outputs)<SUB>2939</SUB>> ]
+"7443" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>2939</SUB>> ]
+"7416" [label = <(METHOD,updateCursorAsync)<SUB>2935</SUB>> ]
+"7449" [label = <(METHOD_RETURN,void)<SUB>2935</SUB>> ]
+  "7444" -> "7449" 
   "7420" -> "7423" 
-  "7423" -> "7419" 
-  "7425" -> "7424" 
-  "7422" -> "7420" 
-  "7427" -> "7425" 
-  "7400" -> "7404" 
+  "7420" -> "7432" 
+  "7420" -> "7447" 
+  "7445" -> "7444" 
+  "7447" -> "7445" 
+  "7422" -> "7432" 
+  "7422" -> "7447" 
+  "7429" -> "7432" 
+  "7429" -> "7447" 
+  "7429" -> "7438" 
+  "7423" -> "7422" 
+  "7430" -> "7429" 
+  "7434" -> "7432" 
+  "7434" -> "7447" 
+  "7432" -> "7430" 
+  "7435" -> "7443" 
+  "7440" -> "7434" 
+  "7436" -> "7439" 
+  "7439" -> "7435" 
+  "7441" -> "7440" 
+  "7438" -> "7436" 
+  "7443" -> "7441" 
+  "7416" -> "7420" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/175-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/175-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/175-cfg.dot	2023-06-07 19:33:00.387398982 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/175-cfg.dot	2023-06-07 19:33:06.627398409 +0330
@@ -1,19 +1,19 @@
 digraph "changeRefreshRate" {  
-"7440" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>2953</SUB>> ]
-"7450" [label = <(changeRefreshRateLocked,changeRefreshRateLocked(refreshRate, event))<SUB>2954</SUB>> ]
-"7442" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>2953</SUB>> ]
-"7443" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>2953</SUB>> ]
-"7444" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>2953</SUB>> ]
-"7445" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>2953</SUB>> ]
-"7448" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>2953</SUB>> ]
-"7435" [label = <(METHOD,changeRefreshRate)<SUB>2947</SUB>> ]
-"7453" [label = <(METHOD_RETURN,void)<SUB>2947</SUB>> ]
-  "7440" -> "7450" 
-  "7450" -> "7453" 
-  "7442" -> "7440" 
-  "7443" -> "7442" 
-  "7444" -> "7443" 
-  "7445" -> "7448" 
-  "7448" -> "7444" 
-  "7435" -> "7445" 
+"7456" [label = <(lock,lock(mStateLock, std::this_thread::get_id() != mMainThreadId))<SUB>2952</SUB>> ]
+"7466" [label = <(changeRefreshRateLocked,changeRefreshRateLocked(refreshRate, event))<SUB>2953</SUB>> ]
+"7458" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>2952</SUB>> ]
+"7459" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>2952</SUB>> ]
+"7460" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>2952</SUB>> ]
+"7461" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>2952</SUB>> ]
+"7464" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>2952</SUB>> ]
+"7451" [label = <(METHOD,changeRefreshRate)<SUB>2946</SUB>> ]
+"7469" [label = <(METHOD_RETURN,void)<SUB>2946</SUB>> ]
+  "7456" -> "7466" 
+  "7466" -> "7469" 
+  "7458" -> "7456" 
+  "7459" -> "7458" 
+  "7460" -> "7459" 
+  "7461" -> "7464" 
+  "7464" -> "7460" 
+  "7451" -> "7461" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/176-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/176-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/176-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/176-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,228 +1,228 @@
 digraph "initScheduler" {  
-"7465" [label = <(&lt;operator&gt;.assignment,currentConfig = HwcConfigIndexType(getHwComposer().getActiveConfigIndex(primaryDisplayId)))<SUB>2965</SUB>> ]
-"7473" [label = <(&lt;operator&gt;.assignment,mRefreshRateConfigs =\012            std::make_unique&lt;scheduler::RefreshRateConfigs&gt;(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2966</SUB>> ]
-"7491" [label = <(&lt;operator&gt;.assignment,mRefreshRateStats =\012            std::make_unique&lt;scheduler::RefreshRateStats&gt;(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2970</SUB>> ]
-"7513" [label = <(setConfigMode,mRefreshRateStats-&gt;setConfigMode(currentConfig))<SUB>2973</SUB>> ]
-"7518" [label = <(&lt;operator&gt;.assignment,mPhaseConfiguration = getFactory().createPhaseConfiguration(*mRefreshRateConfigs))<SUB>2975</SUB>> ]
-"7526" [label = <(&lt;operator&gt;.assignment,mScheduler =\012            getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2978</SUB>> ]
-"7537" [label = <(&lt;operator&gt;.assignment,mAppConnectionHandle =\012            mScheduler-&gt;createConnection(&quot;app&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.app,\012                                         impl::EventThread::InterceptVSyncsCallback()))<SUB>2981</SUB>> ]
-"7558" [label = <(&lt;operator&gt;.assignment,mSfConnectionHandle =\012            mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2984</SUB>> ]
-"7574" [label = <(setEventConnection,mEventQueue-&gt;setEventConnection(mScheduler-&gt;getEventConnection(mSfConnectionHandle)))<SUB>2990</SUB>> ]
-"7583" [label = <(emplace,mVSyncModulator.emplace(*mScheduler, mAppConnectionHandle, mSfConnectionHandle,\012                            mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>2991</SUB>> ]
-"7595" [label = <(&lt;operator&gt;.assignment,mRegionSamplingThread =\012 new RegionSamplingThread(*this, *mScheduler,\012 RegionSamplingThread::EnvironmentTimingTunables()))<SUB>2994</SUB>> ]
-"7608" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod())<SUB>3004</SUB>> ]
-"7618" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, primaryDisplayId.value,\012                                              currentConfig, vsyncPeriod))<SUB>3006</SUB>> ]
-"7467" [label = <(HwcConfigIndexType,HwcConfigIndexType(getHwComposer().getActiveConfigIndex(primaryDisplayId)))<SUB>2965</SUB>> ]
-"7475" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;scheduler::RefreshRateConfigs&gt;(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2967</SUB>> ]
-"7493" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;scheduler::RefreshRateStats&gt;(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2971</SUB>> ]
-"7514" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setConfigMode)<SUB>2973</SUB>> ]
-"7520" [label = <(createPhaseConfiguration,getFactory().createPhaseConfiguration(*mRefreshRateConfigs))<SUB>2975</SUB>> ]
-"7528" [label = <(createScheduler,getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2979</SUB>> ]
-"7539" [label = <(createConnection,mScheduler-&gt;createConnection(&quot;app&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.app,\012                                         impl::EventThread::InterceptVSyncsCallback()))<SUB>2982</SUB>> ]
-"7560" [label = <(createConnection,mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2985</SUB>> ]
-"7575" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;setEventConnection)<SUB>2990</SUB>> ]
-"7578" [label = <(getEventConnection,mScheduler-&gt;getEventConnection(mSfConnectionHandle))<SUB>2990</SUB>> ]
-"7584" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator.emplace)<SUB>2991</SUB>> ]
-"7587" [label = <(&lt;operator&gt;.indirection,*mScheduler)<SUB>2991</SUB>> ]
-"7591" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2992</SUB>> ]
-"7597" [label = <(&lt;operator&gt;.new,new RegionSamplingThread(*this, *mScheduler,\012 RegionSamplingThread::EnvironmentTimingTunables()))<SUB>2995</SUB>> ]
-"7610" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod())<SUB>3005</SUB>> ]
-"7619" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>3006</SUB>> ]
-"7623" [label = <(&lt;operator&gt;.fieldAccess,primaryDisplayId.value)<SUB>3006</SUB>> ]
-"7461" [label = <(ALOGW,ALOGW(&quot;Can't re-init scheduler&quot;))<SUB>2961</SUB>> ]
-"7463" [label = <(RETURN,return;,return;)<SUB>2962</SUB>> ]
-"7468" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(primaryDisplayId))<SUB>2965</SUB>> ]
-"7476" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;scheduler::RefreshRateConfigs)<SUB>2967</SUB>> ]
-"7483" [label = <(&lt;operator&gt;.bracketedPrimary,(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2967</SUB>> ]
-"7494" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;scheduler::RefreshRateStats)<SUB>2971</SUB>> ]
-"7501" [label = <(&lt;operator&gt;.bracketedPrimary,(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2971</SUB>> ]
-"7516" [label = <(FIELD_IDENTIFIER,setConfigMode,setConfigMode)<SUB>2973</SUB>> ]
-"7521" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createPhaseConfiguration)<SUB>2975</SUB>> ]
-"7524" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2975</SUB>> ]
-"7529" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createScheduler)<SUB>2979</SUB>> ]
-"7532" [label = <(METHOD_REF,ANY anonymous_lambda_31 (bool enabled),getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2979</SUB>> ]
-"7533" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2980</SUB>> ]
-"7535" [label = <(&lt;operator&gt;.indirection,*this)<SUB>2980</SUB>> ]
-"7540" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createConnection)<SUB>2982</SUB>> ]
-"7544" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.app)<SUB>2982</SUB>> ]
-"7552" [label = <(impl::EventThread::InterceptVSyncsCallback,impl::EventThread::InterceptVSyncsCallback())<SUB>2983</SUB>> ]
-"7561" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createConnection)<SUB>2985</SUB>> ]
-"7565" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2985</SUB>> ]
-"7573" [label = <(METHOD_REF,ANY anonymous_lambda_32 (nsecs_t timestamp),mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2986</SUB>> ]
-"7577" [label = <(FIELD_IDENTIFIER,setEventConnection,setEventConnection)<SUB>2990</SUB>> ]
-"7579" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventConnection)<SUB>2990</SUB>> ]
-"7586" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2991</SUB>> ]
-"7592" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2992</SUB>> ]
-"7599" [label = <(&lt;operator&gt;.indirection,*this)<SUB>2995</SUB>> ]
-"7601" [label = <(&lt;operator&gt;.indirection,*mScheduler)<SUB>2995</SUB>> ]
-"7603" [label = <(RegionSamplingThread::EnvironmentTimingTunables,RegionSamplingThread::EnvironmentTimingTunables())<SUB>2996</SUB>> ]
-"7611" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod)<SUB>3005</SUB>> ]
-"7621" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>3006</SUB>> ]
-"7625" [label = <(FIELD_IDENTIFIER,value,value)<SUB>3006</SUB>> ]
-"7469" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>2965</SUB>> ]
-"7477" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>2967</SUB>> ]
-"7480" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs)<SUB>2967</SUB>> ]
-"7484" [label = <(&lt;operator&gt;.expressionList,getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig)<SUB>2967</SUB>> ]
-"7495" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>2971</SUB>> ]
-"7498" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateStats)<SUB>2971</SUB>> ]
-"7502" [label = <(&lt;operator&gt;.expressionList,*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF)<SUB>2971</SUB>> ]
-"7522" [label = <(getFactory,getFactory())<SUB>2975</SUB>> ]
-"7523" [label = <(FIELD_IDENTIFIER,createPhaseConfiguration,createPhaseConfiguration)<SUB>2975</SUB>> ]
-"7530" [label = <(getFactory,getFactory())<SUB>2979</SUB>> ]
-"7531" [label = <(FIELD_IDENTIFIER,createScheduler,createScheduler)<SUB>2979</SUB>> ]
-"7542" [label = <(FIELD_IDENTIFIER,createConnection,createConnection)<SUB>2982</SUB>> ]
-"7545" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2982</SUB>> ]
-"7551" [label = <(FIELD_IDENTIFIER,app,app)<SUB>2982</SUB>> ]
-"7553" [label = <(&lt;operator&gt;.fieldAccess,impl::EventThread::InterceptVSyncsCallback)<SUB>2983</SUB>> ]
-"7563" [label = <(FIELD_IDENTIFIER,createConnection,createConnection)<SUB>2985</SUB>> ]
-"7566" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2985</SUB>> ]
-"7572" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2985</SUB>> ]
-"7581" [label = <(FIELD_IDENTIFIER,getEventConnection,getEventConnection)<SUB>2990</SUB>> ]
-"7594" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2992</SUB>> ]
-"7604" [label = <(&lt;operator&gt;.fieldAccess,RegionSamplingThread::EnvironmentTimingTunables)<SUB>2996</SUB>> ]
-"7612" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig))<SUB>3005</SUB>> ]
-"7617" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>3005</SUB>> ]
-"7470" [label = <(getHwComposer,getHwComposer())<SUB>2965</SUB>> ]
-"7471" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>2965</SUB>> ]
-"7479" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>2967</SUB>> ]
-"7482" [label = <(FIELD_IDENTIFIER,RefreshRateConfigs,RefreshRateConfigs)<SUB>2967</SUB>> ]
-"7485" [label = <(getConfigs,getHwComposer().getConfigs(\012                                                                    primaryDisplayId))<SUB>2967</SUB>> ]
-"7497" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>2971</SUB>> ]
-"7500" [label = <(FIELD_IDENTIFIER,RefreshRateStats,RefreshRateStats)<SUB>2971</SUB>> ]
-"7503" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2971</SUB>> ]
-"7505" [label = <(&lt;operator&gt;.indirection,*mTimeStats)<SUB>2971</SUB>> ]
-"7508" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>2972</SUB>> ]
-"7546" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2982</SUB>> ]
-"7550" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2982</SUB>> ]
-"7554" [label = <(&lt;operator&gt;.fieldAccess,impl::EventThread)<SUB>2983</SUB>> ]
-"7557" [label = <(FIELD_IDENTIFIER,InterceptVSyncsCallback,InterceptVSyncsCallback)<SUB>2983</SUB>> ]
-"7567" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2985</SUB>> ]
-"7571" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2985</SUB>> ]
-"7606" [label = <(FIELD_IDENTIFIER,EnvironmentTimingTunables,EnvironmentTimingTunables)<SUB>2996</SUB>> ]
-"7613" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>3005</SUB>> ]
-"7486" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getConfigs)<SUB>2967</SUB>> ]
-"7509" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2972</SUB>> ]
-"7512" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>2972</SUB>> ]
-"7547" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2982</SUB>> ]
-"7568" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2985</SUB>> ]
-"7615" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>3005</SUB>> ]
-"7487" [label = <(getHwComposer,getHwComposer())<SUB>2967</SUB>> ]
-"7488" [label = <(FIELD_IDENTIFIER,getConfigs,getConfigs)<SUB>2967</SUB>> ]
-"7549" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2982</SUB>> ]
-"7570" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2985</SUB>> ]
-"7455" [label = <(METHOD,initScheduler)<SUB>2957</SUB>> ]
-"7628" [label = <(METHOD_RETURN,void)<SUB>2957</SUB>> ]
-  "7465" -> "7479" 
-  "7473" -> "7497" 
-  "7491" -> "7516" 
-  "7513" -> "7522" 
-  "7518" -> "7530" 
-  "7526" -> "7542" 
-  "7537" -> "7563" 
-  "7558" -> "7577" 
-  "7574" -> "7586" 
-  "7583" -> "7599" 
-  "7595" -> "7615" 
-  "7608" -> "7621" 
-  "7618" -> "7628" 
-  "7467" -> "7465" 
-  "7475" -> "7473" 
-  "7493" -> "7491" 
-  "7514" -> "7513" 
-  "7520" -> "7518" 
-  "7528" -> "7526" 
+"7481" [label = <(&lt;operator&gt;.assignment,currentConfig = HwcConfigIndexType(getHwComposer().getActiveConfigIndex(primaryDisplayId)))<SUB>2964</SUB>> ]
+"7489" [label = <(&lt;operator&gt;.assignment,mRefreshRateConfigs =\012            std::make_unique&lt;scheduler::RefreshRateConfigs&gt;(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2965</SUB>> ]
+"7507" [label = <(&lt;operator&gt;.assignment,mRefreshRateStats =\012            std::make_unique&lt;scheduler::RefreshRateStats&gt;(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2969</SUB>> ]
+"7529" [label = <(setConfigMode,mRefreshRateStats-&gt;setConfigMode(currentConfig))<SUB>2972</SUB>> ]
+"7534" [label = <(&lt;operator&gt;.assignment,mPhaseConfiguration = getFactory().createPhaseConfiguration(*mRefreshRateConfigs))<SUB>2974</SUB>> ]
+"7542" [label = <(&lt;operator&gt;.assignment,mScheduler =\012            getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2977</SUB>> ]
+"7553" [label = <(&lt;operator&gt;.assignment,mAppConnectionHandle =\012            mScheduler-&gt;createConnection(&quot;app&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.app,\012                                         impl::EventThread::InterceptVSyncsCallback()))<SUB>2980</SUB>> ]
+"7574" [label = <(&lt;operator&gt;.assignment,mSfConnectionHandle =\012            mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2983</SUB>> ]
+"7590" [label = <(setEventConnection,mEventQueue-&gt;setEventConnection(mScheduler-&gt;getEventConnection(mSfConnectionHandle)))<SUB>2989</SUB>> ]
+"7599" [label = <(emplace,mVSyncModulator.emplace(*mScheduler, mAppConnectionHandle, mSfConnectionHandle,\012                            mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>2990</SUB>> ]
+"7611" [label = <(&lt;operator&gt;.assignment,mRegionSamplingThread =\012 new RegionSamplingThread(*this, *mScheduler,\012 RegionSamplingThread::EnvironmentTimingTunables()))<SUB>2993</SUB>> ]
+"7624" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod())<SUB>3003</SUB>> ]
+"7634" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, primaryDisplayId.value,\012                                              currentConfig, vsyncPeriod))<SUB>3005</SUB>> ]
+"7483" [label = <(HwcConfigIndexType,HwcConfigIndexType(getHwComposer().getActiveConfigIndex(primaryDisplayId)))<SUB>2964</SUB>> ]
+"7491" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;scheduler::RefreshRateConfigs&gt;(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2966</SUB>> ]
+"7509" [label = <(&lt;operator&gt;.greaterThan,std::make_unique&lt;scheduler::RefreshRateStats&gt;(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2970</SUB>> ]
+"7530" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setConfigMode)<SUB>2972</SUB>> ]
+"7536" [label = <(createPhaseConfiguration,getFactory().createPhaseConfiguration(*mRefreshRateConfigs))<SUB>2974</SUB>> ]
+"7544" [label = <(createScheduler,getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2978</SUB>> ]
+"7555" [label = <(createConnection,mScheduler-&gt;createConnection(&quot;app&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.app,\012                                         impl::EventThread::InterceptVSyncsCallback()))<SUB>2981</SUB>> ]
+"7576" [label = <(createConnection,mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2984</SUB>> ]
+"7591" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;setEventConnection)<SUB>2989</SUB>> ]
+"7594" [label = <(getEventConnection,mScheduler-&gt;getEventConnection(mSfConnectionHandle))<SUB>2989</SUB>> ]
+"7600" [label = <(&lt;operator&gt;.fieldAccess,mVSyncModulator.emplace)<SUB>2990</SUB>> ]
+"7603" [label = <(&lt;operator&gt;.indirection,*mScheduler)<SUB>2990</SUB>> ]
+"7607" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2991</SUB>> ]
+"7613" [label = <(&lt;operator&gt;.new,new RegionSamplingThread(*this, *mScheduler,\012 RegionSamplingThread::EnvironmentTimingTunables()))<SUB>2994</SUB>> ]
+"7626" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod())<SUB>3004</SUB>> ]
+"7635" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>3005</SUB>> ]
+"7639" [label = <(&lt;operator&gt;.fieldAccess,primaryDisplayId.value)<SUB>3005</SUB>> ]
+"7477" [label = <(ALOGW,ALOGW(&quot;Can't re-init scheduler&quot;))<SUB>2960</SUB>> ]
+"7479" [label = <(RETURN,return;,return;)<SUB>2961</SUB>> ]
+"7484" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(primaryDisplayId))<SUB>2964</SUB>> ]
+"7492" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;scheduler::RefreshRateConfigs)<SUB>2966</SUB>> ]
+"7499" [label = <(&lt;operator&gt;.bracketedPrimary,(getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig))<SUB>2966</SUB>> ]
+"7510" [label = <(&lt;operator&gt;.lessThan,std::make_unique&lt;scheduler::RefreshRateStats)<SUB>2970</SUB>> ]
+"7517" [label = <(&lt;operator&gt;.bracketedPrimary,(*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF))<SUB>2970</SUB>> ]
+"7532" [label = <(FIELD_IDENTIFIER,setConfigMode,setConfigMode)<SUB>2972</SUB>> ]
+"7537" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createPhaseConfiguration)<SUB>2974</SUB>> ]
+"7540" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2974</SUB>> ]
+"7545" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createScheduler)<SUB>2978</SUB>> ]
+"7548" [label = <(METHOD_REF,ANY anonymous_lambda_31 (bool enabled),getFactory().createScheduler([this](bool enabled) { setPrimaryVsyncEnabled(enabled); },\012 *mRefreshRateConfigs, *this))<SUB>2978</SUB>> ]
+"7549" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2979</SUB>> ]
+"7551" [label = <(&lt;operator&gt;.indirection,*this)<SUB>2979</SUB>> ]
+"7556" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createConnection)<SUB>2981</SUB>> ]
+"7560" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.app)<SUB>2981</SUB>> ]
+"7568" [label = <(impl::EventThread::InterceptVSyncsCallback,impl::EventThread::InterceptVSyncsCallback())<SUB>2982</SUB>> ]
+"7577" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;createConnection)<SUB>2984</SUB>> ]
+"7581" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late.sf)<SUB>2984</SUB>> ]
+"7589" [label = <(METHOD_REF,ANY anonymous_lambda_32 (nsecs_t timestamp),mScheduler-&gt;createConnection(&quot;sf&quot;, mPhaseConfiguration-&gt;getCurrentOffsets().late.sf,\012 [this](nsecs_t timestamp) {\012                                             mInterceptor-&gt;saveVSyncEvent(timestamp);\012 }))<SUB>2985</SUB>> ]
+"7593" [label = <(FIELD_IDENTIFIER,setEventConnection,setEventConnection)<SUB>2989</SUB>> ]
+"7595" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getEventConnection)<SUB>2989</SUB>> ]
+"7602" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>2990</SUB>> ]
+"7608" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2991</SUB>> ]
+"7615" [label = <(&lt;operator&gt;.indirection,*this)<SUB>2994</SUB>> ]
+"7617" [label = <(&lt;operator&gt;.indirection,*mScheduler)<SUB>2994</SUB>> ]
+"7619" [label = <(RegionSamplingThread::EnvironmentTimingTunables,RegionSamplingThread::EnvironmentTimingTunables())<SUB>2995</SUB>> ]
+"7627" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig).getVsyncPeriod)<SUB>3004</SUB>> ]
+"7637" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>3005</SUB>> ]
+"7641" [label = <(FIELD_IDENTIFIER,value,value)<SUB>3005</SUB>> ]
+"7485" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>2964</SUB>> ]
+"7493" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>2966</SUB>> ]
+"7496" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs)<SUB>2966</SUB>> ]
+"7500" [label = <(&lt;operator&gt;.expressionList,getHwComposer().getConfigs(\012                                                                    primaryDisplayId),\012                                                            currentConfig)<SUB>2966</SUB>> ]
+"7511" [label = <(&lt;operator&gt;.fieldAccess,std::make_unique)<SUB>2970</SUB>> ]
+"7514" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateStats)<SUB>2970</SUB>> ]
+"7518" [label = <(&lt;operator&gt;.expressionList,*mRefreshRateConfigs, *mTimeStats,\012                                                          currentConfig, hal::PowerMode::OFF)<SUB>2970</SUB>> ]
+"7538" [label = <(getFactory,getFactory())<SUB>2974</SUB>> ]
+"7539" [label = <(FIELD_IDENTIFIER,createPhaseConfiguration,createPhaseConfiguration)<SUB>2974</SUB>> ]
+"7546" [label = <(getFactory,getFactory())<SUB>2978</SUB>> ]
+"7547" [label = <(FIELD_IDENTIFIER,createScheduler,createScheduler)<SUB>2978</SUB>> ]
+"7558" [label = <(FIELD_IDENTIFIER,createConnection,createConnection)<SUB>2981</SUB>> ]
+"7561" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2981</SUB>> ]
+"7567" [label = <(FIELD_IDENTIFIER,app,app)<SUB>2981</SUB>> ]
+"7569" [label = <(&lt;operator&gt;.fieldAccess,impl::EventThread::InterceptVSyncsCallback)<SUB>2982</SUB>> ]
+"7579" [label = <(FIELD_IDENTIFIER,createConnection,createConnection)<SUB>2984</SUB>> ]
+"7582" [label = <(&lt;operator&gt;.fieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets().late)<SUB>2984</SUB>> ]
+"7588" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>2984</SUB>> ]
+"7597" [label = <(FIELD_IDENTIFIER,getEventConnection,getEventConnection)<SUB>2989</SUB>> ]
+"7610" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2991</SUB>> ]
+"7620" [label = <(&lt;operator&gt;.fieldAccess,RegionSamplingThread::EnvironmentTimingTunables)<SUB>2995</SUB>> ]
+"7628" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentConfig))<SUB>3004</SUB>> ]
+"7633" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>3004</SUB>> ]
+"7486" [label = <(getHwComposer,getHwComposer())<SUB>2964</SUB>> ]
+"7487" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>2964</SUB>> ]
+"7495" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>2966</SUB>> ]
+"7498" [label = <(FIELD_IDENTIFIER,RefreshRateConfigs,RefreshRateConfigs)<SUB>2966</SUB>> ]
+"7501" [label = <(getConfigs,getHwComposer().getConfigs(\012                                                                    primaryDisplayId))<SUB>2966</SUB>> ]
+"7513" [label = <(FIELD_IDENTIFIER,make_unique,make_unique)<SUB>2970</SUB>> ]
+"7516" [label = <(FIELD_IDENTIFIER,RefreshRateStats,RefreshRateStats)<SUB>2970</SUB>> ]
+"7519" [label = <(&lt;operator&gt;.indirection,*mRefreshRateConfigs)<SUB>2970</SUB>> ]
+"7521" [label = <(&lt;operator&gt;.indirection,*mTimeStats)<SUB>2970</SUB>> ]
+"7524" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>2971</SUB>> ]
+"7562" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2981</SUB>> ]
+"7566" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2981</SUB>> ]
+"7570" [label = <(&lt;operator&gt;.fieldAccess,impl::EventThread)<SUB>2982</SUB>> ]
+"7573" [label = <(FIELD_IDENTIFIER,InterceptVSyncsCallback,InterceptVSyncsCallback)<SUB>2982</SUB>> ]
+"7583" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>2984</SUB>> ]
+"7587" [label = <(FIELD_IDENTIFIER,late,late)<SUB>2984</SUB>> ]
+"7622" [label = <(FIELD_IDENTIFIER,EnvironmentTimingTunables,EnvironmentTimingTunables)<SUB>2995</SUB>> ]
+"7629" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>3004</SUB>> ]
+"7502" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getConfigs)<SUB>2966</SUB>> ]
+"7525" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>2971</SUB>> ]
+"7528" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>2971</SUB>> ]
+"7563" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2981</SUB>> ]
+"7584" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>2984</SUB>> ]
+"7631" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>3004</SUB>> ]
+"7503" [label = <(getHwComposer,getHwComposer())<SUB>2966</SUB>> ]
+"7504" [label = <(FIELD_IDENTIFIER,getConfigs,getConfigs)<SUB>2966</SUB>> ]
+"7565" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2981</SUB>> ]
+"7586" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>2984</SUB>> ]
+"7471" [label = <(METHOD,initScheduler)<SUB>2956</SUB>> ]
+"7644" [label = <(METHOD_RETURN,void)<SUB>2956</SUB>> ]
+  "7481" -> "7495" 
+  "7489" -> "7513" 
+  "7507" -> "7532" 
+  "7529" -> "7538" 
+  "7534" -> "7546" 
+  "7542" -> "7558" 
+  "7553" -> "7579" 
+  "7574" -> "7593" 
+  "7590" -> "7602" 
+  "7599" -> "7615" 
+  "7611" -> "7631" 
+  "7624" -> "7637" 
+  "7634" -> "7644" 
+  "7483" -> "7481" 
+  "7491" -> "7489" 
+  "7509" -> "7507" 
+  "7530" -> "7529" 
+  "7536" -> "7534" 
+  "7544" -> "7542" 
+  "7555" -> "7553" 
+  "7576" -> "7574" 
+  "7591" -> "7597" 
+  "7594" -> "7590" 
+  "7600" -> "7603" 
+  "7603" -> "7610" 
+  "7607" -> "7599" 
+  "7613" -> "7611" 
+  "7626" -> "7624" 
+  "7635" -> "7641" 
+  "7639" -> "7634" 
+  "7477" -> "7479" 
+  "7479" -> "7644" 
+  "7484" -> "7483" 
+  "7492" -> "7503" 
+  "7499" -> "7491" 
+  "7510" -> "7519" 
+  "7517" -> "7509" 
+  "7532" -> "7530" 
+  "7537" -> "7540" 
+  "7540" -> "7536" 
+  "7545" -> "7548" 
+  "7548" -> "7549" 
+  "7549" -> "7551" 
+  "7551" -> "7544" 
+  "7556" -> "7565" 
+  "7560" -> "7570" 
+  "7568" -> "7555" 
+  "7577" -> "7586" 
+  "7581" -> "7589" 
+  "7589" -> "7576" 
+  "7593" -> "7591" 
+  "7595" -> "7594" 
+  "7602" -> "7600" 
+  "7608" -> "7607" 
+  "7615" -> "7617" 
+  "7617" -> "7622" 
+  "7619" -> "7613" 
+  "7627" -> "7626" 
+  "7637" -> "7635" 
+  "7641" -> "7639" 
+  "7485" -> "7484" 
+  "7493" -> "7498" 
+  "7496" -> "7492" 
+  "7500" -> "7499" 
+  "7511" -> "7516" 
+  "7514" -> "7510" 
+  "7518" -> "7517" 
+  "7538" -> "7539" 
   "7539" -> "7537" 
-  "7560" -> "7558" 
-  "7575" -> "7581" 
-  "7578" -> "7574" 
-  "7584" -> "7587" 
-  "7587" -> "7594" 
-  "7591" -> "7583" 
+  "7546" -> "7547" 
+  "7547" -> "7545" 
+  "7558" -> "7556" 
+  "7561" -> "7567" 
+  "7567" -> "7560" 
+  "7569" -> "7568" 
+  "7579" -> "7577" 
+  "7582" -> "7588" 
+  "7588" -> "7581" 
   "7597" -> "7595" 
   "7610" -> "7608" 
-  "7619" -> "7625" 
-  "7623" -> "7618" 
-  "7461" -> "7463" 
-  "7463" -> "7628" 
-  "7468" -> "7467" 
-  "7476" -> "7487" 
-  "7483" -> "7475" 
-  "7494" -> "7503" 
-  "7501" -> "7493" 
+  "7620" -> "7619" 
+  "7628" -> "7633" 
+  "7633" -> "7627" 
+  "7486" -> "7487" 
+  "7487" -> "7485" 
+  "7495" -> "7493" 
+  "7498" -> "7496" 
+  "7501" -> "7500" 
+  "7513" -> "7511" 
   "7516" -> "7514" 
-  "7521" -> "7524" 
-  "7524" -> "7520" 
-  "7529" -> "7532" 
-  "7532" -> "7533" 
-  "7533" -> "7535" 
-  "7535" -> "7528" 
-  "7540" -> "7549" 
-  "7544" -> "7554" 
-  "7552" -> "7539" 
-  "7561" -> "7570" 
-  "7565" -> "7573" 
-  "7573" -> "7560" 
-  "7577" -> "7575" 
-  "7579" -> "7578" 
-  "7586" -> "7584" 
-  "7592" -> "7591" 
-  "7599" -> "7601" 
-  "7601" -> "7606" 
-  "7603" -> "7597" 
-  "7611" -> "7610" 
-  "7621" -> "7619" 
-  "7625" -> "7623" 
-  "7469" -> "7468" 
-  "7477" -> "7482" 
-  "7480" -> "7476" 
-  "7484" -> "7483" 
-  "7495" -> "7500" 
-  "7498" -> "7494" 
+  "7519" -> "7521" 
+  "7521" -> "7525" 
+  "7524" -> "7518" 
+  "7562" -> "7566" 
+  "7566" -> "7561" 
+  "7570" -> "7573" 
+  "7573" -> "7569" 
+  "7583" -> "7587" 
+  "7587" -> "7582" 
+  "7622" -> "7620" 
+  "7629" -> "7628" 
   "7502" -> "7501" 
-  "7522" -> "7523" 
-  "7523" -> "7521" 
-  "7530" -> "7531" 
-  "7531" -> "7529" 
-  "7542" -> "7540" 
-  "7545" -> "7551" 
-  "7551" -> "7544" 
-  "7553" -> "7552" 
-  "7563" -> "7561" 
-  "7566" -> "7572" 
-  "7572" -> "7565" 
-  "7581" -> "7579" 
-  "7594" -> "7592" 
-  "7604" -> "7603" 
-  "7612" -> "7617" 
-  "7617" -> "7611" 
-  "7470" -> "7471" 
-  "7471" -> "7469" 
-  "7479" -> "7477" 
-  "7482" -> "7480" 
-  "7485" -> "7484" 
-  "7497" -> "7495" 
-  "7500" -> "7498" 
-  "7503" -> "7505" 
-  "7505" -> "7509" 
-  "7508" -> "7502" 
-  "7546" -> "7550" 
-  "7550" -> "7545" 
-  "7554" -> "7557" 
-  "7557" -> "7553" 
-  "7567" -> "7571" 
-  "7571" -> "7566" 
-  "7606" -> "7604" 
-  "7613" -> "7612" 
-  "7486" -> "7485" 
-  "7509" -> "7512" 
-  "7512" -> "7508" 
-  "7547" -> "7546" 
-  "7568" -> "7567" 
-  "7615" -> "7613" 
-  "7487" -> "7488" 
-  "7488" -> "7486" 
-  "7549" -> "7547" 
-  "7570" -> "7568" 
-  "7455" -> "7461" 
-  "7455" -> "7470" 
+  "7525" -> "7528" 
+  "7528" -> "7524" 
+  "7563" -> "7562" 
+  "7584" -> "7583" 
+  "7631" -> "7629" 
+  "7503" -> "7504" 
+  "7504" -> "7502" 
+  "7565" -> "7563" 
+  "7586" -> "7584" 
+  "7471" -> "7477" 
+  "7471" -> "7486" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/177-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/177-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/177-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/177-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,17 +1,17 @@
 digraph "commitTransaction" {  
-"7632" [label = <(commitTransactionLocked,commitTransactionLocked())<SUB>3012</SUB>> ]
-"7633" [label = <(&lt;operator&gt;.assignment,mTransactionPending = false)<SUB>3013</SUB>> ]
-"7636" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = false)<SUB>3014</SUB>> ]
-"7639" [label = <(broadcast,mTransactionCV.broadcast())<SUB>3015</SUB>> ]
-"7640" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>3015</SUB>> ]
-"7642" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>3015</SUB>> ]
-"7630" [label = <(METHOD,commitTransaction)<SUB>3010</SUB>> ]
-"7643" [label = <(METHOD_RETURN,void)<SUB>3010</SUB>> ]
-  "7632" -> "7633" 
-  "7633" -> "7636" 
-  "7636" -> "7642" 
-  "7639" -> "7643" 
-  "7640" -> "7639" 
-  "7642" -> "7640" 
-  "7630" -> "7632" 
+"7648" [label = <(commitTransactionLocked,commitTransactionLocked())<SUB>3011</SUB>> ]
+"7649" [label = <(&lt;operator&gt;.assignment,mTransactionPending = false)<SUB>3012</SUB>> ]
+"7652" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = false)<SUB>3013</SUB>> ]
+"7655" [label = <(broadcast,mTransactionCV.broadcast())<SUB>3014</SUB>> ]
+"7656" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>3014</SUB>> ]
+"7658" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>3014</SUB>> ]
+"7646" [label = <(METHOD,commitTransaction)<SUB>3009</SUB>> ]
+"7659" [label = <(METHOD_RETURN,void)<SUB>3009</SUB>> ]
+  "7648" -> "7649" 
+  "7649" -> "7652" 
+  "7652" -> "7658" 
+  "7655" -> "7659" 
+  "7656" -> "7655" 
+  "7658" -> "7656" 
+  "7646" -> "7648" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/178-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/178-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/178-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/178-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,98 +1,98 @@
 digraph "commitTransactionLocked" {  
-"7697" [label = <(&lt;operator&gt;.assignment,mAnimCompositionPending = mAnimTransactionPending)<SUB>3041</SUB>> ]
-"7700" [label = <(&lt;operator&gt;.assignment,mDrawingState = mCurrentState)<SUB>3043</SUB>> ]
-"7703" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrixChanged = false)<SUB>3045</SUB>> ]
-"7708" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;commitChildList();\012\012 // If the layer can be reached when traversing mDrawingState, then the layer is no\012 // longer offscreen. Remove the layer from the offscreenLayer set.\012 if (mOffscreenLayers.count(layer)) {\012            mOffscreenLayers.erase(layer);\012 }\012 }))<SUB>3047</SUB>> ]
-"7713" [label = <(commitOffscreenLayers,commitOffscreenLayers())<SUB>3057</SUB>> ]
-"7714" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateMirrorInfo(); }))<SUB>3058</SUB>> ]
-"7648" [label = <(&lt;operator&gt;.logicalNot,!mLayersPendingRemoval.isEmpty())<SUB>3019</SUB>> ]
-"7704" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrixChanged)<SUB>3045</SUB>> ]
-"7709" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3047</SUB>> ]
-"7712" [label = <(METHOD_REF,ANY anonymous_lambda_33 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;commitChildList();\012\012 // If the layer can be reached when traversing mDrawingState, then the layer is no\012 // longer offscreen. Remove the layer from the offscreenLayer set.\012 if (mOffscreenLayers.count(layer)) {\012            mOffscreenLayers.erase(layer);\012 }\012 }))<SUB>3047</SUB>> ]
-"7715" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3058</SUB>> ]
-"7718" [label = <(METHOD_REF,ANY anonymous_lambda_34 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateMirrorInfo(); }))<SUB>3058</SUB>> ]
-"7649" [label = <(isEmpty,mLayersPendingRemoval.isEmpty())<SUB>3019</SUB>> ]
-"7693" [label = <(clear,mLayersPendingRemoval.clear())<SUB>3036</SUB>> ]
-"7706" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>3045</SUB>> ]
-"7711" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3047</SUB>> ]
-"7717" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3058</SUB>> ]
-"7650" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.isEmpty)<SUB>3019</SUB>> ]
-"7694" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.clear)<SUB>3036</SUB>> ]
-"7652" [label = <(FIELD_IDENTIFIER,isEmpty,isEmpty)<SUB>3019</SUB>> ]
-"7658" [label = <(recordBufferingStats,recordBufferingStats(l-&gt;getName(), l-&gt;getOccupancyHistory(true)))<SUB>3022</SUB>> ]
-"7696" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>3036</SUB>> ]
-"7659" [label = <(getName,l-&gt;getName())<SUB>3022</SUB>> ]
-"7663" [label = <(getOccupancyHistory,l-&gt;getOccupancyHistory(true))<SUB>3022</SUB>> ]
-"7669" [label = <(isRemovedFromCurrentState,l-&gt;isRemovedFromCurrentState())<SUB>3025</SUB>> ]
-"7679" [label = <(&lt;operator&gt;.logicalNot,!l-&gt;getParent())<SUB>3032</SUB>> ]
-"7660" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getName)<SUB>3022</SUB>> ]
-"7664" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getOccupancyHistory)<SUB>3022</SUB>> ]
-"7670" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;isRemovedFromCurrentState)<SUB>3025</SUB>> ]
-"7674" [label = <(latchAndReleaseBuffer,l-&gt;latchAndReleaseBuffer())<SUB>3026</SUB>> ]
-"7680" [label = <(getParent,l-&gt;getParent())<SUB>3032</SUB>> ]
-"7685" [label = <(emplace,mOffscreenLayers.emplace(l.get()))<SUB>3033</SUB>> ]
-"7662" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>3022</SUB>> ]
-"7666" [label = <(FIELD_IDENTIFIER,getOccupancyHistory,getOccupancyHistory)<SUB>3022</SUB>> ]
-"7672" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>3025</SUB>> ]
-"7675" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;latchAndReleaseBuffer)<SUB>3026</SUB>> ]
-"7681" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getParent)<SUB>3032</SUB>> ]
-"7686" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.emplace)<SUB>3033</SUB>> ]
-"7689" [label = <(get,l.get())<SUB>3033</SUB>> ]
-"7677" [label = <(FIELD_IDENTIFIER,latchAndReleaseBuffer,latchAndReleaseBuffer)<SUB>3026</SUB>> ]
-"7683" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3032</SUB>> ]
-"7688" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3033</SUB>> ]
-"7690" [label = <(&lt;operator&gt;.fieldAccess,l.get)<SUB>3033</SUB>> ]
-"7692" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3033</SUB>> ]
-"7645" [label = <(METHOD,commitTransactionLocked)<SUB>3018</SUB>> ]
-"7719" [label = <(METHOD_RETURN,void)<SUB>3018</SUB>> ]
-  "7697" -> "7700" 
-  "7700" -> "7706" 
-  "7703" -> "7711" 
-  "7708" -> "7713" 
-  "7713" -> "7717" 
-  "7714" -> "7719" 
-  "7648" -> "7662" 
-  "7648" -> "7697" 
-  "7704" -> "7703" 
-  "7709" -> "7712" 
-  "7712" -> "7708" 
-  "7715" -> "7718" 
-  "7718" -> "7714" 
-  "7649" -> "7648" 
-  "7693" -> "7697" 
-  "7706" -> "7704" 
-  "7711" -> "7709" 
-  "7717" -> "7715" 
-  "7650" -> "7649" 
-  "7694" -> "7693" 
-  "7652" -> "7650" 
-  "7658" -> "7672" 
-  "7696" -> "7694" 
-  "7659" -> "7666" 
-  "7663" -> "7658" 
-  "7669" -> "7677" 
-  "7669" -> "7683" 
-  "7679" -> "7662" 
-  "7679" -> "7688" 
-  "7679" -> "7696" 
-  "7660" -> "7659" 
-  "7664" -> "7663" 
-  "7670" -> "7669" 
-  "7674" -> "7683" 
+"7713" [label = <(&lt;operator&gt;.assignment,mAnimCompositionPending = mAnimTransactionPending)<SUB>3040</SUB>> ]
+"7716" [label = <(&lt;operator&gt;.assignment,mDrawingState = mCurrentState)<SUB>3042</SUB>> ]
+"7719" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrixChanged = false)<SUB>3044</SUB>> ]
+"7724" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;commitChildList();\012\012 // If the layer can be reached when traversing mDrawingState, then the layer is no\012 // longer offscreen. Remove the layer from the offscreenLayer set.\012 if (mOffscreenLayers.count(layer)) {\012            mOffscreenLayers.erase(layer);\012 }\012 }))<SUB>3046</SUB>> ]
+"7729" [label = <(commitOffscreenLayers,commitOffscreenLayers())<SUB>3056</SUB>> ]
+"7730" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateMirrorInfo(); }))<SUB>3057</SUB>> ]
+"7664" [label = <(&lt;operator&gt;.logicalNot,!mLayersPendingRemoval.isEmpty())<SUB>3018</SUB>> ]
+"7720" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrixChanged)<SUB>3044</SUB>> ]
+"7725" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3046</SUB>> ]
+"7728" [label = <(METHOD_REF,ANY anonymous_lambda_33 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;commitChildList();\012\012 // If the layer can be reached when traversing mDrawingState, then the layer is no\012 // longer offscreen. Remove the layer from the offscreenLayer set.\012 if (mOffscreenLayers.count(layer)) {\012            mOffscreenLayers.erase(layer);\012 }\012 }))<SUB>3046</SUB>> ]
+"7731" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3057</SUB>> ]
+"7734" [label = <(METHOD_REF,ANY anonymous_lambda_34 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateMirrorInfo(); }))<SUB>3057</SUB>> ]
+"7665" [label = <(isEmpty,mLayersPendingRemoval.isEmpty())<SUB>3018</SUB>> ]
+"7709" [label = <(clear,mLayersPendingRemoval.clear())<SUB>3035</SUB>> ]
+"7722" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>3044</SUB>> ]
+"7727" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3046</SUB>> ]
+"7733" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3057</SUB>> ]
+"7666" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.isEmpty)<SUB>3018</SUB>> ]
+"7710" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.clear)<SUB>3035</SUB>> ]
+"7668" [label = <(FIELD_IDENTIFIER,isEmpty,isEmpty)<SUB>3018</SUB>> ]
+"7674" [label = <(recordBufferingStats,recordBufferingStats(l-&gt;getName(), l-&gt;getOccupancyHistory(true)))<SUB>3021</SUB>> ]
+"7712" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>3035</SUB>> ]
+"7675" [label = <(getName,l-&gt;getName())<SUB>3021</SUB>> ]
+"7679" [label = <(getOccupancyHistory,l-&gt;getOccupancyHistory(true))<SUB>3021</SUB>> ]
+"7685" [label = <(isRemovedFromCurrentState,l-&gt;isRemovedFromCurrentState())<SUB>3024</SUB>> ]
+"7695" [label = <(&lt;operator&gt;.logicalNot,!l-&gt;getParent())<SUB>3031</SUB>> ]
+"7676" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getName)<SUB>3021</SUB>> ]
+"7680" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getOccupancyHistory)<SUB>3021</SUB>> ]
+"7686" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;isRemovedFromCurrentState)<SUB>3024</SUB>> ]
+"7690" [label = <(latchAndReleaseBuffer,l-&gt;latchAndReleaseBuffer())<SUB>3025</SUB>> ]
+"7696" [label = <(getParent,l-&gt;getParent())<SUB>3031</SUB>> ]
+"7701" [label = <(emplace,mOffscreenLayers.emplace(l.get()))<SUB>3032</SUB>> ]
+"7678" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>3021</SUB>> ]
+"7682" [label = <(FIELD_IDENTIFIER,getOccupancyHistory,getOccupancyHistory)<SUB>3021</SUB>> ]
+"7688" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>3024</SUB>> ]
+"7691" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;latchAndReleaseBuffer)<SUB>3025</SUB>> ]
+"7697" [label = <(&lt;operator&gt;.indirectFieldAccess,l-&gt;getParent)<SUB>3031</SUB>> ]
+"7702" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.emplace)<SUB>3032</SUB>> ]
+"7705" [label = <(get,l.get())<SUB>3032</SUB>> ]
+"7693" [label = <(FIELD_IDENTIFIER,latchAndReleaseBuffer,latchAndReleaseBuffer)<SUB>3025</SUB>> ]
+"7699" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3031</SUB>> ]
+"7704" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3032</SUB>> ]
+"7706" [label = <(&lt;operator&gt;.fieldAccess,l.get)<SUB>3032</SUB>> ]
+"7708" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3032</SUB>> ]
+"7661" [label = <(METHOD,commitTransactionLocked)<SUB>3017</SUB>> ]
+"7735" [label = <(METHOD_RETURN,void)<SUB>3017</SUB>> ]
+  "7713" -> "7716" 
+  "7716" -> "7722" 
+  "7719" -> "7727" 
+  "7724" -> "7729" 
+  "7729" -> "7733" 
+  "7730" -> "7735" 
+  "7664" -> "7678" 
+  "7664" -> "7713" 
+  "7720" -> "7719" 
+  "7725" -> "7728" 
+  "7728" -> "7724" 
+  "7731" -> "7734" 
+  "7734" -> "7730" 
+  "7665" -> "7664" 
+  "7709" -> "7713" 
+  "7722" -> "7720" 
+  "7727" -> "7725" 
+  "7733" -> "7731" 
+  "7666" -> "7665" 
+  "7710" -> "7709" 
+  "7668" -> "7666" 
+  "7674" -> "7688" 
+  "7712" -> "7710" 
+  "7675" -> "7682" 
+  "7679" -> "7674" 
+  "7685" -> "7693" 
+  "7685" -> "7699" 
+  "7695" -> "7678" 
+  "7695" -> "7704" 
+  "7695" -> "7712" 
+  "7676" -> "7675" 
   "7680" -> "7679" 
-  "7685" -> "7662" 
-  "7685" -> "7696" 
-  "7662" -> "7660" 
-  "7666" -> "7664" 
-  "7672" -> "7670" 
-  "7675" -> "7674" 
-  "7681" -> "7680" 
-  "7686" -> "7692" 
-  "7689" -> "7685" 
-  "7677" -> "7675" 
-  "7683" -> "7681" 
+  "7686" -> "7685" 
+  "7690" -> "7699" 
+  "7696" -> "7695" 
+  "7701" -> "7678" 
+  "7701" -> "7712" 
+  "7678" -> "7676" 
+  "7682" -> "7680" 
   "7688" -> "7686" 
-  "7690" -> "7689" 
-  "7692" -> "7690" 
-  "7645" -> "7652" 
+  "7691" -> "7690" 
+  "7697" -> "7696" 
+  "7702" -> "7708" 
+  "7705" -> "7701" 
+  "7693" -> "7691" 
+  "7699" -> "7697" 
+  "7704" -> "7702" 
+  "7706" -> "7705" 
+  "7708" -> "7706" 
+  "7661" -> "7668" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/179-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/179-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/179-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/179-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,20 +1,20 @@
 digraph "commitOffscreenLayers" {  
-"7727" [label = <(traverse,offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing, [](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012            layer-&gt;doTransaction(0);\012            layer-&gt;commitChildList();\012 }))<SUB>3063</SUB>> ]
-"7728" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;traverse)<SUB>3063</SUB>> ]
-"7731" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>3063</SUB>> ]
-"7736" [label = <(METHOD_REF,ANY anonymous_lambda_35 (Layer* layer),offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing, [](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012            layer-&gt;doTransaction(0);\012            layer-&gt;commitChildList();\012 }))<SUB>3063</SUB>> ]
-"7730" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3063</SUB>> ]
-"7732" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>3063</SUB>> ]
-"7735" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>3063</SUB>> ]
-"7721" [label = <(METHOD,commitOffscreenLayers)<SUB>3061</SUB>> ]
-"7737" [label = <(METHOD_RETURN,void)<SUB>3061</SUB>> ]
-  "7727" -> "7737" 
-  "7727" -> "7730" 
-  "7728" -> "7732" 
-  "7731" -> "7736" 
-  "7736" -> "7727" 
-  "7730" -> "7728" 
-  "7732" -> "7735" 
-  "7735" -> "7731" 
-  "7721" -> "7730" 
+"7743" [label = <(traverse,offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing, [](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012            layer-&gt;doTransaction(0);\012            layer-&gt;commitChildList();\012 }))<SUB>3062</SUB>> ]
+"7744" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;traverse)<SUB>3062</SUB>> ]
+"7747" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>3062</SUB>> ]
+"7752" [label = <(METHOD_REF,ANY anonymous_lambda_35 (Layer* layer),offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing, [](Layer* layer) {\012 uint32_t trFlags = layer-&gt;getTransactionFlags(eTransactionNeeded);\012 if (!trFlags) return;\012\012            layer-&gt;doTransaction(0);\012            layer-&gt;commitChildList();\012 }))<SUB>3062</SUB>> ]
+"7746" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3062</SUB>> ]
+"7748" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>3062</SUB>> ]
+"7751" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>3062</SUB>> ]
+"7737" [label = <(METHOD,commitOffscreenLayers)<SUB>3060</SUB>> ]
+"7753" [label = <(METHOD_RETURN,void)<SUB>3060</SUB>> ]
+  "7743" -> "7753" 
+  "7743" -> "7746" 
+  "7744" -> "7748" 
+  "7747" -> "7752" 
+  "7752" -> "7743" 
+  "7746" -> "7744" 
+  "7748" -> "7751" 
+  "7751" -> "7747" 
+  "7737" -> "7746" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/18-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/18-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/18-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/18-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_25" {  
-"83" [label = <(METHOD,anonymous_lambda_25)<SUB>2394</SUB>> ]
-"85" [label = <(METHOD_RETURN,ANY)<SUB>2394</SUB>> ]
+"83" [label = <(METHOD,anonymous_lambda_25)<SUB>2393</SUB>> ]
+"85" [label = <(METHOD_RETURN,ANY)<SUB>2393</SUB>> ]
   "83" -> "85" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/180-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/180-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/180-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/180-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,59 +1,59 @@
 digraph "invalidateLayerStack" {  
-"7744" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>3074</SUB>> ]
-"7753" [label = <(&lt;operator&gt;.assignment,display = displayDevice-&gt;getCompositionDisplay())<SUB>3075</SUB>> ]
-"7746" [label = <(android.SurfaceFlinger.invalidateLayerStack.anonymous_lambda_36,())<SUB>3074</SUB>> ]
-"7755" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>3075</SUB>> ]
-"7760" [label = <(belongsInOutput,display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>3076</SUB>> ]
-"7747" [label = <(METHOD_REF,ANY anonymous_lambda_36 (),())<SUB>3074</SUB>> ]
-"7756" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>3075</SUB>> ]
-"7761" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;belongsInOutput)<SUB>3076</SUB>> ]
-"7764" [label = <(getLayerStack,layer-&gt;getLayerStack())<SUB>3076</SUB>> ]
-"7768" [label = <(getPrimaryDisplayOnly,layer-&gt;getPrimaryDisplayOnly())<SUB>3076</SUB>> ]
-"7773" [label = <(orSelf,display-&gt;editState().dirtyRegion.orSelf(dirty))<SUB>3077</SUB>> ]
-"7758" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>3075</SUB>> ]
-"7763" [label = <(FIELD_IDENTIFIER,belongsInOutput,belongsInOutput)<SUB>3076</SUB>> ]
-"7765" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getLayerStack)<SUB>3076</SUB>> ]
-"7769" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getPrimaryDisplayOnly)<SUB>3076</SUB>> ]
-"7774" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;editState().dirtyRegion.orSelf)<SUB>3077</SUB>> ]
-"7767" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>3076</SUB>> ]
-"7771" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayOnly,getPrimaryDisplayOnly)<SUB>3076</SUB>> ]
-"7775" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;editState().dirtyRegion)<SUB>3077</SUB>> ]
-"7781" [label = <(FIELD_IDENTIFIER,orSelf,orSelf)<SUB>3077</SUB>> ]
-"7776" [label = <(editState,display-&gt;editState())<SUB>3077</SUB>> ]
-"7780" [label = <(FIELD_IDENTIFIER,dirtyRegion,dirtyRegion)<SUB>3077</SUB>> ]
-"7777" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;editState)<SUB>3077</SUB>> ]
-"7779" [label = <(FIELD_IDENTIFIER,editState,editState)<SUB>3077</SUB>> ]
-"7739" [label = <(METHOD,invalidateLayerStack)<SUB>3073</SUB>> ]
-"7783" [label = <(METHOD_RETURN,void)<SUB>3073</SUB>> ]
-  "7744" -> "7747" 
-  "7744" -> "7783" 
-  "7744" -> "7758" 
-  "7753" -> "7763" 
-  "7746" -> "7783" 
-  "7746" -> "7758" 
-  "7755" -> "7753" 
-  "7760" -> "7783" 
-  "7760" -> "7758" 
-  "7760" -> "7779" 
-  "7747" -> "7746" 
-  "7756" -> "7755" 
-  "7761" -> "7767" 
-  "7764" -> "7771" 
-  "7768" -> "7760" 
-  "7773" -> "7783" 
-  "7773" -> "7758" 
-  "7758" -> "7756" 
-  "7763" -> "7761" 
-  "7765" -> "7764" 
-  "7769" -> "7768" 
-  "7774" -> "7773" 
-  "7767" -> "7765" 
+"7760" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(mDisplays))<SUB>3073</SUB>> ]
+"7769" [label = <(&lt;operator&gt;.assignment,display = displayDevice-&gt;getCompositionDisplay())<SUB>3074</SUB>> ]
+"7762" [label = <(android.SurfaceFlinger.invalidateLayerStack.anonymous_lambda_36,())<SUB>3073</SUB>> ]
+"7771" [label = <(getCompositionDisplay,displayDevice-&gt;getCompositionDisplay())<SUB>3074</SUB>> ]
+"7776" [label = <(belongsInOutput,display-&gt;belongsInOutput(layer-&gt;getLayerStack(), layer-&gt;getPrimaryDisplayOnly()))<SUB>3075</SUB>> ]
+"7763" [label = <(METHOD_REF,ANY anonymous_lambda_36 (),())<SUB>3073</SUB>> ]
+"7772" [label = <(&lt;operator&gt;.indirectFieldAccess,displayDevice-&gt;getCompositionDisplay)<SUB>3074</SUB>> ]
+"7777" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;belongsInOutput)<SUB>3075</SUB>> ]
+"7780" [label = <(getLayerStack,layer-&gt;getLayerStack())<SUB>3075</SUB>> ]
+"7784" [label = <(getPrimaryDisplayOnly,layer-&gt;getPrimaryDisplayOnly())<SUB>3075</SUB>> ]
+"7789" [label = <(orSelf,display-&gt;editState().dirtyRegion.orSelf(dirty))<SUB>3076</SUB>> ]
+"7774" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>3074</SUB>> ]
+"7779" [label = <(FIELD_IDENTIFIER,belongsInOutput,belongsInOutput)<SUB>3075</SUB>> ]
+"7781" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getLayerStack)<SUB>3075</SUB>> ]
+"7785" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getPrimaryDisplayOnly)<SUB>3075</SUB>> ]
+"7790" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;editState().dirtyRegion.orSelf)<SUB>3076</SUB>> ]
+"7783" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>3075</SUB>> ]
+"7787" [label = <(FIELD_IDENTIFIER,getPrimaryDisplayOnly,getPrimaryDisplayOnly)<SUB>3075</SUB>> ]
+"7791" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;editState().dirtyRegion)<SUB>3076</SUB>> ]
+"7797" [label = <(FIELD_IDENTIFIER,orSelf,orSelf)<SUB>3076</SUB>> ]
+"7792" [label = <(editState,display-&gt;editState())<SUB>3076</SUB>> ]
+"7796" [label = <(FIELD_IDENTIFIER,dirtyRegion,dirtyRegion)<SUB>3076</SUB>> ]
+"7793" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;editState)<SUB>3076</SUB>> ]
+"7795" [label = <(FIELD_IDENTIFIER,editState,editState)<SUB>3076</SUB>> ]
+"7755" [label = <(METHOD,invalidateLayerStack)<SUB>3072</SUB>> ]
+"7799" [label = <(METHOD_RETURN,void)<SUB>3072</SUB>> ]
+  "7760" -> "7763" 
+  "7760" -> "7799" 
+  "7760" -> "7774" 
+  "7769" -> "7779" 
+  "7762" -> "7799" 
+  "7762" -> "7774" 
   "7771" -> "7769" 
-  "7775" -> "7781" 
-  "7781" -> "7774" 
-  "7776" -> "7780" 
-  "7780" -> "7775" 
-  "7777" -> "7776" 
+  "7776" -> "7799" 
+  "7776" -> "7774" 
+  "7776" -> "7795" 
+  "7763" -> "7762" 
+  "7772" -> "7771" 
+  "7777" -> "7783" 
+  "7780" -> "7787" 
+  "7784" -> "7776" 
+  "7789" -> "7799" 
+  "7789" -> "7774" 
+  "7774" -> "7772" 
   "7779" -> "7777" 
-  "7739" -> "7744" 
+  "7781" -> "7780" 
+  "7785" -> "7784" 
+  "7790" -> "7789" 
+  "7783" -> "7781" 
+  "7787" -> "7785" 
+  "7791" -> "7797" 
+  "7797" -> "7790" 
+  "7792" -> "7796" 
+  "7796" -> "7791" 
+  "7793" -> "7792" 
+  "7795" -> "7793" 
+  "7755" -> "7760" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/181-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/181-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/181-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/181-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,149 +1,149 @@
 digraph "handlePageFlip" {  
-"7787" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>3084</SUB>> ]
-"7788" [label = <(ALOGV,ALOGV(&quot;handlePageFlip&quot;))<SUB>3085</SUB>> ]
-"7791" [label = <(&lt;operator&gt;.assignment,latchTime = systemTime())<SUB>3087</SUB>> ]
-"7795" [label = <(&lt;operator&gt;.assignment,visibleRegions = false)<SUB>3089</SUB>> ]
-"7799" [label = <(&lt;operator&gt;.assignment,frameQueued = false)<SUB>3090</SUB>> ]
-"7803" [label = <(&lt;operator&gt;.assignment,newDataLatched = false)<SUB>3091</SUB>> ]
-"7807" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>3093</SUB>> ]
-"7813" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;hasReadyFrame()) {\012            frameQueued = true;\012 if (layer-&gt;shouldPresentNow(expectedPresentTime)) {\012                mLayersWithQueuedFrames.push_back(layer);\012 } else {\012                ATRACE_NAME(&quot;!layer-&gt;shouldPresentNow()&quot;);\012                layer-&gt;useEmptyDamage();\012 }\012 } else {\012            layer-&gt;useEmptyDamage();\012 }\012 }))<SUB>3104</SUB>> ]
-"7873" [label = <(&lt;operators&gt;.assignmentOr,mVisibleRegionsDirty |= visibleRegions)<SUB>3142</SUB>> ]
-"7905" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateCloneBufferInfo(); }))<SUB>3157</SUB>> ]
-"7910" [label = <(RETURN,return !mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched;,return !mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched;)<SUB>3160</SUB>> ]
-"7793" [label = <(systemTime,systemTime())<SUB>3087</SUB>> ]
-"7809" [label = <(load,mExpectedPresentTime.load())<SUB>3093</SUB>> ]
-"7814" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3104</SUB>> ]
-"7817" [label = <(METHOD_REF,ANY anonymous_lambda_37 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;hasReadyFrame()) {\012            frameQueued = true;\012 if (layer-&gt;shouldPresentNow(expectedPresentTime)) {\012                mLayersWithQueuedFrames.push_back(layer);\012 } else {\012                ATRACE_NAME(&quot;!layer-&gt;shouldPresentNow()&quot;);\012                layer-&gt;useEmptyDamage();\012 }\012 } else {\012            layer-&gt;useEmptyDamage();\012 }\012 }))<SUB>3104</SUB>> ]
-"7833" [label = <(&lt;operator&gt;.logicalNot,!mLayersWithQueuedFrames.empty())<SUB>3126</SUB>> ]
-"7877" [label = <(&lt;operator&gt;.logicalAnd,frameQueued &amp;&amp; (mLayersWithQueuedFrames.empty() || !newDataLatched))<SUB>3147</SUB>> ]
-"7889" [label = <(CC_UNLIKELY,CC_UNLIKELY(mBootStage == BootStage::BOOTLOADER &amp;&amp; newDataLatched))<SUB>3152</SUB>> ]
-"7906" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3157</SUB>> ]
-"7909" [label = <(METHOD_REF,ANY anonymous_lambda_39 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateCloneBufferInfo(); }))<SUB>3157</SUB>> ]
-"7911" [label = <(&lt;operator&gt;.logicalAnd,!mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched)<SUB>3160</SUB>> ]
-"7810" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>3093</SUB>> ]
-"7816" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3104</SUB>> ]
-"7822" [label = <(traverse,offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* l) { l-&gt;latchAndReleaseBuffer(); }))<SUB>3122</SUB>> ]
-"7834" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3126</SUB>> ]
-"7840" [label = <(lock,lock(mStateLock))<SUB>3129</SUB>> ]
-"7879" [label = <(&lt;operator&gt;.logicalOr,mLayersWithQueuedFrames.empty() || !newDataLatched)<SUB>3147</SUB>> ]
-"7887" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>3148</SUB>> ]
-"7890" [label = <(&lt;operator&gt;.logicalAnd,mBootStage == BootStage::BOOTLOADER &amp;&amp; newDataLatched)<SUB>3152</SUB>> ]
-"7898" [label = <(ALOGI,ALOGI(&quot;Enter boot animation&quot;))<SUB>3153</SUB>> ]
-"7900" [label = <(&lt;operator&gt;.assignment,mBootStage = BootStage::BOOTANIMATION)<SUB>3154</SUB>> ]
-"7908" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3157</SUB>> ]
-"7912" [label = <(&lt;operator&gt;.logicalNot,!mLayersWithQueuedFrames.empty())<SUB>3160</SUB>> ]
-"7812" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3093</SUB>> ]
-"7823" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;traverse)<SUB>3122</SUB>> ]
-"7826" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>3122</SUB>> ]
-"7831" [label = <(METHOD_REF,ANY anonymous_lambda_38 (Layer* l),offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* l) { l-&gt;latchAndReleaseBuffer(); }))<SUB>3123</SUB>> ]
-"7835" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3126</SUB>> ]
-"7880" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3147</SUB>> ]
-"7884" [label = <(&lt;operator&gt;.logicalNot,!newDataLatched)<SUB>3147</SUB>> ]
-"7891" [label = <(&lt;operator&gt;.equals,mBootStage == BootStage::BOOTLOADER)<SUB>3152</SUB>> ]
-"7902" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTANIMATION)<SUB>3154</SUB>> ]
-"7913" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3160</SUB>> ]
-"7825" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3122</SUB>> ]
-"7827" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>3122</SUB>> ]
-"7830" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>3122</SUB>> ]
-"7837" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3126</SUB>> ]
-"7860" [label = <(useSurfaceDamage,layer-&gt;useSurfaceDamage())<SUB>3135</SUB>> ]
-"7881" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3147</SUB>> ]
-"7893" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTLOADER)<SUB>3152</SUB>> ]
-"7904" [label = <(FIELD_IDENTIFIER,BOOTANIMATION,BOOTANIMATION)<SUB>3154</SUB>> ]
-"7914" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3160</SUB>> ]
-"7847" [label = <(latchBuffer,layer-&gt;latchBuffer(visibleRegions, latchTime, expectedPresentTime))<SUB>3132</SUB>> ]
-"7861" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;useSurfaceDamage)<SUB>3135</SUB>> ]
-"7865" [label = <(isBufferLatched,layer-&gt;isBufferLatched())<SUB>3136</SUB>> ]
-"7883" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3147</SUB>> ]
-"7895" [label = <(FIELD_IDENTIFIER,BOOTLOADER,BOOTLOADER)<SUB>3152</SUB>> ]
-"7916" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3160</SUB>> ]
-"7848" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;latchBuffer)<SUB>3132</SUB>> ]
-"7855" [label = <(push_back,mLayersPendingRefresh.push_back(layer))<SUB>3133</SUB>> ]
-"7863" [label = <(FIELD_IDENTIFIER,useSurfaceDamage,useSurfaceDamage)<SUB>3135</SUB>> ]
-"7866" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;isBufferLatched)<SUB>3136</SUB>> ]
-"7870" [label = <(&lt;operator&gt;.assignment,newDataLatched = true)<SUB>3137</SUB>> ]
-"7850" [label = <(FIELD_IDENTIFIER,latchBuffer,latchBuffer)<SUB>3132</SUB>> ]
-"7856" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRefresh.push_back)<SUB>3133</SUB>> ]
-"7868" [label = <(FIELD_IDENTIFIER,isBufferLatched,isBufferLatched)<SUB>3136</SUB>> ]
-"7858" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>3133</SUB>> ]
-"7785" [label = <(METHOD,handlePageFlip)<SUB>3082</SUB>> ]
-"7918" [label = <(METHOD_RETURN,bool)<SUB>3082</SUB>> ]
-  "7787" -> "7788" 
-  "7788" -> "7793" 
-  "7791" -> "7795" 
-  "7795" -> "7799" 
-  "7799" -> "7803" 
-  "7803" -> "7812" 
-  "7807" -> "7816" 
-  "7813" -> "7825" 
-  "7873" -> "7877" 
-  "7873" -> "7883" 
-  "7905" -> "7916" 
-  "7910" -> "7918" 
-  "7793" -> "7791" 
+"7803" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>3083</SUB>> ]
+"7804" [label = <(ALOGV,ALOGV(&quot;handlePageFlip&quot;))<SUB>3084</SUB>> ]
+"7807" [label = <(&lt;operator&gt;.assignment,latchTime = systemTime())<SUB>3086</SUB>> ]
+"7811" [label = <(&lt;operator&gt;.assignment,visibleRegions = false)<SUB>3088</SUB>> ]
+"7815" [label = <(&lt;operator&gt;.assignment,frameQueued = false)<SUB>3089</SUB>> ]
+"7819" [label = <(&lt;operator&gt;.assignment,newDataLatched = false)<SUB>3090</SUB>> ]
+"7823" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>3092</SUB>> ]
+"7829" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;hasReadyFrame()) {\012            frameQueued = true;\012 if (layer-&gt;shouldPresentNow(expectedPresentTime)) {\012                mLayersWithQueuedFrames.push_back(layer);\012 } else {\012                ATRACE_NAME(&quot;!layer-&gt;shouldPresentNow()&quot;);\012                layer-&gt;useEmptyDamage();\012 }\012 } else {\012            layer-&gt;useEmptyDamage();\012 }\012 }))<SUB>3103</SUB>> ]
+"7889" [label = <(&lt;operators&gt;.assignmentOr,mVisibleRegionsDirty |= visibleRegions)<SUB>3141</SUB>> ]
+"7921" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateCloneBufferInfo(); }))<SUB>3156</SUB>> ]
+"7926" [label = <(RETURN,return !mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched;,return !mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched;)<SUB>3159</SUB>> ]
+"7809" [label = <(systemTime,systemTime())<SUB>3086</SUB>> ]
+"7825" [label = <(load,mExpectedPresentTime.load())<SUB>3092</SUB>> ]
+"7830" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3103</SUB>> ]
+"7833" [label = <(METHOD_REF,ANY anonymous_lambda_37 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;hasReadyFrame()) {\012            frameQueued = true;\012 if (layer-&gt;shouldPresentNow(expectedPresentTime)) {\012                mLayersWithQueuedFrames.push_back(layer);\012 } else {\012                ATRACE_NAME(&quot;!layer-&gt;shouldPresentNow()&quot;);\012                layer-&gt;useEmptyDamage();\012 }\012 } else {\012            layer-&gt;useEmptyDamage();\012 }\012 }))<SUB>3103</SUB>> ]
+"7849" [label = <(&lt;operator&gt;.logicalNot,!mLayersWithQueuedFrames.empty())<SUB>3125</SUB>> ]
+"7893" [label = <(&lt;operator&gt;.logicalAnd,frameQueued &amp;&amp; (mLayersWithQueuedFrames.empty() || !newDataLatched))<SUB>3146</SUB>> ]
+"7905" [label = <(CC_UNLIKELY,CC_UNLIKELY(mBootStage == BootStage::BOOTLOADER &amp;&amp; newDataLatched))<SUB>3151</SUB>> ]
+"7922" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>3156</SUB>> ]
+"7925" [label = <(METHOD_REF,ANY anonymous_lambda_39 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) { layer-&gt;updateCloneBufferInfo(); }))<SUB>3156</SUB>> ]
+"7927" [label = <(&lt;operator&gt;.logicalAnd,!mLayersWithQueuedFrames.empty() &amp;&amp; newDataLatched)<SUB>3159</SUB>> ]
+"7826" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>3092</SUB>> ]
+"7832" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3103</SUB>> ]
+"7838" [label = <(traverse,offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* l) { l-&gt;latchAndReleaseBuffer(); }))<SUB>3121</SUB>> ]
+"7850" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3125</SUB>> ]
+"7856" [label = <(lock,lock(mStateLock))<SUB>3128</SUB>> ]
+"7895" [label = <(&lt;operator&gt;.logicalOr,mLayersWithQueuedFrames.empty() || !newDataLatched)<SUB>3146</SUB>> ]
+"7903" [label = <(signalLayerUpdate,signalLayerUpdate())<SUB>3147</SUB>> ]
+"7906" [label = <(&lt;operator&gt;.logicalAnd,mBootStage == BootStage::BOOTLOADER &amp;&amp; newDataLatched)<SUB>3151</SUB>> ]
+"7914" [label = <(ALOGI,ALOGI(&quot;Enter boot animation&quot;))<SUB>3152</SUB>> ]
+"7916" [label = <(&lt;operator&gt;.assignment,mBootStage = BootStage::BOOTANIMATION)<SUB>3153</SUB>> ]
+"7924" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3156</SUB>> ]
+"7928" [label = <(&lt;operator&gt;.logicalNot,!mLayersWithQueuedFrames.empty())<SUB>3159</SUB>> ]
+"7828" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3092</SUB>> ]
+"7839" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;traverse)<SUB>3121</SUB>> ]
+"7842" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>3121</SUB>> ]
+"7847" [label = <(METHOD_REF,ANY anonymous_lambda_38 (Layer* l),offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* l) { l-&gt;latchAndReleaseBuffer(); }))<SUB>3122</SUB>> ]
+"7851" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3125</SUB>> ]
+"7896" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3146</SUB>> ]
+"7900" [label = <(&lt;operator&gt;.logicalNot,!newDataLatched)<SUB>3146</SUB>> ]
+"7907" [label = <(&lt;operator&gt;.equals,mBootStage == BootStage::BOOTLOADER)<SUB>3151</SUB>> ]
+"7918" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTANIMATION)<SUB>3153</SUB>> ]
+"7929" [label = <(empty,mLayersWithQueuedFrames.empty())<SUB>3159</SUB>> ]
+"7841" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>3121</SUB>> ]
+"7843" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>3121</SUB>> ]
+"7846" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>3121</SUB>> ]
+"7853" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3125</SUB>> ]
+"7876" [label = <(useSurfaceDamage,layer-&gt;useSurfaceDamage())<SUB>3134</SUB>> ]
+"7897" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3146</SUB>> ]
+"7909" [label = <(&lt;operator&gt;.fieldAccess,BootStage::BOOTLOADER)<SUB>3151</SUB>> ]
+"7920" [label = <(FIELD_IDENTIFIER,BOOTANIMATION,BOOTANIMATION)<SUB>3153</SUB>> ]
+"7930" [label = <(&lt;operator&gt;.fieldAccess,mLayersWithQueuedFrames.empty)<SUB>3159</SUB>> ]
+"7863" [label = <(latchBuffer,layer-&gt;latchBuffer(visibleRegions, latchTime, expectedPresentTime))<SUB>3131</SUB>> ]
+"7877" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;useSurfaceDamage)<SUB>3134</SUB>> ]
+"7881" [label = <(isBufferLatched,layer-&gt;isBufferLatched())<SUB>3135</SUB>> ]
+"7899" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3146</SUB>> ]
+"7911" [label = <(FIELD_IDENTIFIER,BOOTLOADER,BOOTLOADER)<SUB>3151</SUB>> ]
+"7932" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3159</SUB>> ]
+"7864" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;latchBuffer)<SUB>3131</SUB>> ]
+"7871" [label = <(push_back,mLayersPendingRefresh.push_back(layer))<SUB>3132</SUB>> ]
+"7879" [label = <(FIELD_IDENTIFIER,useSurfaceDamage,useSurfaceDamage)<SUB>3134</SUB>> ]
+"7882" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;isBufferLatched)<SUB>3135</SUB>> ]
+"7886" [label = <(&lt;operator&gt;.assignment,newDataLatched = true)<SUB>3136</SUB>> ]
+"7866" [label = <(FIELD_IDENTIFIER,latchBuffer,latchBuffer)<SUB>3131</SUB>> ]
+"7872" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRefresh.push_back)<SUB>3132</SUB>> ]
+"7884" [label = <(FIELD_IDENTIFIER,isBufferLatched,isBufferLatched)<SUB>3135</SUB>> ]
+"7874" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>3132</SUB>> ]
+"7801" [label = <(METHOD,handlePageFlip)<SUB>3081</SUB>> ]
+"7934" [label = <(METHOD_RETURN,bool)<SUB>3081</SUB>> ]
+  "7803" -> "7804" 
+  "7804" -> "7809" 
+  "7807" -> "7811" 
+  "7811" -> "7815" 
+  "7815" -> "7819" 
+  "7819" -> "7828" 
+  "7823" -> "7832" 
+  "7829" -> "7841" 
+  "7889" -> "7893" 
+  "7889" -> "7899" 
+  "7921" -> "7932" 
+  "7926" -> "7934" 
   "7809" -> "7807" 
-  "7814" -> "7817" 
-  "7817" -> "7813" 
-  "7833" -> "7840" 
-  "7833" -> "7873" 
-  "7877" -> "7887" 
-  "7877" -> "7895" 
-  "7889" -> "7898" 
-  "7889" -> "7908" 
-  "7906" -> "7909" 
-  "7909" -> "7905" 
-  "7911" -> "7910" 
-  "7810" -> "7809" 
-  "7816" -> "7814" 
-  "7822" -> "7825" 
-  "7822" -> "7837" 
-  "7834" -> "7833" 
-  "7840" -> "7850" 
-  "7879" -> "7877" 
-  "7887" -> "7895" 
-  "7890" -> "7889" 
-  "7898" -> "7904" 
-  "7900" -> "7908" 
-  "7908" -> "7906" 
-  "7912" -> "7911" 
-  "7812" -> "7810" 
-  "7823" -> "7827" 
-  "7826" -> "7831" 
-  "7831" -> "7822" 
-  "7835" -> "7834" 
-  "7880" -> "7879" 
-  "7880" -> "7884" 
-  "7884" -> "7879" 
-  "7891" -> "7890" 
-  "7902" -> "7900" 
-  "7913" -> "7912" 
   "7825" -> "7823" 
-  "7827" -> "7830" 
-  "7830" -> "7826" 
-  "7837" -> "7835" 
-  "7860" -> "7868" 
-  "7881" -> "7880" 
-  "7893" -> "7891" 
-  "7904" -> "7902" 
-  "7914" -> "7913" 
-  "7847" -> "7858" 
-  "7847" -> "7863" 
-  "7861" -> "7860" 
-  "7865" -> "7850" 
-  "7865" -> "7870" 
-  "7865" -> "7873" 
-  "7883" -> "7881" 
+  "7830" -> "7833" 
+  "7833" -> "7829" 
+  "7849" -> "7856" 
+  "7849" -> "7889" 
+  "7893" -> "7903" 
+  "7893" -> "7911" 
+  "7905" -> "7914" 
+  "7905" -> "7924" 
+  "7922" -> "7925" 
+  "7925" -> "7921" 
+  "7927" -> "7926" 
+  "7826" -> "7825" 
+  "7832" -> "7830" 
+  "7838" -> "7841" 
+  "7838" -> "7853" 
+  "7850" -> "7849" 
+  "7856" -> "7866" 
   "7895" -> "7893" 
-  "7916" -> "7914" 
-  "7848" -> "7847" 
-  "7855" -> "7863" 
-  "7863" -> "7861" 
-  "7866" -> "7865" 
-  "7870" -> "7850" 
-  "7870" -> "7873" 
-  "7850" -> "7848" 
-  "7856" -> "7855" 
-  "7868" -> "7866" 
-  "7858" -> "7856" 
-  "7785" -> "7787" 
+  "7903" -> "7911" 
+  "7906" -> "7905" 
+  "7914" -> "7920" 
+  "7916" -> "7924" 
+  "7924" -> "7922" 
+  "7928" -> "7927" 
+  "7828" -> "7826" 
+  "7839" -> "7843" 
+  "7842" -> "7847" 
+  "7847" -> "7838" 
+  "7851" -> "7850" 
+  "7896" -> "7895" 
+  "7896" -> "7900" 
+  "7900" -> "7895" 
+  "7907" -> "7906" 
+  "7918" -> "7916" 
+  "7929" -> "7928" 
+  "7841" -> "7839" 
+  "7843" -> "7846" 
+  "7846" -> "7842" 
+  "7853" -> "7851" 
+  "7876" -> "7884" 
+  "7897" -> "7896" 
+  "7909" -> "7907" 
+  "7920" -> "7918" 
+  "7930" -> "7929" 
+  "7863" -> "7874" 
+  "7863" -> "7879" 
+  "7877" -> "7876" 
+  "7881" -> "7866" 
+  "7881" -> "7886" 
+  "7881" -> "7889" 
+  "7899" -> "7897" 
+  "7911" -> "7909" 
+  "7932" -> "7930" 
+  "7864" -> "7863" 
+  "7871" -> "7879" 
+  "7879" -> "7877" 
+  "7882" -> "7881" 
+  "7886" -> "7866" 
+  "7886" -> "7889" 
+  "7866" -> "7864" 
+  "7872" -> "7871" 
+  "7884" -> "7882" 
+  "7874" -> "7872" 
+  "7801" -> "7803" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/182-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/182-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/182-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/182-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,7 +1,7 @@
 digraph "invalidateHwcGeometry" {  
-"7922" [label = <(&lt;operator&gt;.assignment,mGeometryInvalid = true)<SUB>3165</SUB>> ]
-"7920" [label = <(METHOD,invalidateHwcGeometry)<SUB>3163</SUB>> ]
-"7925" [label = <(METHOD_RETURN,void)<SUB>3163</SUB>> ]
-  "7922" -> "7925" 
-  "7920" -> "7922" 
+"7938" [label = <(&lt;operator&gt;.assignment,mGeometryInvalid = true)<SUB>3164</SUB>> ]
+"7936" [label = <(METHOD,invalidateHwcGeometry)<SUB>3162</SUB>> ]
+"7941" [label = <(METHOD_RETURN,void)<SUB>3162</SUB>> ]
+  "7938" -> "7941" 
+  "7936" -> "7938" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/183-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/183-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/183-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/183-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,195 +1,195 @@
 digraph "addClientLayer" {  
-"8108" [label = <(attachLayer,client-&gt;attachLayer(handle, lbc))<SUB>3225</SUB>> ]
-"8114" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>3227</SUB>> ]
-"7939" [label = <(_l,_l(mStateLock))<SUB>3175</SUB>> ]
-"7941" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; parent)<SUB>3176</SUB>> ]
-"7988" [label = <(emplace,mLayersByLocalBinderToken.emplace(handle-&gt;localBinder(), lbc))<SUB>3192</SUB>> ]
-"8105" [label = <(&lt;operator&gt;.assignment,mLayersAdded = true)<SUB>3221</SUB>> ]
-"8109" [label = <(&lt;operator&gt;.indirectFieldAccess,client-&gt;attachLayer)<SUB>3225</SUB>> ]
-"7942" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3176</SUB>> ]
-"7947" [label = <(&lt;operator&gt;.notEquals,parentHandle != nullptr)<SUB>3177</SUB>> ]
-"7971" [label = <(&lt;operator&gt;.greaterEqualsThan,mNumLayers &gt;= ISurfaceComposer::MAX_LAYERS)<SUB>3186</SUB>> ]
-"7989" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.emplace)<SUB>3192</SUB>> ]
-"7992" [label = <(localBinder,handle-&gt;localBinder())<SUB>3192</SUB>> ]
-"7998" [label = <(&lt;operator&gt;.logicalAnd,parent == nullptr &amp;&amp; addToCurrentState)<SUB>3194</SUB>> ]
-"8047" [label = <(&lt;operator&gt;.notEquals,gbc != nullptr)<SUB>3205</SUB>> ]
-"8111" [label = <(FIELD_IDENTIFIER,attachLayer,attachLayer)<SUB>3225</SUB>> ]
-"7951" [label = <(&lt;operator&gt;.assignment,parent = fromHandleLocked(parentHandle).promote())<SUB>3178</SUB>> ]
-"7973" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposer::MAX_LAYERS)<SUB>3186</SUB>> ]
-"7977" [label = <(ALOGE,ALOGE(&quot;AddClientLayer failed, mNumLayers (%zu) &gt;= MAX_LAYERS (%zu)&quot;, mNumLayers.load(),\012 ISurfaceComposer::MAX_LAYERS))<SUB>3187</SUB>> ]
-"7986" [label = <(RETURN,return NO_MEMORY;,return NO_MEMORY;)<SUB>3189</SUB>> ]
-"7991" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3192</SUB>> ]
-"7993" [label = <(&lt;operator&gt;.indirectFieldAccess,handle-&gt;localBinder)<SUB>3192</SUB>> ]
-"7999" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3194</SUB>> ]
-"8004" [label = <(add,mCurrentState.layersSortedByZ.add(lbc))<SUB>3195</SUB>> ]
-"8051" [label = <(insert,mGraphicBufferProducerList.insert(IInterface::asBinder(gbc).get()))<SUB>3206</SUB>> ]
-"8063" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(mGraphicBufferProducerList.size() &gt;\012                                        mMaxGraphicBufferProducerListSize,\012 &quot;Suspected IGBP leak: %zu IGBPs (%zu max), %zu Layers&quot;,\012                                mGraphicBufferProducerList.size(),\012                                mMaxGraphicBufferProducerListSize, mNumLayers.load()))<SUB>3207</SUB>> ]
-"8083" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>3214</SUB>> ]
-"8087" [label = <(updateTransformHint,lbc-&gt;updateTransformHint(display-&gt;getTransformHint()))<SUB>3215</SUB>> ]
-"8098" [label = <(&lt;operator&gt;.assignment,*outTransformHint = lbc-&gt;getTransformHint())<SUB>3218</SUB>> ]
-"7953" [label = <(promote,fromHandleLocked(parentHandle).promote())<SUB>3178</SUB>> ]
-"7959" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3179</SUB>> ]
-"7967" [label = <(&lt;operator&gt;.assignment,parent = parentLayer)<SUB>3183</SUB>> ]
-"7975" [label = <(FIELD_IDENTIFIER,MAX_LAYERS,MAX_LAYERS)<SUB>3186</SUB>> ]
-"7979" [label = <(load,mNumLayers.load())<SUB>3187</SUB>> ]
-"7983" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposer::MAX_LAYERS)<SUB>3188</SUB>> ]
-"7995" [label = <(FIELD_IDENTIFIER,localBinder,localBinder)<SUB>3192</SUB>> ]
-"8005" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3195</SUB>> ]
-"8052" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.insert)<SUB>3206</SUB>> ]
-"8055" [label = <(get,IInterface::asBinder(gbc).get())<SUB>3206</SUB>> ]
-"8064" [label = <(&lt;operator&gt;.greaterThan,mGraphicBufferProducerList.size() &gt;\012                                        mMaxGraphicBufferProducerListSize)<SUB>3207</SUB>> ]
-"8071" [label = <(size,mGraphicBufferProducerList.size())<SUB>3210</SUB>> ]
-"8076" [label = <(load,mNumLayers.load())<SUB>3211</SUB>> ]
-"8085" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>3214</SUB>> ]
-"8088" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;updateTransformHint)<SUB>3215</SUB>> ]
-"8091" [label = <(getTransformHint,display-&gt;getTransformHint())<SUB>3215</SUB>> ]
-"8099" [label = <(&lt;operator&gt;.indirection,*outTransformHint)<SUB>3218</SUB>> ]
-"8101" [label = <(getTransformHint,lbc-&gt;getTransformHint())<SUB>3218</SUB>> ]
-"7954" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(parentHandle).promote)<SUB>3178</SUB>> ]
-"7963" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3180</SUB>> ]
-"7980" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>3187</SUB>> ]
-"7985" [label = <(FIELD_IDENTIFIER,MAX_LAYERS,MAX_LAYERS)<SUB>3188</SUB>> ]
-"8006" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3195</SUB>> ]
-"8009" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3195</SUB>> ]
-"8014" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3196</SUB>> ]
-"8054" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>3206</SUB>> ]
-"8056" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder(gbc).get)<SUB>3206</SUB>> ]
-"8065" [label = <(size,mGraphicBufferProducerList.size())<SUB>3207</SUB>> ]
-"8072" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>3210</SUB>> ]
-"8077" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>3211</SUB>> ]
-"8090" [label = <(FIELD_IDENTIFIER,updateTransformHint,updateTransformHint)<SUB>3215</SUB>> ]
-"8092" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getTransformHint)<SUB>3215</SUB>> ]
-"8102" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;getTransformHint)<SUB>3218</SUB>> ]
-"7955" [label = <(fromHandleLocked,fromHandleLocked(parentHandle))<SUB>3178</SUB>> ]
-"7957" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3178</SUB>> ]
-"7982" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3187</SUB>> ]
-"8008" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3195</SUB>> ]
-"8018" [label = <(onRemovedFromCurrentState,lbc-&gt;onRemovedFromCurrentState())<SUB>3197</SUB>> ]
-"8057" [label = <(IInterface::asBinder,IInterface::asBinder(gbc))<SUB>3206</SUB>> ]
-"8062" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3206</SUB>> ]
-"8066" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>3207</SUB>> ]
-"8074" [label = <(FIELD_IDENTIFIER,size,size)<SUB>3210</SUB>> ]
-"8079" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3211</SUB>> ]
-"8094" [label = <(FIELD_IDENTIFIER,getTransformHint,getTransformHint)<SUB>3215</SUB>> ]
-"8104" [label = <(FIELD_IDENTIFIER,getTransformHint,getTransformHint)<SUB>3218</SUB>> ]
-"8019" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;onRemovedFromCurrentState)<SUB>3197</SUB>> ]
-"8058" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3206</SUB>> ]
-"8068" [label = <(FIELD_IDENTIFIER,size,size)<SUB>3207</SUB>> ]
-"8021" [label = <(FIELD_IDENTIFIER,onRemovedFromCurrentState,onRemovedFromCurrentState)<SUB>3197</SUB>> ]
-"8025" [label = <(isRemovedFromCurrentState,parent-&gt;isRemovedFromCurrentState())<SUB>3198</SUB>> ]
-"8060" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3206</SUB>> ]
-"8026" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;isRemovedFromCurrentState)<SUB>3198</SUB>> ]
-"8030" [label = <(addChild,parent-&gt;addChild(lbc))<SUB>3199</SUB>> ]
-"8035" [label = <(onRemovedFromCurrentState,lbc-&gt;onRemovedFromCurrentState())<SUB>3200</SUB>> ]
-"8028" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>3198</SUB>> ]
-"8031" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;addChild)<SUB>3199</SUB>> ]
-"8036" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;onRemovedFromCurrentState)<SUB>3200</SUB>> ]
-"8041" [label = <(addChild,parent-&gt;addChild(lbc))<SUB>3202</SUB>> ]
-"8033" [label = <(FIELD_IDENTIFIER,addChild,addChild)<SUB>3199</SUB>> ]
-"8038" [label = <(FIELD_IDENTIFIER,onRemovedFromCurrentState,onRemovedFromCurrentState)<SUB>3200</SUB>> ]
-"8042" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;addChild)<SUB>3202</SUB>> ]
-"8044" [label = <(FIELD_IDENTIFIER,addChild,addChild)<SUB>3202</SUB>> ]
-"7927" [label = <(METHOD,addClientLayer)<SUB>3168</SUB>> ]
-"8116" [label = <(METHOD_RETURN,status_t)<SUB>3168</SUB>> ]
-  "8108" -> "8114" 
-  "8114" -> "8116" 
-  "7939" -> "7942" 
-  "7941" -> "7947" 
-  "7988" -> "7999" 
-  "8105" -> "8111" 
-  "8109" -> "8108" 
-  "7942" -> "7941" 
-  "7947" -> "7955" 
-  "7947" -> "7967" 
-  "7971" -> "7982" 
-  "7971" -> "7991" 
-  "7989" -> "7995" 
-  "7992" -> "7988" 
-  "7998" -> "8008" 
-  "7998" -> "8014" 
-  "8047" -> "8054" 
-  "8047" -> "8085" 
-  "8111" -> "8109" 
-  "7951" -> "7959" 
-  "7973" -> "7971" 
-  "7977" -> "7986" 
-  "7986" -> "8116" 
-  "7991" -> "7989" 
-  "7993" -> "7992" 
-  "7999" -> "7998" 
-  "8004" -> "8047" 
-  "8051" -> "8068" 
-  "8063" -> "8085" 
-  "8083" -> "8090" 
-  "8083" -> "8099" 
-  "8083" -> "8105" 
-  "8087" -> "8099" 
-  "8087" -> "8105" 
-  "8098" -> "8105" 
-  "7953" -> "7951" 
-  "7959" -> "7963" 
-  "7959" -> "7975" 
+"8124" [label = <(attachLayer,client-&gt;attachLayer(handle, lbc))<SUB>3224</SUB>> ]
+"8130" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>3226</SUB>> ]
+"7955" [label = <(_l,_l(mStateLock))<SUB>3174</SUB>> ]
+"7957" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; parent)<SUB>3175</SUB>> ]
+"8004" [label = <(emplace,mLayersByLocalBinderToken.emplace(handle-&gt;localBinder(), lbc))<SUB>3191</SUB>> ]
+"8121" [label = <(&lt;operator&gt;.assignment,mLayersAdded = true)<SUB>3220</SUB>> ]
+"8125" [label = <(&lt;operator&gt;.indirectFieldAccess,client-&gt;attachLayer)<SUB>3224</SUB>> ]
+"7958" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3175</SUB>> ]
+"7963" [label = <(&lt;operator&gt;.notEquals,parentHandle != nullptr)<SUB>3176</SUB>> ]
+"7987" [label = <(&lt;operator&gt;.greaterEqualsThan,mNumLayers &gt;= ISurfaceComposer::MAX_LAYERS)<SUB>3185</SUB>> ]
+"8005" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.emplace)<SUB>3191</SUB>> ]
+"8008" [label = <(localBinder,handle-&gt;localBinder())<SUB>3191</SUB>> ]
+"8014" [label = <(&lt;operator&gt;.logicalAnd,parent == nullptr &amp;&amp; addToCurrentState)<SUB>3193</SUB>> ]
+"8063" [label = <(&lt;operator&gt;.notEquals,gbc != nullptr)<SUB>3204</SUB>> ]
+"8127" [label = <(FIELD_IDENTIFIER,attachLayer,attachLayer)<SUB>3224</SUB>> ]
+"7967" [label = <(&lt;operator&gt;.assignment,parent = fromHandleLocked(parentHandle).promote())<SUB>3177</SUB>> ]
+"7989" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposer::MAX_LAYERS)<SUB>3185</SUB>> ]
+"7993" [label = <(ALOGE,ALOGE(&quot;AddClientLayer failed, mNumLayers (%zu) &gt;= MAX_LAYERS (%zu)&quot;, mNumLayers.load(),\012 ISurfaceComposer::MAX_LAYERS))<SUB>3186</SUB>> ]
+"8002" [label = <(RETURN,return NO_MEMORY;,return NO_MEMORY;)<SUB>3188</SUB>> ]
+"8007" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3191</SUB>> ]
+"8009" [label = <(&lt;operator&gt;.indirectFieldAccess,handle-&gt;localBinder)<SUB>3191</SUB>> ]
+"8015" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3193</SUB>> ]
+"8020" [label = <(add,mCurrentState.layersSortedByZ.add(lbc))<SUB>3194</SUB>> ]
+"8067" [label = <(insert,mGraphicBufferProducerList.insert(IInterface::asBinder(gbc).get()))<SUB>3205</SUB>> ]
+"8079" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(mGraphicBufferProducerList.size() &gt;\012                                        mMaxGraphicBufferProducerListSize,\012 &quot;Suspected IGBP leak: %zu IGBPs (%zu max), %zu Layers&quot;,\012                                mGraphicBufferProducerList.size(),\012                                mMaxGraphicBufferProducerListSize, mNumLayers.load()))<SUB>3206</SUB>> ]
+"8099" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>3213</SUB>> ]
+"8103" [label = <(updateTransformHint,lbc-&gt;updateTransformHint(display-&gt;getTransformHint()))<SUB>3214</SUB>> ]
+"8114" [label = <(&lt;operator&gt;.assignment,*outTransformHint = lbc-&gt;getTransformHint())<SUB>3217</SUB>> ]
+"7969" [label = <(promote,fromHandleLocked(parentHandle).promote())<SUB>3177</SUB>> ]
+"7975" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3178</SUB>> ]
+"7983" [label = <(&lt;operator&gt;.assignment,parent = parentLayer)<SUB>3182</SUB>> ]
+"7991" [label = <(FIELD_IDENTIFIER,MAX_LAYERS,MAX_LAYERS)<SUB>3185</SUB>> ]
+"7995" [label = <(load,mNumLayers.load())<SUB>3186</SUB>> ]
+"7999" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposer::MAX_LAYERS)<SUB>3187</SUB>> ]
+"8011" [label = <(FIELD_IDENTIFIER,localBinder,localBinder)<SUB>3191</SUB>> ]
+"8021" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3194</SUB>> ]
+"8068" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.insert)<SUB>3205</SUB>> ]
+"8071" [label = <(get,IInterface::asBinder(gbc).get())<SUB>3205</SUB>> ]
+"8080" [label = <(&lt;operator&gt;.greaterThan,mGraphicBufferProducerList.size() &gt;\012                                        mMaxGraphicBufferProducerListSize)<SUB>3206</SUB>> ]
+"8087" [label = <(size,mGraphicBufferProducerList.size())<SUB>3209</SUB>> ]
+"8092" [label = <(load,mNumLayers.load())<SUB>3210</SUB>> ]
+"8101" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>3213</SUB>> ]
+"8104" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;updateTransformHint)<SUB>3214</SUB>> ]
+"8107" [label = <(getTransformHint,display-&gt;getTransformHint())<SUB>3214</SUB>> ]
+"8115" [label = <(&lt;operator&gt;.indirection,*outTransformHint)<SUB>3217</SUB>> ]
+"8117" [label = <(getTransformHint,lbc-&gt;getTransformHint())<SUB>3217</SUB>> ]
+"7970" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(parentHandle).promote)<SUB>3177</SUB>> ]
+"7979" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3179</SUB>> ]
+"7996" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>3186</SUB>> ]
+"8001" [label = <(FIELD_IDENTIFIER,MAX_LAYERS,MAX_LAYERS)<SUB>3187</SUB>> ]
+"8022" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3194</SUB>> ]
+"8025" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3194</SUB>> ]
+"8030" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>3195</SUB>> ]
+"8070" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>3205</SUB>> ]
+"8072" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder(gbc).get)<SUB>3205</SUB>> ]
+"8081" [label = <(size,mGraphicBufferProducerList.size())<SUB>3206</SUB>> ]
+"8088" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>3209</SUB>> ]
+"8093" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>3210</SUB>> ]
+"8106" [label = <(FIELD_IDENTIFIER,updateTransformHint,updateTransformHint)<SUB>3214</SUB>> ]
+"8108" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getTransformHint)<SUB>3214</SUB>> ]
+"8118" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;getTransformHint)<SUB>3217</SUB>> ]
+"7971" [label = <(fromHandleLocked,fromHandleLocked(parentHandle))<SUB>3177</SUB>> ]
+"7973" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3177</SUB>> ]
+"7998" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3186</SUB>> ]
+"8024" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3194</SUB>> ]
+"8034" [label = <(onRemovedFromCurrentState,lbc-&gt;onRemovedFromCurrentState())<SUB>3196</SUB>> ]
+"8073" [label = <(IInterface::asBinder,IInterface::asBinder(gbc))<SUB>3205</SUB>> ]
+"8078" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3205</SUB>> ]
+"8082" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>3206</SUB>> ]
+"8090" [label = <(FIELD_IDENTIFIER,size,size)<SUB>3209</SUB>> ]
+"8095" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3210</SUB>> ]
+"8110" [label = <(FIELD_IDENTIFIER,getTransformHint,getTransformHint)<SUB>3214</SUB>> ]
+"8120" [label = <(FIELD_IDENTIFIER,getTransformHint,getTransformHint)<SUB>3217</SUB>> ]
+"8035" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;onRemovedFromCurrentState)<SUB>3196</SUB>> ]
+"8074" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3205</SUB>> ]
+"8084" [label = <(FIELD_IDENTIFIER,size,size)<SUB>3206</SUB>> ]
+"8037" [label = <(FIELD_IDENTIFIER,onRemovedFromCurrentState,onRemovedFromCurrentState)<SUB>3196</SUB>> ]
+"8041" [label = <(isRemovedFromCurrentState,parent-&gt;isRemovedFromCurrentState())<SUB>3197</SUB>> ]
+"8076" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3205</SUB>> ]
+"8042" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;isRemovedFromCurrentState)<SUB>3197</SUB>> ]
+"8046" [label = <(addChild,parent-&gt;addChild(lbc))<SUB>3198</SUB>> ]
+"8051" [label = <(onRemovedFromCurrentState,lbc-&gt;onRemovedFromCurrentState())<SUB>3199</SUB>> ]
+"8044" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>3197</SUB>> ]
+"8047" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;addChild)<SUB>3198</SUB>> ]
+"8052" [label = <(&lt;operator&gt;.indirectFieldAccess,lbc-&gt;onRemovedFromCurrentState)<SUB>3199</SUB>> ]
+"8057" [label = <(addChild,parent-&gt;addChild(lbc))<SUB>3201</SUB>> ]
+"8049" [label = <(FIELD_IDENTIFIER,addChild,addChild)<SUB>3198</SUB>> ]
+"8054" [label = <(FIELD_IDENTIFIER,onRemovedFromCurrentState,onRemovedFromCurrentState)<SUB>3199</SUB>> ]
+"8058" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;addChild)<SUB>3201</SUB>> ]
+"8060" [label = <(FIELD_IDENTIFIER,addChild,addChild)<SUB>3201</SUB>> ]
+"7943" [label = <(METHOD,addClientLayer)<SUB>3167</SUB>> ]
+"8132" [label = <(METHOD_RETURN,status_t)<SUB>3167</SUB>> ]
+  "8124" -> "8130" 
+  "8130" -> "8132" 
+  "7955" -> "7958" 
+  "7957" -> "7963" 
+  "8004" -> "8015" 
+  "8121" -> "8127" 
+  "8125" -> "8124" 
+  "7958" -> "7957" 
+  "7963" -> "7971" 
+  "7963" -> "7983" 
+  "7987" -> "7998" 
+  "7987" -> "8007" 
+  "8005" -> "8011" 
+  "8008" -> "8004" 
+  "8014" -> "8024" 
+  "8014" -> "8030" 
+  "8063" -> "8070" 
+  "8063" -> "8101" 
+  "8127" -> "8125" 
   "7967" -> "7975" 
-  "7975" -> "7973" 
-  "7979" -> "7985" 
-  "7983" -> "7977" 
-  "7995" -> "7993" 
-  "8005" -> "8004" 
-  "8052" -> "8060" 
-  "8055" -> "8051" 
-  "8064" -> "8074" 
-  "8071" -> "8079" 
-  "8076" -> "8063" 
-  "8085" -> "8083" 
-  "8088" -> "8094" 
-  "8091" -> "8087" 
-  "8099" -> "8104" 
-  "8101" -> "8098" 
-  "7954" -> "7953" 
-  "7963" -> "8116" 
-  "7980" -> "7979" 
-  "7985" -> "7983" 
-  "8006" -> "8009" 
-  "8009" -> "8005" 
-  "8014" -> "8021" 
-  "8014" -> "8028" 
-  "8054" -> "8052" 
-  "8056" -> "8055" 
-  "8065" -> "8064" 
+  "7989" -> "7987" 
+  "7993" -> "8002" 
+  "8002" -> "8132" 
+  "8007" -> "8005" 
+  "8009" -> "8008" 
+  "8015" -> "8014" 
+  "8020" -> "8063" 
+  "8067" -> "8084" 
+  "8079" -> "8101" 
+  "8099" -> "8106" 
+  "8099" -> "8115" 
+  "8099" -> "8121" 
+  "8103" -> "8115" 
+  "8103" -> "8121" 
+  "8114" -> "8121" 
+  "7969" -> "7967" 
+  "7975" -> "7979" 
+  "7975" -> "7991" 
+  "7983" -> "7991" 
+  "7991" -> "7989" 
+  "7995" -> "8001" 
+  "7999" -> "7993" 
+  "8011" -> "8009" 
+  "8021" -> "8020" 
+  "8068" -> "8076" 
+  "8071" -> "8067" 
+  "8080" -> "8090" 
+  "8087" -> "8095" 
+  "8092" -> "8079" 
+  "8101" -> "8099" 
+  "8104" -> "8110" 
+  "8107" -> "8103" 
+  "8115" -> "8120" 
+  "8117" -> "8114" 
+  "7970" -> "7969" 
+  "7979" -> "8132" 
+  "7996" -> "7995" 
+  "8001" -> "7999" 
+  "8022" -> "8025" 
+  "8025" -> "8021" 
+  "8030" -> "8037" 
+  "8030" -> "8044" 
+  "8070" -> "8068" 
   "8072" -> "8071" 
-  "8077" -> "8076" 
+  "8081" -> "8080" 
+  "8088" -> "8087" 
+  "8093" -> "8092" 
+  "8106" -> "8104" 
+  "8108" -> "8107" 
+  "8118" -> "8117" 
+  "7971" -> "7973" 
+  "7973" -> "7970" 
+  "7998" -> "7996" 
+  "8024" -> "8022" 
+  "8034" -> "8063" 
+  "8073" -> "8078" 
+  "8078" -> "8072" 
+  "8082" -> "8081" 
   "8090" -> "8088" 
-  "8092" -> "8091" 
-  "8102" -> "8101" 
-  "7955" -> "7957" 
-  "7957" -> "7954" 
-  "7982" -> "7980" 
-  "8008" -> "8006" 
-  "8018" -> "8047" 
-  "8057" -> "8062" 
-  "8062" -> "8056" 
-  "8066" -> "8065" 
-  "8074" -> "8072" 
-  "8079" -> "8077" 
-  "8094" -> "8092" 
-  "8104" -> "8102" 
-  "8019" -> "8018" 
-  "8058" -> "8057" 
-  "8068" -> "8066" 
-  "8021" -> "8019" 
-  "8025" -> "8033" 
-  "8025" -> "8044" 
-  "8060" -> "8058" 
-  "8026" -> "8025" 
-  "8030" -> "8038" 
-  "8035" -> "8047" 
-  "8028" -> "8026" 
-  "8031" -> "8030" 
-  "8036" -> "8035" 
-  "8041" -> "8047" 
-  "8033" -> "8031" 
-  "8038" -> "8036" 
+  "8095" -> "8093" 
+  "8110" -> "8108" 
+  "8120" -> "8118" 
+  "8035" -> "8034" 
+  "8074" -> "8073" 
+  "8084" -> "8082" 
+  "8037" -> "8035" 
+  "8041" -> "8049" 
+  "8041" -> "8060" 
+  "8076" -> "8074" 
   "8042" -> "8041" 
+  "8046" -> "8054" 
+  "8051" -> "8063" 
   "8044" -> "8042" 
-  "7927" -> "7939" 
+  "8047" -> "8046" 
+  "8052" -> "8051" 
+  "8057" -> "8063" 
+  "8049" -> "8047" 
+  "8054" -> "8052" 
+  "8058" -> "8057" 
+  "8060" -> "8058" 
+  "7943" -> "7955" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/184-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/184-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/184-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/184-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,13 +1,13 @@
 digraph "removeGraphicBufferProducerAsync" {  
-"8121" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 })))<SUB>3231</SUB>> ]
-"8122" [label = <(UNKNOWN,void,void)<SUB>3231</SUB>> ]
-"8123" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 }))<SUB>3231</SUB>> ]
-"8124" [label = <(METHOD_REF,ANY anonymous_lambda_40 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 }))<SUB>3231</SUB>> ]
-"8118" [label = <(METHOD,removeGraphicBufferProducerAsync)<SUB>3230</SUB>> ]
-"8125" [label = <(METHOD_RETURN,void)<SUB>3230</SUB>> ]
-  "8121" -> "8125" 
-  "8122" -> "8124" 
-  "8123" -> "8121" 
-  "8124" -> "8123" 
-  "8118" -> "8122" 
+"8137" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 })))<SUB>3230</SUB>> ]
+"8138" [label = <(UNKNOWN,void,void)<SUB>3230</SUB>> ]
+"8139" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 }))<SUB>3230</SUB>> ]
+"8140" [label = <(METHOD_REF,ANY anonymous_lambda_40 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012        mGraphicBufferProducerList.erase(binder);\012 }))<SUB>3230</SUB>> ]
+"8134" [label = <(METHOD,removeGraphicBufferProducerAsync)<SUB>3229</SUB>> ]
+"8141" [label = <(METHOD_RETURN,void)<SUB>3229</SUB>> ]
+  "8137" -> "8141" 
+  "8138" -> "8140" 
+  "8139" -> "8137" 
+  "8140" -> "8139" 
+  "8134" -> "8138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/185-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/185-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/185-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/185-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,7 +1,7 @@
 digraph "peekTransactionFlags" {  
-"8129" [label = <(RETURN,return mTransactionFlags;,return mTransactionFlags;)<SUB>3238</SUB>> ]
-"8127" [label = <(METHOD,peekTransactionFlags)<SUB>3237</SUB>> ]
-"8131" [label = <(METHOD_RETURN,uint32_t)<SUB>3237</SUB>> ]
-  "8129" -> "8131" 
-  "8127" -> "8129" 
+"8145" [label = <(RETURN,return mTransactionFlags;,return mTransactionFlags;)<SUB>3237</SUB>> ]
+"8143" [label = <(METHOD,peekTransactionFlags)<SUB>3236</SUB>> ]
+"8147" [label = <(METHOD_RETURN,uint32_t)<SUB>3236</SUB>> ]
+  "8145" -> "8147" 
+  "8143" -> "8145" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/186-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/186-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/186-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/186-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,17 +1,17 @@
 digraph "getTransactionFlags" {  
-"8136" [label = <(RETURN,return mTransactionFlags.fetch_and(~flags) &amp; flags;,return mTransactionFlags.fetch_and(~flags) &amp; flags;)<SUB>3242</SUB>> ]
-"8137" [label = <(&lt;operator&gt;.and,mTransactionFlags.fetch_and(~flags) &amp; flags)<SUB>3242</SUB>> ]
-"8138" [label = <(fetch_and,mTransactionFlags.fetch_and(~flags))<SUB>3242</SUB>> ]
-"8139" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.fetch_and)<SUB>3242</SUB>> ]
-"8142" [label = <(&lt;operator&gt;.not,~flags)<SUB>3242</SUB>> ]
-"8141" [label = <(FIELD_IDENTIFIER,fetch_and,fetch_and)<SUB>3242</SUB>> ]
-"8133" [label = <(METHOD,getTransactionFlags)<SUB>3241</SUB>> ]
-"8145" [label = <(METHOD_RETURN,uint32_t)<SUB>3241</SUB>> ]
-  "8136" -> "8145" 
-  "8137" -> "8136" 
-  "8138" -> "8137" 
-  "8139" -> "8142" 
-  "8142" -> "8138" 
-  "8141" -> "8139" 
-  "8133" -> "8141" 
+"8152" [label = <(RETURN,return mTransactionFlags.fetch_and(~flags) &amp; flags;,return mTransactionFlags.fetch_and(~flags) &amp; flags;)<SUB>3241</SUB>> ]
+"8153" [label = <(&lt;operator&gt;.and,mTransactionFlags.fetch_and(~flags) &amp; flags)<SUB>3241</SUB>> ]
+"8154" [label = <(fetch_and,mTransactionFlags.fetch_and(~flags))<SUB>3241</SUB>> ]
+"8155" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.fetch_and)<SUB>3241</SUB>> ]
+"8158" [label = <(&lt;operator&gt;.not,~flags)<SUB>3241</SUB>> ]
+"8157" [label = <(FIELD_IDENTIFIER,fetch_and,fetch_and)<SUB>3241</SUB>> ]
+"8149" [label = <(METHOD,getTransactionFlags)<SUB>3240</SUB>> ]
+"8161" [label = <(METHOD_RETURN,uint32_t)<SUB>3240</SUB>> ]
+  "8152" -> "8161" 
+  "8153" -> "8152" 
+  "8154" -> "8153" 
+  "8155" -> "8158" 
+  "8158" -> "8154" 
+  "8157" -> "8155" 
+  "8149" -> "8157" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/187-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/187-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/187-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/187-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,15 +1,15 @@
 digraph "setTransactionFlags" {  
-"8150" [label = <(RETURN,return setTransactionFlags(flags, Scheduler::TransactionStart::Normal);,return setTransactionFlags(flags, Scheduler::TransactionStart::Normal);)<SUB>3246</SUB>> ]
-"8151" [label = <(setTransactionFlags,setTransactionFlags(flags, Scheduler::TransactionStart::Normal))<SUB>3246</SUB>> ]
-"8153" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::Normal)<SUB>3246</SUB>> ]
-"8154" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3246</SUB>> ]
-"8157" [label = <(FIELD_IDENTIFIER,Normal,Normal)<SUB>3246</SUB>> ]
-"8147" [label = <(METHOD,setTransactionFlags)<SUB>3245</SUB>> ]
-"8158" [label = <(METHOD_RETURN,uint32_t)<SUB>3245</SUB>> ]
-  "8150" -> "8158" 
-  "8151" -> "8150" 
-  "8153" -> "8151" 
-  "8154" -> "8157" 
-  "8157" -> "8153" 
-  "8147" -> "8154" 
+"8166" [label = <(RETURN,return setTransactionFlags(flags, Scheduler::TransactionStart::Normal);,return setTransactionFlags(flags, Scheduler::TransactionStart::Normal);)<SUB>3245</SUB>> ]
+"8167" [label = <(setTransactionFlags,setTransactionFlags(flags, Scheduler::TransactionStart::Normal))<SUB>3245</SUB>> ]
+"8169" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::Normal)<SUB>3245</SUB>> ]
+"8170" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3245</SUB>> ]
+"8173" [label = <(FIELD_IDENTIFIER,Normal,Normal)<SUB>3245</SUB>> ]
+"8163" [label = <(METHOD,setTransactionFlags)<SUB>3244</SUB>> ]
+"8174" [label = <(METHOD_RETURN,uint32_t)<SUB>3244</SUB>> ]
+  "8166" -> "8174" 
+  "8167" -> "8166" 
+  "8169" -> "8167" 
+  "8170" -> "8173" 
+  "8173" -> "8169" 
+  "8163" -> "8170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/188-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/188-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/188-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/188-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,28 +1,28 @@
 digraph "setTransactionFlags" {  
-"8165" [label = <(&lt;operator&gt;.assignment,old = mTransactionFlags.fetch_or(flags))<SUB>3251</SUB>> ]
-"8172" [label = <(setTransactionStart,mVSyncModulator-&gt;setTransactionStart(transactionStart))<SUB>3252</SUB>> ]
-"8185" [label = <(RETURN,return old;,return old;)<SUB>3256</SUB>> ]
-"8167" [label = <(fetch_or,mTransactionFlags.fetch_or(flags))<SUB>3251</SUB>> ]
-"8173" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setTransactionStart)<SUB>3252</SUB>> ]
-"8178" [label = <(&lt;operator&gt;.equals,(old &amp; flags)==0)<SUB>3253</SUB>> ]
-"8168" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.fetch_or)<SUB>3251</SUB>> ]
-"8175" [label = <(FIELD_IDENTIFIER,setTransactionStart,setTransactionStart)<SUB>3252</SUB>> ]
-"8179" [label = <(&lt;operator&gt;.and,old &amp; flags)<SUB>3253</SUB>> ]
-"8184" [label = <(signalTransaction,signalTransaction())<SUB>3254</SUB>> ]
-"8170" [label = <(FIELD_IDENTIFIER,fetch_or,fetch_or)<SUB>3251</SUB>> ]
-"8160" [label = <(METHOD,setTransactionFlags)<SUB>3249</SUB>> ]
-"8187" [label = <(METHOD_RETURN,uint32_t)<SUB>3249</SUB>> ]
-  "8165" -> "8175" 
-  "8172" -> "8179" 
-  "8185" -> "8187" 
-  "8167" -> "8165" 
-  "8173" -> "8172" 
-  "8178" -> "8184" 
-  "8178" -> "8185" 
-  "8168" -> "8167" 
-  "8175" -> "8173" 
-  "8179" -> "8178" 
-  "8184" -> "8185" 
-  "8170" -> "8168" 
-  "8160" -> "8170" 
+"8181" [label = <(&lt;operator&gt;.assignment,old = mTransactionFlags.fetch_or(flags))<SUB>3250</SUB>> ]
+"8188" [label = <(setTransactionStart,mVSyncModulator-&gt;setTransactionStart(transactionStart))<SUB>3251</SUB>> ]
+"8201" [label = <(RETURN,return old;,return old;)<SUB>3255</SUB>> ]
+"8183" [label = <(fetch_or,mTransactionFlags.fetch_or(flags))<SUB>3250</SUB>> ]
+"8189" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setTransactionStart)<SUB>3251</SUB>> ]
+"8194" [label = <(&lt;operator&gt;.equals,(old &amp; flags)==0)<SUB>3252</SUB>> ]
+"8184" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.fetch_or)<SUB>3250</SUB>> ]
+"8191" [label = <(FIELD_IDENTIFIER,setTransactionStart,setTransactionStart)<SUB>3251</SUB>> ]
+"8195" [label = <(&lt;operator&gt;.and,old &amp; flags)<SUB>3252</SUB>> ]
+"8200" [label = <(signalTransaction,signalTransaction())<SUB>3253</SUB>> ]
+"8186" [label = <(FIELD_IDENTIFIER,fetch_or,fetch_or)<SUB>3250</SUB>> ]
+"8176" [label = <(METHOD,setTransactionFlags)<SUB>3248</SUB>> ]
+"8203" [label = <(METHOD_RETURN,uint32_t)<SUB>3248</SUB>> ]
+  "8181" -> "8191" 
+  "8188" -> "8195" 
+  "8201" -> "8203" 
+  "8183" -> "8181" 
+  "8189" -> "8188" 
+  "8194" -> "8200" 
+  "8194" -> "8201" 
+  "8184" -> "8183" 
+  "8191" -> "8189" 
+  "8195" -> "8194" 
+  "8200" -> "8201" 
+  "8186" -> "8184" 
+  "8176" -> "8186" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/189-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/189-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/189-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/189-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,7 +1,7 @@
 digraph "setTraversalNeeded" {  
-"8191" [label = <(&lt;operator&gt;.assignment,mForceTraversal = true)<SUB>3260</SUB>> ]
-"8189" [label = <(METHOD,setTraversalNeeded)<SUB>3259</SUB>> ]
-"8194" [label = <(METHOD_RETURN,void)<SUB>3259</SUB>> ]
-  "8191" -> "8194" 
-  "8189" -> "8191" 
+"8207" [label = <(&lt;operator&gt;.assignment,mForceTraversal = true)<SUB>3259</SUB>> ]
+"8205" [label = <(METHOD,setTraversalNeeded)<SUB>3258</SUB>> ]
+"8210" [label = <(METHOD_RETURN,void)<SUB>3258</SUB>> ]
+  "8207" -> "8210" 
+  "8205" -> "8207" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/19-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/19-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/19-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/19-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_26" {  
-"87" [label = <(METHOD,anonymous_lambda_26)<SUB>2766</SUB>> ]
-"90" [label = <(METHOD_RETURN,ANY)<SUB>2766</SUB>> ]
+"87" [label = <(METHOD,anonymous_lambda_26)<SUB>2765</SUB>> ]
+"90" [label = <(METHOD_RETURN,ANY)<SUB>2765</SUB>> ]
   "87" -> "90" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/190-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/190-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/190-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/190-cfg.dot	2023-06-07 19:33:06.637398406 +0330
@@ -1,139 +1,139 @@
 digraph "flushTransactionQueues" {  
-"8200" [label = <(&lt;operator&gt;.assignment,flushedATransaction = false)<SUB>3268</SUB>> ]
-"8317" [label = <(RETURN,return flushedATransaction;,return flushedATransaction;)<SUB>3301</SUB>> ]
-"8205" [label = <(_l,_l(mStateLock))<SUB>3270</SUB>> ]
-"8208" [label = <(&lt;operator&gt;.assignment,it = mTransactionQueues.begin())<SUB>3272</SUB>> ]
-"8210" [label = <(begin,mTransactionQueues.begin())<SUB>3272</SUB>> ]
-"8215" [label = <(&lt;operator&gt;.notEquals,it != mTransactionQueues.end())<SUB>3273</SUB>> ]
-"8211" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.begin)<SUB>3272</SUB>> ]
-"8217" [label = <(end,mTransactionQueues.end())<SUB>3273</SUB>> ]
-"8213" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>3272</SUB>> ]
-"8218" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3273</SUB>> ]
-"8223" [label = <(&lt;operator&gt;.logicalNot,!transactionQueue.empty())<SUB>3276</SUB>> ]
-"8291" [label = <(empty,transactionQueue.empty())<SUB>3293</SUB>> ]
-"8220" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3273</SUB>> ]
-"8224" [label = <(empty,transactionQueue.empty())<SUB>3276</SUB>> ]
-"8230" [label = <(&lt;operator&gt;.assignment,&amp; transaction = transactionQueue.front())<SUB>3277</SUB>> ]
-"8248" [label = <(push_back,transactions.push_back(transaction))<SUB>3283</SUB>> ]
-"8253" [label = <(applyTransactionState,applyTransactionState(transaction.states, transaction.displays, transaction.flags,\012                                      mPendingInputWindowCommands, transaction.desiredPresentTime,\012                                      transaction.buffer, transaction.postTime,\012                                      transaction.privileged, transaction.hasListenerCallbacks,\012                                      transaction.listenerCallbacks, /*isMainThread*/ true))<SUB>3284</SUB>> ]
-"8283" [label = <(pop,transactionQueue.pop())<SUB>3289</SUB>> ]
-"8287" [label = <(&lt;operator&gt;.assignment,flushedATransaction = true)<SUB>3290</SUB>> ]
-"8292" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.empty)<SUB>3293</SUB>> ]
-"8296" [label = <(&lt;operator&gt;.assignment,it = mTransactionQueues.erase(it))<SUB>3294</SUB>> ]
-"8303" [label = <(broadcast,mTransactionCV.broadcast())<SUB>3295</SUB>> ]
-"8225" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.empty)<SUB>3276</SUB>> ]
-"8232" [label = <(front,transactionQueue.front())<SUB>3277</SUB>> ]
-"8237" [label = <(&lt;operator&gt;.logicalNot,!transactionIsReadyToBeApplied(transaction.desiredPresentTime,\012                                                   transaction.states))<SUB>3278</SUB>> ]
-"8249" [label = <(&lt;operator&gt;.fieldAccess,transactions.push_back)<SUB>3283</SUB>> ]
-"8254" [label = <(&lt;operator&gt;.fieldAccess,transaction.states)<SUB>3284</SUB>> ]
-"8257" [label = <(&lt;operator&gt;.fieldAccess,transaction.displays)<SUB>3284</SUB>> ]
-"8260" [label = <(&lt;operator&gt;.fieldAccess,transaction.flags)<SUB>3284</SUB>> ]
-"8264" [label = <(&lt;operator&gt;.fieldAccess,transaction.desiredPresentTime)<SUB>3285</SUB>> ]
-"8267" [label = <(&lt;operator&gt;.fieldAccess,transaction.buffer)<SUB>3286</SUB>> ]
-"8270" [label = <(&lt;operator&gt;.fieldAccess,transaction.postTime)<SUB>3286</SUB>> ]
-"8273" [label = <(&lt;operator&gt;.fieldAccess,transaction.privileged)<SUB>3287</SUB>> ]
-"8276" [label = <(&lt;operator&gt;.fieldAccess,transaction.hasListenerCallbacks)<SUB>3287</SUB>> ]
-"8279" [label = <(&lt;operator&gt;.fieldAccess,transaction.listenerCallbacks)<SUB>3288</SUB>> ]
-"8284" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.pop)<SUB>3289</SUB>> ]
-"8294" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3293</SUB>> ]
-"8298" [label = <(erase,mTransactionQueues.erase(it))<SUB>3294</SUB>> ]
-"8304" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>3295</SUB>> ]
-"8309" [label = <(&lt;operator&gt;.assignment,it = std::next(it, 1))<SUB>3297</SUB>> ]
-"8227" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3276</SUB>> ]
-"8233" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.front)<SUB>3277</SUB>> ]
-"8238" [label = <(transactionIsReadyToBeApplied,transactionIsReadyToBeApplied(transaction.desiredPresentTime,\012                                                   transaction.states))<SUB>3278</SUB>> ]
-"8251" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>3283</SUB>> ]
-"8256" [label = <(FIELD_IDENTIFIER,states,states)<SUB>3284</SUB>> ]
-"8259" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3284</SUB>> ]
-"8262" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>3284</SUB>> ]
-"8266" [label = <(FIELD_IDENTIFIER,desiredPresentTime,desiredPresentTime)<SUB>3285</SUB>> ]
-"8269" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3286</SUB>> ]
-"8272" [label = <(FIELD_IDENTIFIER,postTime,postTime)<SUB>3286</SUB>> ]
-"8275" [label = <(FIELD_IDENTIFIER,privileged,privileged)<SUB>3287</SUB>> ]
-"8278" [label = <(FIELD_IDENTIFIER,hasListenerCallbacks,hasListenerCallbacks)<SUB>3287</SUB>> ]
-"8281" [label = <(FIELD_IDENTIFIER,listenerCallbacks,listenerCallbacks)<SUB>3288</SUB>> ]
-"8286" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>3289</SUB>> ]
-"8299" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.erase)<SUB>3294</SUB>> ]
-"8306" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>3295</SUB>> ]
-"8311" [label = <(std::next,std::next(it, 1))<SUB>3297</SUB>> ]
-"8235" [label = <(FIELD_IDENTIFIER,front,front)<SUB>3277</SUB>> ]
-"8239" [label = <(&lt;operator&gt;.fieldAccess,transaction.desiredPresentTime)<SUB>3278</SUB>> ]
-"8242" [label = <(&lt;operator&gt;.fieldAccess,transaction.states)<SUB>3279</SUB>> ]
-"8301" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>3294</SUB>> ]
-"8312" [label = <(&lt;operator&gt;.fieldAccess,std::next)<SUB>3297</SUB>> ]
-"8241" [label = <(FIELD_IDENTIFIER,desiredPresentTime,desiredPresentTime)<SUB>3278</SUB>> ]
-"8244" [label = <(FIELD_IDENTIFIER,states,states)<SUB>3279</SUB>> ]
-"8314" [label = <(FIELD_IDENTIFIER,next,next)<SUB>3297</SUB>> ]
-"8196" [label = <(METHOD,flushTransactionQueues)<SUB>3263</SUB>> ]
-"8319" [label = <(METHOD_RETURN,bool)<SUB>3263</SUB>> ]
-  "8200" -> "8205" 
-  "8317" -> "8319" 
-  "8205" -> "8213" 
-  "8208" -> "8220" 
-  "8210" -> "8208" 
-  "8215" -> "8227" 
-  "8215" -> "8317" 
-  "8211" -> "8210" 
-  "8217" -> "8215" 
-  "8213" -> "8211" 
-  "8218" -> "8217" 
-  "8223" -> "8235" 
-  "8223" -> "8294" 
-  "8291" -> "8301" 
-  "8291" -> "8314" 
-  "8220" -> "8218" 
-  "8224" -> "8223" 
-  "8230" -> "8241" 
-  "8248" -> "8256" 
-  "8253" -> "8286" 
-  "8283" -> "8287" 
-  "8287" -> "8227" 
-  "8292" -> "8291" 
-  "8296" -> "8306" 
-  "8303" -> "8220" 
-  "8225" -> "8224" 
-  "8232" -> "8230" 
-  "8237" -> "8294" 
-  "8237" -> "8251" 
-  "8249" -> "8248" 
-  "8254" -> "8259" 
-  "8257" -> "8262" 
-  "8260" -> "8266" 
-  "8264" -> "8269" 
-  "8267" -> "8272" 
+"8216" [label = <(&lt;operator&gt;.assignment,flushedATransaction = false)<SUB>3267</SUB>> ]
+"8333" [label = <(RETURN,return flushedATransaction;,return flushedATransaction;)<SUB>3300</SUB>> ]
+"8221" [label = <(_l,_l(mStateLock))<SUB>3269</SUB>> ]
+"8224" [label = <(&lt;operator&gt;.assignment,it = mTransactionQueues.begin())<SUB>3271</SUB>> ]
+"8226" [label = <(begin,mTransactionQueues.begin())<SUB>3271</SUB>> ]
+"8231" [label = <(&lt;operator&gt;.notEquals,it != mTransactionQueues.end())<SUB>3272</SUB>> ]
+"8227" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.begin)<SUB>3271</SUB>> ]
+"8233" [label = <(end,mTransactionQueues.end())<SUB>3272</SUB>> ]
+"8229" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>3271</SUB>> ]
+"8234" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3272</SUB>> ]
+"8239" [label = <(&lt;operator&gt;.logicalNot,!transactionQueue.empty())<SUB>3275</SUB>> ]
+"8307" [label = <(empty,transactionQueue.empty())<SUB>3292</SUB>> ]
+"8236" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3272</SUB>> ]
+"8240" [label = <(empty,transactionQueue.empty())<SUB>3275</SUB>> ]
+"8246" [label = <(&lt;operator&gt;.assignment,&amp; transaction = transactionQueue.front())<SUB>3276</SUB>> ]
+"8264" [label = <(push_back,transactions.push_back(transaction))<SUB>3282</SUB>> ]
+"8269" [label = <(applyTransactionState,applyTransactionState(transaction.states, transaction.displays, transaction.flags,\012                                      mPendingInputWindowCommands, transaction.desiredPresentTime,\012                                      transaction.buffer, transaction.postTime,\012                                      transaction.privileged, transaction.hasListenerCallbacks,\012                                      transaction.listenerCallbacks, /*isMainThread*/ true))<SUB>3283</SUB>> ]
+"8299" [label = <(pop,transactionQueue.pop())<SUB>3288</SUB>> ]
+"8303" [label = <(&lt;operator&gt;.assignment,flushedATransaction = true)<SUB>3289</SUB>> ]
+"8308" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.empty)<SUB>3292</SUB>> ]
+"8312" [label = <(&lt;operator&gt;.assignment,it = mTransactionQueues.erase(it))<SUB>3293</SUB>> ]
+"8319" [label = <(broadcast,mTransactionCV.broadcast())<SUB>3294</SUB>> ]
+"8241" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.empty)<SUB>3275</SUB>> ]
+"8248" [label = <(front,transactionQueue.front())<SUB>3276</SUB>> ]
+"8253" [label = <(&lt;operator&gt;.logicalNot,!transactionIsReadyToBeApplied(transaction.desiredPresentTime,\012                                                   transaction.states))<SUB>3277</SUB>> ]
+"8265" [label = <(&lt;operator&gt;.fieldAccess,transactions.push_back)<SUB>3282</SUB>> ]
+"8270" [label = <(&lt;operator&gt;.fieldAccess,transaction.states)<SUB>3283</SUB>> ]
+"8273" [label = <(&lt;operator&gt;.fieldAccess,transaction.displays)<SUB>3283</SUB>> ]
+"8276" [label = <(&lt;operator&gt;.fieldAccess,transaction.flags)<SUB>3283</SUB>> ]
+"8280" [label = <(&lt;operator&gt;.fieldAccess,transaction.desiredPresentTime)<SUB>3284</SUB>> ]
+"8283" [label = <(&lt;operator&gt;.fieldAccess,transaction.buffer)<SUB>3285</SUB>> ]
+"8286" [label = <(&lt;operator&gt;.fieldAccess,transaction.postTime)<SUB>3285</SUB>> ]
+"8289" [label = <(&lt;operator&gt;.fieldAccess,transaction.privileged)<SUB>3286</SUB>> ]
+"8292" [label = <(&lt;operator&gt;.fieldAccess,transaction.hasListenerCallbacks)<SUB>3286</SUB>> ]
+"8295" [label = <(&lt;operator&gt;.fieldAccess,transaction.listenerCallbacks)<SUB>3287</SUB>> ]
+"8300" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.pop)<SUB>3288</SUB>> ]
+"8310" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3292</SUB>> ]
+"8314" [label = <(erase,mTransactionQueues.erase(it))<SUB>3293</SUB>> ]
+"8320" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>3294</SUB>> ]
+"8325" [label = <(&lt;operator&gt;.assignment,it = std::next(it, 1))<SUB>3296</SUB>> ]
+"8243" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3275</SUB>> ]
+"8249" [label = <(&lt;operator&gt;.fieldAccess,transactionQueue.front)<SUB>3276</SUB>> ]
+"8254" [label = <(transactionIsReadyToBeApplied,transactionIsReadyToBeApplied(transaction.desiredPresentTime,\012                                                   transaction.states))<SUB>3277</SUB>> ]
+"8267" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>3282</SUB>> ]
+"8272" [label = <(FIELD_IDENTIFIER,states,states)<SUB>3283</SUB>> ]
+"8275" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3283</SUB>> ]
+"8278" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>3283</SUB>> ]
+"8282" [label = <(FIELD_IDENTIFIER,desiredPresentTime,desiredPresentTime)<SUB>3284</SUB>> ]
+"8285" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3285</SUB>> ]
+"8288" [label = <(FIELD_IDENTIFIER,postTime,postTime)<SUB>3285</SUB>> ]
+"8291" [label = <(FIELD_IDENTIFIER,privileged,privileged)<SUB>3286</SUB>> ]
+"8294" [label = <(FIELD_IDENTIFIER,hasListenerCallbacks,hasListenerCallbacks)<SUB>3286</SUB>> ]
+"8297" [label = <(FIELD_IDENTIFIER,listenerCallbacks,listenerCallbacks)<SUB>3287</SUB>> ]
+"8302" [label = <(FIELD_IDENTIFIER,pop,pop)<SUB>3288</SUB>> ]
+"8315" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.erase)<SUB>3293</SUB>> ]
+"8322" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>3294</SUB>> ]
+"8327" [label = <(std::next,std::next(it, 1))<SUB>3296</SUB>> ]
+"8251" [label = <(FIELD_IDENTIFIER,front,front)<SUB>3276</SUB>> ]
+"8255" [label = <(&lt;operator&gt;.fieldAccess,transaction.desiredPresentTime)<SUB>3277</SUB>> ]
+"8258" [label = <(&lt;operator&gt;.fieldAccess,transaction.states)<SUB>3278</SUB>> ]
+"8317" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>3293</SUB>> ]
+"8328" [label = <(&lt;operator&gt;.fieldAccess,std::next)<SUB>3296</SUB>> ]
+"8257" [label = <(FIELD_IDENTIFIER,desiredPresentTime,desiredPresentTime)<SUB>3277</SUB>> ]
+"8260" [label = <(FIELD_IDENTIFIER,states,states)<SUB>3278</SUB>> ]
+"8330" [label = <(FIELD_IDENTIFIER,next,next)<SUB>3296</SUB>> ]
+"8212" [label = <(METHOD,flushTransactionQueues)<SUB>3262</SUB>> ]
+"8335" [label = <(METHOD_RETURN,bool)<SUB>3262</SUB>> ]
+  "8216" -> "8221" 
+  "8333" -> "8335" 
+  "8221" -> "8229" 
+  "8224" -> "8236" 
+  "8226" -> "8224" 
+  "8231" -> "8243" 
+  "8231" -> "8333" 
+  "8227" -> "8226" 
+  "8233" -> "8231" 
+  "8229" -> "8227" 
+  "8234" -> "8233" 
+  "8239" -> "8251" 
+  "8239" -> "8310" 
+  "8307" -> "8317" 
+  "8307" -> "8330" 
+  "8236" -> "8234" 
+  "8240" -> "8239" 
+  "8246" -> "8257" 
+  "8264" -> "8272" 
+  "8269" -> "8302" 
+  "8299" -> "8303" 
+  "8303" -> "8243" 
+  "8308" -> "8307" 
+  "8312" -> "8322" 
+  "8319" -> "8236" 
+  "8241" -> "8240" 
+  "8248" -> "8246" 
+  "8253" -> "8310" 
+  "8253" -> "8267" 
+  "8265" -> "8264" 
   "8270" -> "8275" 
   "8273" -> "8278" 
-  "8276" -> "8281" 
-  "8279" -> "8253" 
-  "8284" -> "8283" 
-  "8294" -> "8292" 
-  "8298" -> "8296" 
-  "8304" -> "8303" 
-  "8309" -> "8220" 
-  "8227" -> "8225" 
-  "8233" -> "8232" 
-  "8238" -> "8237" 
-  "8251" -> "8249" 
-  "8256" -> "8254" 
-  "8259" -> "8257" 
-  "8262" -> "8260" 
-  "8266" -> "8264" 
-  "8269" -> "8267" 
+  "8276" -> "8282" 
+  "8280" -> "8285" 
+  "8283" -> "8288" 
+  "8286" -> "8291" 
+  "8289" -> "8294" 
+  "8292" -> "8297" 
+  "8295" -> "8269" 
+  "8300" -> "8299" 
+  "8310" -> "8308" 
+  "8314" -> "8312" 
+  "8320" -> "8319" 
+  "8325" -> "8236" 
+  "8243" -> "8241" 
+  "8249" -> "8248" 
+  "8254" -> "8253" 
+  "8267" -> "8265" 
   "8272" -> "8270" 
   "8275" -> "8273" 
   "8278" -> "8276" 
-  "8281" -> "8279" 
-  "8286" -> "8284" 
-  "8299" -> "8298" 
-  "8306" -> "8304" 
-  "8311" -> "8309" 
-  "8235" -> "8233" 
-  "8239" -> "8244" 
-  "8242" -> "8238" 
-  "8301" -> "8299" 
-  "8312" -> "8311" 
-  "8241" -> "8239" 
-  "8244" -> "8242" 
-  "8314" -> "8312" 
-  "8196" -> "8200" 
+  "8282" -> "8280" 
+  "8285" -> "8283" 
+  "8288" -> "8286" 
+  "8291" -> "8289" 
+  "8294" -> "8292" 
+  "8297" -> "8295" 
+  "8302" -> "8300" 
+  "8315" -> "8314" 
+  "8322" -> "8320" 
+  "8327" -> "8325" 
+  "8251" -> "8249" 
+  "8255" -> "8260" 
+  "8258" -> "8254" 
+  "8317" -> "8315" 
+  "8328" -> "8327" 
+  "8257" -> "8255" 
+  "8260" -> "8258" 
+  "8330" -> "8328" 
+  "8212" -> "8216" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/191-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/191-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/191-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/191-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,15 +1,15 @@
 digraph "transactionFlushNeeded" {  
-"8323" [label = <(RETURN,return !mTransactionQueues.empty();,return !mTransactionQueues.empty();)<SUB>3305</SUB>> ]
-"8324" [label = <(&lt;operator&gt;.logicalNot,!mTransactionQueues.empty())<SUB>3305</SUB>> ]
-"8325" [label = <(empty,mTransactionQueues.empty())<SUB>3305</SUB>> ]
-"8326" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.empty)<SUB>3305</SUB>> ]
-"8328" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3305</SUB>> ]
-"8321" [label = <(METHOD,transactionFlushNeeded)<SUB>3304</SUB>> ]
-"8329" [label = <(METHOD_RETURN,bool)<SUB>3304</SUB>> ]
-  "8323" -> "8329" 
-  "8324" -> "8323" 
-  "8325" -> "8324" 
-  "8326" -> "8325" 
-  "8328" -> "8326" 
-  "8321" -> "8328" 
+"8339" [label = <(RETURN,return !mTransactionQueues.empty();,return !mTransactionQueues.empty();)<SUB>3304</SUB>> ]
+"8340" [label = <(&lt;operator&gt;.logicalNot,!mTransactionQueues.empty())<SUB>3304</SUB>> ]
+"8341" [label = <(empty,mTransactionQueues.empty())<SUB>3304</SUB>> ]
+"8342" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.empty)<SUB>3304</SUB>> ]
+"8344" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3304</SUB>> ]
+"8337" [label = <(METHOD,transactionFlushNeeded)<SUB>3303</SUB>> ]
+"8345" [label = <(METHOD_RETURN,bool)<SUB>3303</SUB>> ]
+  "8339" -> "8345" 
+  "8340" -> "8339" 
+  "8341" -> "8340" 
+  "8342" -> "8341" 
+  "8344" -> "8342" 
+  "8337" -> "8344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/192-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/192-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/192-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/192-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,81 +1,81 @@
 digraph "transactionIsReadyToBeApplied" {  
-"8336" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>3312</SUB>> ]
-"8401" [label = <(RETURN,return true;,return true;)<SUB>3329</SUB>> ]
-"8338" [label = <(load,mExpectedPresentTime.load())<SUB>3312</SUB>> ]
-"8343" [label = <(&lt;operator&gt;.logicalAnd,desiredPresentTime &gt;= 0 &amp;&amp; desiredPresentTime &gt;= expectedPresentTime &amp;&amp;\012        desiredPresentTime &lt; expectedPresentTime + s2ns(1))<SUB>3315</SUB>> ]
-"8339" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>3312</SUB>> ]
-"8344" [label = <(&lt;operator&gt;.logicalAnd,desiredPresentTime &gt;= 0 &amp;&amp; desiredPresentTime &gt;= expectedPresentTime)<SUB>3315</SUB>> ]
-"8351" [label = <(&lt;operator&gt;.lessThan,desiredPresentTime &lt; expectedPresentTime + s2ns(1))<SUB>3316</SUB>> ]
-"8358" [label = <(RETURN,return false;,return false;)<SUB>3317</SUB>> ]
-"8365" [label = <(&lt;operator&gt;.assignment,&amp; s = state.state)<SUB>3321</SUB>> ]
-"8341" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3312</SUB>> ]
-"8345" [label = <(&lt;operator&gt;.greaterEqualsThan,desiredPresentTime &gt;= 0)<SUB>3315</SUB>> ]
-"8348" [label = <(&lt;operator&gt;.greaterEqualsThan,desiredPresentTime &gt;= expectedPresentTime)<SUB>3315</SUB>> ]
-"8353" [label = <(&lt;operator&gt;.addition,expectedPresentTime + s2ns(1))<SUB>3316</SUB>> ]
-"8367" [label = <(&lt;operator&gt;.fieldAccess,state.state)<SUB>3321</SUB>> ]
-"8371" [label = <(&lt;operator&gt;.logicalNot,!(s.what &amp; layer_state_t::eAcquireFenceChanged))<SUB>3322</SUB>> ]
-"8382" [label = <(&lt;operator&gt;.logicalAnd,s.acquireFence &amp;&amp; s.acquireFence-&gt;getStatus() == Fence::Status::Unsignaled)<SUB>3325</SUB>> ]
-"8355" [label = <(s2ns,s2ns(1))<SUB>3316</SUB>> ]
-"8369" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3321</SUB>> ]
-"8372" [label = <(&lt;operator&gt;.and,s.what &amp; layer_state_t::eAcquireFenceChanged)<SUB>3322</SUB>> ]
-"8383" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3325</SUB>> ]
-"8386" [label = <(&lt;operator&gt;.equals,s.acquireFence-&gt;getStatus() == Fence::Status::Unsignaled)<SUB>3325</SUB>> ]
-"8399" [label = <(RETURN,return false;,return false;)<SUB>3326</SUB>> ]
-"8373" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3322</SUB>> ]
-"8376" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAcquireFenceChanged)<SUB>3322</SUB>> ]
-"8385" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3325</SUB>> ]
-"8387" [label = <(getStatus,s.acquireFence-&gt;getStatus())<SUB>3325</SUB>> ]
-"8393" [label = <(&lt;operator&gt;.fieldAccess,Fence::Status::Unsignaled)<SUB>3325</SUB>> ]
-"8375" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3322</SUB>> ]
-"8378" [label = <(FIELD_IDENTIFIER,eAcquireFenceChanged,eAcquireFenceChanged)<SUB>3322</SUB>> ]
-"8388" [label = <(&lt;operator&gt;.indirectFieldAccess,s.acquireFence-&gt;getStatus)<SUB>3325</SUB>> ]
-"8394" [label = <(&lt;operator&gt;.fieldAccess,Fence::Status)<SUB>3325</SUB>> ]
-"8397" [label = <(FIELD_IDENTIFIER,Unsignaled,Unsignaled)<SUB>3325</SUB>> ]
-"8389" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3325</SUB>> ]
-"8392" [label = <(FIELD_IDENTIFIER,getStatus,getStatus)<SUB>3325</SUB>> ]
-"8391" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3325</SUB>> ]
-"8331" [label = <(METHOD,transactionIsReadyToBeApplied)<SUB>3309</SUB>> ]
-"8403" [label = <(METHOD_RETURN,bool)<SUB>3309</SUB>> ]
-  "8336" -> "8345" 
-  "8401" -> "8403" 
-  "8338" -> "8336" 
-  "8343" -> "8358" 
-  "8343" -> "8369" 
-  "8339" -> "8338" 
-  "8344" -> "8343" 
-  "8344" -> "8355" 
-  "8351" -> "8343" 
-  "8358" -> "8403" 
-  "8365" -> "8375" 
-  "8341" -> "8339" 
-  "8345" -> "8344" 
-  "8345" -> "8348" 
-  "8348" -> "8344" 
-  "8353" -> "8351" 
-  "8367" -> "8365" 
-  "8371" -> "8385" 
-  "8382" -> "8369" 
-  "8382" -> "8399" 
-  "8382" -> "8401" 
-  "8355" -> "8353" 
+"8352" [label = <(&lt;operator&gt;.assignment,expectedPresentTime = mExpectedPresentTime.load())<SUB>3311</SUB>> ]
+"8417" [label = <(RETURN,return true;,return true;)<SUB>3328</SUB>> ]
+"8354" [label = <(load,mExpectedPresentTime.load())<SUB>3311</SUB>> ]
+"8359" [label = <(&lt;operator&gt;.logicalAnd,desiredPresentTime &gt;= 0 &amp;&amp; desiredPresentTime &gt;= expectedPresentTime &amp;&amp;\012        desiredPresentTime &lt; expectedPresentTime + s2ns(1))<SUB>3314</SUB>> ]
+"8355" [label = <(&lt;operator&gt;.fieldAccess,mExpectedPresentTime.load)<SUB>3311</SUB>> ]
+"8360" [label = <(&lt;operator&gt;.logicalAnd,desiredPresentTime &gt;= 0 &amp;&amp; desiredPresentTime &gt;= expectedPresentTime)<SUB>3314</SUB>> ]
+"8367" [label = <(&lt;operator&gt;.lessThan,desiredPresentTime &lt; expectedPresentTime + s2ns(1))<SUB>3315</SUB>> ]
+"8374" [label = <(RETURN,return false;,return false;)<SUB>3316</SUB>> ]
+"8381" [label = <(&lt;operator&gt;.assignment,&amp; s = state.state)<SUB>3320</SUB>> ]
+"8357" [label = <(FIELD_IDENTIFIER,load,load)<SUB>3311</SUB>> ]
+"8361" [label = <(&lt;operator&gt;.greaterEqualsThan,desiredPresentTime &gt;= 0)<SUB>3314</SUB>> ]
+"8364" [label = <(&lt;operator&gt;.greaterEqualsThan,desiredPresentTime &gt;= expectedPresentTime)<SUB>3314</SUB>> ]
+"8369" [label = <(&lt;operator&gt;.addition,expectedPresentTime + s2ns(1))<SUB>3315</SUB>> ]
+"8383" [label = <(&lt;operator&gt;.fieldAccess,state.state)<SUB>3320</SUB>> ]
+"8387" [label = <(&lt;operator&gt;.logicalNot,!(s.what &amp; layer_state_t::eAcquireFenceChanged))<SUB>3321</SUB>> ]
+"8398" [label = <(&lt;operator&gt;.logicalAnd,s.acquireFence &amp;&amp; s.acquireFence-&gt;getStatus() == Fence::Status::Unsignaled)<SUB>3324</SUB>> ]
+"8371" [label = <(s2ns,s2ns(1))<SUB>3315</SUB>> ]
+"8385" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3320</SUB>> ]
+"8388" [label = <(&lt;operator&gt;.and,s.what &amp; layer_state_t::eAcquireFenceChanged)<SUB>3321</SUB>> ]
+"8399" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3324</SUB>> ]
+"8402" [label = <(&lt;operator&gt;.equals,s.acquireFence-&gt;getStatus() == Fence::Status::Unsignaled)<SUB>3324</SUB>> ]
+"8415" [label = <(RETURN,return false;,return false;)<SUB>3325</SUB>> ]
+"8389" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3321</SUB>> ]
+"8392" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAcquireFenceChanged)<SUB>3321</SUB>> ]
+"8401" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3324</SUB>> ]
+"8403" [label = <(getStatus,s.acquireFence-&gt;getStatus())<SUB>3324</SUB>> ]
+"8409" [label = <(&lt;operator&gt;.fieldAccess,Fence::Status::Unsignaled)<SUB>3324</SUB>> ]
+"8391" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3321</SUB>> ]
+"8394" [label = <(FIELD_IDENTIFIER,eAcquireFenceChanged,eAcquireFenceChanged)<SUB>3321</SUB>> ]
+"8404" [label = <(&lt;operator&gt;.indirectFieldAccess,s.acquireFence-&gt;getStatus)<SUB>3324</SUB>> ]
+"8410" [label = <(&lt;operator&gt;.fieldAccess,Fence::Status)<SUB>3324</SUB>> ]
+"8413" [label = <(FIELD_IDENTIFIER,Unsignaled,Unsignaled)<SUB>3324</SUB>> ]
+"8405" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3324</SUB>> ]
+"8408" [label = <(FIELD_IDENTIFIER,getStatus,getStatus)<SUB>3324</SUB>> ]
+"8407" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3324</SUB>> ]
+"8347" [label = <(METHOD,transactionIsReadyToBeApplied)<SUB>3308</SUB>> ]
+"8419" [label = <(METHOD_RETURN,bool)<SUB>3308</SUB>> ]
+  "8352" -> "8361" 
+  "8417" -> "8419" 
+  "8354" -> "8352" 
+  "8359" -> "8374" 
+  "8359" -> "8385" 
+  "8355" -> "8354" 
+  "8360" -> "8359" 
+  "8360" -> "8371" 
+  "8367" -> "8359" 
+  "8374" -> "8419" 
+  "8381" -> "8391" 
+  "8357" -> "8355" 
+  "8361" -> "8360" 
+  "8361" -> "8364" 
+  "8364" -> "8360" 
   "8369" -> "8367" 
-  "8372" -> "8371" 
-  "8383" -> "8382" 
-  "8383" -> "8391" 
-  "8386" -> "8382" 
-  "8399" -> "8403" 
-  "8373" -> "8378" 
-  "8376" -> "8372" 
+  "8383" -> "8381" 
+  "8387" -> "8401" 
+  "8398" -> "8385" 
+  "8398" -> "8415" 
+  "8398" -> "8417" 
+  "8371" -> "8369" 
   "8385" -> "8383" 
-  "8387" -> "8394" 
-  "8393" -> "8386" 
-  "8375" -> "8373" 
-  "8378" -> "8376" 
   "8388" -> "8387" 
-  "8394" -> "8397" 
-  "8397" -> "8393" 
-  "8389" -> "8392" 
+  "8399" -> "8398" 
+  "8399" -> "8407" 
+  "8402" -> "8398" 
+  "8415" -> "8419" 
+  "8389" -> "8394" 
   "8392" -> "8388" 
+  "8401" -> "8399" 
+  "8403" -> "8410" 
+  "8409" -> "8402" 
   "8391" -> "8389" 
-  "8331" -> "8341" 
+  "8394" -> "8392" 
+  "8404" -> "8403" 
+  "8410" -> "8413" 
+  "8413" -> "8409" 
+  "8405" -> "8408" 
+  "8408" -> "8404" 
+  "8407" -> "8405" 
+  "8347" -> "8357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/193-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/193-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/193-cfg.dot	2023-06-07 19:33:00.397398983 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/193-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,104 +1,104 @@
 digraph "setTransactionState" {  
-"8416" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>3337</SUB>> ]
-"8418" [label = <(&lt;operator&gt;.assignment,postTime = systemTime())<SUB>3339</SUB>> ]
-"8422" [label = <(&lt;operator&gt;.assignment,privileged = callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>3341</SUB>> ]
-"8426" [label = <(_l,_l(mStateLock))<SUB>3343</SUB>> ]
-"8429" [label = <(&lt;operator&gt;.assignment,itr = mTransactionQueues.find(applyToken))<SUB>3346</SUB>> ]
-"8479" [label = <(&lt;operator&gt;.assignment,pendingTransactions = itr != mTransactionQueues.end())<SUB>3362</SUB>> ]
-"8520" [label = <(applyTransactionState,applyTransactionState(states, displays, flags, inputWindowCommands, desiredPresentTime,\012                          uncacheBuffer, postTime, privileged, hasListenerCallbacks,\012                          listenerCallbacks))<SUB>3376</SUB>> ]
-"8420" [label = <(systemTime,systemTime())<SUB>3339</SUB>> ]
-"8424" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>3341</SUB>> ]
-"8431" [label = <(find,mTransactionQueues.find(applyToken))<SUB>3346</SUB>> ]
-"8437" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3349</SUB>> ]
-"8481" [label = <(&lt;operator&gt;.notEquals,itr != mTransactionQueues.end())<SUB>3362</SUB>> ]
-"8488" [label = <(&lt;operator&gt;.logicalNot,!pendingTransactions)<SUB>3364</SUB>> ]
-"8496" [label = <(&lt;operator&gt;.logicalOr,pendingTransactions || !transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3368</SUB>> ]
-"8432" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.find)<SUB>3346</SUB>> ]
-"8483" [label = <(end,mTransactionQueues.end())<SUB>3362</SUB>> ]
-"8491" [label = <(&lt;operator&gt;.assignment,mExpectedPresentTime = calculateExpectedPresentTime(systemTime()))<SUB>3365</SUB>> ]
-"8498" [label = <(&lt;operator&gt;.logicalNot,!transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3368</SUB>> ]
-"8503" [label = <(emplace,mTransactionQueues[applyToken].emplace(states, displays, flags, desiredPresentTime,\012                                               uncacheBuffer, postTime, privileged,\012                                               hasListenerCallbacks, listenerCallbacks))<SUB>3369</SUB>> ]
-"8519" [label = <(RETURN,return;,return;)<SUB>3373</SUB>> ]
-"8434" [label = <(FIELD_IDENTIFIER,find,find)<SUB>3346</SUB>> ]
-"8442" [label = <(&lt;operator&gt;.notEquals,itr != mTransactionQueues.end())<SUB>3350</SUB>> ]
-"8484" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3362</SUB>> ]
-"8493" [label = <(calculateExpectedPresentTime,calculateExpectedPresentTime(systemTime()))<SUB>3365</SUB>> ]
-"8499" [label = <(transactionIsReadyToBeApplied,transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3368</SUB>> ]
-"8504" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues[applyToken].emplace)<SUB>3369</SUB>> ]
-"8444" [label = <(end,mTransactionQueues.end())<SUB>3350</SUB>> ]
-"8450" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3351</SUB>> ]
-"8471" [label = <(&lt;operator&gt;.assignment,itr = mTransactionQueues.find(applyToken))<SUB>3358</SUB>> ]
-"8486" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3362</SUB>> ]
-"8494" [label = <(systemTime,systemTime())<SUB>3365</SUB>> ]
-"8505" [label = <(&lt;operator&gt;.indirectIndexAccess,mTransactionQueues[applyToken])<SUB>3369</SUB>> ]
-"8508" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3369</SUB>> ]
-"8445" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3350</SUB>> ]
-"8452" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3351</SUB>> ]
-"8460" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3352</SUB>> ]
-"8473" [label = <(find,mTransactionQueues.find(applyToken))<SUB>3358</SUB>> ]
-"8447" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3350</SUB>> ]
-"8453" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3351</SUB>> ]
-"8457" [label = <(s2ns,s2ns(5))<SUB>3351</SUB>> ]
-"8461" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3352</SUB>> ]
-"8465" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT,\012 &quot;setTransactionState timed out &quot;\012 &quot;waiting for animation frame to apply&quot;))<SUB>3353</SUB>> ]
-"8474" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.find)<SUB>3358</SUB>> ]
-"8455" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3351</SUB>> ]
-"8466" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3353</SUB>> ]
-"8476" [label = <(FIELD_IDENTIFIER,find,find)<SUB>3358</SUB>> ]
-"8405" [label = <(METHOD,setTransactionState)<SUB>3332</SUB>> ]
-"8531" [label = <(METHOD_RETURN,void)<SUB>3332</SUB>> ]
-  "8416" -> "8420" 
-  "8418" -> "8424" 
-  "8422" -> "8426" 
-  "8426" -> "8434" 
-  "8429" -> "8437" 
-  "8479" -> "8488" 
-  "8520" -> "8531" 
-  "8420" -> "8418" 
-  "8424" -> "8422" 
-  "8431" -> "8429" 
-  "8437" -> "8447" 
-  "8437" -> "8486" 
-  "8481" -> "8479" 
-  "8488" -> "8494" 
-  "8488" -> "8496" 
-  "8488" -> "8499" 
-  "8496" -> "8505" 
-  "8496" -> "8520" 
-  "8432" -> "8431" 
-  "8483" -> "8481" 
-  "8491" -> "8496" 
-  "8491" -> "8499" 
-  "8498" -> "8496" 
-  "8503" -> "8519" 
-  "8519" -> "8531" 
-  "8434" -> "8432" 
-  "8442" -> "8455" 
-  "8442" -> "8486" 
-  "8484" -> "8483" 
-  "8493" -> "8491" 
-  "8499" -> "8498" 
-  "8504" -> "8503" 
-  "8444" -> "8442" 
-  "8450" -> "8461" 
-  "8471" -> "8447" 
-  "8486" -> "8484" 
-  "8494" -> "8493" 
-  "8505" -> "8508" 
-  "8508" -> "8504" 
-  "8445" -> "8444" 
-  "8452" -> "8450" 
-  "8460" -> "8466" 
-  "8460" -> "8476" 
-  "8473" -> "8471" 
+"8432" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>3336</SUB>> ]
+"8434" [label = <(&lt;operator&gt;.assignment,postTime = systemTime())<SUB>3338</SUB>> ]
+"8438" [label = <(&lt;operator&gt;.assignment,privileged = callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>3340</SUB>> ]
+"8442" [label = <(_l,_l(mStateLock))<SUB>3342</SUB>> ]
+"8445" [label = <(&lt;operator&gt;.assignment,itr = mTransactionQueues.find(applyToken))<SUB>3345</SUB>> ]
+"8495" [label = <(&lt;operator&gt;.assignment,pendingTransactions = itr != mTransactionQueues.end())<SUB>3361</SUB>> ]
+"8536" [label = <(applyTransactionState,applyTransactionState(states, displays, flags, inputWindowCommands, desiredPresentTime,\012                          uncacheBuffer, postTime, privileged, hasListenerCallbacks,\012                          listenerCallbacks))<SUB>3375</SUB>> ]
+"8436" [label = <(systemTime,systemTime())<SUB>3338</SUB>> ]
+"8440" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>3340</SUB>> ]
+"8447" [label = <(find,mTransactionQueues.find(applyToken))<SUB>3345</SUB>> ]
+"8453" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3348</SUB>> ]
+"8497" [label = <(&lt;operator&gt;.notEquals,itr != mTransactionQueues.end())<SUB>3361</SUB>> ]
+"8504" [label = <(&lt;operator&gt;.logicalNot,!pendingTransactions)<SUB>3363</SUB>> ]
+"8512" [label = <(&lt;operator&gt;.logicalOr,pendingTransactions || !transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3367</SUB>> ]
+"8448" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.find)<SUB>3345</SUB>> ]
+"8499" [label = <(end,mTransactionQueues.end())<SUB>3361</SUB>> ]
+"8507" [label = <(&lt;operator&gt;.assignment,mExpectedPresentTime = calculateExpectedPresentTime(systemTime()))<SUB>3364</SUB>> ]
+"8514" [label = <(&lt;operator&gt;.logicalNot,!transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3367</SUB>> ]
+"8519" [label = <(emplace,mTransactionQueues[applyToken].emplace(states, displays, flags, desiredPresentTime,\012                                               uncacheBuffer, postTime, privileged,\012                                               hasListenerCallbacks, listenerCallbacks))<SUB>3368</SUB>> ]
+"8535" [label = <(RETURN,return;,return;)<SUB>3372</SUB>> ]
+"8450" [label = <(FIELD_IDENTIFIER,find,find)<SUB>3345</SUB>> ]
+"8458" [label = <(&lt;operator&gt;.notEquals,itr != mTransactionQueues.end())<SUB>3349</SUB>> ]
+"8500" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3361</SUB>> ]
+"8509" [label = <(calculateExpectedPresentTime,calculateExpectedPresentTime(systemTime()))<SUB>3364</SUB>> ]
+"8515" [label = <(transactionIsReadyToBeApplied,transactionIsReadyToBeApplied(desiredPresentTime, states))<SUB>3367</SUB>> ]
+"8520" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues[applyToken].emplace)<SUB>3368</SUB>> ]
+"8460" [label = <(end,mTransactionQueues.end())<SUB>3349</SUB>> ]
+"8466" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3350</SUB>> ]
+"8487" [label = <(&lt;operator&gt;.assignment,itr = mTransactionQueues.find(applyToken))<SUB>3357</SUB>> ]
+"8502" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3361</SUB>> ]
+"8510" [label = <(systemTime,systemTime())<SUB>3364</SUB>> ]
+"8521" [label = <(&lt;operator&gt;.indirectIndexAccess,mTransactionQueues[applyToken])<SUB>3368</SUB>> ]
+"8524" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>3368</SUB>> ]
+"8461" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.end)<SUB>3349</SUB>> ]
+"8468" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3350</SUB>> ]
+"8476" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3351</SUB>> ]
+"8489" [label = <(find,mTransactionQueues.find(applyToken))<SUB>3357</SUB>> ]
+"8463" [label = <(FIELD_IDENTIFIER,end,end)<SUB>3349</SUB>> ]
+"8469" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3350</SUB>> ]
+"8473" [label = <(s2ns,s2ns(5))<SUB>3350</SUB>> ]
+"8477" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3351</SUB>> ]
+"8481" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT,\012 &quot;setTransactionState timed out &quot;\012 &quot;waiting for animation frame to apply&quot;))<SUB>3352</SUB>> ]
+"8490" [label = <(&lt;operator&gt;.fieldAccess,mTransactionQueues.find)<SUB>3357</SUB>> ]
+"8471" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3350</SUB>> ]
+"8482" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3352</SUB>> ]
+"8492" [label = <(FIELD_IDENTIFIER,find,find)<SUB>3357</SUB>> ]
+"8421" [label = <(METHOD,setTransactionState)<SUB>3331</SUB>> ]
+"8547" [label = <(METHOD_RETURN,void)<SUB>3331</SUB>> ]
+  "8432" -> "8436" 
+  "8434" -> "8440" 
+  "8438" -> "8442" 
+  "8442" -> "8450" 
+  "8445" -> "8453" 
+  "8495" -> "8504" 
+  "8536" -> "8547" 
+  "8436" -> "8434" 
+  "8440" -> "8438" 
   "8447" -> "8445" 
-  "8453" -> "8457" 
-  "8457" -> "8452" 
+  "8453" -> "8463" 
+  "8453" -> "8502" 
+  "8497" -> "8495" 
+  "8504" -> "8510" 
+  "8504" -> "8512" 
+  "8504" -> "8515" 
+  "8512" -> "8521" 
+  "8512" -> "8536" 
+  "8448" -> "8447" 
+  "8499" -> "8497" 
+  "8507" -> "8512" 
+  "8507" -> "8515" 
+  "8514" -> "8512" 
+  "8519" -> "8535" 
+  "8535" -> "8547" 
+  "8450" -> "8448" 
+  "8458" -> "8471" 
+  "8458" -> "8502" 
+  "8500" -> "8499" 
+  "8509" -> "8507" 
+  "8515" -> "8514" 
+  "8520" -> "8519" 
+  "8460" -> "8458" 
+  "8466" -> "8477" 
+  "8487" -> "8463" 
+  "8502" -> "8500" 
+  "8510" -> "8509" 
+  "8521" -> "8524" 
+  "8524" -> "8520" 
   "8461" -> "8460" 
-  "8465" -> "8486" 
-  "8474" -> "8473" 
-  "8455" -> "8453" 
-  "8466" -> "8465" 
-  "8476" -> "8474" 
-  "8405" -> "8416" 
+  "8468" -> "8466" 
+  "8476" -> "8482" 
+  "8476" -> "8492" 
+  "8489" -> "8487" 
+  "8463" -> "8461" 
+  "8469" -> "8473" 
+  "8473" -> "8468" 
+  "8477" -> "8476" 
+  "8481" -> "8502" 
+  "8490" -> "8489" 
+  "8471" -> "8469" 
+  "8482" -> "8481" 
+  "8492" -> "8490" 
+  "8421" -> "8432" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/194-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/194-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/194-cfg.dot	2023-06-07 19:33:00.407398981 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/194-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,329 +1,329 @@
 digraph "applyTransactionState" {  
-"8547" [label = <(&lt;operator&gt;.assignment,transactionFlags = 0)<SUB>3387</SUB>> ]
-"8608" [label = <(&lt;operator&gt;.expressionList,std::unordered_set&lt;ListenerCallbacks, ListenerCallbacksHash&gt; listenerCallbacksWithSurfaces)<SUB>3417</SUB>> ]
-"8618" [label = <(&lt;operator&gt;.assignment,clientStateFlags = 0)<SUB>3418</SUB>> ]
-"8682" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= clientStateFlags)<SUB>3438</SUB>> ]
-"8685" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= addInputWindowCommands(inputWindowCommands))<SUB>3440</SUB>> ]
-"8743" [label = <(&lt;operator&gt;.assignment,transactionStart = [](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3463</SUB>> ]
-"8551" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3389</SUB>> ]
-"8609" [label = <(&lt;operator&gt;.lessThan,std::unordered_set&lt;ListenerCallbacks)<SUB>3417</SUB>> ]
-"8614" [label = <(&lt;operator&gt;.greaterThan,ListenerCallbacksHash&gt; listenerCallbacksWithSurfaces)<SUB>3417</SUB>> ]
-"8671" [label = <(&lt;operator&gt;.logicalAnd,!(clientStateFlags &amp; eTraversalNeeded) &amp;&amp; hasListenerCallbacks)<SUB>3435</SUB>> ]
-"8687" [label = <(addInputWindowCommands,addInputWindowCommands(inputWindowCommands))<SUB>3440</SUB>> ]
-"8690" [label = <(isValid,uncacheBuffer.isValid())<SUB>3442</SUB>> ]
-"8711" [label = <(&lt;operator&gt;.logicalAnd,transactionFlags == 0 &amp;&amp;\012 ((flags &amp; eSynchronous) || (flags &amp; eAnimation)))<SUB>3451</SUB>> ]
-"8727" [label = <(&lt;operator&gt;.logicalAnd,isMainThread &amp;&amp; (transactionFlags &amp; eTraversalNeeded))<SUB>3458</SUB>> ]
-"8745" [label = <(android.SurfaceFlinger.applyTransactionState.anonymous_lambda_41,[](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3463</SUB>> ]
-"8590" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= setDisplayStateLocked(display))<SUB>3406</SUB>> ]
-"8598" [label = <(startRegistration,mTransactionCompletedThread.startRegistration(listener))<SUB>3413</SUB>> ]
-"8603" [label = <(endRegistration,mTransactionCompletedThread.endRegistration(listener))<SUB>3414</SUB>> ]
-"8610" [label = <(&lt;operator&gt;.fieldAccess,std::unordered_set)<SUB>3417</SUB>> ]
-"8625" [label = <(&lt;operators&gt;.assignmentOr,clientStateFlags |= setClientStateLocked(state, desiredPresentTime, postTime, privileged,\012                                                 listenerCallbacksWithSurfaces))<SUB>3420</SUB>> ]
-"8665" [label = <(endRegistration,mTransactionCompletedThread.endRegistration(listenerCallback))<SUB>3431</SUB>> ]
-"8672" [label = <(&lt;operator&gt;.logicalNot,!(clientStateFlags &amp; eTraversalNeeded))<SUB>3435</SUB>> ]
-"8678" [label = <(sendCallbacks,mTransactionCompletedThread.sendCallbacks())<SUB>3436</SUB>> ]
-"8691" [label = <(&lt;operator&gt;.fieldAccess,uncacheBuffer.isValid)<SUB>3442</SUB>> ]
-"8695" [label = <(erase,ClientCache::getInstance().erase(uncacheBuffer))<SUB>3443</SUB>> ]
-"8703" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(uncacheBuffer.id))<SUB>3444</SUB>> ]
-"8712" [label = <(&lt;operator&gt;.equals,transactionFlags == 0)<SUB>3451</SUB>> ]
-"8715" [label = <(&lt;operator&gt;.logicalOr,(flags &amp; eSynchronous) || (flags &amp; eAnimation))<SUB>3452</SUB>> ]
-"8723" [label = <(&lt;operator&gt;.assignment,transactionFlags = eTransactionNeeded)<SUB>3453</SUB>> ]
-"8729" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eTraversalNeeded)<SUB>3458</SUB>> ]
-"8733" [label = <(&lt;operator&gt;.assignment,transactionFlags = transactionFlags &amp; (~eTraversalNeeded))<SUB>3459</SUB>> ]
-"8739" [label = <(&lt;operator&gt;.assignment,mForceTraversal = true)<SUB>3460</SUB>> ]
-"8746" [label = <(METHOD_REF,ANY anonymous_lambda_41 (uint32_t flags),[](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3463</SUB>> ]
-"8792" [label = <(setTransactionFlags,setTransactionFlags(transactionFlags, transactionStart))<SUB>3492</SUB>> ]
-"8804" [label = <(&lt;operator&gt;.assignment,synchronous = flags &amp; eSynchronous)<SUB>3500</SUB>> ]
-"8810" [label = <(&lt;operator&gt;.assignment,syncInput = inputWindowCommands.syncInputWindows)<SUB>3501</SUB>> ]
-"8556" [label = <(&lt;operator&gt;.logicalAnd,!isMainThread &amp;&amp; mAnimTransactionPending)<SUB>3392</SUB>> ]
-"8592" [label = <(setDisplayStateLocked,setDisplayStateLocked(display))<SUB>3406</SUB>> ]
-"8599" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.startRegistration)<SUB>3413</SUB>> ]
-"8604" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.endRegistration)<SUB>3414</SUB>> ]
-"8612" [label = <(FIELD_IDENTIFIER,unordered_set,unordered_set)<SUB>3417</SUB>> ]
-"8627" [label = <(setClientStateLocked,setClientStateLocked(state, desiredPresentTime, postTime, privileged,\012                                                 listenerCallbacksWithSurfaces))<SUB>3420</SUB>> ]
-"8634" [label = <(&lt;operator&gt;.logicalAnd,(flags &amp; eAnimation) &amp;&amp; state.state.surface)<SUB>3422</SUB>> ]
-"8666" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.endRegistration)<SUB>3431</SUB>> ]
-"8673" [label = <(&lt;operator&gt;.and,clientStateFlags &amp; eTraversalNeeded)<SUB>3435</SUB>> ]
-"8679" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.sendCallbacks)<SUB>3436</SUB>> ]
-"8693" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>3442</SUB>> ]
-"8696" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().erase)<SUB>3443</SUB>> ]
-"8704" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>3444</SUB>> ]
-"8707" [label = <(&lt;operator&gt;.fieldAccess,uncacheBuffer.id)<SUB>3444</SUB>> ]
-"8716" [label = <(&lt;operator&gt;.and,flags &amp; eSynchronous)<SUB>3452</SUB>> ]
-"8719" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3452</SUB>> ]
-"8735" [label = <(&lt;operator&gt;.and,transactionFlags &amp; (~eTraversalNeeded))<SUB>3459</SUB>> ]
-"8752" [label = <(isEnabled,mInterceptor-&gt;isEnabled())<SUB>3477</SUB>> ]
-"8768" [label = <(&lt;operator&gt;.and,flags &amp; eEarlyWakeup)<SUB>3482</SUB>> ]
-"8775" [label = <(&lt;operator&gt;.logicalAnd,!privileged &amp;&amp; (flags &amp; (eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)))<SUB>3486</SUB>> ]
-"8796" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3494</SUB>> ]
-"8806" [label = <(&lt;operator&gt;.and,flags &amp; eSynchronous)<SUB>3500</SUB>> ]
-"8812" [label = <(&lt;operator&gt;.fieldAccess,inputWindowCommands.syncInputWindows)<SUB>3501</SUB>> ]
-"8816" [label = <(&lt;operator&gt;.logicalAnd,!synchronous &amp;&amp; !syncInput)<SUB>3502</SUB>> ]
-"8836" [label = <(&lt;operator&gt;.logicalAnd,!isMainThread &amp;&amp; (mTransactionPending || mPendingSyncInputWindows))<SUB>3518</SUB>> ]
-"8557" [label = <(&lt;operator&gt;.logicalNot,!isMainThread)<SUB>3392</SUB>> ]
-"8562" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3393</SUB>> ]
-"8601" [label = <(FIELD_IDENTIFIER,startRegistration,startRegistration)<SUB>3413</SUB>> ]
-"8606" [label = <(FIELD_IDENTIFIER,endRegistration,endRegistration)<SUB>3414</SUB>> ]
-"8635" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3422</SUB>> ]
-"8638" [label = <(&lt;operator&gt;.fieldAccess,state.state.surface)<SUB>3422</SUB>> ]
-"8668" [label = <(FIELD_IDENTIFIER,endRegistration,endRegistration)<SUB>3431</SUB>> ]
-"8681" [label = <(FIELD_IDENTIFIER,sendCallbacks,sendCallbacks)<SUB>3436</SUB>> ]
-"8697" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3443</SUB>> ]
-"8701" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>3443</SUB>> ]
-"8705" [label = <(getRenderEngine,getRenderEngine())<SUB>3444</SUB>> ]
-"8706" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>3444</SUB>> ]
-"8709" [label = <(FIELD_IDENTIFIER,id,id)<SUB>3444</SUB>> ]
-"8737" [label = <(&lt;operator&gt;.not,~eTraversalNeeded)<SUB>3459</SUB>> ]
-"8753" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;isEnabled)<SUB>3477</SUB>> ]
-"8757" [label = <(saveTransaction,mInterceptor-&gt;saveTransaction(states, mCurrentState.displays, displays, flags))<SUB>3478</SUB>> ]
-"8772" [label = <(ALOGW,ALOGW(&quot;eEarlyWakeup is deprecated. Use eExplicitEarlyWakeup[Start|End]&quot;))<SUB>3483</SUB>> ]
-"8776" [label = <(&lt;operator&gt;.logicalNot,!privileged)<SUB>3486</SUB>> ]
-"8778" [label = <(&lt;operator&gt;.and,flags &amp; (eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3486</SUB>> ]
-"8784" [label = <(ALOGE,ALOGE(&quot;Only WindowManager is allowed to use eExplicitEarlyWakeup[Start|End] flags&quot;))<SUB>3487</SUB>> ]
-"8786" [label = <(&lt;operators&gt;.assignmentAnd,flags &amp;= ~(eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3488</SUB>> ]
-"8800" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = true)<SUB>3495</SUB>> ]
-"8814" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>3501</SUB>> ]
-"8817" [label = <(&lt;operator&gt;.logicalNot,!synchronous)<SUB>3502</SUB>> ]
-"8819" [label = <(&lt;operator&gt;.logicalNot,!syncInput)<SUB>3502</SUB>> ]
-"8822" [label = <(RETURN,return;,return;)<SUB>3503</SUB>> ]
-"8826" [label = <(&lt;operator&gt;.assignment,mTransactionPending = true)<SUB>3507</SUB>> ]
-"8832" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = true)<SUB>3510</SUB>> ]
-"8837" [label = <(&lt;operator&gt;.logicalNot,!isMainThread)<SUB>3518</SUB>> ]
-"8839" [label = <(&lt;operator&gt;.logicalOr,mTransactionPending || mPendingSyncInputWindows)<SUB>3518</SUB>> ]
-"8844" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3519</SUB>> ]
-"8874" [label = <(&lt;operator&gt;.logicalOr,transactionStart == Scheduler::TransactionStart::EarlyStart ||\012            transactionStart == Scheduler::TransactionStart::EarlyEnd)<SUB>3532</SUB>> ]
-"8564" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3393</SUB>> ]
-"8572" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3394</SUB>> ]
-"8639" [label = <(&lt;operator&gt;.fieldAccess,state.state)<SUB>3422</SUB>> ]
-"8642" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3422</SUB>> ]
-"8698" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3443</SUB>> ]
-"8755" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>3477</SUB>> ]
-"8758" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveTransaction)<SUB>3478</SUB>> ]
-"8762" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3478</SUB>> ]
-"8780" [label = <(&lt;operator&gt;.or,eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)<SUB>3486</SUB>> ]
-"8788" [label = <(&lt;operator&gt;.not,~(eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3488</SUB>> ]
-"8846" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3519</SUB>> ]
-"8854" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3520</SUB>> ]
-"8875" [label = <(&lt;operator&gt;.equals,transactionStart == Scheduler::TransactionStart::EarlyStart)<SUB>3532</SUB>> ]
-"8882" [label = <(&lt;operator&gt;.equals,transactionStart == Scheduler::TransactionStart::EarlyEnd)<SUB>3533</SUB>> ]
-"8890" [label = <(setTransactionStart,mVSyncModulator-&gt;setTransactionStart(transactionStart))<SUB>3534</SUB>> ]
-"8565" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3393</SUB>> ]
-"8569" [label = <(s2ns,s2ns(5))<SUB>3393</SUB>> ]
-"8573" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3394</SUB>> ]
-"8577" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT, &quot;setTransactionState timed out &quot;\012 &quot;waiting for previous animation frame&quot;))<SUB>3397</SUB>> ]
-"8582" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = false)<SUB>3399</SUB>> ]
-"8641" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3422</SUB>> ]
-"8647" [label = <(recordLayerHistory,mScheduler-&gt;recordLayerHistory(layer.get(), desiredPresentTime,\012 LayerHistory::LayerUpdateType::AnimationTX))<SUB>3424</SUB>> ]
-"8700" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3443</SUB>> ]
-"8760" [label = <(FIELD_IDENTIFIER,saveTransaction,saveTransaction)<SUB>3478</SUB>> ]
-"8764" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3478</SUB>> ]
-"8789" [label = <(&lt;operator&gt;.or,eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)<SUB>3488</SUB>> ]
-"8847" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3519</SUB>> ]
-"8851" [label = <(s2ns,s2ns(5))<SUB>3519</SUB>> ]
-"8855" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3520</SUB>> ]
-"8859" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT, &quot;setTransactionState timed out!&quot;))<SUB>3523</SUB>> ]
-"8864" [label = <(&lt;operator&gt;.assignment,mTransactionPending = false)<SUB>3524</SUB>> ]
-"8867" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = false)<SUB>3525</SUB>> ]
-"8877" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::EarlyStart)<SUB>3532</SUB>> ]
-"8884" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::EarlyEnd)<SUB>3533</SUB>> ]
-"8891" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setTransactionStart)<SUB>3534</SUB>> ]
-"8567" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3393</SUB>> ]
-"8578" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3397</SUB>> ]
-"8648" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;recordLayerHistory)<SUB>3424</SUB>> ]
-"8651" [label = <(get,layer.get())<SUB>3424</SUB>> ]
-"8656" [label = <(&lt;operator&gt;.fieldAccess,LayerHistory::LayerUpdateType::AnimationTX)<SUB>3425</SUB>> ]
-"8849" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3519</SUB>> ]
-"8860" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3523</SUB>> ]
-"8878" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3532</SUB>> ]
-"8881" [label = <(FIELD_IDENTIFIER,EarlyStart,EarlyStart)<SUB>3532</SUB>> ]
-"8885" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3533</SUB>> ]
-"8888" [label = <(FIELD_IDENTIFIER,EarlyEnd,EarlyEnd)<SUB>3533</SUB>> ]
-"8893" [label = <(FIELD_IDENTIFIER,setTransactionStart,setTransactionStart)<SUB>3534</SUB>> ]
-"8650" [label = <(FIELD_IDENTIFIER,recordLayerHistory,recordLayerHistory)<SUB>3424</SUB>> ]
-"8652" [label = <(&lt;operator&gt;.fieldAccess,layer.get)<SUB>3424</SUB>> ]
-"8657" [label = <(&lt;operator&gt;.fieldAccess,LayerHistory::LayerUpdateType)<SUB>3425</SUB>> ]
-"8660" [label = <(FIELD_IDENTIFIER,AnimationTX,AnimationTX)<SUB>3425</SUB>> ]
-"8654" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3424</SUB>> ]
-"8533" [label = <(METHOD,applyTransactionState)<SUB>3381</SUB>> ]
-"8895" [label = <(METHOD_RETURN,void)<SUB>3381</SUB>> ]
-  "8547" -> "8551" 
-  "8608" -> "8618" 
-  "8618" -> "8627" 
-  "8682" -> "8687" 
-  "8685" -> "8693" 
-  "8743" -> "8755" 
-  "8743" -> "8878" 
-  "8551" -> "8557" 
-  "8551" -> "8592" 
-  "8609" -> "8614" 
-  "8614" -> "8608" 
-  "8671" -> "8681" 
-  "8671" -> "8682" 
-  "8687" -> "8685" 
-  "8690" -> "8700" 
-  "8690" -> "8712" 
-  "8711" -> "8723" 
-  "8711" -> "8727" 
-  "8711" -> "8729" 
-  "8727" -> "8737" 
-  "8727" -> "8746" 
+"8563" [label = <(&lt;operator&gt;.assignment,transactionFlags = 0)<SUB>3386</SUB>> ]
+"8624" [label = <(&lt;operator&gt;.expressionList,std::unordered_set&lt;ListenerCallbacks, ListenerCallbacksHash&gt; listenerCallbacksWithSurfaces)<SUB>3416</SUB>> ]
+"8634" [label = <(&lt;operator&gt;.assignment,clientStateFlags = 0)<SUB>3417</SUB>> ]
+"8698" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= clientStateFlags)<SUB>3437</SUB>> ]
+"8701" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= addInputWindowCommands(inputWindowCommands))<SUB>3439</SUB>> ]
+"8759" [label = <(&lt;operator&gt;.assignment,transactionStart = [](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3462</SUB>> ]
+"8567" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3388</SUB>> ]
+"8625" [label = <(&lt;operator&gt;.lessThan,std::unordered_set&lt;ListenerCallbacks)<SUB>3416</SUB>> ]
+"8630" [label = <(&lt;operator&gt;.greaterThan,ListenerCallbacksHash&gt; listenerCallbacksWithSurfaces)<SUB>3416</SUB>> ]
+"8687" [label = <(&lt;operator&gt;.logicalAnd,!(clientStateFlags &amp; eTraversalNeeded) &amp;&amp; hasListenerCallbacks)<SUB>3434</SUB>> ]
+"8703" [label = <(addInputWindowCommands,addInputWindowCommands(inputWindowCommands))<SUB>3439</SUB>> ]
+"8706" [label = <(isValid,uncacheBuffer.isValid())<SUB>3441</SUB>> ]
+"8727" [label = <(&lt;operator&gt;.logicalAnd,transactionFlags == 0 &amp;&amp;\012 ((flags &amp; eSynchronous) || (flags &amp; eAnimation)))<SUB>3450</SUB>> ]
+"8743" [label = <(&lt;operator&gt;.logicalAnd,isMainThread &amp;&amp; (transactionFlags &amp; eTraversalNeeded))<SUB>3457</SUB>> ]
+"8761" [label = <(android.SurfaceFlinger.applyTransactionState.anonymous_lambda_41,[](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3462</SUB>> ]
+"8606" [label = <(&lt;operators&gt;.assignmentOr,transactionFlags |= setDisplayStateLocked(display))<SUB>3405</SUB>> ]
+"8614" [label = <(startRegistration,mTransactionCompletedThread.startRegistration(listener))<SUB>3412</SUB>> ]
+"8619" [label = <(endRegistration,mTransactionCompletedThread.endRegistration(listener))<SUB>3413</SUB>> ]
+"8626" [label = <(&lt;operator&gt;.fieldAccess,std::unordered_set)<SUB>3416</SUB>> ]
+"8641" [label = <(&lt;operators&gt;.assignmentOr,clientStateFlags |= setClientStateLocked(state, desiredPresentTime, postTime, privileged,\012                                                 listenerCallbacksWithSurfaces))<SUB>3419</SUB>> ]
+"8681" [label = <(endRegistration,mTransactionCompletedThread.endRegistration(listenerCallback))<SUB>3430</SUB>> ]
+"8688" [label = <(&lt;operator&gt;.logicalNot,!(clientStateFlags &amp; eTraversalNeeded))<SUB>3434</SUB>> ]
+"8694" [label = <(sendCallbacks,mTransactionCompletedThread.sendCallbacks())<SUB>3435</SUB>> ]
+"8707" [label = <(&lt;operator&gt;.fieldAccess,uncacheBuffer.isValid)<SUB>3441</SUB>> ]
+"8711" [label = <(erase,ClientCache::getInstance().erase(uncacheBuffer))<SUB>3442</SUB>> ]
+"8719" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(uncacheBuffer.id))<SUB>3443</SUB>> ]
+"8728" [label = <(&lt;operator&gt;.equals,transactionFlags == 0)<SUB>3450</SUB>> ]
+"8731" [label = <(&lt;operator&gt;.logicalOr,(flags &amp; eSynchronous) || (flags &amp; eAnimation))<SUB>3451</SUB>> ]
+"8739" [label = <(&lt;operator&gt;.assignment,transactionFlags = eTransactionNeeded)<SUB>3452</SUB>> ]
+"8745" [label = <(&lt;operator&gt;.and,transactionFlags &amp; eTraversalNeeded)<SUB>3457</SUB>> ]
+"8749" [label = <(&lt;operator&gt;.assignment,transactionFlags = transactionFlags &amp; (~eTraversalNeeded))<SUB>3458</SUB>> ]
+"8755" [label = <(&lt;operator&gt;.assignment,mForceTraversal = true)<SUB>3459</SUB>> ]
+"8762" [label = <(METHOD_REF,ANY anonymous_lambda_41 (uint32_t flags),[](uint32_t flags) {\012 if (flags &amp; eEarlyWakeup) {\012 return Scheduler::TransactionStart::Early;\012 }\012 if (flags &amp; eExplicitEarlyWakeupEnd) {\012 return Scheduler::TransactionStart::EarlyEnd;\012 }\012 if (flags &amp; eExplicitEarlyWakeupStart) {\012 return Scheduler::TransactionStart::EarlyStart;\012 }\012 return Scheduler::TransactionStart::Normal;\012 }(flags))<SUB>3462</SUB>> ]
+"8808" [label = <(setTransactionFlags,setTransactionFlags(transactionFlags, transactionStart))<SUB>3491</SUB>> ]
+"8820" [label = <(&lt;operator&gt;.assignment,synchronous = flags &amp; eSynchronous)<SUB>3499</SUB>> ]
+"8826" [label = <(&lt;operator&gt;.assignment,syncInput = inputWindowCommands.syncInputWindows)<SUB>3500</SUB>> ]
+"8572" [label = <(&lt;operator&gt;.logicalAnd,!isMainThread &amp;&amp; mAnimTransactionPending)<SUB>3391</SUB>> ]
+"8608" [label = <(setDisplayStateLocked,setDisplayStateLocked(display))<SUB>3405</SUB>> ]
+"8615" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.startRegistration)<SUB>3412</SUB>> ]
+"8620" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.endRegistration)<SUB>3413</SUB>> ]
+"8628" [label = <(FIELD_IDENTIFIER,unordered_set,unordered_set)<SUB>3416</SUB>> ]
+"8643" [label = <(setClientStateLocked,setClientStateLocked(state, desiredPresentTime, postTime, privileged,\012                                                 listenerCallbacksWithSurfaces))<SUB>3419</SUB>> ]
+"8650" [label = <(&lt;operator&gt;.logicalAnd,(flags &amp; eAnimation) &amp;&amp; state.state.surface)<SUB>3421</SUB>> ]
+"8682" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.endRegistration)<SUB>3430</SUB>> ]
+"8689" [label = <(&lt;operator&gt;.and,clientStateFlags &amp; eTraversalNeeded)<SUB>3434</SUB>> ]
+"8695" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.sendCallbacks)<SUB>3435</SUB>> ]
+"8709" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>3441</SUB>> ]
+"8712" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().erase)<SUB>3442</SUB>> ]
+"8720" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>3443</SUB>> ]
+"8723" [label = <(&lt;operator&gt;.fieldAccess,uncacheBuffer.id)<SUB>3443</SUB>> ]
+"8732" [label = <(&lt;operator&gt;.and,flags &amp; eSynchronous)<SUB>3451</SUB>> ]
+"8735" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3451</SUB>> ]
+"8751" [label = <(&lt;operator&gt;.and,transactionFlags &amp; (~eTraversalNeeded))<SUB>3458</SUB>> ]
+"8768" [label = <(isEnabled,mInterceptor-&gt;isEnabled())<SUB>3476</SUB>> ]
+"8784" [label = <(&lt;operator&gt;.and,flags &amp; eEarlyWakeup)<SUB>3481</SUB>> ]
+"8791" [label = <(&lt;operator&gt;.logicalAnd,!privileged &amp;&amp; (flags &amp; (eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)))<SUB>3485</SUB>> ]
+"8812" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3493</SUB>> ]
+"8822" [label = <(&lt;operator&gt;.and,flags &amp; eSynchronous)<SUB>3499</SUB>> ]
+"8828" [label = <(&lt;operator&gt;.fieldAccess,inputWindowCommands.syncInputWindows)<SUB>3500</SUB>> ]
+"8832" [label = <(&lt;operator&gt;.logicalAnd,!synchronous &amp;&amp; !syncInput)<SUB>3501</SUB>> ]
+"8852" [label = <(&lt;operator&gt;.logicalAnd,!isMainThread &amp;&amp; (mTransactionPending || mPendingSyncInputWindows))<SUB>3517</SUB>> ]
+"8573" [label = <(&lt;operator&gt;.logicalNot,!isMainThread)<SUB>3391</SUB>> ]
+"8578" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3392</SUB>> ]
+"8617" [label = <(FIELD_IDENTIFIER,startRegistration,startRegistration)<SUB>3412</SUB>> ]
+"8622" [label = <(FIELD_IDENTIFIER,endRegistration,endRegistration)<SUB>3413</SUB>> ]
+"8651" [label = <(&lt;operator&gt;.and,flags &amp; eAnimation)<SUB>3421</SUB>> ]
+"8654" [label = <(&lt;operator&gt;.fieldAccess,state.state.surface)<SUB>3421</SUB>> ]
+"8684" [label = <(FIELD_IDENTIFIER,endRegistration,endRegistration)<SUB>3430</SUB>> ]
+"8697" [label = <(FIELD_IDENTIFIER,sendCallbacks,sendCallbacks)<SUB>3435</SUB>> ]
+"8713" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3442</SUB>> ]
+"8717" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>3442</SUB>> ]
+"8721" [label = <(getRenderEngine,getRenderEngine())<SUB>3443</SUB>> ]
+"8722" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>3443</SUB>> ]
+"8725" [label = <(FIELD_IDENTIFIER,id,id)<SUB>3443</SUB>> ]
+"8753" [label = <(&lt;operator&gt;.not,~eTraversalNeeded)<SUB>3458</SUB>> ]
+"8769" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;isEnabled)<SUB>3476</SUB>> ]
+"8773" [label = <(saveTransaction,mInterceptor-&gt;saveTransaction(states, mCurrentState.displays, displays, flags))<SUB>3477</SUB>> ]
+"8788" [label = <(ALOGW,ALOGW(&quot;eEarlyWakeup is deprecated. Use eExplicitEarlyWakeup[Start|End]&quot;))<SUB>3482</SUB>> ]
+"8792" [label = <(&lt;operator&gt;.logicalNot,!privileged)<SUB>3485</SUB>> ]
+"8794" [label = <(&lt;operator&gt;.and,flags &amp; (eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3485</SUB>> ]
+"8800" [label = <(ALOGE,ALOGE(&quot;Only WindowManager is allowed to use eExplicitEarlyWakeup[Start|End] flags&quot;))<SUB>3486</SUB>> ]
+"8802" [label = <(&lt;operators&gt;.assignmentAnd,flags &amp;= ~(eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3487</SUB>> ]
+"8816" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = true)<SUB>3494</SUB>> ]
+"8830" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>3500</SUB>> ]
+"8833" [label = <(&lt;operator&gt;.logicalNot,!synchronous)<SUB>3501</SUB>> ]
+"8835" [label = <(&lt;operator&gt;.logicalNot,!syncInput)<SUB>3501</SUB>> ]
+"8838" [label = <(RETURN,return;,return;)<SUB>3502</SUB>> ]
+"8842" [label = <(&lt;operator&gt;.assignment,mTransactionPending = true)<SUB>3506</SUB>> ]
+"8848" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = true)<SUB>3509</SUB>> ]
+"8853" [label = <(&lt;operator&gt;.logicalNot,!isMainThread)<SUB>3517</SUB>> ]
+"8855" [label = <(&lt;operator&gt;.logicalOr,mTransactionPending || mPendingSyncInputWindows)<SUB>3517</SUB>> ]
+"8860" [label = <(&lt;operator&gt;.assignment,err = mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3518</SUB>> ]
+"8890" [label = <(&lt;operator&gt;.logicalOr,transactionStart == Scheduler::TransactionStart::EarlyStart ||\012            transactionStart == Scheduler::TransactionStart::EarlyEnd)<SUB>3531</SUB>> ]
+"8580" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3392</SUB>> ]
+"8588" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3393</SUB>> ]
+"8655" [label = <(&lt;operator&gt;.fieldAccess,state.state)<SUB>3421</SUB>> ]
+"8658" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3421</SUB>> ]
+"8714" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3442</SUB>> ]
+"8771" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>3476</SUB>> ]
+"8774" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveTransaction)<SUB>3477</SUB>> ]
+"8778" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3477</SUB>> ]
+"8796" [label = <(&lt;operator&gt;.or,eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)<SUB>3485</SUB>> ]
+"8804" [label = <(&lt;operator&gt;.not,~(eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd))<SUB>3487</SUB>> ]
+"8862" [label = <(waitRelative,mTransactionCV.waitRelative(mStateLock, s2ns(5)))<SUB>3518</SUB>> ]
+"8870" [label = <(CC_UNLIKELY,CC_UNLIKELY(err != NO_ERROR))<SUB>3519</SUB>> ]
+"8891" [label = <(&lt;operator&gt;.equals,transactionStart == Scheduler::TransactionStart::EarlyStart)<SUB>3531</SUB>> ]
+"8898" [label = <(&lt;operator&gt;.equals,transactionStart == Scheduler::TransactionStart::EarlyEnd)<SUB>3532</SUB>> ]
+"8906" [label = <(setTransactionStart,mVSyncModulator-&gt;setTransactionStart(transactionStart))<SUB>3533</SUB>> ]
+"8581" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3392</SUB>> ]
+"8585" [label = <(s2ns,s2ns(5))<SUB>3392</SUB>> ]
+"8589" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3393</SUB>> ]
+"8593" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT, &quot;setTransactionState timed out &quot;\012 &quot;waiting for previous animation frame&quot;))<SUB>3396</SUB>> ]
+"8598" [label = <(&lt;operator&gt;.assignment,mAnimTransactionPending = false)<SUB>3398</SUB>> ]
+"8657" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3421</SUB>> ]
+"8663" [label = <(recordLayerHistory,mScheduler-&gt;recordLayerHistory(layer.get(), desiredPresentTime,\012 LayerHistory::LayerUpdateType::AnimationTX))<SUB>3423</SUB>> ]
+"8716" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3442</SUB>> ]
+"8776" [label = <(FIELD_IDENTIFIER,saveTransaction,saveTransaction)<SUB>3477</SUB>> ]
+"8780" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3477</SUB>> ]
+"8805" [label = <(&lt;operator&gt;.or,eExplicitEarlyWakeupStart | eExplicitEarlyWakeupEnd)<SUB>3487</SUB>> ]
+"8863" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.waitRelative)<SUB>3518</SUB>> ]
+"8867" [label = <(s2ns,s2ns(5))<SUB>3518</SUB>> ]
+"8871" [label = <(&lt;operator&gt;.notEquals,err != NO_ERROR)<SUB>3519</SUB>> ]
+"8875" [label = <(ALOGW_IF,ALOGW_IF(err == TIMED_OUT, &quot;setTransactionState timed out!&quot;))<SUB>3522</SUB>> ]
+"8880" [label = <(&lt;operator&gt;.assignment,mTransactionPending = false)<SUB>3523</SUB>> ]
+"8883" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = false)<SUB>3524</SUB>> ]
+"8893" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::EarlyStart)<SUB>3531</SUB>> ]
+"8900" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart::EarlyEnd)<SUB>3532</SUB>> ]
+"8907" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setTransactionStart)<SUB>3533</SUB>> ]
+"8583" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3392</SUB>> ]
+"8594" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3396</SUB>> ]
+"8664" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;recordLayerHistory)<SUB>3423</SUB>> ]
+"8667" [label = <(get,layer.get())<SUB>3423</SUB>> ]
+"8672" [label = <(&lt;operator&gt;.fieldAccess,LayerHistory::LayerUpdateType::AnimationTX)<SUB>3424</SUB>> ]
+"8865" [label = <(FIELD_IDENTIFIER,waitRelative,waitRelative)<SUB>3518</SUB>> ]
+"8876" [label = <(&lt;operator&gt;.equals,err == TIMED_OUT)<SUB>3522</SUB>> ]
+"8894" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3531</SUB>> ]
+"8897" [label = <(FIELD_IDENTIFIER,EarlyStart,EarlyStart)<SUB>3531</SUB>> ]
+"8901" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::TransactionStart)<SUB>3532</SUB>> ]
+"8904" [label = <(FIELD_IDENTIFIER,EarlyEnd,EarlyEnd)<SUB>3532</SUB>> ]
+"8909" [label = <(FIELD_IDENTIFIER,setTransactionStart,setTransactionStart)<SUB>3533</SUB>> ]
+"8666" [label = <(FIELD_IDENTIFIER,recordLayerHistory,recordLayerHistory)<SUB>3423</SUB>> ]
+"8668" [label = <(&lt;operator&gt;.fieldAccess,layer.get)<SUB>3423</SUB>> ]
+"8673" [label = <(&lt;operator&gt;.fieldAccess,LayerHistory::LayerUpdateType)<SUB>3424</SUB>> ]
+"8676" [label = <(FIELD_IDENTIFIER,AnimationTX,AnimationTX)<SUB>3424</SUB>> ]
+"8670" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3423</SUB>> ]
+"8549" [label = <(METHOD,applyTransactionState)<SUB>3380</SUB>> ]
+"8911" [label = <(METHOD_RETURN,void)<SUB>3380</SUB>> ]
+  "8563" -> "8567" 
+  "8624" -> "8634" 
+  "8634" -> "8643" 
+  "8698" -> "8703" 
+  "8701" -> "8709" 
+  "8759" -> "8771" 
+  "8759" -> "8894" 
+  "8567" -> "8573" 
+  "8567" -> "8608" 
+  "8625" -> "8630" 
+  "8630" -> "8624" 
+  "8687" -> "8697" 
+  "8687" -> "8698" 
+  "8703" -> "8701" 
+  "8706" -> "8716" 
+  "8706" -> "8728" 
+  "8727" -> "8739" 
+  "8727" -> "8743" 
+  "8727" -> "8745" 
+  "8743" -> "8753" 
+  "8743" -> "8762" 
+  "8761" -> "8759" 
+  "8606" -> "8608" 
+  "8606" -> "8617" 
+  "8614" -> "8622" 
+  "8619" -> "8617" 
+  "8619" -> "8628" 
+  "8626" -> "8625" 
+  "8641" -> "8651" 
+  "8681" -> "8684" 
+  "8681" -> "8689" 
+  "8688" -> "8687" 
+  "8694" -> "8698" 
+  "8707" -> "8706" 
+  "8711" -> "8721" 
+  "8719" -> "8728" 
+  "8728" -> "8727" 
+  "8728" -> "8732" 
+  "8731" -> "8727" 
+  "8739" -> "8743" 
+  "8739" -> "8745" 
   "8745" -> "8743" 
-  "8590" -> "8592" 
-  "8590" -> "8601" 
-  "8598" -> "8606" 
-  "8603" -> "8601" 
-  "8603" -> "8612" 
-  "8610" -> "8609" 
-  "8625" -> "8635" 
-  "8665" -> "8668" 
-  "8665" -> "8673" 
-  "8672" -> "8671" 
-  "8678" -> "8682" 
-  "8691" -> "8690" 
-  "8695" -> "8705" 
-  "8703" -> "8712" 
+  "8749" -> "8755" 
+  "8755" -> "8762" 
+  "8762" -> "8761" 
+  "8808" -> "8812" 
+  "8820" -> "8830" 
+  "8826" -> "8833" 
+  "8572" -> "8583" 
+  "8572" -> "8608" 
+  "8608" -> "8606" 
+  "8615" -> "8614" 
+  "8620" -> "8619" 
+  "8628" -> "8626" 
+  "8643" -> "8641" 
+  "8650" -> "8643" 
+  "8650" -> "8666" 
+  "8650" -> "8684" 
+  "8682" -> "8681" 
+  "8689" -> "8688" 
+  "8695" -> "8694" 
+  "8709" -> "8707" 
   "8712" -> "8711" 
-  "8712" -> "8716" 
-  "8715" -> "8711" 
-  "8723" -> "8727" 
-  "8723" -> "8729" 
-  "8729" -> "8727" 
-  "8733" -> "8739" 
-  "8739" -> "8746" 
-  "8746" -> "8745" 
-  "8792" -> "8796" 
-  "8804" -> "8814" 
-  "8810" -> "8817" 
-  "8556" -> "8567" 
-  "8556" -> "8592" 
-  "8592" -> "8590" 
-  "8599" -> "8598" 
-  "8604" -> "8603" 
-  "8612" -> "8610" 
-  "8627" -> "8625" 
-  "8634" -> "8627" 
-  "8634" -> "8650" 
-  "8634" -> "8668" 
-  "8666" -> "8665" 
-  "8673" -> "8672" 
-  "8679" -> "8678" 
-  "8693" -> "8691" 
-  "8696" -> "8695" 
-  "8704" -> "8709" 
-  "8707" -> "8703" 
-  "8716" -> "8715" 
-  "8716" -> "8719" 
-  "8719" -> "8715" 
-  "8735" -> "8733" 
-  "8752" -> "8760" 
-  "8752" -> "8768" 
-  "8768" -> "8772" 
+  "8720" -> "8725" 
+  "8723" -> "8719" 
+  "8732" -> "8731" 
+  "8732" -> "8735" 
+  "8735" -> "8731" 
+  "8751" -> "8749" 
   "8768" -> "8776" 
-  "8775" -> "8784" 
-  "8775" -> "8792" 
-  "8796" -> "8800" 
-  "8796" -> "8806" 
-  "8806" -> "8804" 
-  "8812" -> "8810" 
-  "8816" -> "8822" 
-  "8816" -> "8826" 
-  "8816" -> "8832" 
-  "8816" -> "8837" 
-  "8836" -> "8895" 
-  "8836" -> "8849" 
-  "8557" -> "8556" 
-  "8562" -> "8573" 
-  "8601" -> "8599" 
-  "8606" -> "8604" 
-  "8635" -> "8634" 
-  "8635" -> "8641" 
-  "8638" -> "8634" 
-  "8668" -> "8666" 
-  "8681" -> "8679" 
-  "8697" -> "8701" 
-  "8701" -> "8696" 
-  "8705" -> "8706" 
-  "8706" -> "8704" 
-  "8709" -> "8707" 
-  "8737" -> "8735" 
-  "8753" -> "8752" 
-  "8757" -> "8768" 
-  "8772" -> "8776" 
-  "8776" -> "8775" 
-  "8776" -> "8780" 
-  "8778" -> "8775" 
-  "8784" -> "8789" 
-  "8786" -> "8792" 
-  "8800" -> "8806" 
-  "8814" -> "8812" 
-  "8817" -> "8816" 
-  "8817" -> "8819" 
-  "8819" -> "8816" 
-  "8822" -> "8895" 
-  "8826" -> "8832" 
-  "8826" -> "8837" 
-  "8832" -> "8837" 
-  "8837" -> "8836" 
-  "8837" -> "8839" 
-  "8839" -> "8836" 
-  "8844" -> "8855" 
-  "8874" -> "8895" 
-  "8874" -> "8893" 
-  "8564" -> "8562" 
-  "8572" -> "8557" 
-  "8572" -> "8578" 
-  "8639" -> "8642" 
-  "8642" -> "8638" 
-  "8698" -> "8697" 
-  "8755" -> "8753" 
-  "8758" -> "8764" 
-  "8762" -> "8757" 
-  "8780" -> "8778" 
-  "8788" -> "8786" 
-  "8846" -> "8844" 
-  "8854" -> "8837" 
-  "8854" -> "8860" 
-  "8875" -> "8874" 
-  "8875" -> "8885" 
-  "8882" -> "8874" 
-  "8890" -> "8895" 
-  "8565" -> "8569" 
-  "8569" -> "8564" 
+  "8768" -> "8784" 
+  "8784" -> "8788" 
+  "8784" -> "8792" 
+  "8791" -> "8800" 
+  "8791" -> "8808" 
+  "8812" -> "8816" 
+  "8812" -> "8822" 
+  "8822" -> "8820" 
+  "8828" -> "8826" 
+  "8832" -> "8838" 
+  "8832" -> "8842" 
+  "8832" -> "8848" 
+  "8832" -> "8853" 
+  "8852" -> "8911" 
+  "8852" -> "8865" 
   "8573" -> "8572" 
-  "8577" -> "8582" 
-  "8582" -> "8592" 
-  "8641" -> "8639" 
-  "8647" -> "8627" 
-  "8647" -> "8668" 
-  "8700" -> "8698" 
-  "8760" -> "8758" 
-  "8764" -> "8762" 
-  "8789" -> "8788" 
-  "8847" -> "8851" 
-  "8851" -> "8846" 
-  "8855" -> "8854" 
-  "8859" -> "8864" 
-  "8864" -> "8867" 
-  "8867" -> "8895" 
-  "8877" -> "8875" 
-  "8884" -> "8882" 
-  "8891" -> "8890" 
-  "8567" -> "8565" 
-  "8578" -> "8577" 
-  "8648" -> "8654" 
+  "8578" -> "8589" 
+  "8617" -> "8615" 
+  "8622" -> "8620" 
+  "8651" -> "8650" 
   "8651" -> "8657" 
-  "8656" -> "8647" 
-  "8849" -> "8847" 
-  "8860" -> "8859" 
-  "8878" -> "8881" 
-  "8881" -> "8877" 
-  "8885" -> "8888" 
-  "8888" -> "8884" 
+  "8654" -> "8650" 
+  "8684" -> "8682" 
+  "8697" -> "8695" 
+  "8713" -> "8717" 
+  "8717" -> "8712" 
+  "8721" -> "8722" 
+  "8722" -> "8720" 
+  "8725" -> "8723" 
+  "8753" -> "8751" 
+  "8769" -> "8768" 
+  "8773" -> "8784" 
+  "8788" -> "8792" 
+  "8792" -> "8791" 
+  "8792" -> "8796" 
+  "8794" -> "8791" 
+  "8800" -> "8805" 
+  "8802" -> "8808" 
+  "8816" -> "8822" 
+  "8830" -> "8828" 
+  "8833" -> "8832" 
+  "8833" -> "8835" 
+  "8835" -> "8832" 
+  "8838" -> "8911" 
+  "8842" -> "8848" 
+  "8842" -> "8853" 
+  "8848" -> "8853" 
+  "8853" -> "8852" 
+  "8853" -> "8855" 
+  "8855" -> "8852" 
+  "8860" -> "8871" 
+  "8890" -> "8911" 
+  "8890" -> "8909" 
+  "8580" -> "8578" 
+  "8588" -> "8573" 
+  "8588" -> "8594" 
+  "8655" -> "8658" 
+  "8658" -> "8654" 
+  "8714" -> "8713" 
+  "8771" -> "8769" 
+  "8774" -> "8780" 
+  "8778" -> "8773" 
+  "8796" -> "8794" 
+  "8804" -> "8802" 
+  "8862" -> "8860" 
+  "8870" -> "8853" 
+  "8870" -> "8876" 
+  "8891" -> "8890" 
+  "8891" -> "8901" 
+  "8898" -> "8890" 
+  "8906" -> "8911" 
+  "8581" -> "8585" 
+  "8585" -> "8580" 
+  "8589" -> "8588" 
+  "8593" -> "8598" 
+  "8598" -> "8608" 
+  "8657" -> "8655" 
+  "8663" -> "8643" 
+  "8663" -> "8684" 
+  "8716" -> "8714" 
+  "8776" -> "8774" 
+  "8780" -> "8778" 
+  "8805" -> "8804" 
+  "8863" -> "8867" 
+  "8867" -> "8862" 
+  "8871" -> "8870" 
+  "8875" -> "8880" 
+  "8880" -> "8883" 
+  "8883" -> "8911" 
   "8893" -> "8891" 
-  "8650" -> "8648" 
-  "8652" -> "8651" 
-  "8657" -> "8660" 
-  "8660" -> "8656" 
-  "8654" -> "8652" 
-  "8533" -> "8547" 
+  "8900" -> "8898" 
+  "8907" -> "8906" 
+  "8583" -> "8581" 
+  "8594" -> "8593" 
+  "8664" -> "8670" 
+  "8667" -> "8673" 
+  "8672" -> "8663" 
+  "8865" -> "8863" 
+  "8876" -> "8875" 
+  "8894" -> "8897" 
+  "8897" -> "8893" 
+  "8901" -> "8904" 
+  "8904" -> "8900" 
+  "8909" -> "8907" 
+  "8666" -> "8664" 
+  "8668" -> "8667" 
+  "8673" -> "8676" 
+  "8676" -> "8672" 
+  "8670" -> "8668" 
+  "8549" -> "8563" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/195-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/195-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/195-cfg.dot	2023-06-07 19:33:00.407398981 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/195-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,249 +1,249 @@
 digraph "setDisplayStateLocked" {  
-"8901" [label = <(&lt;operator&gt;.assignment,index = mCurrentState.displays.indexOfKey(s.token))<SUB>3540</SUB>> ]
-"8920" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3543</SUB>> ]
-"8924" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.editValueAt(index))<SUB>3544</SUB>> ]
-"8934" [label = <(&lt;operator&gt;.assignment,what = s.what)<SUB>3546</SUB>> ]
-"9108" [label = <(RETURN,return flags;,return flags;)<SUB>3584</SUB>> ]
-"8903" [label = <(indexOfKey,mCurrentState.displays.indexOfKey(s.token))<SUB>3540</SUB>> ]
-"8913" [label = <(&lt;operator&gt;.lessThan,index &lt; 0)<SUB>3541</SUB>> ]
-"8926" [label = <(editValueAt,mCurrentState.displays.editValueAt(index))<SUB>3544</SUB>> ]
-"8936" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3546</SUB>> ]
-"8940" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eSurfaceChanged)<SUB>3547</SUB>> ]
-"8974" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eLayerStackChanged)<SUB>3553</SUB>> ]
-"9000" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eDisplayProjectionChanged)<SUB>3559</SUB>> ]
-"9064" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eDisplaySizeChanged)<SUB>3573</SUB>> ]
-"8904" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.indexOfKey)<SUB>3540</SUB>> ]
-"8909" [label = <(&lt;operator&gt;.fieldAccess,s.token)<SUB>3540</SUB>> ]
-"8917" [label = <(RETURN,return 0;,return 0;)<SUB>3541</SUB>> ]
-"8927" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.editValueAt)<SUB>3544</SUB>> ]
-"8938" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3546</SUB>> ]
-"8942" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eSurfaceChanged)<SUB>3547</SUB>> ]
-"8976" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eLayerStackChanged)<SUB>3553</SUB>> ]
-"9002" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplayProjectionChanged)<SUB>3559</SUB>> ]
-"9066" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplaySizeChanged)<SUB>3573</SUB>> ]
-"8905" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3540</SUB>> ]
-"8908" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>3540</SUB>> ]
-"8911" [label = <(FIELD_IDENTIFIER,token,token)<SUB>3540</SUB>> ]
-"8928" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3544</SUB>> ]
-"8931" [label = <(FIELD_IDENTIFIER,editValueAt,editValueAt)<SUB>3544</SUB>> ]
-"8944" [label = <(FIELD_IDENTIFIER,eSurfaceChanged,eSurfaceChanged)<SUB>3547</SUB>> ]
-"8947" [label = <(&lt;operator&gt;.notEquals,IInterface::asBinder(state.surface) != IInterface::asBinder(s.surface))<SUB>3548</SUB>> ]
-"8978" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>3553</SUB>> ]
-"8981" [label = <(&lt;operator&gt;.notEquals,state.layerStack != s.layerStack)<SUB>3554</SUB>> ]
-"9004" [label = <(FIELD_IDENTIFIER,eDisplayProjectionChanged,eDisplayProjectionChanged)<SUB>3559</SUB>> ]
-"9007" [label = <(&lt;operator&gt;.notEquals,state.orientation != s.orientation)<SUB>3560</SUB>> ]
-"9026" [label = <(&lt;operator&gt;.notEquals,state.frame != s.frame)<SUB>3564</SUB>> ]
-"9045" [label = <(&lt;operator&gt;.notEquals,state.viewport != s.viewport)<SUB>3568</SUB>> ]
-"9068" [label = <(FIELD_IDENTIFIER,eDisplaySizeChanged,eDisplaySizeChanged)<SUB>3573</SUB>> ]
-"9071" [label = <(&lt;operator&gt;.notEquals,state.width != s.width)<SUB>3574</SUB>> ]
-"9090" [label = <(&lt;operator&gt;.notEquals,state.height != s.height)<SUB>3578</SUB>> ]
-"8907" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3540</SUB>> ]
-"8930" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3544</SUB>> ]
-"8948" [label = <(IInterface::asBinder,IInterface::asBinder(state.surface))<SUB>3548</SUB>> ]
-"8955" [label = <(IInterface::asBinder,IInterface::asBinder(s.surface))<SUB>3548</SUB>> ]
-"8963" [label = <(&lt;operator&gt;.assignment,state.surface = s.surface)<SUB>3549</SUB>> ]
-"8970" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3550</SUB>> ]
-"8982" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>3554</SUB>> ]
-"8985" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3554</SUB>> ]
-"8989" [label = <(&lt;operator&gt;.assignment,state.layerStack = s.layerStack)<SUB>3555</SUB>> ]
-"8996" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3556</SUB>> ]
-"9008" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>3560</SUB>> ]
-"9011" [label = <(&lt;operator&gt;.fieldAccess,s.orientation)<SUB>3560</SUB>> ]
-"9015" [label = <(&lt;operator&gt;.assignment,state.orientation = s.orientation)<SUB>3561</SUB>> ]
-"9022" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3562</SUB>> ]
-"9027" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>3564</SUB>> ]
-"9030" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3564</SUB>> ]
-"9034" [label = <(&lt;operator&gt;.assignment,state.frame = s.frame)<SUB>3565</SUB>> ]
-"9041" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3566</SUB>> ]
-"9046" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>3568</SUB>> ]
-"9049" [label = <(&lt;operator&gt;.fieldAccess,s.viewport)<SUB>3568</SUB>> ]
-"9053" [label = <(&lt;operator&gt;.assignment,state.viewport = s.viewport)<SUB>3569</SUB>> ]
-"9060" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3570</SUB>> ]
-"9072" [label = <(&lt;operator&gt;.fieldAccess,state.width)<SUB>3574</SUB>> ]
-"9075" [label = <(&lt;operator&gt;.fieldAccess,s.width)<SUB>3574</SUB>> ]
-"9079" [label = <(&lt;operator&gt;.assignment,state.width = s.width)<SUB>3575</SUB>> ]
-"9086" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3576</SUB>> ]
-"9091" [label = <(&lt;operator&gt;.fieldAccess,state.height)<SUB>3578</SUB>> ]
-"9094" [label = <(&lt;operator&gt;.fieldAccess,s.height)<SUB>3578</SUB>> ]
-"9098" [label = <(&lt;operator&gt;.assignment,state.height = s.height)<SUB>3579</SUB>> ]
-"9105" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3580</SUB>> ]
-"8949" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3548</SUB>> ]
-"8952" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>3548</SUB>> ]
-"8956" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3548</SUB>> ]
-"8959" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3548</SUB>> ]
-"8964" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>3549</SUB>> ]
-"8967" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3549</SUB>> ]
-"8984" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3554</SUB>> ]
-"8987" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3554</SUB>> ]
-"8990" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>3555</SUB>> ]
-"8993" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3555</SUB>> ]
-"9010" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3560</SUB>> ]
-"9013" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3560</SUB>> ]
-"9016" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>3561</SUB>> ]
-"9019" [label = <(&lt;operator&gt;.fieldAccess,s.orientation)<SUB>3561</SUB>> ]
-"9029" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3564</SUB>> ]
-"9032" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3564</SUB>> ]
-"9035" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>3565</SUB>> ]
-"9038" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3565</SUB>> ]
-"9048" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3568</SUB>> ]
-"9051" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3568</SUB>> ]
-"9054" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>3569</SUB>> ]
-"9057" [label = <(&lt;operator&gt;.fieldAccess,s.viewport)<SUB>3569</SUB>> ]
-"9074" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3574</SUB>> ]
-"9077" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3574</SUB>> ]
-"9080" [label = <(&lt;operator&gt;.fieldAccess,state.width)<SUB>3575</SUB>> ]
-"9083" [label = <(&lt;operator&gt;.fieldAccess,s.width)<SUB>3575</SUB>> ]
-"9093" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3578</SUB>> ]
-"9096" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3578</SUB>> ]
-"9099" [label = <(&lt;operator&gt;.fieldAccess,state.height)<SUB>3579</SUB>> ]
-"9102" [label = <(&lt;operator&gt;.fieldAccess,s.height)<SUB>3579</SUB>> ]
-"8951" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3548</SUB>> ]
-"8954" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3548</SUB>> ]
-"8958" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3548</SUB>> ]
-"8961" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3548</SUB>> ]
-"8966" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3549</SUB>> ]
-"8969" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3549</SUB>> ]
-"8992" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3555</SUB>> ]
-"8995" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3555</SUB>> ]
-"9018" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3561</SUB>> ]
-"9021" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3561</SUB>> ]
-"9037" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3565</SUB>> ]
-"9040" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3565</SUB>> ]
-"9056" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3569</SUB>> ]
-"9059" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3569</SUB>> ]
-"9082" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3575</SUB>> ]
-"9085" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3575</SUB>> ]
-"9101" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3579</SUB>> ]
-"9104" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3579</SUB>> ]
-"8897" [label = <(METHOD,setDisplayStateLocked)<SUB>3539</SUB>> ]
-"9110" [label = <(METHOD_RETURN,uint32_t)<SUB>3539</SUB>> ]
-  "8901" -> "8913" 
-  "8920" -> "8930" 
-  "8924" -> "8938" 
-  "8934" -> "8944" 
-  "9108" -> "9110" 
-  "8903" -> "8901" 
-  "8913" -> "8917" 
-  "8913" -> "8920" 
-  "8926" -> "8924" 
-  "8936" -> "8934" 
-  "8940" -> "8951" 
-  "8940" -> "8978" 
-  "8974" -> "8984" 
-  "8974" -> "9004" 
-  "9000" -> "9010" 
-  "9000" -> "9068" 
-  "9064" -> "9074" 
-  "9064" -> "9108" 
-  "8904" -> "8911" 
-  "8909" -> "8903" 
-  "8917" -> "9110" 
-  "8927" -> "8926" 
-  "8938" -> "8936" 
+"8917" [label = <(&lt;operator&gt;.assignment,index = mCurrentState.displays.indexOfKey(s.token))<SUB>3539</SUB>> ]
+"8936" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3542</SUB>> ]
+"8940" [label = <(&lt;operator&gt;.assignment,&amp; state = mCurrentState.displays.editValueAt(index))<SUB>3543</SUB>> ]
+"8950" [label = <(&lt;operator&gt;.assignment,what = s.what)<SUB>3545</SUB>> ]
+"9124" [label = <(RETURN,return flags;,return flags;)<SUB>3583</SUB>> ]
+"8919" [label = <(indexOfKey,mCurrentState.displays.indexOfKey(s.token))<SUB>3539</SUB>> ]
+"8929" [label = <(&lt;operator&gt;.lessThan,index &lt; 0)<SUB>3540</SUB>> ]
+"8942" [label = <(editValueAt,mCurrentState.displays.editValueAt(index))<SUB>3543</SUB>> ]
+"8952" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3545</SUB>> ]
+"8956" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eSurfaceChanged)<SUB>3546</SUB>> ]
+"8990" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eLayerStackChanged)<SUB>3552</SUB>> ]
+"9016" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eDisplayProjectionChanged)<SUB>3558</SUB>> ]
+"9080" [label = <(&lt;operator&gt;.and,what &amp; DisplayState::eDisplaySizeChanged)<SUB>3572</SUB>> ]
+"8920" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.indexOfKey)<SUB>3539</SUB>> ]
+"8925" [label = <(&lt;operator&gt;.fieldAccess,s.token)<SUB>3539</SUB>> ]
+"8933" [label = <(RETURN,return 0;,return 0;)<SUB>3540</SUB>> ]
+"8943" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays.editValueAt)<SUB>3543</SUB>> ]
+"8954" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3545</SUB>> ]
+"8958" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eSurfaceChanged)<SUB>3546</SUB>> ]
+"8992" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eLayerStackChanged)<SUB>3552</SUB>> ]
+"9018" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplayProjectionChanged)<SUB>3558</SUB>> ]
+"9082" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplaySizeChanged)<SUB>3572</SUB>> ]
+"8921" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3539</SUB>> ]
+"8924" [label = <(FIELD_IDENTIFIER,indexOfKey,indexOfKey)<SUB>3539</SUB>> ]
+"8927" [label = <(FIELD_IDENTIFIER,token,token)<SUB>3539</SUB>> ]
+"8944" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.displays)<SUB>3543</SUB>> ]
+"8947" [label = <(FIELD_IDENTIFIER,editValueAt,editValueAt)<SUB>3543</SUB>> ]
+"8960" [label = <(FIELD_IDENTIFIER,eSurfaceChanged,eSurfaceChanged)<SUB>3546</SUB>> ]
+"8963" [label = <(&lt;operator&gt;.notEquals,IInterface::asBinder(state.surface) != IInterface::asBinder(s.surface))<SUB>3547</SUB>> ]
+"8994" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>3552</SUB>> ]
+"8997" [label = <(&lt;operator&gt;.notEquals,state.layerStack != s.layerStack)<SUB>3553</SUB>> ]
+"9020" [label = <(FIELD_IDENTIFIER,eDisplayProjectionChanged,eDisplayProjectionChanged)<SUB>3558</SUB>> ]
+"9023" [label = <(&lt;operator&gt;.notEquals,state.orientation != s.orientation)<SUB>3559</SUB>> ]
+"9042" [label = <(&lt;operator&gt;.notEquals,state.frame != s.frame)<SUB>3563</SUB>> ]
+"9061" [label = <(&lt;operator&gt;.notEquals,state.viewport != s.viewport)<SUB>3567</SUB>> ]
+"9084" [label = <(FIELD_IDENTIFIER,eDisplaySizeChanged,eDisplaySizeChanged)<SUB>3572</SUB>> ]
+"9087" [label = <(&lt;operator&gt;.notEquals,state.width != s.width)<SUB>3573</SUB>> ]
+"9106" [label = <(&lt;operator&gt;.notEquals,state.height != s.height)<SUB>3577</SUB>> ]
+"8923" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3539</SUB>> ]
+"8946" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>3543</SUB>> ]
+"8964" [label = <(IInterface::asBinder,IInterface::asBinder(state.surface))<SUB>3547</SUB>> ]
+"8971" [label = <(IInterface::asBinder,IInterface::asBinder(s.surface))<SUB>3547</SUB>> ]
+"8979" [label = <(&lt;operator&gt;.assignment,state.surface = s.surface)<SUB>3548</SUB>> ]
+"8986" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3549</SUB>> ]
+"8998" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>3553</SUB>> ]
+"9001" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3553</SUB>> ]
+"9005" [label = <(&lt;operator&gt;.assignment,state.layerStack = s.layerStack)<SUB>3554</SUB>> ]
+"9012" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3555</SUB>> ]
+"9024" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>3559</SUB>> ]
+"9027" [label = <(&lt;operator&gt;.fieldAccess,s.orientation)<SUB>3559</SUB>> ]
+"9031" [label = <(&lt;operator&gt;.assignment,state.orientation = s.orientation)<SUB>3560</SUB>> ]
+"9038" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3561</SUB>> ]
+"9043" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>3563</SUB>> ]
+"9046" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3563</SUB>> ]
+"9050" [label = <(&lt;operator&gt;.assignment,state.frame = s.frame)<SUB>3564</SUB>> ]
+"9057" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3565</SUB>> ]
+"9062" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>3567</SUB>> ]
+"9065" [label = <(&lt;operator&gt;.fieldAccess,s.viewport)<SUB>3567</SUB>> ]
+"9069" [label = <(&lt;operator&gt;.assignment,state.viewport = s.viewport)<SUB>3568</SUB>> ]
+"9076" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3569</SUB>> ]
+"9088" [label = <(&lt;operator&gt;.fieldAccess,state.width)<SUB>3573</SUB>> ]
+"9091" [label = <(&lt;operator&gt;.fieldAccess,s.width)<SUB>3573</SUB>> ]
+"9095" [label = <(&lt;operator&gt;.assignment,state.width = s.width)<SUB>3574</SUB>> ]
+"9102" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3575</SUB>> ]
+"9107" [label = <(&lt;operator&gt;.fieldAccess,state.height)<SUB>3577</SUB>> ]
+"9110" [label = <(&lt;operator&gt;.fieldAccess,s.height)<SUB>3577</SUB>> ]
+"9114" [label = <(&lt;operator&gt;.assignment,state.height = s.height)<SUB>3578</SUB>> ]
+"9121" [label = <(&lt;operators&gt;.assignmentOr,flags |= eDisplayTransactionNeeded)<SUB>3579</SUB>> ]
+"8965" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3547</SUB>> ]
+"8968" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>3547</SUB>> ]
+"8972" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>3547</SUB>> ]
+"8975" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3547</SUB>> ]
+"8980" [label = <(&lt;operator&gt;.fieldAccess,state.surface)<SUB>3548</SUB>> ]
+"8983" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3548</SUB>> ]
+"9000" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3553</SUB>> ]
+"9003" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3553</SUB>> ]
+"9006" [label = <(&lt;operator&gt;.fieldAccess,state.layerStack)<SUB>3554</SUB>> ]
+"9009" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3554</SUB>> ]
+"9026" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3559</SUB>> ]
+"9029" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3559</SUB>> ]
+"9032" [label = <(&lt;operator&gt;.fieldAccess,state.orientation)<SUB>3560</SUB>> ]
+"9035" [label = <(&lt;operator&gt;.fieldAccess,s.orientation)<SUB>3560</SUB>> ]
+"9045" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3563</SUB>> ]
+"9048" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3563</SUB>> ]
+"9051" [label = <(&lt;operator&gt;.fieldAccess,state.frame)<SUB>3564</SUB>> ]
+"9054" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3564</SUB>> ]
+"9064" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3567</SUB>> ]
+"9067" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3567</SUB>> ]
+"9070" [label = <(&lt;operator&gt;.fieldAccess,state.viewport)<SUB>3568</SUB>> ]
+"9073" [label = <(&lt;operator&gt;.fieldAccess,s.viewport)<SUB>3568</SUB>> ]
+"9090" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3573</SUB>> ]
+"9093" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3573</SUB>> ]
+"9096" [label = <(&lt;operator&gt;.fieldAccess,state.width)<SUB>3574</SUB>> ]
+"9099" [label = <(&lt;operator&gt;.fieldAccess,s.width)<SUB>3574</SUB>> ]
+"9109" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3577</SUB>> ]
+"9112" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3577</SUB>> ]
+"9115" [label = <(&lt;operator&gt;.fieldAccess,state.height)<SUB>3578</SUB>> ]
+"9118" [label = <(&lt;operator&gt;.fieldAccess,s.height)<SUB>3578</SUB>> ]
+"8967" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3547</SUB>> ]
+"8970" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3547</SUB>> ]
+"8974" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>3547</SUB>> ]
+"8977" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3547</SUB>> ]
+"8982" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3548</SUB>> ]
+"8985" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3548</SUB>> ]
+"9008" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3554</SUB>> ]
+"9011" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3554</SUB>> ]
+"9034" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3560</SUB>> ]
+"9037" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>3560</SUB>> ]
+"9053" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3564</SUB>> ]
+"9056" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3564</SUB>> ]
+"9072" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3568</SUB>> ]
+"9075" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>3568</SUB>> ]
+"9098" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3574</SUB>> ]
+"9101" [label = <(FIELD_IDENTIFIER,width,width)<SUB>3574</SUB>> ]
+"9117" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3578</SUB>> ]
+"9120" [label = <(FIELD_IDENTIFIER,height,height)<SUB>3578</SUB>> ]
+"8913" [label = <(METHOD,setDisplayStateLocked)<SUB>3538</SUB>> ]
+"9126" [label = <(METHOD_RETURN,uint32_t)<SUB>3538</SUB>> ]
+  "8917" -> "8929" 
+  "8936" -> "8946" 
+  "8940" -> "8954" 
+  "8950" -> "8960" 
+  "9124" -> "9126" 
+  "8919" -> "8917" 
+  "8929" -> "8933" 
+  "8929" -> "8936" 
   "8942" -> "8940" 
-  "8976" -> "8974" 
-  "9002" -> "9000" 
-  "9066" -> "9064" 
-  "8905" -> "8908" 
-  "8908" -> "8904" 
-  "8911" -> "8909" 
-  "8928" -> "8931" 
-  "8931" -> "8927" 
-  "8944" -> "8942" 
-  "8947" -> "8966" 
-  "8947" -> "8978" 
-  "8978" -> "8976" 
-  "8981" -> "8992" 
-  "8981" -> "9004" 
-  "9004" -> "9002" 
-  "9007" -> "9018" 
-  "9007" -> "9029" 
-  "9026" -> "9037" 
-  "9026" -> "9048" 
-  "9045" -> "9056" 
-  "9045" -> "9068" 
-  "9068" -> "9066" 
-  "9071" -> "9082" 
-  "9071" -> "9093" 
-  "9090" -> "9101" 
-  "9090" -> "9108" 
-  "8907" -> "8905" 
-  "8930" -> "8928" 
-  "8948" -> "8958" 
-  "8955" -> "8947" 
-  "8963" -> "8970" 
-  "8970" -> "8978" 
-  "8982" -> "8987" 
-  "8985" -> "8981" 
-  "8989" -> "8996" 
-  "8996" -> "9004" 
-  "9008" -> "9013" 
-  "9011" -> "9007" 
-  "9015" -> "9022" 
-  "9022" -> "9029" 
-  "9027" -> "9032" 
-  "9030" -> "9026" 
-  "9034" -> "9041" 
-  "9041" -> "9048" 
-  "9046" -> "9051" 
-  "9049" -> "9045" 
-  "9053" -> "9060" 
-  "9060" -> "9068" 
-  "9072" -> "9077" 
-  "9075" -> "9071" 
-  "9079" -> "9086" 
-  "9086" -> "9093" 
-  "9091" -> "9096" 
-  "9094" -> "9090" 
-  "9098" -> "9105" 
-  "9105" -> "9108" 
-  "8949" -> "8954" 
-  "8952" -> "8948" 
-  "8956" -> "8961" 
-  "8959" -> "8955" 
-  "8964" -> "8969" 
-  "8967" -> "8963" 
-  "8984" -> "8982" 
-  "8987" -> "8985" 
-  "8990" -> "8995" 
-  "8993" -> "8989" 
-  "9010" -> "9008" 
-  "9013" -> "9011" 
-  "9016" -> "9021" 
-  "9019" -> "9015" 
-  "9029" -> "9027" 
-  "9032" -> "9030" 
-  "9035" -> "9040" 
-  "9038" -> "9034" 
-  "9048" -> "9046" 
-  "9051" -> "9049" 
-  "9054" -> "9059" 
-  "9057" -> "9053" 
-  "9074" -> "9072" 
-  "9077" -> "9075" 
-  "9080" -> "9085" 
-  "9083" -> "9079" 
-  "9093" -> "9091" 
-  "9096" -> "9094" 
-  "9099" -> "9104" 
-  "9102" -> "9098" 
-  "8951" -> "8949" 
+  "8952" -> "8950" 
+  "8956" -> "8967" 
+  "8956" -> "8994" 
+  "8990" -> "9000" 
+  "8990" -> "9020" 
+  "9016" -> "9026" 
+  "9016" -> "9084" 
+  "9080" -> "9090" 
+  "9080" -> "9124" 
+  "8920" -> "8927" 
+  "8925" -> "8919" 
+  "8933" -> "9126" 
+  "8943" -> "8942" 
   "8954" -> "8952" 
   "8958" -> "8956" 
-  "8961" -> "8959" 
-  "8966" -> "8964" 
-  "8969" -> "8967" 
   "8992" -> "8990" 
-  "8995" -> "8993" 
   "9018" -> "9016" 
-  "9021" -> "9019" 
+  "9082" -> "9080" 
+  "8921" -> "8924" 
+  "8924" -> "8920" 
+  "8927" -> "8925" 
+  "8944" -> "8947" 
+  "8947" -> "8943" 
+  "8960" -> "8958" 
+  "8963" -> "8982" 
+  "8963" -> "8994" 
+  "8994" -> "8992" 
+  "8997" -> "9008" 
+  "8997" -> "9020" 
+  "9020" -> "9018" 
+  "9023" -> "9034" 
+  "9023" -> "9045" 
+  "9042" -> "9053" 
+  "9042" -> "9064" 
+  "9061" -> "9072" 
+  "9061" -> "9084" 
+  "9084" -> "9082" 
+  "9087" -> "9098" 
+  "9087" -> "9109" 
+  "9106" -> "9117" 
+  "9106" -> "9124" 
+  "8923" -> "8921" 
+  "8946" -> "8944" 
+  "8964" -> "8974" 
+  "8971" -> "8963" 
+  "8979" -> "8986" 
+  "8986" -> "8994" 
+  "8998" -> "9003" 
+  "9001" -> "8997" 
+  "9005" -> "9012" 
+  "9012" -> "9020" 
+  "9024" -> "9029" 
+  "9027" -> "9023" 
+  "9031" -> "9038" 
+  "9038" -> "9045" 
+  "9043" -> "9048" 
+  "9046" -> "9042" 
+  "9050" -> "9057" 
+  "9057" -> "9064" 
+  "9062" -> "9067" 
+  "9065" -> "9061" 
+  "9069" -> "9076" 
+  "9076" -> "9084" 
+  "9088" -> "9093" 
+  "9091" -> "9087" 
+  "9095" -> "9102" 
+  "9102" -> "9109" 
+  "9107" -> "9112" 
+  "9110" -> "9106" 
+  "9114" -> "9121" 
+  "9121" -> "9124" 
+  "8965" -> "8970" 
+  "8968" -> "8964" 
+  "8972" -> "8977" 
+  "8975" -> "8971" 
+  "8980" -> "8985" 
+  "8983" -> "8979" 
+  "9000" -> "8998" 
+  "9003" -> "9001" 
+  "9006" -> "9011" 
+  "9009" -> "9005" 
+  "9026" -> "9024" 
+  "9029" -> "9027" 
+  "9032" -> "9037" 
+  "9035" -> "9031" 
+  "9045" -> "9043" 
+  "9048" -> "9046" 
+  "9051" -> "9056" 
+  "9054" -> "9050" 
+  "9064" -> "9062" 
+  "9067" -> "9065" 
+  "9070" -> "9075" 
+  "9073" -> "9069" 
+  "9090" -> "9088" 
+  "9093" -> "9091" 
+  "9096" -> "9101" 
+  "9099" -> "9095" 
+  "9109" -> "9107" 
+  "9112" -> "9110" 
+  "9115" -> "9120" 
+  "9118" -> "9114" 
+  "8967" -> "8965" 
+  "8970" -> "8968" 
+  "8974" -> "8972" 
+  "8977" -> "8975" 
+  "8982" -> "8980" 
+  "8985" -> "8983" 
+  "9008" -> "9006" 
+  "9011" -> "9009" 
+  "9034" -> "9032" 
   "9037" -> "9035" 
-  "9040" -> "9038" 
+  "9053" -> "9051" 
   "9056" -> "9054" 
-  "9059" -> "9057" 
-  "9082" -> "9080" 
-  "9085" -> "9083" 
+  "9072" -> "9070" 
+  "9075" -> "9073" 
+  "9098" -> "9096" 
   "9101" -> "9099" 
-  "9104" -> "9102" 
-  "8897" -> "8907" 
+  "9117" -> "9115" 
+  "9120" -> "9118" 
+  "8913" -> "8923" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/196-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/196-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/196-cfg.dot	2023-06-07 19:33:00.407398981 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/196-cfg.dot	2023-06-07 19:33:06.647398407 +0330
@@ -1,59 +1,59 @@
 digraph "callingThreadHasUnscopedSurfaceFlingerAccess" {  
-"9116" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>3588</SUB>> ]
-"9123" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>3589</SUB>> ]
-"9130" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>3590</SUB>> ]
-"9163" [label = <(RETURN,return true;,return true;)<SUB>3596</SUB>> ]
-"9118" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>3588</SUB>> ]
-"9125" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>3589</SUB>> ]
-"9132" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>3590</SUB>> ]
-"9137" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_GRAPHICS &amp;&amp; uid != AID_SYSTEM) &amp;&amp;\012 (usePermissionCache ? !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)\012 : !checkPermission(sAccessSurfaceFlinger, pid, uid)))<SUB>3591</SUB>> ]
-"9119" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>3588</SUB>> ]
-"9126" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>3589</SUB>> ]
-"9133" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>3590</SUB>> ]
-"9138" [label = <(&lt;operator&gt;.logicalAnd,uid != AID_GRAPHICS &amp;&amp; uid != AID_SYSTEM)<SUB>3591</SUB>> ]
-"9145" [label = <(&lt;operator&gt;.conditional,usePermissionCache ? !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)\012 : !checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3592</SUB>> ]
-"9161" [label = <(RETURN,return false;,return false;)<SUB>3594</SUB>> ]
-"9121" [label = <(FIELD_IDENTIFIER,self,self)<SUB>3588</SUB>> ]
-"9128" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>3589</SUB>> ]
-"9135" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>3590</SUB>> ]
-"9139" [label = <(&lt;operator&gt;.notEquals,uid != AID_GRAPHICS)<SUB>3591</SUB>> ]
-"9142" [label = <(&lt;operator&gt;.notEquals,uid != AID_SYSTEM)<SUB>3591</SUB>> ]
-"9147" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3592</SUB>> ]
-"9155" [label = <(&lt;operator&gt;.logicalNot,!checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3593</SUB>> ]
-"9148" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3592</SUB>> ]
-"9156" [label = <(checkPermission,checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3593</SUB>> ]
-"9149" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>3592</SUB>> ]
-"9151" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>3592</SUB>> ]
-"9112" [label = <(METHOD,callingThreadHasUnscopedSurfaceFlingerAccess)<SUB>3587</SUB>> ]
-"9165" [label = <(METHOD_RETURN,bool)<SUB>3587</SUB>> ]
-  "9116" -> "9128" 
-  "9123" -> "9135" 
-  "9130" -> "9139" 
-  "9163" -> "9165" 
-  "9118" -> "9116" 
-  "9125" -> "9123" 
-  "9132" -> "9130" 
-  "9137" -> "9161" 
-  "9137" -> "9163" 
-  "9119" -> "9118" 
-  "9126" -> "9125" 
-  "9133" -> "9132" 
-  "9138" -> "9137" 
-  "9138" -> "9151" 
-  "9138" -> "9156" 
-  "9145" -> "9137" 
-  "9161" -> "9165" 
-  "9121" -> "9119" 
-  "9128" -> "9126" 
-  "9135" -> "9133" 
-  "9139" -> "9138" 
-  "9139" -> "9142" 
-  "9142" -> "9138" 
-  "9147" -> "9145" 
-  "9155" -> "9145" 
-  "9148" -> "9147" 
-  "9156" -> "9155" 
+"9132" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>3587</SUB>> ]
+"9139" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>3588</SUB>> ]
+"9146" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>3589</SUB>> ]
+"9179" [label = <(RETURN,return true;,return true;)<SUB>3595</SUB>> ]
+"9134" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>3587</SUB>> ]
+"9141" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>3588</SUB>> ]
+"9148" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>3589</SUB>> ]
+"9153" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_GRAPHICS &amp;&amp; uid != AID_SYSTEM) &amp;&amp;\012 (usePermissionCache ? !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)\012 : !checkPermission(sAccessSurfaceFlinger, pid, uid)))<SUB>3590</SUB>> ]
+"9135" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>3587</SUB>> ]
+"9142" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>3588</SUB>> ]
+"9149" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>3589</SUB>> ]
+"9154" [label = <(&lt;operator&gt;.logicalAnd,uid != AID_GRAPHICS &amp;&amp; uid != AID_SYSTEM)<SUB>3590</SUB>> ]
+"9161" [label = <(&lt;operator&gt;.conditional,usePermissionCache ? !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)\012 : !checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3591</SUB>> ]
+"9177" [label = <(RETURN,return false;,return false;)<SUB>3593</SUB>> ]
+"9137" [label = <(FIELD_IDENTIFIER,self,self)<SUB>3587</SUB>> ]
+"9144" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>3588</SUB>> ]
+"9151" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>3589</SUB>> ]
+"9155" [label = <(&lt;operator&gt;.notEquals,uid != AID_GRAPHICS)<SUB>3590</SUB>> ]
+"9158" [label = <(&lt;operator&gt;.notEquals,uid != AID_SYSTEM)<SUB>3590</SUB>> ]
+"9163" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3591</SUB>> ]
+"9171" [label = <(&lt;operator&gt;.logicalNot,!checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3592</SUB>> ]
+"9164" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3591</SUB>> ]
+"9172" [label = <(checkPermission,checkPermission(sAccessSurfaceFlinger, pid, uid))<SUB>3592</SUB>> ]
+"9165" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>3591</SUB>> ]
+"9167" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>3591</SUB>> ]
+"9128" [label = <(METHOD,callingThreadHasUnscopedSurfaceFlingerAccess)<SUB>3586</SUB>> ]
+"9181" [label = <(METHOD_RETURN,bool)<SUB>3586</SUB>> ]
+  "9132" -> "9144" 
+  "9139" -> "9151" 
+  "9146" -> "9155" 
+  "9179" -> "9181" 
+  "9134" -> "9132" 
+  "9141" -> "9139" 
+  "9148" -> "9146" 
+  "9153" -> "9177" 
+  "9153" -> "9179" 
+  "9135" -> "9134" 
+  "9142" -> "9141" 
   "9149" -> "9148" 
+  "9154" -> "9153" 
+  "9154" -> "9167" 
+  "9154" -> "9172" 
+  "9161" -> "9153" 
+  "9177" -> "9181" 
+  "9137" -> "9135" 
+  "9144" -> "9142" 
   "9151" -> "9149" 
-  "9112" -> "9121" 
+  "9155" -> "9154" 
+  "9155" -> "9158" 
+  "9158" -> "9154" 
+  "9163" -> "9161" 
+  "9171" -> "9161" 
+  "9164" -> "9163" 
+  "9172" -> "9171" 
+  "9165" -> "9164" 
+  "9167" -> "9165" 
+  "9128" -> "9137" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/197-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/197-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/197-cfg.dot	2023-06-07 19:33:00.427398980 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/197-cfg.dot	2023-06-07 19:33:06.667398405 +0330
@@ -1,1412 +1,1412 @@
 digraph "setClientStateLocked" {  
-"9175" [label = <(&lt;operator&gt;.assignment,&amp; s = composerState.state)<SUB>3603</SUB>> ]
-"9196" [label = <(&lt;operator&gt;.assignment,sp&lt;Layer&gt; layer = nullptr)<SUB>3612</SUB>> ]
-"9248" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3627</SUB>> ]
-"9252" [label = <(&lt;operator&gt;.assignment,what = s.what)<SUB>3629</SUB>> ]
-"10270" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;sp&lt;CallbackHandle&gt;&gt; callbackHandles)<SUB>3875</SUB>> ]
-"10314" [label = <(&lt;operator&gt;.assignment,bufferChanged = what &amp; layer_state_t::eBufferChanged)<SUB>3881</SUB>> ]
-"10322" [label = <(&lt;operator&gt;.assignment,cacheIdChanged = what &amp; layer_state_t::eCachedBufferChanged)<SUB>3882</SUB>> ]
-"10329" [label = <(&lt;operator&gt;.greaterThan,sp&lt;GraphicBuffer&gt; buffer)<SUB>3883</SUB>> ]
-"10467" [label = <(RETURN,return flags;,return flags;)<SUB>3910</SUB>> ]
-"9177" [label = <(&lt;operator&gt;.fieldAccess,composerState.state)<SUB>3603</SUB>> ]
-"9197" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; layer)<SUB>3612</SUB>> ]
-"9204" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3613</SUB>> ]
-"9222" [label = <(&lt;operator&gt;.equals,layer == nullptr)<SUB>3619</SUB>> ]
-"9254" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3629</SUB>> ]
-"9258" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDeferTransaction_legacy)<SUB>3633</SUB>> ]
-"9269" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eProducerDisconnect)<SUB>3638</SUB>> ]
-"9280" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::ePositionChanged)<SUB>3642</SUB>> ]
-"9302" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eLayerChanged)<SUB>3647</SUB>> ]
-"9380" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eRelativeLayerChanged)<SUB>3665</SUB>> ]
-"9464" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSizeChanged)<SUB>3683</SUB>> ]
-"9486" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eAlphaChanged)<SUB>3688</SUB>> ]
-"9505" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorChanged)<SUB>3692</SUB>> ]
-"9524" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorTransformChanged)<SUB>3696</SUB>> ]
-"9543" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBackgroundColorChanged)<SUB>3701</SUB>> ]
-"9568" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eMatrixChanged)<SUB>3706</SUB>> ]
-"9588" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransparentRegionChanged)<SUB>3725</SUB>> ]
-"9607" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFlagsChanged)<SUB>3729</SUB>> ]
-"9629" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCropChanged_legacy)<SUB>3733</SUB>> ]
-"9648" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCornerRadiusChanged)<SUB>3736</SUB>> ]
-"9667" [label = <(&lt;operator&gt;.logicalAnd,what &amp; layer_state_t::eBackgroundBlurRadiusChanged &amp;&amp; !mDisableBlurs &amp;&amp; mSupportsBlur)<SUB>3740</SUB>> ]
-"9691" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eLayerStackChanged)<SUB>3743</SUB>> ]
-"9765" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDeferTransaction_legacy)<SUB>3763</SUB>> ]
-"9832" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eReparentChildren)<SUB>3780</SUB>> ]
-"9853" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDetachChildren)<SUB>3785</SUB>> ]
-"9864" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eOverrideScalingModeChanged)<SUB>3788</SUB>> ]
-"9878" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransformChanged)<SUB>3793</SUB>> ]
-"9897" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransformToDisplayInverseChanged)<SUB>3796</SUB>> ]
-"9916" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCropChanged)<SUB>3800</SUB>> ]
-"9935" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameChanged)<SUB>3803</SUB>> ]
-"9954" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eAcquireFenceChanged)<SUB>3806</SUB>> ]
-"9973" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDataspaceChanged)<SUB>3809</SUB>> ]
-"9992" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eHdrMetadataChanged)<SUB>3812</SUB>> ]
-"10011" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSurfaceDamageRegionChanged)<SUB>3815</SUB>> ]
-"10030" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eApiChanged)<SUB>3818</SUB>> ]
-"10049" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSidebandStreamChanged)<SUB>3821</SUB>> ]
-"10068" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eInputInfoChanged)<SUB>3824</SUB>> ]
-"10092" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eMetadataChanged)<SUB>3832</SUB>> ]
-"10111" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorSpaceAgnosticChanged)<SUB>3835</SUB>> ]
-"10130" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eShadowRadiusChanged)<SUB>3840</SUB>> ]
-"10149" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameRateSelectionPriority)<SUB>3843</SUB>> ]
-"10170" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameRateChanged)<SUB>3848</SUB>> ]
-"10211" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFixedTransformHintChanged)<SUB>3857</SUB>> ]
-"10232" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eReparent)<SUB>3866</SUB>> ]
-"10271" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;sp)<SUB>3875</SUB>> ]
-"10276" [label = <(&lt;operator&gt;.arithmeticShiftRight,CallbackHandle&gt;&gt; callbackHandles)<SUB>3875</SUB>> ]
-"10280" [label = <(&lt;operator&gt;.logicalAnd,(what &amp; layer_state_t::eHasListenerCallbacksChanged) &amp;&amp; (!s.listeners.empty()))<SUB>3876</SUB>> ]
-"10316" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBufferChanged)<SUB>3881</SUB>> ]
-"10324" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCachedBufferChanged)<SUB>3882</SUB>> ]
-"10330" [label = <(&lt;operator&gt;.lessThan,sp&lt;GraphicBuffer)<SUB>3883</SUB>> ]
-"10335" [label = <(&lt;operator&gt;.logicalAnd,bufferChanged &amp;&amp; cacheIdChanged &amp;&amp; s.buffer != nullptr)<SUB>3884</SUB>> ]
-"10458" [label = <(setTransactionCompletedListeners,layer-&gt;setTransactionCompletedListeners(callbackHandles))<SUB>3907</SUB>> ]
-"9179" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3603</SUB>> ]
-"9186" [label = <(startRegistration,mTransactionCompletedThread.startRegistration(listener))<SUB>3608</SUB>> ]
-"9191" [label = <(insert,listenerCallbacks.insert(listener))<SUB>3609</SUB>> ]
-"9198" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3612</SUB>> ]
-"9206" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3613</SUB>> ]
-"9208" [label = <(&lt;operator&gt;.assignment,layer = fromHandleLocked(s.surface).promote())<SUB>3614</SUB>> ]
-"9245" [label = <(RETURN,return 0;,return 0;)<SUB>3624</SUB>> ]
-"9256" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3629</SUB>> ]
-"9260" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDeferTransaction_legacy)<SUB>3633</SUB>> ]
-"9264" [label = <(pushPendingState,layer-&gt;pushPendingState())<SUB>3634</SUB>> ]
-"9271" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eProducerDisconnect)<SUB>3638</SUB>> ]
-"9275" [label = <(onDisconnect,layer-&gt;onDisconnect())<SUB>3639</SUB>> ]
-"9282" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::ePositionChanged)<SUB>3642</SUB>> ]
-"9304" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerChanged)<SUB>3647</SUB>> ]
-"9309" [label = <(&lt;operator&gt;.assignment,&amp; p = layer-&gt;getParent())<SUB>3649</SUB>> ]
-"9382" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eRelativeLayerChanged)<SUB>3665</SUB>> ]
-"9387" [label = <(&lt;operator&gt;.assignment,&amp; p = layer-&gt;getParent())<SUB>3667</SUB>> ]
-"9466" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSizeChanged)<SUB>3683</SUB>> ]
-"9488" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAlphaChanged)<SUB>3688</SUB>> ]
-"9507" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorChanged)<SUB>3692</SUB>> ]
-"9526" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorTransformChanged)<SUB>3696</SUB>> ]
-"9545" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBackgroundColorChanged)<SUB>3701</SUB>> ]
-"9570" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eMatrixChanged)<SUB>3706</SUB>> ]
-"9590" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransparentRegionChanged)<SUB>3725</SUB>> ]
-"9609" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFlagsChanged)<SUB>3729</SUB>> ]
-"9631" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCropChanged_legacy)<SUB>3733</SUB>> ]
-"9650" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCornerRadiusChanged)<SUB>3736</SUB>> ]
-"9668" [label = <(&lt;operator&gt;.logicalAnd,what &amp; layer_state_t::eBackgroundBlurRadiusChanged &amp;&amp; !mDisableBlurs)<SUB>3740</SUB>> ]
-"9693" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerStackChanged)<SUB>3743</SUB>> ]
-"9698" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3744</SUB>> ]
-"9767" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDeferTransaction_legacy)<SUB>3763</SUB>> ]
-"9834" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eReparentChildren)<SUB>3780</SUB>> ]
-"9855" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDetachChildren)<SUB>3785</SUB>> ]
-"9859" [label = <(detachChildren,layer-&gt;detachChildren())<SUB>3786</SUB>> ]
-"9866" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eOverrideScalingModeChanged)<SUB>3788</SUB>> ]
-"9870" [label = <(setOverrideScalingMode,layer-&gt;setOverrideScalingMode(s.overrideScalingMode))<SUB>3789</SUB>> ]
-"9880" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransformChanged)<SUB>3793</SUB>> ]
-"9899" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransformToDisplayInverseChanged)<SUB>3796</SUB>> ]
-"9918" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCropChanged)<SUB>3800</SUB>> ]
-"9937" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameChanged)<SUB>3803</SUB>> ]
-"9956" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAcquireFenceChanged)<SUB>3806</SUB>> ]
-"9975" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDataspaceChanged)<SUB>3809</SUB>> ]
-"9994" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eHdrMetadataChanged)<SUB>3812</SUB>> ]
-"10013" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSurfaceDamageRegionChanged)<SUB>3815</SUB>> ]
-"10032" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eApiChanged)<SUB>3818</SUB>> ]
-"10051" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSidebandStreamChanged)<SUB>3821</SUB>> ]
-"10070" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eInputInfoChanged)<SUB>3824</SUB>> ]
-"10094" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eMetadataChanged)<SUB>3832</SUB>> ]
-"10113" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorSpaceAgnosticChanged)<SUB>3835</SUB>> ]
-"10132" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eShadowRadiusChanged)<SUB>3840</SUB>> ]
-"10151" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameRateSelectionPriority)<SUB>3843</SUB>> ]
-"10172" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameRateChanged)<SUB>3848</SUB>> ]
-"10213" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFixedTransformHintChanged)<SUB>3857</SUB>> ]
-"10234" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eReparent)<SUB>3866</SUB>> ]
-"10239" [label = <(&lt;operator&gt;.assignment,hadParent = layer-&gt;hasParent())<SUB>3867</SUB>> ]
-"10272" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>3875</SUB>> ]
-"10281" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eHasListenerCallbacksChanged)<SUB>3876</SUB>> ]
-"10286" [label = <(&lt;operator&gt;.logicalNot,!s.listeners.empty())<SUB>3876</SUB>> ]
-"10318" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBufferChanged)<SUB>3881</SUB>> ]
-"10326" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCachedBufferChanged)<SUB>3882</SUB>> ]
-"10336" [label = <(&lt;operator&gt;.logicalAnd,bufferChanged &amp;&amp; cacheIdChanged)<SUB>3884</SUB>> ]
-"10339" [label = <(&lt;operator&gt;.notEquals,s.buffer != nullptr)<SUB>3884</SUB>> ]
-"10345" [label = <(&lt;operator&gt;.assignment,buffer = s.buffer)<SUB>3885</SUB>> ]
-"10351" [label = <(&lt;operator&gt;.assignment,success = ClientCache::getInstance().add(s.cachedBuffer, s.buffer))<SUB>3886</SUB>> ]
-"10459" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransactionCompletedListeners)<SUB>3907</SUB>> ]
-"10464" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3907</SUB>> ]
-"9187" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.startRegistration)<SUB>3608</SUB>> ]
-"9192" [label = <(&lt;operator&gt;.fieldAccess,listenerCallbacks.insert)<SUB>3609</SUB>> ]
-"9210" [label = <(promote,fromHandleLocked(s.surface).promote())<SUB>3614</SUB>> ]
-"9219" [label = <(ALOGW,ALOGW(&quot;Attempt to set client state with a null layer handle&quot;))<SUB>3617</SUB>> ]
-"9227" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3620</SUB>> ]
-"9262" [label = <(FIELD_IDENTIFIER,eDeferTransaction_legacy,eDeferTransaction_legacy)<SUB>3633</SUB>> ]
-"9265" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;pushPendingState)<SUB>3634</SUB>> ]
-"9273" [label = <(FIELD_IDENTIFIER,eProducerDisconnect,eProducerDisconnect)<SUB>3638</SUB>> ]
-"9276" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;onDisconnect)<SUB>3639</SUB>> ]
-"9284" [label = <(FIELD_IDENTIFIER,ePositionChanged,ePositionChanged)<SUB>3642</SUB>> ]
-"9287" [label = <(setPosition,layer-&gt;setPosition(s.x, s.y))<SUB>3643</SUB>> ]
-"9306" [label = <(FIELD_IDENTIFIER,eLayerChanged,eLayerChanged)<SUB>3647</SUB>> ]
-"9311" [label = <(getParent,layer-&gt;getParent())<SUB>3649</SUB>> ]
-"9316" [label = <(&lt;operator&gt;.equals,p == nullptr)<SUB>3650</SUB>> ]
-"9384" [label = <(FIELD_IDENTIFIER,eRelativeLayerChanged,eRelativeLayerChanged)<SUB>3665</SUB>> ]
-"9389" [label = <(getParent,layer-&gt;getParent())<SUB>3667</SUB>> ]
-"9394" [label = <(&lt;operator&gt;.equals,p == nullptr)<SUB>3668</SUB>> ]
-"9468" [label = <(FIELD_IDENTIFIER,eSizeChanged,eSizeChanged)<SUB>3683</SUB>> ]
-"9471" [label = <(setSize,layer-&gt;setSize(s.w, s.h))<SUB>3684</SUB>> ]
-"9490" [label = <(FIELD_IDENTIFIER,eAlphaChanged,eAlphaChanged)<SUB>3688</SUB>> ]
-"9493" [label = <(setAlpha,layer-&gt;setAlpha(s.alpha))<SUB>3689</SUB>> ]
-"9509" [label = <(FIELD_IDENTIFIER,eColorChanged,eColorChanged)<SUB>3692</SUB>> ]
-"9512" [label = <(setColor,layer-&gt;setColor(s.color))<SUB>3693</SUB>> ]
-"9528" [label = <(FIELD_IDENTIFIER,eColorTransformChanged,eColorTransformChanged)<SUB>3696</SUB>> ]
-"9531" [label = <(setColorTransform,layer-&gt;setColorTransform(s.colorTransform))<SUB>3697</SUB>> ]
-"9547" [label = <(FIELD_IDENTIFIER,eBackgroundColorChanged,eBackgroundColorChanged)<SUB>3701</SUB>> ]
-"9550" [label = <(setBackgroundColor,layer-&gt;setBackgroundColor(s.color, s.bgColorAlpha, s.bgColorDataspace))<SUB>3702</SUB>> ]
-"9572" [label = <(FIELD_IDENTIFIER,eMatrixChanged,eMatrixChanged)<SUB>3706</SUB>> ]
-"9575" [label = <(setMatrix,layer-&gt;setMatrix(s.matrix, privileged))<SUB>3722</SUB>> ]
-"9592" [label = <(FIELD_IDENTIFIER,eTransparentRegionChanged,eTransparentRegionChanged)<SUB>3725</SUB>> ]
-"9595" [label = <(setTransparentRegionHint,layer-&gt;setTransparentRegionHint(s.transparentRegion))<SUB>3726</SUB>> ]
-"9611" [label = <(FIELD_IDENTIFIER,eFlagsChanged,eFlagsChanged)<SUB>3729</SUB>> ]
-"9614" [label = <(setFlags,layer-&gt;setFlags(s.flags, s.mask))<SUB>3730</SUB>> ]
-"9633" [label = <(FIELD_IDENTIFIER,eCropChanged_legacy,eCropChanged_legacy)<SUB>3733</SUB>> ]
-"9636" [label = <(setCrop_legacy,layer-&gt;setCrop_legacy(s.crop_legacy))<SUB>3734</SUB>> ]
-"9652" [label = <(FIELD_IDENTIFIER,eCornerRadiusChanged,eCornerRadiusChanged)<SUB>3736</SUB>> ]
-"9655" [label = <(setCornerRadius,layer-&gt;setCornerRadius(s.cornerRadius))<SUB>3737</SUB>> ]
-"9669" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBackgroundBlurRadiusChanged)<SUB>3740</SUB>> ]
-"9674" [label = <(&lt;operator&gt;.logicalNot,!mDisableBlurs)<SUB>3740</SUB>> ]
-"9679" [label = <(setBackgroundBlurRadius,layer-&gt;setBackgroundBlurRadius(s.backgroundBlurRadius))<SUB>3741</SUB>> ]
-"9695" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>3743</SUB>> ]
-"9700" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3744</SUB>> ]
-"9708" [label = <(hasParent,layer-&gt;hasParent())<SUB>3747</SUB>> ]
-"9769" [label = <(FIELD_IDENTIFIER,eDeferTransaction_legacy,eDeferTransaction_legacy)<SUB>3763</SUB>> ]
-"9772" [label = <(&lt;operator&gt;.notEquals,s.barrierHandle_legacy != nullptr)<SUB>3764</SUB>> ]
-"9836" [label = <(FIELD_IDENTIFIER,eReparentChildren,eReparentChildren)<SUB>3780</SUB>> ]
-"9839" [label = <(reparentChildren,layer-&gt;reparentChildren(s.reparentHandle))<SUB>3781</SUB>> ]
-"9857" [label = <(FIELD_IDENTIFIER,eDetachChildren,eDetachChildren)<SUB>3785</SUB>> ]
-"9860" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;detachChildren)<SUB>3786</SUB>> ]
-"9868" [label = <(FIELD_IDENTIFIER,eOverrideScalingModeChanged,eOverrideScalingModeChanged)<SUB>3788</SUB>> ]
-"9871" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setOverrideScalingMode)<SUB>3789</SUB>> ]
-"9874" [label = <(&lt;operator&gt;.fieldAccess,s.overrideScalingMode)<SUB>3789</SUB>> ]
-"9882" [label = <(FIELD_IDENTIFIER,eTransformChanged,eTransformChanged)<SUB>3793</SUB>> ]
-"9885" [label = <(setTransform,layer-&gt;setTransform(s.transform))<SUB>3794</SUB>> ]
-"9901" [label = <(FIELD_IDENTIFIER,eTransformToDisplayInverseChanged,eTransformToDisplayInverseChanged)<SUB>3796</SUB>> ]
-"9904" [label = <(setTransformToDisplayInverse,layer-&gt;setTransformToDisplayInverse(s.transformToDisplayInverse))<SUB>3797</SUB>> ]
-"9920" [label = <(FIELD_IDENTIFIER,eCropChanged,eCropChanged)<SUB>3800</SUB>> ]
-"9923" [label = <(setCrop,layer-&gt;setCrop(s.crop))<SUB>3801</SUB>> ]
-"9939" [label = <(FIELD_IDENTIFIER,eFrameChanged,eFrameChanged)<SUB>3803</SUB>> ]
-"9942" [label = <(setFrame,layer-&gt;setFrame(s.frame))<SUB>3804</SUB>> ]
-"9958" [label = <(FIELD_IDENTIFIER,eAcquireFenceChanged,eAcquireFenceChanged)<SUB>3806</SUB>> ]
-"9961" [label = <(setAcquireFence,layer-&gt;setAcquireFence(s.acquireFence))<SUB>3807</SUB>> ]
-"9977" [label = <(FIELD_IDENTIFIER,eDataspaceChanged,eDataspaceChanged)<SUB>3809</SUB>> ]
-"9980" [label = <(setDataspace,layer-&gt;setDataspace(s.dataspace))<SUB>3810</SUB>> ]
-"9996" [label = <(FIELD_IDENTIFIER,eHdrMetadataChanged,eHdrMetadataChanged)<SUB>3812</SUB>> ]
-"9999" [label = <(setHdrMetadata,layer-&gt;setHdrMetadata(s.hdrMetadata))<SUB>3813</SUB>> ]
-"10015" [label = <(FIELD_IDENTIFIER,eSurfaceDamageRegionChanged,eSurfaceDamageRegionChanged)<SUB>3815</SUB>> ]
-"10018" [label = <(setSurfaceDamageRegion,layer-&gt;setSurfaceDamageRegion(s.surfaceDamageRegion))<SUB>3816</SUB>> ]
-"10034" [label = <(FIELD_IDENTIFIER,eApiChanged,eApiChanged)<SUB>3818</SUB>> ]
-"10037" [label = <(setApi,layer-&gt;setApi(s.api))<SUB>3819</SUB>> ]
-"10053" [label = <(FIELD_IDENTIFIER,eSidebandStreamChanged,eSidebandStreamChanged)<SUB>3821</SUB>> ]
-"10056" [label = <(setSidebandStream,layer-&gt;setSidebandStream(s.sidebandStream))<SUB>3822</SUB>> ]
-"10072" [label = <(FIELD_IDENTIFIER,eInputInfoChanged,eInputInfoChanged)<SUB>3824</SUB>> ]
-"10096" [label = <(FIELD_IDENTIFIER,eMetadataChanged,eMetadataChanged)<SUB>3832</SUB>> ]
-"10099" [label = <(setMetadata,layer-&gt;setMetadata(s.metadata))<SUB>3833</SUB>> ]
-"10115" [label = <(FIELD_IDENTIFIER,eColorSpaceAgnosticChanged,eColorSpaceAgnosticChanged)<SUB>3835</SUB>> ]
-"10118" [label = <(setColorSpaceAgnostic,layer-&gt;setColorSpaceAgnostic(s.colorSpaceAgnostic))<SUB>3836</SUB>> ]
-"10134" [label = <(FIELD_IDENTIFIER,eShadowRadiusChanged,eShadowRadiusChanged)<SUB>3840</SUB>> ]
-"10137" [label = <(setShadowRadius,layer-&gt;setShadowRadius(s.shadowRadius))<SUB>3841</SUB>> ]
-"10153" [label = <(FIELD_IDENTIFIER,eFrameRateSelectionPriority,eFrameRateSelectionPriority)<SUB>3843</SUB>> ]
-"10156" [label = <(&lt;operator&gt;.logicalAnd,privileged &amp;&amp; layer-&gt;setFrameRateSelectionPriority(s.frameRateSelectionPriority))<SUB>3844</SUB>> ]
-"10174" [label = <(FIELD_IDENTIFIER,eFrameRateChanged,eFrameRateChanged)<SUB>3848</SUB>> ]
-"10177" [label = <(&lt;operator&gt;.logicalAnd,ValidateFrameRate(s.frameRate, s.frameRateCompatibility,\012 &quot;SurfaceFlinger::setClientStateLocked&quot;) &amp;&amp;\012            layer-&gt;setFrameRate(Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))))<SUB>3849</SUB>> ]
-"10215" [label = <(FIELD_IDENTIFIER,eFixedTransformHintChanged,eFixedTransformHintChanged)<SUB>3857</SUB>> ]
-"10218" [label = <(setFixedTransformHint,layer-&gt;setFixedTransformHint(s.fixedTransformHint))<SUB>3858</SUB>> ]
-"10236" [label = <(FIELD_IDENTIFIER,eReparent,eReparent)<SUB>3866</SUB>> ]
-"10241" [label = <(hasParent,layer-&gt;hasParent())<SUB>3867</SUB>> ]
-"10246" [label = <(reparent,layer-&gt;reparent(s.parentHandleForChild))<SUB>3868</SUB>> ]
-"10274" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>3875</SUB>> ]
-"10283" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eHasListenerCallbacksChanged)<SUB>3876</SUB>> ]
-"10287" [label = <(empty,s.listeners.empty())<SUB>3876</SUB>> ]
-"10295" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3877</SUB>> ]
-"10320" [label = <(FIELD_IDENTIFIER,eBufferChanged,eBufferChanged)<SUB>3881</SUB>> ]
-"10328" [label = <(FIELD_IDENTIFIER,eCachedBufferChanged,eCachedBufferChanged)<SUB>3882</SUB>> ]
-"10340" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3884</SUB>> ]
-"10347" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3885</SUB>> ]
-"10353" [label = <(add,ClientCache::getInstance().add(s.cachedBuffer, s.buffer))<SUB>3886</SUB>> ]
-"10440" [label = <(setBuffer,layer-&gt;setBuffer(buffer, s.acquireFence, postTime, desiredPresentTime,\012                             s.cachedBuffer))<SUB>3902</SUB>> ]
-"10461" [label = <(FIELD_IDENTIFIER,setTransactionCompletedListeners,setTransactionCompletedListeners)<SUB>3907</SUB>> ]
-"9189" [label = <(FIELD_IDENTIFIER,startRegistration,startRegistration)<SUB>3608</SUB>> ]
-"9194" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>3609</SUB>> ]
-"9211" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(s.surface).promote)<SUB>3614</SUB>> ]
-"9229" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3620</SUB>> ]
-"9234" [label = <(registerUnpresentedCallbackHandle,mTransactionCompletedThread.registerUnpresentedCallbackHandle(\012 new CallbackHandle(listener, callbackIds, s.surface)))<SUB>3621</SUB>> ]
-"9267" [label = <(FIELD_IDENTIFIER,pushPendingState,pushPendingState)<SUB>3634</SUB>> ]
-"9278" [label = <(FIELD_IDENTIFIER,onDisconnect,onDisconnect)<SUB>3639</SUB>> ]
-"9288" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setPosition)<SUB>3643</SUB>> ]
-"9291" [label = <(&lt;operator&gt;.fieldAccess,s.x)<SUB>3643</SUB>> ]
-"9294" [label = <(&lt;operator&gt;.fieldAccess,s.y)<SUB>3643</SUB>> ]
-"9298" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3644</SUB>> ]
-"9312" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>3649</SUB>> ]
-"9321" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3651</SUB>> ]
-"9390" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>3667</SUB>> ]
-"9399" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3669</SUB>> ]
-"9472" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSize)<SUB>3684</SUB>> ]
-"9475" [label = <(&lt;operator&gt;.fieldAccess,s.w)<SUB>3684</SUB>> ]
-"9478" [label = <(&lt;operator&gt;.fieldAccess,s.h)<SUB>3684</SUB>> ]
-"9482" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3685</SUB>> ]
-"9494" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setAlpha)<SUB>3689</SUB>> ]
-"9497" [label = <(&lt;operator&gt;.fieldAccess,s.alpha)<SUB>3689</SUB>> ]
-"9501" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3690</SUB>> ]
-"9513" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColor)<SUB>3693</SUB>> ]
-"9516" [label = <(&lt;operator&gt;.fieldAccess,s.color)<SUB>3693</SUB>> ]
-"9520" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3694</SUB>> ]
-"9532" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColorTransform)<SUB>3697</SUB>> ]
-"9535" [label = <(&lt;operator&gt;.fieldAccess,s.colorTransform)<SUB>3697</SUB>> ]
-"9539" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3698</SUB>> ]
-"9551" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBackgroundColor)<SUB>3702</SUB>> ]
-"9554" [label = <(&lt;operator&gt;.fieldAccess,s.color)<SUB>3702</SUB>> ]
-"9557" [label = <(&lt;operator&gt;.fieldAccess,s.bgColorAlpha)<SUB>3702</SUB>> ]
-"9560" [label = <(&lt;operator&gt;.fieldAccess,s.bgColorDataspace)<SUB>3702</SUB>> ]
-"9564" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3703</SUB>> ]
-"9576" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setMatrix)<SUB>3722</SUB>> ]
-"9579" [label = <(&lt;operator&gt;.fieldAccess,s.matrix)<SUB>3722</SUB>> ]
-"9584" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3723</SUB>> ]
-"9596" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransparentRegionHint)<SUB>3726</SUB>> ]
-"9599" [label = <(&lt;operator&gt;.fieldAccess,s.transparentRegion)<SUB>3726</SUB>> ]
-"9603" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3727</SUB>> ]
-"9615" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFlags)<SUB>3730</SUB>> ]
-"9618" [label = <(&lt;operator&gt;.fieldAccess,s.flags)<SUB>3730</SUB>> ]
-"9621" [label = <(&lt;operator&gt;.fieldAccess,s.mask)<SUB>3730</SUB>> ]
-"9625" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3731</SUB>> ]
-"9637" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCrop_legacy)<SUB>3734</SUB>> ]
-"9640" [label = <(&lt;operator&gt;.fieldAccess,s.crop_legacy)<SUB>3734</SUB>> ]
-"9644" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3734</SUB>> ]
-"9656" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCornerRadius)<SUB>3737</SUB>> ]
-"9659" [label = <(&lt;operator&gt;.fieldAccess,s.cornerRadius)<SUB>3737</SUB>> ]
-"9663" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3738</SUB>> ]
-"9671" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBackgroundBlurRadiusChanged)<SUB>3740</SUB>> ]
-"9680" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBackgroundBlurRadius)<SUB>3741</SUB>> ]
-"9683" [label = <(&lt;operator&gt;.fieldAccess,s.backgroundBlurRadius)<SUB>3741</SUB>> ]
-"9687" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3741</SUB>> ]
-"9701" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3744</SUB>> ]
-"9709" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;hasParent)<SUB>3747</SUB>> ]
-"9713" [label = <(ALOGE,ALOGE(&quot;Attempt to set layer stack on layer with parent (%s) is invalid&quot;,\012                  layer-&gt;getDebugName()))<SUB>3748</SUB>> ]
-"9773" [label = <(&lt;operator&gt;.fieldAccess,s.barrierHandle_legacy)<SUB>3764</SUB>> ]
-"9778" [label = <(deferTransactionUntil_legacy,layer-&gt;deferTransactionUntil_legacy(s.barrierHandle_legacy, s.frameNumber_legacy))<SUB>3765</SUB>> ]
-"9840" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;reparentChildren)<SUB>3781</SUB>> ]
-"9843" [label = <(&lt;operator&gt;.fieldAccess,s.reparentHandle)<SUB>3781</SUB>> ]
-"9847" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3782</SUB>> ]
-"9862" [label = <(FIELD_IDENTIFIER,detachChildren,detachChildren)<SUB>3786</SUB>> ]
-"9873" [label = <(FIELD_IDENTIFIER,setOverrideScalingMode,setOverrideScalingMode)<SUB>3789</SUB>> ]
-"9876" [label = <(FIELD_IDENTIFIER,overrideScalingMode,overrideScalingMode)<SUB>3789</SUB>> ]
-"9886" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransform)<SUB>3794</SUB>> ]
-"9889" [label = <(&lt;operator&gt;.fieldAccess,s.transform)<SUB>3794</SUB>> ]
-"9893" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3794</SUB>> ]
-"9905" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransformToDisplayInverse)<SUB>3797</SUB>> ]
-"9908" [label = <(&lt;operator&gt;.fieldAccess,s.transformToDisplayInverse)<SUB>3797</SUB>> ]
-"9912" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3798</SUB>> ]
-"9924" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCrop)<SUB>3801</SUB>> ]
-"9927" [label = <(&lt;operator&gt;.fieldAccess,s.crop)<SUB>3801</SUB>> ]
-"9931" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3801</SUB>> ]
-"9943" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrame)<SUB>3804</SUB>> ]
-"9946" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3804</SUB>> ]
-"9950" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3804</SUB>> ]
-"9962" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setAcquireFence)<SUB>3807</SUB>> ]
-"9965" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3807</SUB>> ]
-"9969" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3807</SUB>> ]
-"9981" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setDataspace)<SUB>3810</SUB>> ]
-"9984" [label = <(&lt;operator&gt;.fieldAccess,s.dataspace)<SUB>3810</SUB>> ]
-"9988" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3810</SUB>> ]
-"10000" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setHdrMetadata)<SUB>3813</SUB>> ]
-"10003" [label = <(&lt;operator&gt;.fieldAccess,s.hdrMetadata)<SUB>3813</SUB>> ]
-"10007" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3813</SUB>> ]
-"10019" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSurfaceDamageRegion)<SUB>3816</SUB>> ]
-"10022" [label = <(&lt;operator&gt;.fieldAccess,s.surfaceDamageRegion)<SUB>3816</SUB>> ]
-"10026" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3816</SUB>> ]
-"10038" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setApi)<SUB>3819</SUB>> ]
-"10041" [label = <(&lt;operator&gt;.fieldAccess,s.api)<SUB>3819</SUB>> ]
-"10045" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3819</SUB>> ]
-"10057" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSidebandStream)<SUB>3822</SUB>> ]
-"10060" [label = <(&lt;operator&gt;.fieldAccess,s.sidebandStream)<SUB>3822</SUB>> ]
-"10064" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3822</SUB>> ]
-"10077" [label = <(setInputInfo,layer-&gt;setInputInfo(s.inputInfo))<SUB>3826</SUB>> ]
-"10084" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3827</SUB>> ]
-"10100" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setMetadata)<SUB>3833</SUB>> ]
-"10103" [label = <(&lt;operator&gt;.fieldAccess,s.metadata)<SUB>3833</SUB>> ]
-"10107" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3833</SUB>> ]
-"10119" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColorSpaceAgnostic)<SUB>3836</SUB>> ]
-"10122" [label = <(&lt;operator&gt;.fieldAccess,s.colorSpaceAgnostic)<SUB>3836</SUB>> ]
-"10126" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3837</SUB>> ]
-"10138" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setShadowRadius)<SUB>3841</SUB>> ]
-"10141" [label = <(&lt;operator&gt;.fieldAccess,s.shadowRadius)<SUB>3841</SUB>> ]
-"10145" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3841</SUB>> ]
-"10158" [label = <(setFrameRateSelectionPriority,layer-&gt;setFrameRateSelectionPriority(s.frameRateSelectionPriority))<SUB>3844</SUB>> ]
-"10166" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3845</SUB>> ]
-"10178" [label = <(ValidateFrameRate,ValidateFrameRate(s.frameRate, s.frameRateCompatibility,\012 &quot;SurfaceFlinger::setClientStateLocked&quot;))<SUB>3849</SUB>> ]
-"10186" [label = <(setFrameRate,layer-&gt;setFrameRate(Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))))<SUB>3851</SUB>> ]
-"10207" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3854</SUB>> ]
-"10219" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFixedTransformHint)<SUB>3858</SUB>> ]
-"10222" [label = <(&lt;operator&gt;.fieldAccess,s.fixedTransformHint)<SUB>3858</SUB>> ]
-"10226" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3859</SUB>> ]
-"10242" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;hasParent)<SUB>3867</SUB>> ]
-"10247" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;reparent)<SUB>3868</SUB>> ]
-"10250" [label = <(&lt;operator&gt;.fieldAccess,s.parentHandleForChild)<SUB>3868</SUB>> ]
-"10265" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded | eTraversalNeeded)<SUB>3872</SUB>> ]
-"10285" [label = <(FIELD_IDENTIFIER,eHasListenerCallbacksChanged,eHasListenerCallbacksChanged)<SUB>3876</SUB>> ]
-"10288" [label = <(&lt;operator&gt;.fieldAccess,s.listeners.empty)<SUB>3876</SUB>> ]
-"10297" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3877</SUB>> ]
-"10302" [label = <(emplace_back,callbackHandles.emplace_back(new CallbackHandle(listener, callbackIds, s.surface)))<SUB>3878</SUB>> ]
-"10342" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3884</SUB>> ]
-"10349" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3885</SUB>> ]
-"10354" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().add)<SUB>3886</SUB>> ]
-"10360" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3886</SUB>> ]
-"10363" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3886</SUB>> ]
-"10369" [label = <(cacheExternalTextureBuffer,getRenderEngine().cacheExternalTextureBuffer(s.buffer))<SUB>3888</SUB>> ]
-"10376" [label = <(&lt;operator&gt;.assignment,success = ClientCache::getInstance()\012 .registerErasedRecipient(s.cachedBuffer,\012                                                       wp&lt;ClientCache::ErasedRecipient&gt;(this)))<SUB>3889</SUB>> ]
-"10441" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBuffer)<SUB>3902</SUB>> ]
-"10445" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3902</SUB>> ]
-"10450" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3903</SUB>> ]
-"10454" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3904</SUB>> ]
-"9212" [label = <(fromHandleLocked,fromHandleLocked(s.surface))<SUB>3614</SUB>> ]
-"9216" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3614</SUB>> ]
-"9235" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.registerUnpresentedCallbackHandle)<SUB>3621</SUB>> ]
-"9238" [label = <(&lt;operator&gt;.new,new CallbackHandle(listener, callbackIds, s.surface))<SUB>3622</SUB>> ]
-"9290" [label = <(FIELD_IDENTIFIER,setPosition,setPosition)<SUB>3643</SUB>> ]
-"9293" [label = <(FIELD_IDENTIFIER,x,x)<SUB>3643</SUB>> ]
-"9296" [label = <(FIELD_IDENTIFIER,y,y)<SUB>3643</SUB>> ]
-"9314" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3649</SUB>> ]
-"9323" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3651</SUB>> ]
-"9331" [label = <(&lt;operator&gt;.logicalAnd,layer-&gt;setLayer(s.z) &amp;&amp; idx &gt;= 0)<SUB>3652</SUB>> ]
-"9392" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3667</SUB>> ]
-"9401" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3669</SUB>> ]
-"9409" [label = <(&lt;operator&gt;.logicalAnd,layer-&gt;setRelativeLayer(s.relativeLayerHandle, s.z) &amp;&amp; idx &gt;= 0)<SUB>3670</SUB>> ]
-"9474" [label = <(FIELD_IDENTIFIER,setSize,setSize)<SUB>3684</SUB>> ]
-"9477" [label = <(FIELD_IDENTIFIER,w,w)<SUB>3684</SUB>> ]
-"9480" [label = <(FIELD_IDENTIFIER,h,h)<SUB>3684</SUB>> ]
-"9496" [label = <(FIELD_IDENTIFIER,setAlpha,setAlpha)<SUB>3689</SUB>> ]
-"9499" [label = <(FIELD_IDENTIFIER,alpha,alpha)<SUB>3689</SUB>> ]
-"9515" [label = <(FIELD_IDENTIFIER,setColor,setColor)<SUB>3693</SUB>> ]
-"9518" [label = <(FIELD_IDENTIFIER,color,color)<SUB>3693</SUB>> ]
-"9534" [label = <(FIELD_IDENTIFIER,setColorTransform,setColorTransform)<SUB>3697</SUB>> ]
-"9537" [label = <(FIELD_IDENTIFIER,colorTransform,colorTransform)<SUB>3697</SUB>> ]
-"9553" [label = <(FIELD_IDENTIFIER,setBackgroundColor,setBackgroundColor)<SUB>3702</SUB>> ]
-"9556" [label = <(FIELD_IDENTIFIER,color,color)<SUB>3702</SUB>> ]
-"9559" [label = <(FIELD_IDENTIFIER,bgColorAlpha,bgColorAlpha)<SUB>3702</SUB>> ]
-"9562" [label = <(FIELD_IDENTIFIER,bgColorDataspace,bgColorDataspace)<SUB>3702</SUB>> ]
-"9578" [label = <(FIELD_IDENTIFIER,setMatrix,setMatrix)<SUB>3722</SUB>> ]
-"9581" [label = <(FIELD_IDENTIFIER,matrix,matrix)<SUB>3722</SUB>> ]
-"9598" [label = <(FIELD_IDENTIFIER,setTransparentRegionHint,setTransparentRegionHint)<SUB>3726</SUB>> ]
-"9601" [label = <(FIELD_IDENTIFIER,transparentRegion,transparentRegion)<SUB>3726</SUB>> ]
-"9617" [label = <(FIELD_IDENTIFIER,setFlags,setFlags)<SUB>3730</SUB>> ]
-"9620" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>3730</SUB>> ]
-"9623" [label = <(FIELD_IDENTIFIER,mask,mask)<SUB>3730</SUB>> ]
-"9639" [label = <(FIELD_IDENTIFIER,setCrop_legacy,setCrop_legacy)<SUB>3734</SUB>> ]
-"9642" [label = <(FIELD_IDENTIFIER,crop_legacy,crop_legacy)<SUB>3734</SUB>> ]
-"9658" [label = <(FIELD_IDENTIFIER,setCornerRadius,setCornerRadius)<SUB>3737</SUB>> ]
-"9661" [label = <(FIELD_IDENTIFIER,cornerRadius,cornerRadius)<SUB>3737</SUB>> ]
-"9673" [label = <(FIELD_IDENTIFIER,eBackgroundBlurRadiusChanged,eBackgroundBlurRadiusChanged)<SUB>3740</SUB>> ]
-"9682" [label = <(FIELD_IDENTIFIER,setBackgroundBlurRadius,setBackgroundBlurRadius)<SUB>3741</SUB>> ]
-"9685" [label = <(FIELD_IDENTIFIER,backgroundBlurRadius,backgroundBlurRadius)<SUB>3741</SUB>> ]
-"9702" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3744</SUB>> ]
-"9705" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3744</SUB>> ]
-"9711" [label = <(FIELD_IDENTIFIER,hasParent,hasParent)<SUB>3747</SUB>> ]
-"9715" [label = <(getDebugName,layer-&gt;getDebugName())<SUB>3749</SUB>> ]
-"9775" [label = <(FIELD_IDENTIFIER,barrierHandle_legacy,barrierHandle_legacy)<SUB>3764</SUB>> ]
-"9779" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;deferTransactionUntil_legacy)<SUB>3765</SUB>> ]
-"9782" [label = <(&lt;operator&gt;.fieldAccess,s.barrierHandle_legacy)<SUB>3765</SUB>> ]
-"9785" [label = <(&lt;operator&gt;.fieldAccess,s.frameNumber_legacy)<SUB>3765</SUB>> ]
-"9842" [label = <(FIELD_IDENTIFIER,reparentChildren,reparentChildren)<SUB>3781</SUB>> ]
-"9845" [label = <(FIELD_IDENTIFIER,reparentHandle,reparentHandle)<SUB>3781</SUB>> ]
-"9849" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3782</SUB>> ]
-"9888" [label = <(FIELD_IDENTIFIER,setTransform,setTransform)<SUB>3794</SUB>> ]
-"9891" [label = <(FIELD_IDENTIFIER,transform,transform)<SUB>3794</SUB>> ]
-"9907" [label = <(FIELD_IDENTIFIER,setTransformToDisplayInverse,setTransformToDisplayInverse)<SUB>3797</SUB>> ]
-"9910" [label = <(FIELD_IDENTIFIER,transformToDisplayInverse,transformToDisplayInverse)<SUB>3797</SUB>> ]
-"9926" [label = <(FIELD_IDENTIFIER,setCrop,setCrop)<SUB>3801</SUB>> ]
-"9929" [label = <(FIELD_IDENTIFIER,crop,crop)<SUB>3801</SUB>> ]
-"9945" [label = <(FIELD_IDENTIFIER,setFrame,setFrame)<SUB>3804</SUB>> ]
-"9948" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3804</SUB>> ]
-"9964" [label = <(FIELD_IDENTIFIER,setAcquireFence,setAcquireFence)<SUB>3807</SUB>> ]
-"9967" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3807</SUB>> ]
-"9983" [label = <(FIELD_IDENTIFIER,setDataspace,setDataspace)<SUB>3810</SUB>> ]
-"9986" [label = <(FIELD_IDENTIFIER,dataspace,dataspace)<SUB>3810</SUB>> ]
-"10002" [label = <(FIELD_IDENTIFIER,setHdrMetadata,setHdrMetadata)<SUB>3813</SUB>> ]
-"10005" [label = <(FIELD_IDENTIFIER,hdrMetadata,hdrMetadata)<SUB>3813</SUB>> ]
-"10021" [label = <(FIELD_IDENTIFIER,setSurfaceDamageRegion,setSurfaceDamageRegion)<SUB>3816</SUB>> ]
-"10024" [label = <(FIELD_IDENTIFIER,surfaceDamageRegion,surfaceDamageRegion)<SUB>3816</SUB>> ]
-"10040" [label = <(FIELD_IDENTIFIER,setApi,setApi)<SUB>3819</SUB>> ]
-"10043" [label = <(FIELD_IDENTIFIER,api,api)<SUB>3819</SUB>> ]
-"10059" [label = <(FIELD_IDENTIFIER,setSidebandStream,setSidebandStream)<SUB>3822</SUB>> ]
-"10062" [label = <(FIELD_IDENTIFIER,sidebandStream,sidebandStream)<SUB>3822</SUB>> ]
-"10078" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setInputInfo)<SUB>3826</SUB>> ]
-"10081" [label = <(&lt;operator&gt;.fieldAccess,s.inputInfo)<SUB>3826</SUB>> ]
-"10089" [label = <(ALOGE,ALOGE(&quot;Attempt to update InputWindowInfo without permission ACCESS_SURFACE_FLINGER&quot;))<SUB>3829</SUB>> ]
-"10102" [label = <(FIELD_IDENTIFIER,setMetadata,setMetadata)<SUB>3833</SUB>> ]
-"10105" [label = <(FIELD_IDENTIFIER,metadata,metadata)<SUB>3833</SUB>> ]
-"10121" [label = <(FIELD_IDENTIFIER,setColorSpaceAgnostic,setColorSpaceAgnostic)<SUB>3836</SUB>> ]
-"10124" [label = <(FIELD_IDENTIFIER,colorSpaceAgnostic,colorSpaceAgnostic)<SUB>3836</SUB>> ]
-"10140" [label = <(FIELD_IDENTIFIER,setShadowRadius,setShadowRadius)<SUB>3841</SUB>> ]
-"10143" [label = <(FIELD_IDENTIFIER,shadowRadius,shadowRadius)<SUB>3841</SUB>> ]
-"10159" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrameRateSelectionPriority)<SUB>3844</SUB>> ]
-"10162" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateSelectionPriority)<SUB>3844</SUB>> ]
-"10179" [label = <(&lt;operator&gt;.fieldAccess,s.frameRate)<SUB>3849</SUB>> ]
-"10182" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateCompatibility)<SUB>3849</SUB>> ]
-"10187" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrameRate)<SUB>3851</SUB>> ]
-"10190" [label = <(Layer::FrameRate,Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility)))<SUB>3851</SUB>> ]
-"10221" [label = <(FIELD_IDENTIFIER,setFixedTransformHint,setFixedTransformHint)<SUB>3858</SUB>> ]
-"10224" [label = <(FIELD_IDENTIFIER,fixedTransformHint,fixedTransformHint)<SUB>3858</SUB>> ]
-"10228" [label = <(&lt;operator&gt;.or,eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3859</SUB>> ]
-"10244" [label = <(FIELD_IDENTIFIER,hasParent,hasParent)<SUB>3867</SUB>> ]
-"10249" [label = <(FIELD_IDENTIFIER,reparent,reparent)<SUB>3868</SUB>> ]
-"10252" [label = <(FIELD_IDENTIFIER,parentHandleForChild,parentHandleForChild)<SUB>3868</SUB>> ]
-"10255" [label = <(&lt;operator&gt;.logicalNot,!hadParent)<SUB>3869</SUB>> ]
-"10267" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded)<SUB>3872</SUB>> ]
-"10289" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3876</SUB>> ]
-"10292" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3876</SUB>> ]
-"10303" [label = <(&lt;operator&gt;.fieldAccess,callbackHandles.emplace_back)<SUB>3878</SUB>> ]
-"10306" [label = <(&lt;operator&gt;.new,new CallbackHandle(listener, callbackIds, s.surface))<SUB>3878</SUB>> ]
-"10355" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3886</SUB>> ]
-"10359" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3886</SUB>> ]
-"10362" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3886</SUB>> ]
-"10365" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3886</SUB>> ]
-"10370" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().cacheExternalTextureBuffer)<SUB>3888</SUB>> ]
-"10373" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3888</SUB>> ]
-"10378" [label = <(registerErasedRecipient,ClientCache::getInstance()\012 .registerErasedRecipient(s.cachedBuffer,\012                                                       wp&lt;ClientCache::ErasedRecipient&gt;(this)))<SUB>3889</SUB>> ]
-"10396" [label = <(&lt;operator&gt;.logicalNot,!success)<SUB>3892</SUB>> ]
-"10414" [label = <(&lt;operator&gt;.assignment,buffer = ClientCache::getInstance().get(s.cachedBuffer))<SUB>3897</SUB>> ]
-"10443" [label = <(FIELD_IDENTIFIER,setBuffer,setBuffer)<SUB>3902</SUB>> ]
-"10447" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3902</SUB>> ]
-"10452" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3903</SUB>> ]
-"9213" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3614</SUB>> ]
-"9237" [label = <(FIELD_IDENTIFIER,registerUnpresentedCallbackHandle,registerUnpresentedCallbackHandle)<SUB>3621</SUB>> ]
-"9242" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3622</SUB>> ]
-"9324" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3651</SUB>> ]
-"9332" [label = <(setLayer,layer-&gt;setLayer(s.z))<SUB>3652</SUB>> ]
-"9339" [label = <(&lt;operator&gt;.greaterEqualsThan,idx &gt;= 0)<SUB>3652</SUB>> ]
-"9343" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3653</SUB>> ]
-"9350" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3654</SUB>> ]
-"9357" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3657</SUB>> ]
-"9365" [label = <(setChildLayer,p-&gt;setChildLayer(layer, s.z))<SUB>3660</SUB>> ]
-"9402" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3669</SUB>> ]
-"9410" [label = <(setRelativeLayer,layer-&gt;setRelativeLayer(s.relativeLayerHandle, s.z))<SUB>3670</SUB>> ]
-"9420" [label = <(&lt;operator&gt;.greaterEqualsThan,idx &gt;= 0)<SUB>3670</SUB>> ]
-"9424" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3671</SUB>> ]
-"9431" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3672</SUB>> ]
-"9438" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3675</SUB>> ]
-"9446" [label = <(setChildRelativeLayer,p-&gt;setChildRelativeLayer(layer, s.relativeLayerHandle, s.z))<SUB>3678</SUB>> ]
-"9704" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3744</SUB>> ]
-"9716" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getDebugName)<SUB>3749</SUB>> ]
-"9722" [label = <(&lt;operator&gt;.lessThan,idx &lt; 0)<SUB>3750</SUB>> ]
-"9781" [label = <(FIELD_IDENTIFIER,deferTransactionUntil_legacy,deferTransactionUntil_legacy)<SUB>3765</SUB>> ]
-"9784" [label = <(FIELD_IDENTIFIER,barrierHandle_legacy,barrierHandle_legacy)<SUB>3765</SUB>> ]
-"9787" [label = <(FIELD_IDENTIFIER,frameNumber_legacy,frameNumber_legacy)<SUB>3765</SUB>> ]
-"9791" [label = <(&lt;operator&gt;.notEquals,s.barrierGbp_legacy != nullptr)<SUB>3766</SUB>> ]
-"10080" [label = <(FIELD_IDENTIFIER,setInputInfo,setInputInfo)<SUB>3826</SUB>> ]
-"10083" [label = <(FIELD_IDENTIFIER,inputInfo,inputInfo)<SUB>3826</SUB>> ]
-"10161" [label = <(FIELD_IDENTIFIER,setFrameRateSelectionPriority,setFrameRateSelectionPriority)<SUB>3844</SUB>> ]
-"10164" [label = <(FIELD_IDENTIFIER,frameRateSelectionPriority,frameRateSelectionPriority)<SUB>3844</SUB>> ]
-"10181" [label = <(FIELD_IDENTIFIER,frameRate,frameRate)<SUB>3849</SUB>> ]
-"10184" [label = <(FIELD_IDENTIFIER,frameRateCompatibility,frameRateCompatibility)<SUB>3849</SUB>> ]
-"10189" [label = <(FIELD_IDENTIFIER,setFrameRate,setFrameRate)<SUB>3851</SUB>> ]
-"10191" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate)<SUB>3851</SUB>> ]
-"10194" [label = <(&lt;operator&gt;.fieldAccess,s.frameRate)<SUB>3851</SUB>> ]
-"10197" [label = <(Layer::FrameRate::convertCompatibility,Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))<SUB>3852</SUB>> ]
-"10258" [label = <(remove,mCurrentState.layersSortedByZ.remove(layer))<SUB>3870</SUB>> ]
-"10291" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3876</SUB>> ]
-"10305" [label = <(FIELD_IDENTIFIER,emplace_back,emplace_back)<SUB>3878</SUB>> ]
-"10310" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3878</SUB>> ]
-"10356" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3886</SUB>> ]
-"10371" [label = <(getRenderEngine,getRenderEngine())<SUB>3888</SUB>> ]
-"10372" [label = <(FIELD_IDENTIFIER,cacheExternalTextureBuffer,cacheExternalTextureBuffer)<SUB>3888</SUB>> ]
-"10375" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3888</SUB>> ]
-"10379" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance()\012 .registerErasedRecipient)<SUB>3889</SUB>> ]
-"10385" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3890</SUB>> ]
-"10388" [label = <(&lt;operator&gt;.greaterThan,wp&lt;ClientCache::ErasedRecipient&gt;(this))<SUB>3891</SUB>> ]
-"10399" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(s.buffer-&gt;getId()))<SUB>3893</SUB>> ]
-"10416" [label = <(get,ClientCache::getInstance().get(s.cachedBuffer))<SUB>3897</SUB>> ]
-"9215" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3614</SUB>> ]
-"9244" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3622</SUB>> ]
-"9325" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3651</SUB>> ]
-"9328" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3651</SUB>> ]
-"9333" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setLayer)<SUB>3652</SUB>> ]
-"9336" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3652</SUB>> ]
-"9344" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3653</SUB>> ]
-"9351" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3654</SUB>> ]
-"9359" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3657</SUB>> ]
-"9366" [label = <(&lt;operator&gt;.indirectFieldAccess,p-&gt;setChildLayer)<SUB>3660</SUB>> ]
-"9370" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3660</SUB>> ]
-"9374" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3661</SUB>> ]
-"9403" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3669</SUB>> ]
-"9406" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3669</SUB>> ]
-"9411" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setRelativeLayer)<SUB>3670</SUB>> ]
-"9414" [label = <(&lt;operator&gt;.fieldAccess,s.relativeLayerHandle)<SUB>3670</SUB>> ]
-"9417" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3670</SUB>> ]
-"9425" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3671</SUB>> ]
-"9432" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3672</SUB>> ]
-"9440" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3675</SUB>> ]
-"9447" [label = <(&lt;operator&gt;.indirectFieldAccess,p-&gt;setChildRelativeLayer)<SUB>3678</SUB>> ]
-"9451" [label = <(&lt;operator&gt;.fieldAccess,s.relativeLayerHandle)<SUB>3678</SUB>> ]
-"9454" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3678</SUB>> ]
-"9458" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3679</SUB>> ]
-"9718" [label = <(FIELD_IDENTIFIER,getDebugName,getDebugName)<SUB>3749</SUB>> ]
-"9726" [label = <(ALOGE,ALOGE(&quot;Attempt to set layer stack on layer without parent (%s) that &quot;\012 &quot;that also does not appear in the top level layer list. Something&quot;\012 &quot; has gone wrong.&quot;,\012                  layer-&gt;getDebugName()))<SUB>3751</SUB>> ]
-"9792" [label = <(&lt;operator&gt;.fieldAccess,s.barrierGbp_legacy)<SUB>3766</SUB>> ]
-"9798" [label = <(&lt;operator&gt;.assignment,&amp; gbp = s.barrierGbp_legacy)<SUB>3767</SUB>> ]
-"10193" [label = <(FIELD_IDENTIFIER,FrameRate,FrameRate)<SUB>3851</SUB>> ]
-"10196" [label = <(FIELD_IDENTIFIER,frameRate,frameRate)<SUB>3851</SUB>> ]
-"10198" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate::convertCompatibility)<SUB>3852</SUB>> ]
-"10203" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateCompatibility)<SUB>3853</SUB>> ]
-"10259" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.remove)<SUB>3870</SUB>> ]
-"10312" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3878</SUB>> ]
-"10358" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3886</SUB>> ]
-"10380" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3889</SUB>> ]
-"10384" [label = <(FIELD_IDENTIFIER,registerErasedRecipient,registerErasedRecipient)<SUB>3889</SUB>> ]
-"10387" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3890</SUB>> ]
-"10389" [label = <(&lt;operator&gt;.lessThan,wp&lt;ClientCache::ErasedRecipient)<SUB>3891</SUB>> ]
-"10400" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>3893</SUB>> ]
-"10403" [label = <(getId,s.buffer-&gt;getId())<SUB>3893</SUB>> ]
-"10417" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().get)<SUB>3897</SUB>> ]
-"10423" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3897</SUB>> ]
-"9327" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3651</SUB>> ]
-"9335" [label = <(FIELD_IDENTIFIER,setLayer,setLayer)<SUB>3652</SUB>> ]
-"9338" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3652</SUB>> ]
-"9345" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3653</SUB>> ]
-"9348" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3653</SUB>> ]
-"9352" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3654</SUB>> ]
-"9355" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3654</SUB>> ]
-"9368" [label = <(FIELD_IDENTIFIER,setChildLayer,setChildLayer)<SUB>3660</SUB>> ]
-"9372" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3660</SUB>> ]
-"9376" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3661</SUB>> ]
-"9405" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3669</SUB>> ]
-"9413" [label = <(FIELD_IDENTIFIER,setRelativeLayer,setRelativeLayer)<SUB>3670</SUB>> ]
-"9416" [label = <(FIELD_IDENTIFIER,relativeLayerHandle,relativeLayerHandle)<SUB>3670</SUB>> ]
-"9419" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3670</SUB>> ]
-"9426" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3671</SUB>> ]
-"9429" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3671</SUB>> ]
-"9433" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3672</SUB>> ]
-"9436" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3672</SUB>> ]
-"9449" [label = <(FIELD_IDENTIFIER,setChildRelativeLayer,setChildRelativeLayer)<SUB>3678</SUB>> ]
-"9453" [label = <(FIELD_IDENTIFIER,relativeLayerHandle,relativeLayerHandle)<SUB>3678</SUB>> ]
-"9456" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3678</SUB>> ]
-"9460" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3679</SUB>> ]
-"9728" [label = <(getDebugName,layer-&gt;getDebugName())<SUB>3754</SUB>> ]
-"9794" [label = <(FIELD_IDENTIFIER,barrierGbp_legacy,barrierGbp_legacy)<SUB>3766</SUB>> ]
-"9800" [label = <(&lt;operator&gt;.fieldAccess,s.barrierGbp_legacy)<SUB>3767</SUB>> ]
-"9804" [label = <(authenticateSurfaceTextureLocked,authenticateSurfaceTextureLocked(gbp))<SUB>3768</SUB>> ]
-"10199" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate)<SUB>3852</SUB>> ]
-"10202" [label = <(FIELD_IDENTIFIER,convertCompatibility,convertCompatibility)<SUB>3852</SUB>> ]
-"10205" [label = <(FIELD_IDENTIFIER,frameRateCompatibility,frameRateCompatibility)<SUB>3853</SUB>> ]
-"10260" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3870</SUB>> ]
-"10263" [label = <(FIELD_IDENTIFIER,remove,remove)<SUB>3870</SUB>> ]
-"10381" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3889</SUB>> ]
-"10391" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::ErasedRecipient)<SUB>3891</SUB>> ]
-"10401" [label = <(getRenderEngine,getRenderEngine())<SUB>3893</SUB>> ]
-"10402" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>3893</SUB>> ]
-"10404" [label = <(&lt;operator&gt;.indirectFieldAccess,s.buffer-&gt;getId)<SUB>3893</SUB>> ]
-"10418" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3897</SUB>> ]
-"10422" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3897</SUB>> ]
-"10425" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3897</SUB>> ]
-"10431" [label = <(&lt;operator&gt;.assignment,buffer = s.buffer)<SUB>3899</SUB>> ]
-"9347" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3653</SUB>> ]
-"9354" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3654</SUB>> ]
-"9428" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3671</SUB>> ]
-"9435" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3672</SUB>> ]
-"9729" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getDebugName)<SUB>3754</SUB>> ]
-"9735" [label = <(setLayerStack,layer-&gt;setLayerStack(s.layerStack))<SUB>3755</SUB>> ]
-"9802" [label = <(FIELD_IDENTIFIER,barrierGbp_legacy,barrierGbp_legacy)<SUB>3767</SUB>> ]
-"9808" [label = <(&lt;operator&gt;.assignment,&amp; otherLayer =\012 (static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer())<SUB>3769</SUB>> ]
-"9819" [label = <(deferTransactionUntil_legacy,layer-&gt;deferTransactionUntil_legacy(otherLayer, s.frameNumber_legacy))<SUB>3771</SUB>> ]
-"10262" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3870</SUB>> ]
-"10383" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3889</SUB>> ]
-"10393" [label = <(FIELD_IDENTIFIER,ErasedRecipient,ErasedRecipient)<SUB>3891</SUB>> ]
-"10405" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3893</SUB>> ]
-"10408" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>3893</SUB>> ]
-"10419" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3897</SUB>> ]
-"10433" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3899</SUB>> ]
-"9731" [label = <(FIELD_IDENTIFIER,getDebugName,getDebugName)<SUB>3754</SUB>> ]
-"9736" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setLayerStack)<SUB>3755</SUB>> ]
-"9739" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3755</SUB>> ]
-"9743" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3756</SUB>> ]
-"9750" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3757</SUB>> ]
-"9757" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded | eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3760</SUB>> ]
-"9810" [label = <(getLayer,(static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer())<SUB>3770</SUB>> ]
-"9820" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;deferTransactionUntil_legacy)<SUB>3771</SUB>> ]
-"9824" [label = <(&lt;operator&gt;.fieldAccess,s.frameNumber_legacy)<SUB>3771</SUB>> ]
-"9829" [label = <(ALOGE,ALOGE(&quot;Attempt to defer transaction to to an&quot;\012 &quot; unrecognized GraphicBufferProducer&quot;))<SUB>3773</SUB>> ]
-"10407" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3893</SUB>> ]
-"10421" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3897</SUB>> ]
-"10435" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3899</SUB>> ]
-"9738" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>3755</SUB>> ]
-"9741" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3755</SUB>> ]
-"9744" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3756</SUB>> ]
-"9751" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3757</SUB>> ]
-"9759" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3760</SUB>> ]
-"9811" [label = <(&lt;operator&gt;.indirectFieldAccess,(static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer)<SUB>3770</SUB>> ]
-"9822" [label = <(FIELD_IDENTIFIER,deferTransactionUntil_legacy,deferTransactionUntil_legacy)<SUB>3771</SUB>> ]
-"9826" [label = <(FIELD_IDENTIFIER,frameNumber_legacy,frameNumber_legacy)<SUB>3771</SUB>> ]
-"9745" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3756</SUB>> ]
-"9748" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3756</SUB>> ]
-"9752" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3757</SUB>> ]
-"9755" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3757</SUB>> ]
-"9760" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded)<SUB>3760</SUB>> ]
-"9812" [label = <(&lt;operator&gt;.cast,static_cast&lt;MonitoredProducer*&gt;(gbp.get()))<SUB>3770</SUB>> ]
-"9818" [label = <(FIELD_IDENTIFIER,getLayer,getLayer)<SUB>3770</SUB>> ]
-"9747" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3756</SUB>> ]
-"9754" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3757</SUB>> ]
-"9813" [label = <(UNKNOWN,MonitoredProducer*,MonitoredProducer*)<SUB>3770</SUB>> ]
-"9814" [label = <(get,gbp.get())<SUB>3770</SUB>> ]
-"9815" [label = <(&lt;operator&gt;.fieldAccess,gbp.get)<SUB>3770</SUB>> ]
-"9817" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3770</SUB>> ]
-"9167" [label = <(METHOD,setClientStateLocked)<SUB>3599</SUB>> ]
-"10469" [label = <(METHOD_RETURN,uint32_t)<SUB>3599</SUB>> ]
-  "9175" -> "9189" 
-  "9196" -> "9206" 
-  "9248" -> "9256" 
-  "9252" -> "9262" 
-  "10270" -> "10285" 
-  "10314" -> "10328" 
-  "10322" -> "10330" 
-  "10329" -> "10336" 
-  "10467" -> "10469" 
-  "9177" -> "9175" 
-  "9197" -> "9196" 
-  "9204" -> "9215" 
-  "9204" -> "9219" 
-  "9222" -> "9229" 
-  "9222" -> "9248" 
-  "9254" -> "9252" 
-  "9258" -> "9267" 
-  "9258" -> "9273" 
-  "9269" -> "9278" 
-  "9269" -> "9284" 
-  "9280" -> "9290" 
-  "9280" -> "9306" 
-  "9302" -> "9314" 
-  "9302" -> "9384" 
-  "9380" -> "9392" 
-  "9380" -> "9468" 
-  "9464" -> "9474" 
-  "9464" -> "9490" 
-  "9486" -> "9496" 
-  "9486" -> "9509" 
-  "9505" -> "9515" 
-  "9505" -> "9528" 
-  "9524" -> "9534" 
-  "9524" -> "9547" 
-  "9543" -> "9553" 
-  "9543" -> "9572" 
-  "9568" -> "9578" 
-  "9568" -> "9592" 
-  "9588" -> "9598" 
-  "9588" -> "9611" 
-  "9607" -> "9617" 
-  "9607" -> "9633" 
-  "9629" -> "9639" 
-  "9629" -> "9652" 
-  "9648" -> "9658" 
-  "9648" -> "9673" 
-  "9667" -> "9682" 
-  "9667" -> "9695" 
-  "9691" -> "9704" 
-  "9691" -> "9769" 
-  "9765" -> "9775" 
-  "9765" -> "9836" 
-  "9832" -> "9842" 
-  "9832" -> "9857" 
-  "9853" -> "9862" 
-  "9853" -> "9868" 
-  "9864" -> "9873" 
-  "9864" -> "9882" 
-  "9878" -> "9888" 
-  "9878" -> "9901" 
-  "9897" -> "9907" 
-  "9897" -> "9920" 
-  "9916" -> "9926" 
-  "9916" -> "9939" 
-  "9935" -> "9945" 
-  "9935" -> "9958" 
-  "9954" -> "9964" 
-  "9954" -> "9977" 
-  "9973" -> "9983" 
-  "9973" -> "9996" 
-  "9992" -> "10002" 
-  "9992" -> "10015" 
-  "10011" -> "10021" 
-  "10011" -> "10034" 
-  "10030" -> "10040" 
-  "10030" -> "10053" 
-  "10049" -> "10059" 
-  "10049" -> "10072" 
-  "10068" -> "10080" 
-  "10068" -> "10089" 
-  "10068" -> "10096" 
-  "10092" -> "10102" 
-  "10092" -> "10115" 
-  "10111" -> "10121" 
-  "10111" -> "10134" 
-  "10130" -> "10140" 
-  "10130" -> "10153" 
-  "10149" -> "10156" 
-  "10149" -> "10161" 
-  "10149" -> "10174" 
-  "10170" -> "10181" 
-  "10170" -> "10215" 
-  "10211" -> "10221" 
-  "10211" -> "10236" 
-  "10232" -> "10244" 
-  "10232" -> "10274" 
-  "10271" -> "10276" 
-  "10276" -> "10270" 
-  "10280" -> "10297" 
-  "10280" -> "10320" 
-  "10316" -> "10314" 
-  "10324" -> "10322" 
-  "10330" -> "10329" 
-  "10335" -> "10349" 
-  "10335" -> "10421" 
-  "10335" -> "10435" 
-  "10335" -> "10443" 
-  "10335" -> "10461" 
-  "10458" -> "10464" 
-  "10458" -> "10467" 
-  "9179" -> "9177" 
-  "9186" -> "9194" 
-  "9191" -> "9189" 
-  "9191" -> "9198" 
-  "9198" -> "9197" 
-  "9206" -> "9204" 
-  "9208" -> "9222" 
-  "9245" -> "10469" 
-  "9256" -> "9254" 
-  "9260" -> "9258" 
-  "9264" -> "9273" 
-  "9271" -> "9269" 
-  "9275" -> "9284" 
-  "9282" -> "9280" 
-  "9304" -> "9302" 
-  "9309" -> "9316" 
-  "9382" -> "9380" 
-  "9387" -> "9394" 
-  "9466" -> "9464" 
-  "9488" -> "9486" 
-  "9507" -> "9505" 
-  "9526" -> "9524" 
-  "9545" -> "9543" 
-  "9570" -> "9568" 
-  "9590" -> "9588" 
-  "9609" -> "9607" 
-  "9631" -> "9629" 
-  "9650" -> "9648" 
-  "9668" -> "9667" 
-  "9693" -> "9691" 
-  "9698" -> "9711" 
-  "9767" -> "9765" 
-  "9834" -> "9832" 
-  "9855" -> "9853" 
-  "9859" -> "9868" 
-  "9866" -> "9864" 
-  "9870" -> "9882" 
-  "9880" -> "9878" 
-  "9899" -> "9897" 
-  "9918" -> "9916" 
-  "9937" -> "9935" 
-  "9956" -> "9954" 
-  "9975" -> "9973" 
-  "9994" -> "9992" 
-  "10013" -> "10011" 
-  "10032" -> "10030" 
-  "10051" -> "10049" 
-  "10070" -> "10068" 
-  "10094" -> "10092" 
-  "10113" -> "10111" 
-  "10132" -> "10130" 
-  "10151" -> "10149" 
-  "10172" -> "10170" 
-  "10213" -> "10211" 
-  "10234" -> "10232" 
-  "10239" -> "10249" 
-  "10272" -> "10271" 
-  "10281" -> "10280" 
-  "10281" -> "10291" 
-  "10286" -> "10280" 
-  "10318" -> "10316" 
-  "10326" -> "10324" 
-  "10336" -> "10335" 
-  "10336" -> "10342" 
-  "10339" -> "10335" 
-  "10345" -> "10358" 
-  "10351" -> "10371" 
-  "10351" -> "10443" 
-  "10351" -> "10461" 
-  "10459" -> "10458" 
-  "10464" -> "10467" 
-  "9187" -> "9186" 
-  "9192" -> "9191" 
-  "9210" -> "9208" 
-  "9219" -> "9222" 
-  "9227" -> "9237" 
-  "9227" -> "9245" 
-  "9262" -> "9260" 
-  "9265" -> "9264" 
-  "9273" -> "9271" 
-  "9276" -> "9275" 
-  "9284" -> "9282" 
-  "9287" -> "9298" 
-  "9287" -> "9306" 
-  "9306" -> "9304" 
-  "9311" -> "9309" 
-  "9316" -> "9327" 
-  "9316" -> "9368" 
-  "9384" -> "9382" 
-  "9389" -> "9387" 
-  "9394" -> "9405" 
-  "9394" -> "9449" 
-  "9468" -> "9466" 
-  "9471" -> "9482" 
-  "9471" -> "9490" 
-  "9490" -> "9488" 
-  "9493" -> "9501" 
-  "9493" -> "9509" 
-  "9509" -> "9507" 
-  "9512" -> "9520" 
-  "9512" -> "9528" 
-  "9528" -> "9526" 
-  "9531" -> "9539" 
-  "9531" -> "9547" 
-  "9547" -> "9545" 
-  "9550" -> "9564" 
-  "9550" -> "9572" 
-  "9572" -> "9570" 
-  "9575" -> "9584" 
-  "9575" -> "9592" 
-  "9592" -> "9590" 
-  "9595" -> "9603" 
-  "9595" -> "9611" 
-  "9611" -> "9609" 
-  "9614" -> "9625" 
-  "9614" -> "9633" 
-  "9633" -> "9631" 
-  "9636" -> "9644" 
-  "9636" -> "9652" 
-  "9652" -> "9650" 
-  "9655" -> "9663" 
-  "9655" -> "9673" 
-  "9669" -> "9668" 
-  "9669" -> "9674" 
-  "9674" -> "9668" 
-  "9679" -> "9687" 
-  "9679" -> "9695" 
-  "9695" -> "9693" 
-  "9700" -> "9698" 
-  "9708" -> "9718" 
-  "9708" -> "9722" 
-  "9769" -> "9767" 
-  "9772" -> "9781" 
-  "9772" -> "9794" 
-  "9836" -> "9834" 
-  "9839" -> "9849" 
-  "9839" -> "9857" 
-  "9857" -> "9855" 
-  "9860" -> "9859" 
-  "9868" -> "9866" 
-  "9871" -> "9876" 
-  "9874" -> "9870" 
-  "9882" -> "9880" 
-  "9885" -> "9893" 
-  "9885" -> "9901" 
-  "9901" -> "9899" 
-  "9904" -> "9912" 
-  "9904" -> "9920" 
-  "9920" -> "9918" 
-  "9923" -> "9931" 
-  "9923" -> "9939" 
-  "9939" -> "9937" 
-  "9942" -> "9950" 
-  "9942" -> "9958" 
-  "9958" -> "9956" 
-  "9961" -> "9969" 
-  "9961" -> "9977" 
-  "9977" -> "9975" 
-  "9980" -> "9988" 
-  "9980" -> "9996" 
-  "9996" -> "9994" 
-  "9999" -> "10007" 
-  "9999" -> "10015" 
-  "10015" -> "10013" 
-  "10018" -> "10026" 
-  "10018" -> "10034" 
-  "10034" -> "10032" 
-  "10037" -> "10045" 
-  "10037" -> "10053" 
-  "10053" -> "10051" 
-  "10056" -> "10064" 
-  "10056" -> "10072" 
-  "10072" -> "10070" 
-  "10096" -> "10094" 
-  "10099" -> "10107" 
-  "10099" -> "10115" 
-  "10115" -> "10113" 
-  "10118" -> "10126" 
-  "10118" -> "10134" 
-  "10134" -> "10132" 
-  "10137" -> "10145" 
-  "10137" -> "10153" 
-  "10153" -> "10151" 
-  "10156" -> "10166" 
-  "10156" -> "10174" 
-  "10174" -> "10172" 
-  "10177" -> "10207" 
-  "10177" -> "10215" 
-  "10215" -> "10213" 
-  "10218" -> "10228" 
-  "10218" -> "10236" 
-  "10236" -> "10234" 
-  "10241" -> "10239" 
-  "10246" -> "10255" 
-  "10246" -> "10274" 
-  "10274" -> "10272" 
-  "10283" -> "10281" 
-  "10287" -> "10286" 
-  "10295" -> "10305" 
-  "10295" -> "10320" 
-  "10320" -> "10318" 
-  "10328" -> "10326" 
-  "10340" -> "10339" 
-  "10347" -> "10345" 
-  "10353" -> "10351" 
-  "10440" -> "10454" 
-  "10440" -> "10461" 
-  "10461" -> "10459" 
-  "9189" -> "9187" 
-  "9194" -> "9192" 
-  "9211" -> "9210" 
-  "9229" -> "9227" 
-  "9234" -> "9237" 
-  "9234" -> "9245" 
-  "9267" -> "9265" 
-  "9278" -> "9276" 
-  "9288" -> "9293" 
-  "9291" -> "9296" 
-  "9294" -> "9287" 
-  "9298" -> "9306" 
-  "9312" -> "9311" 
-  "9321" -> "9335" 
-  "9390" -> "9389" 
-  "9399" -> "9413" 
-  "9472" -> "9477" 
-  "9475" -> "9480" 
-  "9478" -> "9471" 
-  "9482" -> "9490" 
-  "9494" -> "9499" 
-  "9497" -> "9493" 
-  "9501" -> "9509" 
-  "9513" -> "9518" 
-  "9516" -> "9512" 
-  "9520" -> "9528" 
-  "9532" -> "9537" 
-  "9535" -> "9531" 
-  "9539" -> "9547" 
-  "9551" -> "9556" 
-  "9554" -> "9559" 
-  "9557" -> "9562" 
-  "9560" -> "9550" 
-  "9564" -> "9572" 
-  "9576" -> "9581" 
-  "9579" -> "9575" 
-  "9584" -> "9592" 
-  "9596" -> "9601" 
-  "9599" -> "9595" 
-  "9603" -> "9611" 
-  "9615" -> "9620" 
-  "9618" -> "9623" 
-  "9621" -> "9614" 
-  "9625" -> "9633" 
-  "9637" -> "9642" 
-  "9640" -> "9636" 
-  "9644" -> "9652" 
-  "9656" -> "9661" 
-  "9659" -> "9655" 
-  "9663" -> "9673" 
-  "9671" -> "9669" 
-  "9680" -> "9685" 
-  "9683" -> "9679" 
-  "9687" -> "9695" 
-  "9701" -> "9700" 
-  "9709" -> "9708" 
-  "9713" -> "9769" 
-  "9773" -> "9772" 
-  "9778" -> "9836" 
-  "9840" -> "9845" 
-  "9843" -> "9839" 
-  "9847" -> "9857" 
-  "9862" -> "9860" 
-  "9873" -> "9871" 
-  "9876" -> "9874" 
-  "9886" -> "9891" 
-  "9889" -> "9885" 
-  "9893" -> "9901" 
-  "9905" -> "9910" 
-  "9908" -> "9904" 
-  "9912" -> "9920" 
-  "9924" -> "9929" 
-  "9927" -> "9923" 
-  "9931" -> "9939" 
-  "9943" -> "9948" 
-  "9946" -> "9942" 
-  "9950" -> "9958" 
-  "9962" -> "9967" 
-  "9965" -> "9961" 
-  "9969" -> "9977" 
-  "9981" -> "9986" 
-  "9984" -> "9980" 
-  "9988" -> "9996" 
-  "10000" -> "10005" 
-  "10003" -> "9999" 
-  "10007" -> "10015" 
-  "10019" -> "10024" 
-  "10022" -> "10018" 
-  "10026" -> "10034" 
-  "10038" -> "10043" 
-  "10041" -> "10037" 
-  "10045" -> "10053" 
-  "10057" -> "10062" 
-  "10060" -> "10056" 
-  "10064" -> "10072" 
-  "10077" -> "10084" 
+"9191" [label = <(&lt;operator&gt;.assignment,&amp; s = composerState.state)<SUB>3602</SUB>> ]
+"9212" [label = <(&lt;operator&gt;.assignment,sp&lt;Layer&gt; layer = nullptr)<SUB>3611</SUB>> ]
+"9264" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3626</SUB>> ]
+"9268" [label = <(&lt;operator&gt;.assignment,what = s.what)<SUB>3628</SUB>> ]
+"10286" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;sp&lt;CallbackHandle&gt;&gt; callbackHandles)<SUB>3874</SUB>> ]
+"10330" [label = <(&lt;operator&gt;.assignment,bufferChanged = what &amp; layer_state_t::eBufferChanged)<SUB>3880</SUB>> ]
+"10338" [label = <(&lt;operator&gt;.assignment,cacheIdChanged = what &amp; layer_state_t::eCachedBufferChanged)<SUB>3881</SUB>> ]
+"10345" [label = <(&lt;operator&gt;.greaterThan,sp&lt;GraphicBuffer&gt; buffer)<SUB>3882</SUB>> ]
+"10483" [label = <(RETURN,return flags;,return flags;)<SUB>3909</SUB>> ]
+"9193" [label = <(&lt;operator&gt;.fieldAccess,composerState.state)<SUB>3602</SUB>> ]
+"9213" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; layer)<SUB>3611</SUB>> ]
+"9220" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3612</SUB>> ]
+"9238" [label = <(&lt;operator&gt;.equals,layer == nullptr)<SUB>3618</SUB>> ]
+"9270" [label = <(&lt;operator&gt;.fieldAccess,s.what)<SUB>3628</SUB>> ]
+"9274" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDeferTransaction_legacy)<SUB>3632</SUB>> ]
+"9285" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eProducerDisconnect)<SUB>3637</SUB>> ]
+"9296" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::ePositionChanged)<SUB>3641</SUB>> ]
+"9318" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eLayerChanged)<SUB>3646</SUB>> ]
+"9396" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eRelativeLayerChanged)<SUB>3664</SUB>> ]
+"9480" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSizeChanged)<SUB>3682</SUB>> ]
+"9502" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eAlphaChanged)<SUB>3687</SUB>> ]
+"9521" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorChanged)<SUB>3691</SUB>> ]
+"9540" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorTransformChanged)<SUB>3695</SUB>> ]
+"9559" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBackgroundColorChanged)<SUB>3700</SUB>> ]
+"9584" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eMatrixChanged)<SUB>3705</SUB>> ]
+"9604" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransparentRegionChanged)<SUB>3724</SUB>> ]
+"9623" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFlagsChanged)<SUB>3728</SUB>> ]
+"9645" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCropChanged_legacy)<SUB>3732</SUB>> ]
+"9664" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCornerRadiusChanged)<SUB>3735</SUB>> ]
+"9683" [label = <(&lt;operator&gt;.logicalAnd,what &amp; layer_state_t::eBackgroundBlurRadiusChanged &amp;&amp; !mDisableBlurs &amp;&amp; mSupportsBlur)<SUB>3739</SUB>> ]
+"9707" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eLayerStackChanged)<SUB>3742</SUB>> ]
+"9781" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDeferTransaction_legacy)<SUB>3762</SUB>> ]
+"9848" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eReparentChildren)<SUB>3779</SUB>> ]
+"9869" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDetachChildren)<SUB>3784</SUB>> ]
+"9880" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eOverrideScalingModeChanged)<SUB>3787</SUB>> ]
+"9894" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransformChanged)<SUB>3792</SUB>> ]
+"9913" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eTransformToDisplayInverseChanged)<SUB>3795</SUB>> ]
+"9932" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCropChanged)<SUB>3799</SUB>> ]
+"9951" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameChanged)<SUB>3802</SUB>> ]
+"9970" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eAcquireFenceChanged)<SUB>3805</SUB>> ]
+"9989" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eDataspaceChanged)<SUB>3808</SUB>> ]
+"10008" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eHdrMetadataChanged)<SUB>3811</SUB>> ]
+"10027" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSurfaceDamageRegionChanged)<SUB>3814</SUB>> ]
+"10046" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eApiChanged)<SUB>3817</SUB>> ]
+"10065" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eSidebandStreamChanged)<SUB>3820</SUB>> ]
+"10084" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eInputInfoChanged)<SUB>3823</SUB>> ]
+"10108" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eMetadataChanged)<SUB>3831</SUB>> ]
+"10127" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eColorSpaceAgnosticChanged)<SUB>3834</SUB>> ]
+"10146" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eShadowRadiusChanged)<SUB>3839</SUB>> ]
+"10165" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameRateSelectionPriority)<SUB>3842</SUB>> ]
+"10186" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFrameRateChanged)<SUB>3847</SUB>> ]
+"10227" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eFixedTransformHintChanged)<SUB>3856</SUB>> ]
+"10248" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eReparent)<SUB>3865</SUB>> ]
+"10287" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;sp)<SUB>3874</SUB>> ]
+"10292" [label = <(&lt;operator&gt;.arithmeticShiftRight,CallbackHandle&gt;&gt; callbackHandles)<SUB>3874</SUB>> ]
+"10296" [label = <(&lt;operator&gt;.logicalAnd,(what &amp; layer_state_t::eHasListenerCallbacksChanged) &amp;&amp; (!s.listeners.empty()))<SUB>3875</SUB>> ]
+"10332" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBufferChanged)<SUB>3880</SUB>> ]
+"10340" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eCachedBufferChanged)<SUB>3881</SUB>> ]
+"10346" [label = <(&lt;operator&gt;.lessThan,sp&lt;GraphicBuffer)<SUB>3882</SUB>> ]
+"10351" [label = <(&lt;operator&gt;.logicalAnd,bufferChanged &amp;&amp; cacheIdChanged &amp;&amp; s.buffer != nullptr)<SUB>3883</SUB>> ]
+"10474" [label = <(setTransactionCompletedListeners,layer-&gt;setTransactionCompletedListeners(callbackHandles))<SUB>3906</SUB>> ]
+"9195" [label = <(FIELD_IDENTIFIER,state,state)<SUB>3602</SUB>> ]
+"9202" [label = <(startRegistration,mTransactionCompletedThread.startRegistration(listener))<SUB>3607</SUB>> ]
+"9207" [label = <(insert,listenerCallbacks.insert(listener))<SUB>3608</SUB>> ]
+"9214" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3611</SUB>> ]
+"9222" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3612</SUB>> ]
+"9224" [label = <(&lt;operator&gt;.assignment,layer = fromHandleLocked(s.surface).promote())<SUB>3613</SUB>> ]
+"9261" [label = <(RETURN,return 0;,return 0;)<SUB>3623</SUB>> ]
+"9272" [label = <(FIELD_IDENTIFIER,what,what)<SUB>3628</SUB>> ]
+"9276" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDeferTransaction_legacy)<SUB>3632</SUB>> ]
+"9280" [label = <(pushPendingState,layer-&gt;pushPendingState())<SUB>3633</SUB>> ]
+"9287" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eProducerDisconnect)<SUB>3637</SUB>> ]
+"9291" [label = <(onDisconnect,layer-&gt;onDisconnect())<SUB>3638</SUB>> ]
+"9298" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::ePositionChanged)<SUB>3641</SUB>> ]
+"9320" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerChanged)<SUB>3646</SUB>> ]
+"9325" [label = <(&lt;operator&gt;.assignment,&amp; p = layer-&gt;getParent())<SUB>3648</SUB>> ]
+"9398" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eRelativeLayerChanged)<SUB>3664</SUB>> ]
+"9403" [label = <(&lt;operator&gt;.assignment,&amp; p = layer-&gt;getParent())<SUB>3666</SUB>> ]
+"9482" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSizeChanged)<SUB>3682</SUB>> ]
+"9504" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAlphaChanged)<SUB>3687</SUB>> ]
+"9523" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorChanged)<SUB>3691</SUB>> ]
+"9542" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorTransformChanged)<SUB>3695</SUB>> ]
+"9561" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBackgroundColorChanged)<SUB>3700</SUB>> ]
+"9586" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eMatrixChanged)<SUB>3705</SUB>> ]
+"9606" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransparentRegionChanged)<SUB>3724</SUB>> ]
+"9625" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFlagsChanged)<SUB>3728</SUB>> ]
+"9647" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCropChanged_legacy)<SUB>3732</SUB>> ]
+"9666" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCornerRadiusChanged)<SUB>3735</SUB>> ]
+"9684" [label = <(&lt;operator&gt;.logicalAnd,what &amp; layer_state_t::eBackgroundBlurRadiusChanged &amp;&amp; !mDisableBlurs)<SUB>3739</SUB>> ]
+"9709" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerStackChanged)<SUB>3742</SUB>> ]
+"9714" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3743</SUB>> ]
+"9783" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDeferTransaction_legacy)<SUB>3762</SUB>> ]
+"9850" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eReparentChildren)<SUB>3779</SUB>> ]
+"9871" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDetachChildren)<SUB>3784</SUB>> ]
+"9875" [label = <(detachChildren,layer-&gt;detachChildren())<SUB>3785</SUB>> ]
+"9882" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eOverrideScalingModeChanged)<SUB>3787</SUB>> ]
+"9886" [label = <(setOverrideScalingMode,layer-&gt;setOverrideScalingMode(s.overrideScalingMode))<SUB>3788</SUB>> ]
+"9896" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransformChanged)<SUB>3792</SUB>> ]
+"9915" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eTransformToDisplayInverseChanged)<SUB>3795</SUB>> ]
+"9934" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCropChanged)<SUB>3799</SUB>> ]
+"9953" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameChanged)<SUB>3802</SUB>> ]
+"9972" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eAcquireFenceChanged)<SUB>3805</SUB>> ]
+"9991" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eDataspaceChanged)<SUB>3808</SUB>> ]
+"10010" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eHdrMetadataChanged)<SUB>3811</SUB>> ]
+"10029" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSurfaceDamageRegionChanged)<SUB>3814</SUB>> ]
+"10048" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eApiChanged)<SUB>3817</SUB>> ]
+"10067" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eSidebandStreamChanged)<SUB>3820</SUB>> ]
+"10086" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eInputInfoChanged)<SUB>3823</SUB>> ]
+"10110" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eMetadataChanged)<SUB>3831</SUB>> ]
+"10129" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eColorSpaceAgnosticChanged)<SUB>3834</SUB>> ]
+"10148" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eShadowRadiusChanged)<SUB>3839</SUB>> ]
+"10167" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameRateSelectionPriority)<SUB>3842</SUB>> ]
+"10188" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFrameRateChanged)<SUB>3847</SUB>> ]
+"10229" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eFixedTransformHintChanged)<SUB>3856</SUB>> ]
+"10250" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eReparent)<SUB>3865</SUB>> ]
+"10255" [label = <(&lt;operator&gt;.assignment,hadParent = layer-&gt;hasParent())<SUB>3866</SUB>> ]
+"10288" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>3874</SUB>> ]
+"10297" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eHasListenerCallbacksChanged)<SUB>3875</SUB>> ]
+"10302" [label = <(&lt;operator&gt;.logicalNot,!s.listeners.empty())<SUB>3875</SUB>> ]
+"10334" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBufferChanged)<SUB>3880</SUB>> ]
+"10342" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eCachedBufferChanged)<SUB>3881</SUB>> ]
+"10352" [label = <(&lt;operator&gt;.logicalAnd,bufferChanged &amp;&amp; cacheIdChanged)<SUB>3883</SUB>> ]
+"10355" [label = <(&lt;operator&gt;.notEquals,s.buffer != nullptr)<SUB>3883</SUB>> ]
+"10361" [label = <(&lt;operator&gt;.assignment,buffer = s.buffer)<SUB>3884</SUB>> ]
+"10367" [label = <(&lt;operator&gt;.assignment,success = ClientCache::getInstance().add(s.cachedBuffer, s.buffer))<SUB>3885</SUB>> ]
+"10475" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransactionCompletedListeners)<SUB>3906</SUB>> ]
+"10480" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3906</SUB>> ]
+"9203" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.startRegistration)<SUB>3607</SUB>> ]
+"9208" [label = <(&lt;operator&gt;.fieldAccess,listenerCallbacks.insert)<SUB>3608</SUB>> ]
+"9226" [label = <(promote,fromHandleLocked(s.surface).promote())<SUB>3613</SUB>> ]
+"9235" [label = <(ALOGW,ALOGW(&quot;Attempt to set client state with a null layer handle&quot;))<SUB>3616</SUB>> ]
+"9243" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3619</SUB>> ]
+"9278" [label = <(FIELD_IDENTIFIER,eDeferTransaction_legacy,eDeferTransaction_legacy)<SUB>3632</SUB>> ]
+"9281" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;pushPendingState)<SUB>3633</SUB>> ]
+"9289" [label = <(FIELD_IDENTIFIER,eProducerDisconnect,eProducerDisconnect)<SUB>3637</SUB>> ]
+"9292" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;onDisconnect)<SUB>3638</SUB>> ]
+"9300" [label = <(FIELD_IDENTIFIER,ePositionChanged,ePositionChanged)<SUB>3641</SUB>> ]
+"9303" [label = <(setPosition,layer-&gt;setPosition(s.x, s.y))<SUB>3642</SUB>> ]
+"9322" [label = <(FIELD_IDENTIFIER,eLayerChanged,eLayerChanged)<SUB>3646</SUB>> ]
+"9327" [label = <(getParent,layer-&gt;getParent())<SUB>3648</SUB>> ]
+"9332" [label = <(&lt;operator&gt;.equals,p == nullptr)<SUB>3649</SUB>> ]
+"9400" [label = <(FIELD_IDENTIFIER,eRelativeLayerChanged,eRelativeLayerChanged)<SUB>3664</SUB>> ]
+"9405" [label = <(getParent,layer-&gt;getParent())<SUB>3666</SUB>> ]
+"9410" [label = <(&lt;operator&gt;.equals,p == nullptr)<SUB>3667</SUB>> ]
+"9484" [label = <(FIELD_IDENTIFIER,eSizeChanged,eSizeChanged)<SUB>3682</SUB>> ]
+"9487" [label = <(setSize,layer-&gt;setSize(s.w, s.h))<SUB>3683</SUB>> ]
+"9506" [label = <(FIELD_IDENTIFIER,eAlphaChanged,eAlphaChanged)<SUB>3687</SUB>> ]
+"9509" [label = <(setAlpha,layer-&gt;setAlpha(s.alpha))<SUB>3688</SUB>> ]
+"9525" [label = <(FIELD_IDENTIFIER,eColorChanged,eColorChanged)<SUB>3691</SUB>> ]
+"9528" [label = <(setColor,layer-&gt;setColor(s.color))<SUB>3692</SUB>> ]
+"9544" [label = <(FIELD_IDENTIFIER,eColorTransformChanged,eColorTransformChanged)<SUB>3695</SUB>> ]
+"9547" [label = <(setColorTransform,layer-&gt;setColorTransform(s.colorTransform))<SUB>3696</SUB>> ]
+"9563" [label = <(FIELD_IDENTIFIER,eBackgroundColorChanged,eBackgroundColorChanged)<SUB>3700</SUB>> ]
+"9566" [label = <(setBackgroundColor,layer-&gt;setBackgroundColor(s.color, s.bgColorAlpha, s.bgColorDataspace))<SUB>3701</SUB>> ]
+"9588" [label = <(FIELD_IDENTIFIER,eMatrixChanged,eMatrixChanged)<SUB>3705</SUB>> ]
+"9591" [label = <(setMatrix,layer-&gt;setMatrix(s.matrix, privileged))<SUB>3721</SUB>> ]
+"9608" [label = <(FIELD_IDENTIFIER,eTransparentRegionChanged,eTransparentRegionChanged)<SUB>3724</SUB>> ]
+"9611" [label = <(setTransparentRegionHint,layer-&gt;setTransparentRegionHint(s.transparentRegion))<SUB>3725</SUB>> ]
+"9627" [label = <(FIELD_IDENTIFIER,eFlagsChanged,eFlagsChanged)<SUB>3728</SUB>> ]
+"9630" [label = <(setFlags,layer-&gt;setFlags(s.flags, s.mask))<SUB>3729</SUB>> ]
+"9649" [label = <(FIELD_IDENTIFIER,eCropChanged_legacy,eCropChanged_legacy)<SUB>3732</SUB>> ]
+"9652" [label = <(setCrop_legacy,layer-&gt;setCrop_legacy(s.crop_legacy))<SUB>3733</SUB>> ]
+"9668" [label = <(FIELD_IDENTIFIER,eCornerRadiusChanged,eCornerRadiusChanged)<SUB>3735</SUB>> ]
+"9671" [label = <(setCornerRadius,layer-&gt;setCornerRadius(s.cornerRadius))<SUB>3736</SUB>> ]
+"9685" [label = <(&lt;operator&gt;.and,what &amp; layer_state_t::eBackgroundBlurRadiusChanged)<SUB>3739</SUB>> ]
+"9690" [label = <(&lt;operator&gt;.logicalNot,!mDisableBlurs)<SUB>3739</SUB>> ]
+"9695" [label = <(setBackgroundBlurRadius,layer-&gt;setBackgroundBlurRadius(s.backgroundBlurRadius))<SUB>3740</SUB>> ]
+"9711" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>3742</SUB>> ]
+"9716" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3743</SUB>> ]
+"9724" [label = <(hasParent,layer-&gt;hasParent())<SUB>3746</SUB>> ]
+"9785" [label = <(FIELD_IDENTIFIER,eDeferTransaction_legacy,eDeferTransaction_legacy)<SUB>3762</SUB>> ]
+"9788" [label = <(&lt;operator&gt;.notEquals,s.barrierHandle_legacy != nullptr)<SUB>3763</SUB>> ]
+"9852" [label = <(FIELD_IDENTIFIER,eReparentChildren,eReparentChildren)<SUB>3779</SUB>> ]
+"9855" [label = <(reparentChildren,layer-&gt;reparentChildren(s.reparentHandle))<SUB>3780</SUB>> ]
+"9873" [label = <(FIELD_IDENTIFIER,eDetachChildren,eDetachChildren)<SUB>3784</SUB>> ]
+"9876" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;detachChildren)<SUB>3785</SUB>> ]
+"9884" [label = <(FIELD_IDENTIFIER,eOverrideScalingModeChanged,eOverrideScalingModeChanged)<SUB>3787</SUB>> ]
+"9887" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setOverrideScalingMode)<SUB>3788</SUB>> ]
+"9890" [label = <(&lt;operator&gt;.fieldAccess,s.overrideScalingMode)<SUB>3788</SUB>> ]
+"9898" [label = <(FIELD_IDENTIFIER,eTransformChanged,eTransformChanged)<SUB>3792</SUB>> ]
+"9901" [label = <(setTransform,layer-&gt;setTransform(s.transform))<SUB>3793</SUB>> ]
+"9917" [label = <(FIELD_IDENTIFIER,eTransformToDisplayInverseChanged,eTransformToDisplayInverseChanged)<SUB>3795</SUB>> ]
+"9920" [label = <(setTransformToDisplayInverse,layer-&gt;setTransformToDisplayInverse(s.transformToDisplayInverse))<SUB>3796</SUB>> ]
+"9936" [label = <(FIELD_IDENTIFIER,eCropChanged,eCropChanged)<SUB>3799</SUB>> ]
+"9939" [label = <(setCrop,layer-&gt;setCrop(s.crop))<SUB>3800</SUB>> ]
+"9955" [label = <(FIELD_IDENTIFIER,eFrameChanged,eFrameChanged)<SUB>3802</SUB>> ]
+"9958" [label = <(setFrame,layer-&gt;setFrame(s.frame))<SUB>3803</SUB>> ]
+"9974" [label = <(FIELD_IDENTIFIER,eAcquireFenceChanged,eAcquireFenceChanged)<SUB>3805</SUB>> ]
+"9977" [label = <(setAcquireFence,layer-&gt;setAcquireFence(s.acquireFence))<SUB>3806</SUB>> ]
+"9993" [label = <(FIELD_IDENTIFIER,eDataspaceChanged,eDataspaceChanged)<SUB>3808</SUB>> ]
+"9996" [label = <(setDataspace,layer-&gt;setDataspace(s.dataspace))<SUB>3809</SUB>> ]
+"10012" [label = <(FIELD_IDENTIFIER,eHdrMetadataChanged,eHdrMetadataChanged)<SUB>3811</SUB>> ]
+"10015" [label = <(setHdrMetadata,layer-&gt;setHdrMetadata(s.hdrMetadata))<SUB>3812</SUB>> ]
+"10031" [label = <(FIELD_IDENTIFIER,eSurfaceDamageRegionChanged,eSurfaceDamageRegionChanged)<SUB>3814</SUB>> ]
+"10034" [label = <(setSurfaceDamageRegion,layer-&gt;setSurfaceDamageRegion(s.surfaceDamageRegion))<SUB>3815</SUB>> ]
+"10050" [label = <(FIELD_IDENTIFIER,eApiChanged,eApiChanged)<SUB>3817</SUB>> ]
+"10053" [label = <(setApi,layer-&gt;setApi(s.api))<SUB>3818</SUB>> ]
+"10069" [label = <(FIELD_IDENTIFIER,eSidebandStreamChanged,eSidebandStreamChanged)<SUB>3820</SUB>> ]
+"10072" [label = <(setSidebandStream,layer-&gt;setSidebandStream(s.sidebandStream))<SUB>3821</SUB>> ]
+"10088" [label = <(FIELD_IDENTIFIER,eInputInfoChanged,eInputInfoChanged)<SUB>3823</SUB>> ]
+"10112" [label = <(FIELD_IDENTIFIER,eMetadataChanged,eMetadataChanged)<SUB>3831</SUB>> ]
+"10115" [label = <(setMetadata,layer-&gt;setMetadata(s.metadata))<SUB>3832</SUB>> ]
+"10131" [label = <(FIELD_IDENTIFIER,eColorSpaceAgnosticChanged,eColorSpaceAgnosticChanged)<SUB>3834</SUB>> ]
+"10134" [label = <(setColorSpaceAgnostic,layer-&gt;setColorSpaceAgnostic(s.colorSpaceAgnostic))<SUB>3835</SUB>> ]
+"10150" [label = <(FIELD_IDENTIFIER,eShadowRadiusChanged,eShadowRadiusChanged)<SUB>3839</SUB>> ]
+"10153" [label = <(setShadowRadius,layer-&gt;setShadowRadius(s.shadowRadius))<SUB>3840</SUB>> ]
+"10169" [label = <(FIELD_IDENTIFIER,eFrameRateSelectionPriority,eFrameRateSelectionPriority)<SUB>3842</SUB>> ]
+"10172" [label = <(&lt;operator&gt;.logicalAnd,privileged &amp;&amp; layer-&gt;setFrameRateSelectionPriority(s.frameRateSelectionPriority))<SUB>3843</SUB>> ]
+"10190" [label = <(FIELD_IDENTIFIER,eFrameRateChanged,eFrameRateChanged)<SUB>3847</SUB>> ]
+"10193" [label = <(&lt;operator&gt;.logicalAnd,ValidateFrameRate(s.frameRate, s.frameRateCompatibility,\012 &quot;SurfaceFlinger::setClientStateLocked&quot;) &amp;&amp;\012            layer-&gt;setFrameRate(Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))))<SUB>3848</SUB>> ]
+"10231" [label = <(FIELD_IDENTIFIER,eFixedTransformHintChanged,eFixedTransformHintChanged)<SUB>3856</SUB>> ]
+"10234" [label = <(setFixedTransformHint,layer-&gt;setFixedTransformHint(s.fixedTransformHint))<SUB>3857</SUB>> ]
+"10252" [label = <(FIELD_IDENTIFIER,eReparent,eReparent)<SUB>3865</SUB>> ]
+"10257" [label = <(hasParent,layer-&gt;hasParent())<SUB>3866</SUB>> ]
+"10262" [label = <(reparent,layer-&gt;reparent(s.parentHandleForChild))<SUB>3867</SUB>> ]
+"10290" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>3874</SUB>> ]
+"10299" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eHasListenerCallbacksChanged)<SUB>3875</SUB>> ]
+"10303" [label = <(empty,s.listeners.empty())<SUB>3875</SUB>> ]
+"10311" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3876</SUB>> ]
+"10336" [label = <(FIELD_IDENTIFIER,eBufferChanged,eBufferChanged)<SUB>3880</SUB>> ]
+"10344" [label = <(FIELD_IDENTIFIER,eCachedBufferChanged,eCachedBufferChanged)<SUB>3881</SUB>> ]
+"10356" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3883</SUB>> ]
+"10363" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3884</SUB>> ]
+"10369" [label = <(add,ClientCache::getInstance().add(s.cachedBuffer, s.buffer))<SUB>3885</SUB>> ]
+"10456" [label = <(setBuffer,layer-&gt;setBuffer(buffer, s.acquireFence, postTime, desiredPresentTime,\012                             s.cachedBuffer))<SUB>3901</SUB>> ]
+"10477" [label = <(FIELD_IDENTIFIER,setTransactionCompletedListeners,setTransactionCompletedListeners)<SUB>3906</SUB>> ]
+"9205" [label = <(FIELD_IDENTIFIER,startRegistration,startRegistration)<SUB>3607</SUB>> ]
+"9210" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>3608</SUB>> ]
+"9227" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(s.surface).promote)<SUB>3613</SUB>> ]
+"9245" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3619</SUB>> ]
+"9250" [label = <(registerUnpresentedCallbackHandle,mTransactionCompletedThread.registerUnpresentedCallbackHandle(\012 new CallbackHandle(listener, callbackIds, s.surface)))<SUB>3620</SUB>> ]
+"9283" [label = <(FIELD_IDENTIFIER,pushPendingState,pushPendingState)<SUB>3633</SUB>> ]
+"9294" [label = <(FIELD_IDENTIFIER,onDisconnect,onDisconnect)<SUB>3638</SUB>> ]
+"9304" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setPosition)<SUB>3642</SUB>> ]
+"9307" [label = <(&lt;operator&gt;.fieldAccess,s.x)<SUB>3642</SUB>> ]
+"9310" [label = <(&lt;operator&gt;.fieldAccess,s.y)<SUB>3642</SUB>> ]
+"9314" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3643</SUB>> ]
+"9328" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>3648</SUB>> ]
+"9337" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3650</SUB>> ]
+"9406" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>3666</SUB>> ]
+"9415" [label = <(&lt;operator&gt;.assignment,idx = mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3668</SUB>> ]
+"9488" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSize)<SUB>3683</SUB>> ]
+"9491" [label = <(&lt;operator&gt;.fieldAccess,s.w)<SUB>3683</SUB>> ]
+"9494" [label = <(&lt;operator&gt;.fieldAccess,s.h)<SUB>3683</SUB>> ]
+"9498" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3684</SUB>> ]
+"9510" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setAlpha)<SUB>3688</SUB>> ]
+"9513" [label = <(&lt;operator&gt;.fieldAccess,s.alpha)<SUB>3688</SUB>> ]
+"9517" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3689</SUB>> ]
+"9529" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColor)<SUB>3692</SUB>> ]
+"9532" [label = <(&lt;operator&gt;.fieldAccess,s.color)<SUB>3692</SUB>> ]
+"9536" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3693</SUB>> ]
+"9548" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColorTransform)<SUB>3696</SUB>> ]
+"9551" [label = <(&lt;operator&gt;.fieldAccess,s.colorTransform)<SUB>3696</SUB>> ]
+"9555" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3697</SUB>> ]
+"9567" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBackgroundColor)<SUB>3701</SUB>> ]
+"9570" [label = <(&lt;operator&gt;.fieldAccess,s.color)<SUB>3701</SUB>> ]
+"9573" [label = <(&lt;operator&gt;.fieldAccess,s.bgColorAlpha)<SUB>3701</SUB>> ]
+"9576" [label = <(&lt;operator&gt;.fieldAccess,s.bgColorDataspace)<SUB>3701</SUB>> ]
+"9580" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3702</SUB>> ]
+"9592" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setMatrix)<SUB>3721</SUB>> ]
+"9595" [label = <(&lt;operator&gt;.fieldAccess,s.matrix)<SUB>3721</SUB>> ]
+"9600" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3722</SUB>> ]
+"9612" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransparentRegionHint)<SUB>3725</SUB>> ]
+"9615" [label = <(&lt;operator&gt;.fieldAccess,s.transparentRegion)<SUB>3725</SUB>> ]
+"9619" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3726</SUB>> ]
+"9631" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFlags)<SUB>3729</SUB>> ]
+"9634" [label = <(&lt;operator&gt;.fieldAccess,s.flags)<SUB>3729</SUB>> ]
+"9637" [label = <(&lt;operator&gt;.fieldAccess,s.mask)<SUB>3729</SUB>> ]
+"9641" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3730</SUB>> ]
+"9653" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCrop_legacy)<SUB>3733</SUB>> ]
+"9656" [label = <(&lt;operator&gt;.fieldAccess,s.crop_legacy)<SUB>3733</SUB>> ]
+"9660" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3733</SUB>> ]
+"9672" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCornerRadius)<SUB>3736</SUB>> ]
+"9675" [label = <(&lt;operator&gt;.fieldAccess,s.cornerRadius)<SUB>3736</SUB>> ]
+"9679" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3737</SUB>> ]
+"9687" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eBackgroundBlurRadiusChanged)<SUB>3739</SUB>> ]
+"9696" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBackgroundBlurRadius)<SUB>3740</SUB>> ]
+"9699" [label = <(&lt;operator&gt;.fieldAccess,s.backgroundBlurRadius)<SUB>3740</SUB>> ]
+"9703" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3740</SUB>> ]
+"9717" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3743</SUB>> ]
+"9725" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;hasParent)<SUB>3746</SUB>> ]
+"9729" [label = <(ALOGE,ALOGE(&quot;Attempt to set layer stack on layer with parent (%s) is invalid&quot;,\012                  layer-&gt;getDebugName()))<SUB>3747</SUB>> ]
+"9789" [label = <(&lt;operator&gt;.fieldAccess,s.barrierHandle_legacy)<SUB>3763</SUB>> ]
+"9794" [label = <(deferTransactionUntil_legacy,layer-&gt;deferTransactionUntil_legacy(s.barrierHandle_legacy, s.frameNumber_legacy))<SUB>3764</SUB>> ]
+"9856" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;reparentChildren)<SUB>3780</SUB>> ]
+"9859" [label = <(&lt;operator&gt;.fieldAccess,s.reparentHandle)<SUB>3780</SUB>> ]
+"9863" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3781</SUB>> ]
+"9878" [label = <(FIELD_IDENTIFIER,detachChildren,detachChildren)<SUB>3785</SUB>> ]
+"9889" [label = <(FIELD_IDENTIFIER,setOverrideScalingMode,setOverrideScalingMode)<SUB>3788</SUB>> ]
+"9892" [label = <(FIELD_IDENTIFIER,overrideScalingMode,overrideScalingMode)<SUB>3788</SUB>> ]
+"9902" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransform)<SUB>3793</SUB>> ]
+"9905" [label = <(&lt;operator&gt;.fieldAccess,s.transform)<SUB>3793</SUB>> ]
+"9909" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3793</SUB>> ]
+"9921" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setTransformToDisplayInverse)<SUB>3796</SUB>> ]
+"9924" [label = <(&lt;operator&gt;.fieldAccess,s.transformToDisplayInverse)<SUB>3796</SUB>> ]
+"9928" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3797</SUB>> ]
+"9940" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setCrop)<SUB>3800</SUB>> ]
+"9943" [label = <(&lt;operator&gt;.fieldAccess,s.crop)<SUB>3800</SUB>> ]
+"9947" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3800</SUB>> ]
+"9959" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrame)<SUB>3803</SUB>> ]
+"9962" [label = <(&lt;operator&gt;.fieldAccess,s.frame)<SUB>3803</SUB>> ]
+"9966" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3803</SUB>> ]
+"9978" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setAcquireFence)<SUB>3806</SUB>> ]
+"9981" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3806</SUB>> ]
+"9985" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3806</SUB>> ]
+"9997" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setDataspace)<SUB>3809</SUB>> ]
+"10000" [label = <(&lt;operator&gt;.fieldAccess,s.dataspace)<SUB>3809</SUB>> ]
+"10004" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3809</SUB>> ]
+"10016" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setHdrMetadata)<SUB>3812</SUB>> ]
+"10019" [label = <(&lt;operator&gt;.fieldAccess,s.hdrMetadata)<SUB>3812</SUB>> ]
+"10023" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3812</SUB>> ]
+"10035" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSurfaceDamageRegion)<SUB>3815</SUB>> ]
+"10038" [label = <(&lt;operator&gt;.fieldAccess,s.surfaceDamageRegion)<SUB>3815</SUB>> ]
+"10042" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3815</SUB>> ]
+"10054" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setApi)<SUB>3818</SUB>> ]
+"10057" [label = <(&lt;operator&gt;.fieldAccess,s.api)<SUB>3818</SUB>> ]
+"10061" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3818</SUB>> ]
+"10073" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setSidebandStream)<SUB>3821</SUB>> ]
+"10076" [label = <(&lt;operator&gt;.fieldAccess,s.sidebandStream)<SUB>3821</SUB>> ]
+"10080" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3821</SUB>> ]
+"10093" [label = <(setInputInfo,layer-&gt;setInputInfo(s.inputInfo))<SUB>3825</SUB>> ]
+"10100" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3826</SUB>> ]
+"10116" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setMetadata)<SUB>3832</SUB>> ]
+"10119" [label = <(&lt;operator&gt;.fieldAccess,s.metadata)<SUB>3832</SUB>> ]
+"10123" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3832</SUB>> ]
+"10135" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setColorSpaceAgnostic)<SUB>3835</SUB>> ]
+"10138" [label = <(&lt;operator&gt;.fieldAccess,s.colorSpaceAgnostic)<SUB>3835</SUB>> ]
+"10142" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3836</SUB>> ]
+"10154" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setShadowRadius)<SUB>3840</SUB>> ]
+"10157" [label = <(&lt;operator&gt;.fieldAccess,s.shadowRadius)<SUB>3840</SUB>> ]
+"10161" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3840</SUB>> ]
+"10174" [label = <(setFrameRateSelectionPriority,layer-&gt;setFrameRateSelectionPriority(s.frameRateSelectionPriority))<SUB>3843</SUB>> ]
+"10182" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3844</SUB>> ]
+"10194" [label = <(ValidateFrameRate,ValidateFrameRate(s.frameRate, s.frameRateCompatibility,\012 &quot;SurfaceFlinger::setClientStateLocked&quot;))<SUB>3848</SUB>> ]
+"10202" [label = <(setFrameRate,layer-&gt;setFrameRate(Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))))<SUB>3850</SUB>> ]
+"10223" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3853</SUB>> ]
+"10235" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFixedTransformHint)<SUB>3857</SUB>> ]
+"10238" [label = <(&lt;operator&gt;.fieldAccess,s.fixedTransformHint)<SUB>3857</SUB>> ]
+"10242" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3858</SUB>> ]
+"10258" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;hasParent)<SUB>3866</SUB>> ]
+"10263" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;reparent)<SUB>3867</SUB>> ]
+"10266" [label = <(&lt;operator&gt;.fieldAccess,s.parentHandleForChild)<SUB>3867</SUB>> ]
+"10281" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded | eTraversalNeeded)<SUB>3871</SUB>> ]
+"10301" [label = <(FIELD_IDENTIFIER,eHasListenerCallbacksChanged,eHasListenerCallbacksChanged)<SUB>3875</SUB>> ]
+"10304" [label = <(&lt;operator&gt;.fieldAccess,s.listeners.empty)<SUB>3875</SUB>> ]
+"10313" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3876</SUB>> ]
+"10318" [label = <(emplace_back,callbackHandles.emplace_back(new CallbackHandle(listener, callbackIds, s.surface)))<SUB>3877</SUB>> ]
+"10358" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3883</SUB>> ]
+"10365" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3884</SUB>> ]
+"10370" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().add)<SUB>3885</SUB>> ]
+"10376" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3885</SUB>> ]
+"10379" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3885</SUB>> ]
+"10385" [label = <(cacheExternalTextureBuffer,getRenderEngine().cacheExternalTextureBuffer(s.buffer))<SUB>3887</SUB>> ]
+"10392" [label = <(&lt;operator&gt;.assignment,success = ClientCache::getInstance()\012 .registerErasedRecipient(s.cachedBuffer,\012                                                       wp&lt;ClientCache::ErasedRecipient&gt;(this)))<SUB>3888</SUB>> ]
+"10457" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setBuffer)<SUB>3901</SUB>> ]
+"10461" [label = <(&lt;operator&gt;.fieldAccess,s.acquireFence)<SUB>3901</SUB>> ]
+"10466" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3902</SUB>> ]
+"10470" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3903</SUB>> ]
+"9228" [label = <(fromHandleLocked,fromHandleLocked(s.surface))<SUB>3613</SUB>> ]
+"9232" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3613</SUB>> ]
+"9251" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCompletedThread.registerUnpresentedCallbackHandle)<SUB>3620</SUB>> ]
+"9254" [label = <(&lt;operator&gt;.new,new CallbackHandle(listener, callbackIds, s.surface))<SUB>3621</SUB>> ]
+"9306" [label = <(FIELD_IDENTIFIER,setPosition,setPosition)<SUB>3642</SUB>> ]
+"9309" [label = <(FIELD_IDENTIFIER,x,x)<SUB>3642</SUB>> ]
+"9312" [label = <(FIELD_IDENTIFIER,y,y)<SUB>3642</SUB>> ]
+"9330" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3648</SUB>> ]
+"9339" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3650</SUB>> ]
+"9347" [label = <(&lt;operator&gt;.logicalAnd,layer-&gt;setLayer(s.z) &amp;&amp; idx &gt;= 0)<SUB>3651</SUB>> ]
+"9408" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>3666</SUB>> ]
+"9417" [label = <(indexOf,mCurrentState.layersSortedByZ.indexOf(layer))<SUB>3668</SUB>> ]
+"9425" [label = <(&lt;operator&gt;.logicalAnd,layer-&gt;setRelativeLayer(s.relativeLayerHandle, s.z) &amp;&amp; idx &gt;= 0)<SUB>3669</SUB>> ]
+"9490" [label = <(FIELD_IDENTIFIER,setSize,setSize)<SUB>3683</SUB>> ]
+"9493" [label = <(FIELD_IDENTIFIER,w,w)<SUB>3683</SUB>> ]
+"9496" [label = <(FIELD_IDENTIFIER,h,h)<SUB>3683</SUB>> ]
+"9512" [label = <(FIELD_IDENTIFIER,setAlpha,setAlpha)<SUB>3688</SUB>> ]
+"9515" [label = <(FIELD_IDENTIFIER,alpha,alpha)<SUB>3688</SUB>> ]
+"9531" [label = <(FIELD_IDENTIFIER,setColor,setColor)<SUB>3692</SUB>> ]
+"9534" [label = <(FIELD_IDENTIFIER,color,color)<SUB>3692</SUB>> ]
+"9550" [label = <(FIELD_IDENTIFIER,setColorTransform,setColorTransform)<SUB>3696</SUB>> ]
+"9553" [label = <(FIELD_IDENTIFIER,colorTransform,colorTransform)<SUB>3696</SUB>> ]
+"9569" [label = <(FIELD_IDENTIFIER,setBackgroundColor,setBackgroundColor)<SUB>3701</SUB>> ]
+"9572" [label = <(FIELD_IDENTIFIER,color,color)<SUB>3701</SUB>> ]
+"9575" [label = <(FIELD_IDENTIFIER,bgColorAlpha,bgColorAlpha)<SUB>3701</SUB>> ]
+"9578" [label = <(FIELD_IDENTIFIER,bgColorDataspace,bgColorDataspace)<SUB>3701</SUB>> ]
+"9594" [label = <(FIELD_IDENTIFIER,setMatrix,setMatrix)<SUB>3721</SUB>> ]
+"9597" [label = <(FIELD_IDENTIFIER,matrix,matrix)<SUB>3721</SUB>> ]
+"9614" [label = <(FIELD_IDENTIFIER,setTransparentRegionHint,setTransparentRegionHint)<SUB>3725</SUB>> ]
+"9617" [label = <(FIELD_IDENTIFIER,transparentRegion,transparentRegion)<SUB>3725</SUB>> ]
+"9633" [label = <(FIELD_IDENTIFIER,setFlags,setFlags)<SUB>3729</SUB>> ]
+"9636" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>3729</SUB>> ]
+"9639" [label = <(FIELD_IDENTIFIER,mask,mask)<SUB>3729</SUB>> ]
+"9655" [label = <(FIELD_IDENTIFIER,setCrop_legacy,setCrop_legacy)<SUB>3733</SUB>> ]
+"9658" [label = <(FIELD_IDENTIFIER,crop_legacy,crop_legacy)<SUB>3733</SUB>> ]
+"9674" [label = <(FIELD_IDENTIFIER,setCornerRadius,setCornerRadius)<SUB>3736</SUB>> ]
+"9677" [label = <(FIELD_IDENTIFIER,cornerRadius,cornerRadius)<SUB>3736</SUB>> ]
+"9689" [label = <(FIELD_IDENTIFIER,eBackgroundBlurRadiusChanged,eBackgroundBlurRadiusChanged)<SUB>3739</SUB>> ]
+"9698" [label = <(FIELD_IDENTIFIER,setBackgroundBlurRadius,setBackgroundBlurRadius)<SUB>3740</SUB>> ]
+"9701" [label = <(FIELD_IDENTIFIER,backgroundBlurRadius,backgroundBlurRadius)<SUB>3740</SUB>> ]
+"9718" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3743</SUB>> ]
+"9721" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3743</SUB>> ]
+"9727" [label = <(FIELD_IDENTIFIER,hasParent,hasParent)<SUB>3746</SUB>> ]
+"9731" [label = <(getDebugName,layer-&gt;getDebugName())<SUB>3748</SUB>> ]
+"9791" [label = <(FIELD_IDENTIFIER,barrierHandle_legacy,barrierHandle_legacy)<SUB>3763</SUB>> ]
+"9795" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;deferTransactionUntil_legacy)<SUB>3764</SUB>> ]
+"9798" [label = <(&lt;operator&gt;.fieldAccess,s.barrierHandle_legacy)<SUB>3764</SUB>> ]
+"9801" [label = <(&lt;operator&gt;.fieldAccess,s.frameNumber_legacy)<SUB>3764</SUB>> ]
+"9858" [label = <(FIELD_IDENTIFIER,reparentChildren,reparentChildren)<SUB>3780</SUB>> ]
+"9861" [label = <(FIELD_IDENTIFIER,reparentHandle,reparentHandle)<SUB>3780</SUB>> ]
+"9865" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3781</SUB>> ]
+"9904" [label = <(FIELD_IDENTIFIER,setTransform,setTransform)<SUB>3793</SUB>> ]
+"9907" [label = <(FIELD_IDENTIFIER,transform,transform)<SUB>3793</SUB>> ]
+"9923" [label = <(FIELD_IDENTIFIER,setTransformToDisplayInverse,setTransformToDisplayInverse)<SUB>3796</SUB>> ]
+"9926" [label = <(FIELD_IDENTIFIER,transformToDisplayInverse,transformToDisplayInverse)<SUB>3796</SUB>> ]
+"9942" [label = <(FIELD_IDENTIFIER,setCrop,setCrop)<SUB>3800</SUB>> ]
+"9945" [label = <(FIELD_IDENTIFIER,crop,crop)<SUB>3800</SUB>> ]
+"9961" [label = <(FIELD_IDENTIFIER,setFrame,setFrame)<SUB>3803</SUB>> ]
+"9964" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>3803</SUB>> ]
+"9980" [label = <(FIELD_IDENTIFIER,setAcquireFence,setAcquireFence)<SUB>3806</SUB>> ]
+"9983" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3806</SUB>> ]
+"9999" [label = <(FIELD_IDENTIFIER,setDataspace,setDataspace)<SUB>3809</SUB>> ]
+"10002" [label = <(FIELD_IDENTIFIER,dataspace,dataspace)<SUB>3809</SUB>> ]
+"10018" [label = <(FIELD_IDENTIFIER,setHdrMetadata,setHdrMetadata)<SUB>3812</SUB>> ]
+"10021" [label = <(FIELD_IDENTIFIER,hdrMetadata,hdrMetadata)<SUB>3812</SUB>> ]
+"10037" [label = <(FIELD_IDENTIFIER,setSurfaceDamageRegion,setSurfaceDamageRegion)<SUB>3815</SUB>> ]
+"10040" [label = <(FIELD_IDENTIFIER,surfaceDamageRegion,surfaceDamageRegion)<SUB>3815</SUB>> ]
+"10056" [label = <(FIELD_IDENTIFIER,setApi,setApi)<SUB>3818</SUB>> ]
+"10059" [label = <(FIELD_IDENTIFIER,api,api)<SUB>3818</SUB>> ]
+"10075" [label = <(FIELD_IDENTIFIER,setSidebandStream,setSidebandStream)<SUB>3821</SUB>> ]
+"10078" [label = <(FIELD_IDENTIFIER,sidebandStream,sidebandStream)<SUB>3821</SUB>> ]
+"10094" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setInputInfo)<SUB>3825</SUB>> ]
+"10097" [label = <(&lt;operator&gt;.fieldAccess,s.inputInfo)<SUB>3825</SUB>> ]
+"10105" [label = <(ALOGE,ALOGE(&quot;Attempt to update InputWindowInfo without permission ACCESS_SURFACE_FLINGER&quot;))<SUB>3828</SUB>> ]
+"10118" [label = <(FIELD_IDENTIFIER,setMetadata,setMetadata)<SUB>3832</SUB>> ]
+"10121" [label = <(FIELD_IDENTIFIER,metadata,metadata)<SUB>3832</SUB>> ]
+"10137" [label = <(FIELD_IDENTIFIER,setColorSpaceAgnostic,setColorSpaceAgnostic)<SUB>3835</SUB>> ]
+"10140" [label = <(FIELD_IDENTIFIER,colorSpaceAgnostic,colorSpaceAgnostic)<SUB>3835</SUB>> ]
+"10156" [label = <(FIELD_IDENTIFIER,setShadowRadius,setShadowRadius)<SUB>3840</SUB>> ]
+"10159" [label = <(FIELD_IDENTIFIER,shadowRadius,shadowRadius)<SUB>3840</SUB>> ]
+"10175" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrameRateSelectionPriority)<SUB>3843</SUB>> ]
+"10178" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateSelectionPriority)<SUB>3843</SUB>> ]
+"10195" [label = <(&lt;operator&gt;.fieldAccess,s.frameRate)<SUB>3848</SUB>> ]
+"10198" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateCompatibility)<SUB>3848</SUB>> ]
+"10203" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setFrameRate)<SUB>3850</SUB>> ]
+"10206" [label = <(Layer::FrameRate,Layer::FrameRate(s.frameRate,\012 Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility)))<SUB>3850</SUB>> ]
+"10237" [label = <(FIELD_IDENTIFIER,setFixedTransformHint,setFixedTransformHint)<SUB>3857</SUB>> ]
+"10240" [label = <(FIELD_IDENTIFIER,fixedTransformHint,fixedTransformHint)<SUB>3857</SUB>> ]
+"10244" [label = <(&lt;operator&gt;.or,eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3858</SUB>> ]
+"10260" [label = <(FIELD_IDENTIFIER,hasParent,hasParent)<SUB>3866</SUB>> ]
+"10265" [label = <(FIELD_IDENTIFIER,reparent,reparent)<SUB>3867</SUB>> ]
+"10268" [label = <(FIELD_IDENTIFIER,parentHandleForChild,parentHandleForChild)<SUB>3867</SUB>> ]
+"10271" [label = <(&lt;operator&gt;.logicalNot,!hadParent)<SUB>3868</SUB>> ]
+"10283" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded)<SUB>3871</SUB>> ]
+"10305" [label = <(&lt;operator&gt;.fieldAccess,s.listeners)<SUB>3875</SUB>> ]
+"10308" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>3875</SUB>> ]
+"10319" [label = <(&lt;operator&gt;.fieldAccess,callbackHandles.emplace_back)<SUB>3877</SUB>> ]
+"10322" [label = <(&lt;operator&gt;.new,new CallbackHandle(listener, callbackIds, s.surface))<SUB>3877</SUB>> ]
+"10371" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3885</SUB>> ]
+"10375" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3885</SUB>> ]
+"10378" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3885</SUB>> ]
+"10381" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3885</SUB>> ]
+"10386" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().cacheExternalTextureBuffer)<SUB>3887</SUB>> ]
+"10389" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3887</SUB>> ]
+"10394" [label = <(registerErasedRecipient,ClientCache::getInstance()\012 .registerErasedRecipient(s.cachedBuffer,\012                                                       wp&lt;ClientCache::ErasedRecipient&gt;(this)))<SUB>3888</SUB>> ]
+"10412" [label = <(&lt;operator&gt;.logicalNot,!success)<SUB>3891</SUB>> ]
+"10430" [label = <(&lt;operator&gt;.assignment,buffer = ClientCache::getInstance().get(s.cachedBuffer))<SUB>3896</SUB>> ]
+"10459" [label = <(FIELD_IDENTIFIER,setBuffer,setBuffer)<SUB>3901</SUB>> ]
+"10463" [label = <(FIELD_IDENTIFIER,acquireFence,acquireFence)<SUB>3901</SUB>> ]
+"10468" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3902</SUB>> ]
+"9229" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3613</SUB>> ]
+"9253" [label = <(FIELD_IDENTIFIER,registerUnpresentedCallbackHandle,registerUnpresentedCallbackHandle)<SUB>3620</SUB>> ]
+"9258" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3621</SUB>> ]
+"9340" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3650</SUB>> ]
+"9348" [label = <(setLayer,layer-&gt;setLayer(s.z))<SUB>3651</SUB>> ]
+"9355" [label = <(&lt;operator&gt;.greaterEqualsThan,idx &gt;= 0)<SUB>3651</SUB>> ]
+"9359" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3652</SUB>> ]
+"9366" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3653</SUB>> ]
+"9373" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3656</SUB>> ]
+"9381" [label = <(setChildLayer,p-&gt;setChildLayer(layer, s.z))<SUB>3659</SUB>> ]
+"9418" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.indexOf)<SUB>3668</SUB>> ]
+"9426" [label = <(setRelativeLayer,layer-&gt;setRelativeLayer(s.relativeLayerHandle, s.z))<SUB>3669</SUB>> ]
+"9436" [label = <(&lt;operator&gt;.greaterEqualsThan,idx &gt;= 0)<SUB>3669</SUB>> ]
+"9440" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3670</SUB>> ]
+"9447" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3671</SUB>> ]
+"9454" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3674</SUB>> ]
+"9462" [label = <(setChildRelativeLayer,p-&gt;setChildRelativeLayer(layer, s.relativeLayerHandle, s.z))<SUB>3677</SUB>> ]
+"9720" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3743</SUB>> ]
+"9732" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getDebugName)<SUB>3748</SUB>> ]
+"9738" [label = <(&lt;operator&gt;.lessThan,idx &lt; 0)<SUB>3749</SUB>> ]
+"9797" [label = <(FIELD_IDENTIFIER,deferTransactionUntil_legacy,deferTransactionUntil_legacy)<SUB>3764</SUB>> ]
+"9800" [label = <(FIELD_IDENTIFIER,barrierHandle_legacy,barrierHandle_legacy)<SUB>3764</SUB>> ]
+"9803" [label = <(FIELD_IDENTIFIER,frameNumber_legacy,frameNumber_legacy)<SUB>3764</SUB>> ]
+"9807" [label = <(&lt;operator&gt;.notEquals,s.barrierGbp_legacy != nullptr)<SUB>3765</SUB>> ]
+"10096" [label = <(FIELD_IDENTIFIER,setInputInfo,setInputInfo)<SUB>3825</SUB>> ]
+"10099" [label = <(FIELD_IDENTIFIER,inputInfo,inputInfo)<SUB>3825</SUB>> ]
+"10177" [label = <(FIELD_IDENTIFIER,setFrameRateSelectionPriority,setFrameRateSelectionPriority)<SUB>3843</SUB>> ]
+"10180" [label = <(FIELD_IDENTIFIER,frameRateSelectionPriority,frameRateSelectionPriority)<SUB>3843</SUB>> ]
+"10197" [label = <(FIELD_IDENTIFIER,frameRate,frameRate)<SUB>3848</SUB>> ]
+"10200" [label = <(FIELD_IDENTIFIER,frameRateCompatibility,frameRateCompatibility)<SUB>3848</SUB>> ]
+"10205" [label = <(FIELD_IDENTIFIER,setFrameRate,setFrameRate)<SUB>3850</SUB>> ]
+"10207" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate)<SUB>3850</SUB>> ]
+"10210" [label = <(&lt;operator&gt;.fieldAccess,s.frameRate)<SUB>3850</SUB>> ]
+"10213" [label = <(Layer::FrameRate::convertCompatibility,Layer::FrameRate::convertCompatibility(\012                                                         s.frameRateCompatibility))<SUB>3851</SUB>> ]
+"10274" [label = <(remove,mCurrentState.layersSortedByZ.remove(layer))<SUB>3869</SUB>> ]
+"10307" [label = <(FIELD_IDENTIFIER,listeners,listeners)<SUB>3875</SUB>> ]
+"10321" [label = <(FIELD_IDENTIFIER,emplace_back,emplace_back)<SUB>3877</SUB>> ]
+"10326" [label = <(&lt;operator&gt;.fieldAccess,s.surface)<SUB>3877</SUB>> ]
+"10372" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3885</SUB>> ]
+"10387" [label = <(getRenderEngine,getRenderEngine())<SUB>3887</SUB>> ]
+"10388" [label = <(FIELD_IDENTIFIER,cacheExternalTextureBuffer,cacheExternalTextureBuffer)<SUB>3887</SUB>> ]
+"10391" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3887</SUB>> ]
+"10395" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance()\012 .registerErasedRecipient)<SUB>3888</SUB>> ]
+"10401" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3889</SUB>> ]
+"10404" [label = <(&lt;operator&gt;.greaterThan,wp&lt;ClientCache::ErasedRecipient&gt;(this))<SUB>3890</SUB>> ]
+"10415" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(s.buffer-&gt;getId()))<SUB>3892</SUB>> ]
+"10432" [label = <(get,ClientCache::getInstance().get(s.cachedBuffer))<SUB>3896</SUB>> ]
+"9231" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3613</SUB>> ]
+"9260" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3621</SUB>> ]
+"9341" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3650</SUB>> ]
+"9344" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3650</SUB>> ]
+"9349" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setLayer)<SUB>3651</SUB>> ]
+"9352" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3651</SUB>> ]
+"9360" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3652</SUB>> ]
+"9367" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3653</SUB>> ]
+"9375" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3656</SUB>> ]
+"9382" [label = <(&lt;operator&gt;.indirectFieldAccess,p-&gt;setChildLayer)<SUB>3659</SUB>> ]
+"9386" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3659</SUB>> ]
+"9390" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3660</SUB>> ]
+"9419" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3668</SUB>> ]
+"9422" [label = <(FIELD_IDENTIFIER,indexOf,indexOf)<SUB>3668</SUB>> ]
+"9427" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setRelativeLayer)<SUB>3669</SUB>> ]
+"9430" [label = <(&lt;operator&gt;.fieldAccess,s.relativeLayerHandle)<SUB>3669</SUB>> ]
+"9433" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3669</SUB>> ]
+"9441" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3670</SUB>> ]
+"9448" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3671</SUB>> ]
+"9456" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3674</SUB>> ]
+"9463" [label = <(&lt;operator&gt;.indirectFieldAccess,p-&gt;setChildRelativeLayer)<SUB>3677</SUB>> ]
+"9467" [label = <(&lt;operator&gt;.fieldAccess,s.relativeLayerHandle)<SUB>3677</SUB>> ]
+"9470" [label = <(&lt;operator&gt;.fieldAccess,s.z)<SUB>3677</SUB>> ]
+"9474" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded|eTraversalNeeded)<SUB>3678</SUB>> ]
+"9734" [label = <(FIELD_IDENTIFIER,getDebugName,getDebugName)<SUB>3748</SUB>> ]
+"9742" [label = <(ALOGE,ALOGE(&quot;Attempt to set layer stack on layer without parent (%s) that &quot;\012 &quot;that also does not appear in the top level layer list. Something&quot;\012 &quot; has gone wrong.&quot;,\012                  layer-&gt;getDebugName()))<SUB>3750</SUB>> ]
+"9808" [label = <(&lt;operator&gt;.fieldAccess,s.barrierGbp_legacy)<SUB>3765</SUB>> ]
+"9814" [label = <(&lt;operator&gt;.assignment,&amp; gbp = s.barrierGbp_legacy)<SUB>3766</SUB>> ]
+"10209" [label = <(FIELD_IDENTIFIER,FrameRate,FrameRate)<SUB>3850</SUB>> ]
+"10212" [label = <(FIELD_IDENTIFIER,frameRate,frameRate)<SUB>3850</SUB>> ]
+"10214" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate::convertCompatibility)<SUB>3851</SUB>> ]
+"10219" [label = <(&lt;operator&gt;.fieldAccess,s.frameRateCompatibility)<SUB>3852</SUB>> ]
+"10275" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.remove)<SUB>3869</SUB>> ]
+"10328" [label = <(FIELD_IDENTIFIER,surface,surface)<SUB>3877</SUB>> ]
+"10374" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3885</SUB>> ]
+"10396" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3888</SUB>> ]
+"10400" [label = <(FIELD_IDENTIFIER,registerErasedRecipient,registerErasedRecipient)<SUB>3888</SUB>> ]
+"10403" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3889</SUB>> ]
+"10405" [label = <(&lt;operator&gt;.lessThan,wp&lt;ClientCache::ErasedRecipient)<SUB>3890</SUB>> ]
+"10416" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>3892</SUB>> ]
+"10419" [label = <(getId,s.buffer-&gt;getId())<SUB>3892</SUB>> ]
+"10433" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance().get)<SUB>3896</SUB>> ]
+"10439" [label = <(&lt;operator&gt;.fieldAccess,s.cachedBuffer)<SUB>3896</SUB>> ]
+"9343" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3650</SUB>> ]
+"9351" [label = <(FIELD_IDENTIFIER,setLayer,setLayer)<SUB>3651</SUB>> ]
+"9354" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3651</SUB>> ]
+"9361" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3652</SUB>> ]
+"9364" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3652</SUB>> ]
+"9368" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3653</SUB>> ]
+"9371" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3653</SUB>> ]
+"9384" [label = <(FIELD_IDENTIFIER,setChildLayer,setChildLayer)<SUB>3659</SUB>> ]
+"9388" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3659</SUB>> ]
+"9392" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3660</SUB>> ]
+"9421" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3668</SUB>> ]
+"9429" [label = <(FIELD_IDENTIFIER,setRelativeLayer,setRelativeLayer)<SUB>3669</SUB>> ]
+"9432" [label = <(FIELD_IDENTIFIER,relativeLayerHandle,relativeLayerHandle)<SUB>3669</SUB>> ]
+"9435" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3669</SUB>> ]
+"9442" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3670</SUB>> ]
+"9445" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3670</SUB>> ]
+"9449" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3671</SUB>> ]
+"9452" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3671</SUB>> ]
+"9465" [label = <(FIELD_IDENTIFIER,setChildRelativeLayer,setChildRelativeLayer)<SUB>3677</SUB>> ]
+"9469" [label = <(FIELD_IDENTIFIER,relativeLayerHandle,relativeLayerHandle)<SUB>3677</SUB>> ]
+"9472" [label = <(FIELD_IDENTIFIER,z,z)<SUB>3677</SUB>> ]
+"9476" [label = <(&lt;operator&gt;.or,eTransactionNeeded|eTraversalNeeded)<SUB>3678</SUB>> ]
+"9744" [label = <(getDebugName,layer-&gt;getDebugName())<SUB>3753</SUB>> ]
+"9810" [label = <(FIELD_IDENTIFIER,barrierGbp_legacy,barrierGbp_legacy)<SUB>3765</SUB>> ]
+"9816" [label = <(&lt;operator&gt;.fieldAccess,s.barrierGbp_legacy)<SUB>3766</SUB>> ]
+"9820" [label = <(authenticateSurfaceTextureLocked,authenticateSurfaceTextureLocked(gbp))<SUB>3767</SUB>> ]
+"10215" [label = <(&lt;operator&gt;.fieldAccess,Layer::FrameRate)<SUB>3851</SUB>> ]
+"10218" [label = <(FIELD_IDENTIFIER,convertCompatibility,convertCompatibility)<SUB>3851</SUB>> ]
+"10221" [label = <(FIELD_IDENTIFIER,frameRateCompatibility,frameRateCompatibility)<SUB>3852</SUB>> ]
+"10276" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3869</SUB>> ]
+"10279" [label = <(FIELD_IDENTIFIER,remove,remove)<SUB>3869</SUB>> ]
+"10397" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3888</SUB>> ]
+"10407" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::ErasedRecipient)<SUB>3890</SUB>> ]
+"10417" [label = <(getRenderEngine,getRenderEngine())<SUB>3892</SUB>> ]
+"10418" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>3892</SUB>> ]
+"10420" [label = <(&lt;operator&gt;.indirectFieldAccess,s.buffer-&gt;getId)<SUB>3892</SUB>> ]
+"10434" [label = <(ClientCache::getInstance,ClientCache::getInstance())<SUB>3896</SUB>> ]
+"10438" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3896</SUB>> ]
+"10441" [label = <(FIELD_IDENTIFIER,cachedBuffer,cachedBuffer)<SUB>3896</SUB>> ]
+"10447" [label = <(&lt;operator&gt;.assignment,buffer = s.buffer)<SUB>3898</SUB>> ]
+"9363" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3652</SUB>> ]
+"9370" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3653</SUB>> ]
+"9444" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3670</SUB>> ]
+"9451" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3671</SUB>> ]
+"9745" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getDebugName)<SUB>3753</SUB>> ]
+"9751" [label = <(setLayerStack,layer-&gt;setLayerStack(s.layerStack))<SUB>3754</SUB>> ]
+"9818" [label = <(FIELD_IDENTIFIER,barrierGbp_legacy,barrierGbp_legacy)<SUB>3766</SUB>> ]
+"9824" [label = <(&lt;operator&gt;.assignment,&amp; otherLayer =\012 (static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer())<SUB>3768</SUB>> ]
+"9835" [label = <(deferTransactionUntil_legacy,layer-&gt;deferTransactionUntil_legacy(otherLayer, s.frameNumber_legacy))<SUB>3770</SUB>> ]
+"10278" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3869</SUB>> ]
+"10399" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3888</SUB>> ]
+"10409" [label = <(FIELD_IDENTIFIER,ErasedRecipient,ErasedRecipient)<SUB>3890</SUB>> ]
+"10421" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3892</SUB>> ]
+"10424" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>3892</SUB>> ]
+"10435" [label = <(&lt;operator&gt;.fieldAccess,ClientCache::getInstance)<SUB>3896</SUB>> ]
+"10449" [label = <(&lt;operator&gt;.fieldAccess,s.buffer)<SUB>3898</SUB>> ]
+"9747" [label = <(FIELD_IDENTIFIER,getDebugName,getDebugName)<SUB>3753</SUB>> ]
+"9752" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setLayerStack)<SUB>3754</SUB>> ]
+"9755" [label = <(&lt;operator&gt;.fieldAccess,s.layerStack)<SUB>3754</SUB>> ]
+"9759" [label = <(removeAt,mCurrentState.layersSortedByZ.removeAt(idx))<SUB>3755</SUB>> ]
+"9766" [label = <(add,mCurrentState.layersSortedByZ.add(layer))<SUB>3756</SUB>> ]
+"9773" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTransactionNeeded | eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3759</SUB>> ]
+"9826" [label = <(getLayer,(static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer())<SUB>3769</SUB>> ]
+"9836" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;deferTransactionUntil_legacy)<SUB>3770</SUB>> ]
+"9840" [label = <(&lt;operator&gt;.fieldAccess,s.frameNumber_legacy)<SUB>3770</SUB>> ]
+"9845" [label = <(ALOGE,ALOGE(&quot;Attempt to defer transaction to to an&quot;\012 &quot; unrecognized GraphicBufferProducer&quot;))<SUB>3772</SUB>> ]
+"10423" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3892</SUB>> ]
+"10437" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>3896</SUB>> ]
+"10451" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>3898</SUB>> ]
+"9754" [label = <(FIELD_IDENTIFIER,setLayerStack,setLayerStack)<SUB>3754</SUB>> ]
+"9757" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>3754</SUB>> ]
+"9760" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.removeAt)<SUB>3755</SUB>> ]
+"9767" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.add)<SUB>3756</SUB>> ]
+"9775" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded | eTransformHintUpdateNeeded)<SUB>3759</SUB>> ]
+"9827" [label = <(&lt;operator&gt;.indirectFieldAccess,(static_cast&lt;MonitoredProducer*&gt;(gbp.get()))-&gt;getLayer)<SUB>3769</SUB>> ]
+"9838" [label = <(FIELD_IDENTIFIER,deferTransactionUntil_legacy,deferTransactionUntil_legacy)<SUB>3770</SUB>> ]
+"9842" [label = <(FIELD_IDENTIFIER,frameNumber_legacy,frameNumber_legacy)<SUB>3770</SUB>> ]
+"9761" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3755</SUB>> ]
+"9764" [label = <(FIELD_IDENTIFIER,removeAt,removeAt)<SUB>3755</SUB>> ]
+"9768" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>3756</SUB>> ]
+"9771" [label = <(FIELD_IDENTIFIER,add,add)<SUB>3756</SUB>> ]
+"9776" [label = <(&lt;operator&gt;.or,eTransactionNeeded | eTraversalNeeded)<SUB>3759</SUB>> ]
+"9828" [label = <(&lt;operator&gt;.cast,static_cast&lt;MonitoredProducer*&gt;(gbp.get()))<SUB>3769</SUB>> ]
+"9834" [label = <(FIELD_IDENTIFIER,getLayer,getLayer)<SUB>3769</SUB>> ]
+"9763" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3755</SUB>> ]
+"9770" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>3756</SUB>> ]
+"9829" [label = <(UNKNOWN,MonitoredProducer*,MonitoredProducer*)<SUB>3769</SUB>> ]
+"9830" [label = <(get,gbp.get())<SUB>3769</SUB>> ]
+"9831" [label = <(&lt;operator&gt;.fieldAccess,gbp.get)<SUB>3769</SUB>> ]
+"9833" [label = <(FIELD_IDENTIFIER,get,get)<SUB>3769</SUB>> ]
+"9183" [label = <(METHOD,setClientStateLocked)<SUB>3598</SUB>> ]
+"10485" [label = <(METHOD_RETURN,uint32_t)<SUB>3598</SUB>> ]
+  "9191" -> "9205" 
+  "9212" -> "9222" 
+  "9264" -> "9272" 
+  "9268" -> "9278" 
+  "10286" -> "10301" 
+  "10330" -> "10344" 
+  "10338" -> "10346" 
+  "10345" -> "10352" 
+  "10483" -> "10485" 
+  "9193" -> "9191" 
+  "9213" -> "9212" 
+  "9220" -> "9231" 
+  "9220" -> "9235" 
+  "9238" -> "9245" 
+  "9238" -> "9264" 
+  "9270" -> "9268" 
+  "9274" -> "9283" 
+  "9274" -> "9289" 
+  "9285" -> "9294" 
+  "9285" -> "9300" 
+  "9296" -> "9306" 
+  "9296" -> "9322" 
+  "9318" -> "9330" 
+  "9318" -> "9400" 
+  "9396" -> "9408" 
+  "9396" -> "9484" 
+  "9480" -> "9490" 
+  "9480" -> "9506" 
+  "9502" -> "9512" 
+  "9502" -> "9525" 
+  "9521" -> "9531" 
+  "9521" -> "9544" 
+  "9540" -> "9550" 
+  "9540" -> "9563" 
+  "9559" -> "9569" 
+  "9559" -> "9588" 
+  "9584" -> "9594" 
+  "9584" -> "9608" 
+  "9604" -> "9614" 
+  "9604" -> "9627" 
+  "9623" -> "9633" 
+  "9623" -> "9649" 
+  "9645" -> "9655" 
+  "9645" -> "9668" 
+  "9664" -> "9674" 
+  "9664" -> "9689" 
+  "9683" -> "9698" 
+  "9683" -> "9711" 
+  "9707" -> "9720" 
+  "9707" -> "9785" 
+  "9781" -> "9791" 
+  "9781" -> "9852" 
+  "9848" -> "9858" 
+  "9848" -> "9873" 
+  "9869" -> "9878" 
+  "9869" -> "9884" 
+  "9880" -> "9889" 
+  "9880" -> "9898" 
+  "9894" -> "9904" 
+  "9894" -> "9917" 
+  "9913" -> "9923" 
+  "9913" -> "9936" 
+  "9932" -> "9942" 
+  "9932" -> "9955" 
+  "9951" -> "9961" 
+  "9951" -> "9974" 
+  "9970" -> "9980" 
+  "9970" -> "9993" 
+  "9989" -> "9999" 
+  "9989" -> "10012" 
+  "10008" -> "10018" 
+  "10008" -> "10031" 
+  "10027" -> "10037" 
+  "10027" -> "10050" 
+  "10046" -> "10056" 
+  "10046" -> "10069" 
+  "10065" -> "10075" 
+  "10065" -> "10088" 
   "10084" -> "10096" 
-  "10100" -> "10105" 
-  "10103" -> "10099" 
-  "10107" -> "10115" 
-  "10119" -> "10124" 
-  "10122" -> "10118" 
-  "10126" -> "10134" 
-  "10138" -> "10143" 
-  "10141" -> "10137" 
-  "10145" -> "10153" 
-  "10158" -> "10156" 
-  "10166" -> "10174" 
-  "10178" -> "10177" 
-  "10178" -> "10189" 
-  "10186" -> "10177" 
-  "10207" -> "10215" 
-  "10219" -> "10224" 
-  "10222" -> "10218" 
-  "10226" -> "10236" 
-  "10242" -> "10241" 
-  "10247" -> "10252" 
-  "10250" -> "10246" 
-  "10265" -> "10274" 
-  "10285" -> "10283" 
+  "10084" -> "10105" 
+  "10084" -> "10112" 
+  "10108" -> "10118" 
+  "10108" -> "10131" 
+  "10127" -> "10137" 
+  "10127" -> "10150" 
+  "10146" -> "10156" 
+  "10146" -> "10169" 
+  "10165" -> "10172" 
+  "10165" -> "10177" 
+  "10165" -> "10190" 
+  "10186" -> "10197" 
+  "10186" -> "10231" 
+  "10227" -> "10237" 
+  "10227" -> "10252" 
+  "10248" -> "10260" 
+  "10248" -> "10290" 
+  "10287" -> "10292" 
+  "10292" -> "10286" 
+  "10296" -> "10313" 
+  "10296" -> "10336" 
+  "10332" -> "10330" 
+  "10340" -> "10338" 
+  "10346" -> "10345" 
+  "10351" -> "10365" 
+  "10351" -> "10437" 
+  "10351" -> "10451" 
+  "10351" -> "10459" 
+  "10351" -> "10477" 
+  "10474" -> "10480" 
+  "10474" -> "10483" 
+  "9195" -> "9193" 
+  "9202" -> "9210" 
+  "9207" -> "9205" 
+  "9207" -> "9214" 
+  "9214" -> "9213" 
+  "9222" -> "9220" 
+  "9224" -> "9238" 
+  "9261" -> "10485" 
+  "9272" -> "9270" 
+  "9276" -> "9274" 
+  "9280" -> "9289" 
+  "9287" -> "9285" 
+  "9291" -> "9300" 
+  "9298" -> "9296" 
+  "9320" -> "9318" 
+  "9325" -> "9332" 
+  "9398" -> "9396" 
+  "9403" -> "9410" 
+  "9482" -> "9480" 
+  "9504" -> "9502" 
+  "9523" -> "9521" 
+  "9542" -> "9540" 
+  "9561" -> "9559" 
+  "9586" -> "9584" 
+  "9606" -> "9604" 
+  "9625" -> "9623" 
+  "9647" -> "9645" 
+  "9666" -> "9664" 
+  "9684" -> "9683" 
+  "9709" -> "9707" 
+  "9714" -> "9727" 
+  "9783" -> "9781" 
+  "9850" -> "9848" 
+  "9871" -> "9869" 
+  "9875" -> "9884" 
+  "9882" -> "9880" 
+  "9886" -> "9898" 
+  "9896" -> "9894" 
+  "9915" -> "9913" 
+  "9934" -> "9932" 
+  "9953" -> "9951" 
+  "9972" -> "9970" 
+  "9991" -> "9989" 
+  "10010" -> "10008" 
+  "10029" -> "10027" 
+  "10048" -> "10046" 
+  "10067" -> "10065" 
+  "10086" -> "10084" 
+  "10110" -> "10108" 
+  "10129" -> "10127" 
+  "10148" -> "10146" 
+  "10167" -> "10165" 
+  "10188" -> "10186" 
+  "10229" -> "10227" 
+  "10250" -> "10248" 
+  "10255" -> "10265" 
   "10288" -> "10287" 
-  "10297" -> "10295" 
-  "10302" -> "10305" 
-  "10302" -> "10320" 
+  "10297" -> "10296" 
+  "10297" -> "10307" 
+  "10302" -> "10296" 
+  "10334" -> "10332" 
   "10342" -> "10340" 
-  "10349" -> "10347" 
-  "10354" -> "10362" 
-  "10360" -> "10365" 
-  "10363" -> "10353" 
-  "10369" -> "10383" 
-  "10376" -> "10396" 
-  "10441" -> "10447" 
-  "10445" -> "10452" 
-  "10450" -> "10440" 
-  "10454" -> "10461" 
-  "9212" -> "9216" 
-  "9216" -> "9211" 
-  "9235" -> "9244" 
-  "9238" -> "9234" 
-  "9290" -> "9288" 
-  "9293" -> "9291" 
-  "9296" -> "9294" 
-  "9314" -> "9312" 
-  "9323" -> "9321" 
-  "9331" -> "9347" 
-  "9331" -> "9384" 
-  "9392" -> "9390" 
-  "9401" -> "9399" 
-  "9409" -> "9428" 
-  "9409" -> "9468" 
-  "9474" -> "9472" 
-  "9477" -> "9475" 
-  "9480" -> "9478" 
+  "10352" -> "10351" 
+  "10352" -> "10358" 
+  "10355" -> "10351" 
+  "10361" -> "10374" 
+  "10367" -> "10387" 
+  "10367" -> "10459" 
+  "10367" -> "10477" 
+  "10475" -> "10474" 
+  "10480" -> "10483" 
+  "9203" -> "9202" 
+  "9208" -> "9207" 
+  "9226" -> "9224" 
+  "9235" -> "9238" 
+  "9243" -> "9253" 
+  "9243" -> "9261" 
+  "9278" -> "9276" 
+  "9281" -> "9280" 
+  "9289" -> "9287" 
+  "9292" -> "9291" 
+  "9300" -> "9298" 
+  "9303" -> "9314" 
+  "9303" -> "9322" 
+  "9322" -> "9320" 
+  "9327" -> "9325" 
+  "9332" -> "9343" 
+  "9332" -> "9384" 
+  "9400" -> "9398" 
+  "9405" -> "9403" 
+  "9410" -> "9421" 
+  "9410" -> "9465" 
+  "9484" -> "9482" 
+  "9487" -> "9498" 
+  "9487" -> "9506" 
+  "9506" -> "9504" 
+  "9509" -> "9517" 
+  "9509" -> "9525" 
+  "9525" -> "9523" 
+  "9528" -> "9536" 
+  "9528" -> "9544" 
+  "9544" -> "9542" 
+  "9547" -> "9555" 
+  "9547" -> "9563" 
+  "9563" -> "9561" 
+  "9566" -> "9580" 
+  "9566" -> "9588" 
+  "9588" -> "9586" 
+  "9591" -> "9600" 
+  "9591" -> "9608" 
+  "9608" -> "9606" 
+  "9611" -> "9619" 
+  "9611" -> "9627" 
+  "9627" -> "9625" 
+  "9630" -> "9641" 
+  "9630" -> "9649" 
+  "9649" -> "9647" 
+  "9652" -> "9660" 
+  "9652" -> "9668" 
+  "9668" -> "9666" 
+  "9671" -> "9679" 
+  "9671" -> "9689" 
+  "9685" -> "9684" 
+  "9685" -> "9690" 
+  "9690" -> "9684" 
+  "9695" -> "9703" 
+  "9695" -> "9711" 
+  "9711" -> "9709" 
+  "9716" -> "9714" 
+  "9724" -> "9734" 
+  "9724" -> "9738" 
+  "9785" -> "9783" 
+  "9788" -> "9797" 
+  "9788" -> "9810" 
+  "9852" -> "9850" 
+  "9855" -> "9865" 
+  "9855" -> "9873" 
+  "9873" -> "9871" 
+  "9876" -> "9875" 
+  "9884" -> "9882" 
+  "9887" -> "9892" 
+  "9890" -> "9886" 
+  "9898" -> "9896" 
+  "9901" -> "9909" 
+  "9901" -> "9917" 
+  "9917" -> "9915" 
+  "9920" -> "9928" 
+  "9920" -> "9936" 
+  "9936" -> "9934" 
+  "9939" -> "9947" 
+  "9939" -> "9955" 
+  "9955" -> "9953" 
+  "9958" -> "9966" 
+  "9958" -> "9974" 
+  "9974" -> "9972" 
+  "9977" -> "9985" 
+  "9977" -> "9993" 
+  "9993" -> "9991" 
+  "9996" -> "10004" 
+  "9996" -> "10012" 
+  "10012" -> "10010" 
+  "10015" -> "10023" 
+  "10015" -> "10031" 
+  "10031" -> "10029" 
+  "10034" -> "10042" 
+  "10034" -> "10050" 
+  "10050" -> "10048" 
+  "10053" -> "10061" 
+  "10053" -> "10069" 
+  "10069" -> "10067" 
+  "10072" -> "10080" 
+  "10072" -> "10088" 
+  "10088" -> "10086" 
+  "10112" -> "10110" 
+  "10115" -> "10123" 
+  "10115" -> "10131" 
+  "10131" -> "10129" 
+  "10134" -> "10142" 
+  "10134" -> "10150" 
+  "10150" -> "10148" 
+  "10153" -> "10161" 
+  "10153" -> "10169" 
+  "10169" -> "10167" 
+  "10172" -> "10182" 
+  "10172" -> "10190" 
+  "10190" -> "10188" 
+  "10193" -> "10223" 
+  "10193" -> "10231" 
+  "10231" -> "10229" 
+  "10234" -> "10244" 
+  "10234" -> "10252" 
+  "10252" -> "10250" 
+  "10257" -> "10255" 
+  "10262" -> "10271" 
+  "10262" -> "10290" 
+  "10290" -> "10288" 
+  "10299" -> "10297" 
+  "10303" -> "10302" 
+  "10311" -> "10321" 
+  "10311" -> "10336" 
+  "10336" -> "10334" 
+  "10344" -> "10342" 
+  "10356" -> "10355" 
+  "10363" -> "10361" 
+  "10369" -> "10367" 
+  "10456" -> "10470" 
+  "10456" -> "10477" 
+  "10477" -> "10475" 
+  "9205" -> "9203" 
+  "9210" -> "9208" 
+  "9227" -> "9226" 
+  "9245" -> "9243" 
+  "9250" -> "9253" 
+  "9250" -> "9261" 
+  "9283" -> "9281" 
+  "9294" -> "9292" 
+  "9304" -> "9309" 
+  "9307" -> "9312" 
+  "9310" -> "9303" 
+  "9314" -> "9322" 
+  "9328" -> "9327" 
+  "9337" -> "9351" 
+  "9406" -> "9405" 
+  "9415" -> "9429" 
+  "9488" -> "9493" 
+  "9491" -> "9496" 
+  "9494" -> "9487" 
+  "9498" -> "9506" 
+  "9510" -> "9515" 
+  "9513" -> "9509" 
+  "9517" -> "9525" 
+  "9529" -> "9534" 
+  "9532" -> "9528" 
+  "9536" -> "9544" 
+  "9548" -> "9553" 
+  "9551" -> "9547" 
+  "9555" -> "9563" 
+  "9567" -> "9572" 
+  "9570" -> "9575" 
+  "9573" -> "9578" 
+  "9576" -> "9566" 
+  "9580" -> "9588" 
+  "9592" -> "9597" 
+  "9595" -> "9591" 
+  "9600" -> "9608" 
+  "9612" -> "9617" 
+  "9615" -> "9611" 
+  "9619" -> "9627" 
+  "9631" -> "9636" 
+  "9634" -> "9639" 
+  "9637" -> "9630" 
+  "9641" -> "9649" 
+  "9653" -> "9658" 
+  "9656" -> "9652" 
+  "9660" -> "9668" 
+  "9672" -> "9677" 
+  "9675" -> "9671" 
+  "9679" -> "9689" 
+  "9687" -> "9685" 
+  "9696" -> "9701" 
+  "9699" -> "9695" 
+  "9703" -> "9711" 
+  "9717" -> "9716" 
+  "9725" -> "9724" 
+  "9729" -> "9785" 
+  "9789" -> "9788" 
+  "9794" -> "9852" 
+  "9856" -> "9861" 
+  "9859" -> "9855" 
+  "9863" -> "9873" 
+  "9878" -> "9876" 
+  "9889" -> "9887" 
+  "9892" -> "9890" 
+  "9902" -> "9907" 
+  "9905" -> "9901" 
+  "9909" -> "9917" 
+  "9921" -> "9926" 
+  "9924" -> "9920" 
+  "9928" -> "9936" 
+  "9940" -> "9945" 
+  "9943" -> "9939" 
+  "9947" -> "9955" 
+  "9959" -> "9964" 
+  "9962" -> "9958" 
+  "9966" -> "9974" 
+  "9978" -> "9983" 
+  "9981" -> "9977" 
+  "9985" -> "9993" 
+  "9997" -> "10002" 
+  "10000" -> "9996" 
+  "10004" -> "10012" 
+  "10016" -> "10021" 
+  "10019" -> "10015" 
+  "10023" -> "10031" 
+  "10035" -> "10040" 
+  "10038" -> "10034" 
+  "10042" -> "10050" 
+  "10054" -> "10059" 
+  "10057" -> "10053" 
+  "10061" -> "10069" 
+  "10073" -> "10078" 
+  "10076" -> "10072" 
+  "10080" -> "10088" 
+  "10093" -> "10100" 
+  "10100" -> "10112" 
+  "10116" -> "10121" 
+  "10119" -> "10115" 
+  "10123" -> "10131" 
+  "10135" -> "10140" 
+  "10138" -> "10134" 
+  "10142" -> "10150" 
+  "10154" -> "10159" 
+  "10157" -> "10153" 
+  "10161" -> "10169" 
+  "10174" -> "10172" 
+  "10182" -> "10190" 
+  "10194" -> "10193" 
+  "10194" -> "10205" 
+  "10202" -> "10193" 
+  "10223" -> "10231" 
+  "10235" -> "10240" 
+  "10238" -> "10234" 
+  "10242" -> "10252" 
+  "10258" -> "10257" 
+  "10263" -> "10268" 
+  "10266" -> "10262" 
+  "10281" -> "10290" 
+  "10301" -> "10299" 
+  "10304" -> "10303" 
+  "10313" -> "10311" 
+  "10318" -> "10321" 
+  "10318" -> "10336" 
+  "10358" -> "10356" 
+  "10365" -> "10363" 
+  "10370" -> "10378" 
+  "10376" -> "10381" 
+  "10379" -> "10369" 
+  "10385" -> "10399" 
+  "10392" -> "10412" 
+  "10457" -> "10463" 
+  "10461" -> "10468" 
+  "10466" -> "10456" 
+  "10470" -> "10477" 
+  "9228" -> "9232" 
+  "9232" -> "9227" 
+  "9251" -> "9260" 
+  "9254" -> "9250" 
+  "9306" -> "9304" 
+  "9309" -> "9307" 
+  "9312" -> "9310" 
+  "9330" -> "9328" 
+  "9339" -> "9337" 
+  "9347" -> "9363" 
+  "9347" -> "9400" 
+  "9408" -> "9406" 
+  "9417" -> "9415" 
+  "9425" -> "9444" 
+  "9425" -> "9484" 
+  "9490" -> "9488" 
+  "9493" -> "9491" 
   "9496" -> "9494" 
-  "9499" -> "9497" 
+  "9512" -> "9510" 
   "9515" -> "9513" 
-  "9518" -> "9516" 
+  "9531" -> "9529" 
   "9534" -> "9532" 
-  "9537" -> "9535" 
+  "9550" -> "9548" 
   "9553" -> "9551" 
-  "9556" -> "9554" 
-  "9559" -> "9557" 
-  "9562" -> "9560" 
+  "9569" -> "9567" 
+  "9572" -> "9570" 
+  "9575" -> "9573" 
   "9578" -> "9576" 
-  "9581" -> "9579" 
-  "9598" -> "9596" 
-  "9601" -> "9599" 
+  "9594" -> "9592" 
+  "9597" -> "9595" 
+  "9614" -> "9612" 
   "9617" -> "9615" 
-  "9620" -> "9618" 
-  "9623" -> "9621" 
+  "9633" -> "9631" 
+  "9636" -> "9634" 
   "9639" -> "9637" 
-  "9642" -> "9640" 
+  "9655" -> "9653" 
   "9658" -> "9656" 
-  "9661" -> "9659" 
-  "9673" -> "9671" 
-  "9682" -> "9680" 
-  "9685" -> "9683" 
-  "9702" -> "9705" 
-  "9705" -> "9701" 
-  "9711" -> "9709" 
-  "9715" -> "9713" 
-  "9775" -> "9773" 
-  "9779" -> "9784" 
-  "9782" -> "9787" 
-  "9785" -> "9778" 
-  "9842" -> "9840" 
-  "9845" -> "9843" 
-  "9849" -> "9847" 
-  "9888" -> "9886" 
-  "9891" -> "9889" 
+  "9674" -> "9672" 
+  "9677" -> "9675" 
+  "9689" -> "9687" 
+  "9698" -> "9696" 
+  "9701" -> "9699" 
+  "9718" -> "9721" 
+  "9721" -> "9717" 
+  "9727" -> "9725" 
+  "9731" -> "9729" 
+  "9791" -> "9789" 
+  "9795" -> "9800" 
+  "9798" -> "9803" 
+  "9801" -> "9794" 
+  "9858" -> "9856" 
+  "9861" -> "9859" 
+  "9865" -> "9863" 
+  "9904" -> "9902" 
   "9907" -> "9905" 
-  "9910" -> "9908" 
+  "9923" -> "9921" 
   "9926" -> "9924" 
-  "9929" -> "9927" 
+  "9942" -> "9940" 
   "9945" -> "9943" 
-  "9948" -> "9946" 
+  "9961" -> "9959" 
   "9964" -> "9962" 
-  "9967" -> "9965" 
+  "9980" -> "9978" 
   "9983" -> "9981" 
-  "9986" -> "9984" 
+  "9999" -> "9997" 
   "10002" -> "10000" 
-  "10005" -> "10003" 
+  "10018" -> "10016" 
   "10021" -> "10019" 
-  "10024" -> "10022" 
+  "10037" -> "10035" 
   "10040" -> "10038" 
-  "10043" -> "10041" 
+  "10056" -> "10054" 
   "10059" -> "10057" 
-  "10062" -> "10060" 
-  "10078" -> "10083" 
-  "10081" -> "10077" 
-  "10089" -> "10096" 
-  "10102" -> "10100" 
-  "10105" -> "10103" 
+  "10075" -> "10073" 
+  "10078" -> "10076" 
+  "10094" -> "10099" 
+  "10097" -> "10093" 
+  "10105" -> "10112" 
+  "10118" -> "10116" 
   "10121" -> "10119" 
-  "10124" -> "10122" 
+  "10137" -> "10135" 
   "10140" -> "10138" 
-  "10143" -> "10141" 
-  "10159" -> "10164" 
-  "10162" -> "10158" 
-  "10179" -> "10184" 
-  "10182" -> "10178" 
-  "10187" -> "10193" 
-  "10190" -> "10186" 
-  "10221" -> "10219" 
-  "10224" -> "10222" 
-  "10228" -> "10226" 
+  "10156" -> "10154" 
+  "10159" -> "10157" 
+  "10175" -> "10180" 
+  "10178" -> "10174" 
+  "10195" -> "10200" 
+  "10198" -> "10194" 
+  "10203" -> "10209" 
+  "10206" -> "10202" 
+  "10237" -> "10235" 
+  "10240" -> "10238" 
   "10244" -> "10242" 
-  "10249" -> "10247" 
-  "10252" -> "10250" 
-  "10255" -> "10262" 
-  "10255" -> "10267" 
-  "10267" -> "10265" 
-  "10289" -> "10292" 
-  "10292" -> "10288" 
-  "10303" -> "10312" 
-  "10306" -> "10302" 
-  "10355" -> "10359" 
-  "10359" -> "10354" 
-  "10362" -> "10360" 
-  "10365" -> "10363" 
-  "10370" -> "10375" 
-  "10373" -> "10369" 
+  "10260" -> "10258" 
+  "10265" -> "10263" 
+  "10268" -> "10266" 
+  "10271" -> "10278" 
+  "10271" -> "10283" 
+  "10283" -> "10281" 
+  "10305" -> "10308" 
+  "10308" -> "10304" 
+  "10319" -> "10328" 
+  "10322" -> "10318" 
+  "10371" -> "10375" 
+  "10375" -> "10370" 
   "10378" -> "10376" 
-  "10396" -> "10401" 
-  "10396" -> "10443" 
-  "10396" -> "10461" 
-  "10414" -> "10443" 
-  "10414" -> "10461" 
-  "10443" -> "10441" 
-  "10447" -> "10445" 
-  "10452" -> "10450" 
-  "9213" -> "9212" 
-  "9237" -> "9235" 
-  "9242" -> "9238" 
-  "9324" -> "9323" 
-  "9332" -> "9331" 
-  "9332" -> "9339" 
-  "9339" -> "9331" 
-  "9343" -> "9354" 
-  "9350" -> "9359" 
-  "9357" -> "9384" 
-  "9365" -> "9376" 
-  "9365" -> "9384" 
-  "9402" -> "9401" 
-  "9410" -> "9409" 
-  "9410" -> "9420" 
-  "9420" -> "9409" 
-  "9424" -> "9435" 
-  "9431" -> "9440" 
-  "9438" -> "9468" 
-  "9446" -> "9460" 
-  "9446" -> "9468" 
-  "9704" -> "9702" 
-  "9716" -> "9715" 
-  "9722" -> "9731" 
-  "9722" -> "9738" 
-  "9781" -> "9779" 
-  "9784" -> "9782" 
-  "9787" -> "9785" 
-  "9791" -> "9802" 
-  "9791" -> "9836" 
-  "10080" -> "10078" 
-  "10083" -> "10081" 
-  "10161" -> "10159" 
-  "10164" -> "10162" 
-  "10181" -> "10179" 
-  "10184" -> "10182" 
-  "10189" -> "10187" 
-  "10191" -> "10196" 
-  "10194" -> "10199" 
-  "10197" -> "10190" 
-  "10258" -> "10267" 
-  "10291" -> "10289" 
-  "10305" -> "10303" 
-  "10310" -> "10306" 
-  "10356" -> "10355" 
-  "10371" -> "10372" 
-  "10372" -> "10370" 
-  "10375" -> "10373" 
-  "10379" -> "10387" 
-  "10385" -> "10393" 
-  "10388" -> "10378" 
-  "10399" -> "10443" 
-  "10399" -> "10461" 
-  "10416" -> "10414" 
-  "9215" -> "9213" 
-  "9244" -> "9242" 
-  "9325" -> "9328" 
-  "9328" -> "9324" 
-  "9333" -> "9338" 
-  "9336" -> "9332" 
-  "9344" -> "9343" 
-  "9351" -> "9350" 
-  "9359" -> "9357" 
-  "9366" -> "9372" 
-  "9370" -> "9365" 
-  "9374" -> "9384" 
-  "9403" -> "9406" 
-  "9406" -> "9402" 
-  "9411" -> "9416" 
-  "9414" -> "9419" 
-  "9417" -> "9410" 
-  "9425" -> "9424" 
-  "9432" -> "9431" 
-  "9440" -> "9438" 
-  "9447" -> "9453" 
-  "9451" -> "9456" 
-  "9454" -> "9446" 
-  "9458" -> "9468" 
-  "9718" -> "9716" 
-  "9726" -> "9769" 
-  "9792" -> "9791" 
-  "9798" -> "9804" 
-  "10193" -> "10191" 
-  "10196" -> "10194" 
-  "10198" -> "10205" 
-  "10203" -> "10197" 
-  "10259" -> "10258" 
-  "10312" -> "10310" 
-  "10358" -> "10356" 
-  "10380" -> "10384" 
-  "10384" -> "10379" 
-  "10387" -> "10385" 
-  "10389" -> "10388" 
-  "10400" -> "10407" 
-  "10403" -> "10399" 
-  "10417" -> "10425" 
-  "10423" -> "10416" 
-  "9327" -> "9325" 
-  "9335" -> "9333" 
-  "9338" -> "9336" 
-  "9345" -> "9348" 
-  "9348" -> "9344" 
-  "9352" -> "9355" 
-  "9355" -> "9351" 
-  "9368" -> "9366" 
-  "9372" -> "9370" 
-  "9376" -> "9374" 
-  "9405" -> "9403" 
-  "9413" -> "9411" 
-  "9416" -> "9414" 
-  "9419" -> "9417" 
-  "9426" -> "9429" 
-  "9429" -> "9425" 
-  "9433" -> "9436" 
-  "9436" -> "9432" 
-  "9449" -> "9447" 
-  "9453" -> "9451" 
-  "9456" -> "9454" 
-  "9460" -> "9458" 
-  "9728" -> "9726" 
-  "9794" -> "9792" 
+  "10381" -> "10379" 
+  "10386" -> "10391" 
+  "10389" -> "10385" 
+  "10394" -> "10392" 
+  "10412" -> "10417" 
+  "10412" -> "10459" 
+  "10412" -> "10477" 
+  "10430" -> "10459" 
+  "10430" -> "10477" 
+  "10459" -> "10457" 
+  "10463" -> "10461" 
+  "10468" -> "10466" 
+  "9229" -> "9228" 
+  "9253" -> "9251" 
+  "9258" -> "9254" 
+  "9340" -> "9339" 
+  "9348" -> "9347" 
+  "9348" -> "9355" 
+  "9355" -> "9347" 
+  "9359" -> "9370" 
+  "9366" -> "9375" 
+  "9373" -> "9400" 
+  "9381" -> "9392" 
+  "9381" -> "9400" 
+  "9418" -> "9417" 
+  "9426" -> "9425" 
+  "9426" -> "9436" 
+  "9436" -> "9425" 
+  "9440" -> "9451" 
+  "9447" -> "9456" 
+  "9454" -> "9484" 
+  "9462" -> "9476" 
+  "9462" -> "9484" 
+  "9720" -> "9718" 
+  "9732" -> "9731" 
+  "9738" -> "9747" 
+  "9738" -> "9754" 
+  "9797" -> "9795" 
   "9800" -> "9798" 
-  "9804" -> "9813" 
-  "9804" -> "9829" 
-  "10199" -> "10202" 
-  "10202" -> "10198" 
+  "9803" -> "9801" 
+  "9807" -> "9818" 
+  "9807" -> "9852" 
+  "10096" -> "10094" 
+  "10099" -> "10097" 
+  "10177" -> "10175" 
+  "10180" -> "10178" 
+  "10197" -> "10195" 
+  "10200" -> "10198" 
   "10205" -> "10203" 
-  "10260" -> "10263" 
-  "10263" -> "10259" 
-  "10381" -> "10380" 
+  "10207" -> "10212" 
+  "10210" -> "10215" 
+  "10213" -> "10206" 
+  "10274" -> "10283" 
+  "10307" -> "10305" 
+  "10321" -> "10319" 
+  "10326" -> "10322" 
+  "10372" -> "10371" 
+  "10387" -> "10388" 
+  "10388" -> "10386" 
   "10391" -> "10389" 
-  "10401" -> "10402" 
-  "10402" -> "10400" 
-  "10404" -> "10403" 
-  "10418" -> "10422" 
-  "10422" -> "10417" 
-  "10425" -> "10423" 
-  "10431" -> "10443" 
-  "10431" -> "10461" 
-  "9347" -> "9345" 
+  "10395" -> "10403" 
+  "10401" -> "10409" 
+  "10404" -> "10394" 
+  "10415" -> "10459" 
+  "10415" -> "10477" 
+  "10432" -> "10430" 
+  "9231" -> "9229" 
+  "9260" -> "9258" 
+  "9341" -> "9344" 
+  "9344" -> "9340" 
+  "9349" -> "9354" 
+  "9352" -> "9348" 
+  "9360" -> "9359" 
+  "9367" -> "9366" 
+  "9375" -> "9373" 
+  "9382" -> "9388" 
+  "9386" -> "9381" 
+  "9390" -> "9400" 
+  "9419" -> "9422" 
+  "9422" -> "9418" 
+  "9427" -> "9432" 
+  "9430" -> "9435" 
+  "9433" -> "9426" 
+  "9441" -> "9440" 
+  "9448" -> "9447" 
+  "9456" -> "9454" 
+  "9463" -> "9469" 
+  "9467" -> "9472" 
+  "9470" -> "9462" 
+  "9474" -> "9484" 
+  "9734" -> "9732" 
+  "9742" -> "9785" 
+  "9808" -> "9807" 
+  "9814" -> "9820" 
+  "10209" -> "10207" 
+  "10212" -> "10210" 
+  "10214" -> "10221" 
+  "10219" -> "10213" 
+  "10275" -> "10274" 
+  "10328" -> "10326" 
+  "10374" -> "10372" 
+  "10396" -> "10400" 
+  "10400" -> "10395" 
+  "10403" -> "10401" 
+  "10405" -> "10404" 
+  "10416" -> "10423" 
+  "10419" -> "10415" 
+  "10433" -> "10441" 
+  "10439" -> "10432" 
+  "9343" -> "9341" 
+  "9351" -> "9349" 
   "9354" -> "9352" 
-  "9428" -> "9426" 
+  "9361" -> "9364" 
+  "9364" -> "9360" 
+  "9368" -> "9371" 
+  "9371" -> "9367" 
+  "9384" -> "9382" 
+  "9388" -> "9386" 
+  "9392" -> "9390" 
+  "9421" -> "9419" 
+  "9429" -> "9427" 
+  "9432" -> "9430" 
   "9435" -> "9433" 
-  "9729" -> "9728" 
-  "9735" -> "9747" 
-  "9735" -> "9769" 
-  "9802" -> "9800" 
-  "9808" -> "9822" 
-  "9819" -> "9836" 
-  "10262" -> "10260" 
-  "10383" -> "10381" 
-  "10393" -> "10391" 
-  "10405" -> "10408" 
-  "10408" -> "10404" 
-  "10419" -> "10418" 
-  "10433" -> "10431" 
-  "9731" -> "9729" 
-  "9736" -> "9741" 
-  "9739" -> "9735" 
-  "9743" -> "9754" 
-  "9750" -> "9760" 
-  "9757" -> "9769" 
+  "9442" -> "9445" 
+  "9445" -> "9441" 
+  "9449" -> "9452" 
+  "9452" -> "9448" 
+  "9465" -> "9463" 
+  "9469" -> "9467" 
+  "9472" -> "9470" 
+  "9476" -> "9474" 
+  "9744" -> "9742" 
   "9810" -> "9808" 
-  "9820" -> "9826" 
-  "9824" -> "9819" 
-  "9829" -> "9836" 
+  "9816" -> "9814" 
+  "9820" -> "9829" 
+  "9820" -> "9845" 
+  "10215" -> "10218" 
+  "10218" -> "10214" 
+  "10221" -> "10219" 
+  "10276" -> "10279" 
+  "10279" -> "10275" 
+  "10397" -> "10396" 
   "10407" -> "10405" 
-  "10421" -> "10419" 
-  "10435" -> "10433" 
-  "9738" -> "9736" 
-  "9741" -> "9739" 
-  "9744" -> "9743" 
-  "9751" -> "9750" 
-  "9759" -> "9757" 
-  "9811" -> "9810" 
-  "9822" -> "9820" 
-  "9826" -> "9824" 
-  "9745" -> "9748" 
-  "9748" -> "9744" 
-  "9752" -> "9755" 
-  "9755" -> "9751" 
-  "9760" -> "9759" 
-  "9812" -> "9818" 
-  "9818" -> "9811" 
+  "10417" -> "10418" 
+  "10418" -> "10416" 
+  "10420" -> "10419" 
+  "10434" -> "10438" 
+  "10438" -> "10433" 
+  "10441" -> "10439" 
+  "10447" -> "10459" 
+  "10447" -> "10477" 
+  "9363" -> "9361" 
+  "9370" -> "9368" 
+  "9444" -> "9442" 
+  "9451" -> "9449" 
+  "9745" -> "9744" 
+  "9751" -> "9763" 
+  "9751" -> "9785" 
+  "9818" -> "9816" 
+  "9824" -> "9838" 
+  "9835" -> "9852" 
+  "10278" -> "10276" 
+  "10399" -> "10397" 
+  "10409" -> "10407" 
+  "10421" -> "10424" 
+  "10424" -> "10420" 
+  "10435" -> "10434" 
+  "10449" -> "10447" 
   "9747" -> "9745" 
+  "9752" -> "9757" 
+  "9755" -> "9751" 
+  "9759" -> "9770" 
+  "9766" -> "9776" 
+  "9773" -> "9785" 
+  "9826" -> "9824" 
+  "9836" -> "9842" 
+  "9840" -> "9835" 
+  "9845" -> "9852" 
+  "10423" -> "10421" 
+  "10437" -> "10435" 
+  "10451" -> "10449" 
   "9754" -> "9752" 
-  "9813" -> "9817" 
-  "9814" -> "9812" 
-  "9815" -> "9814" 
-  "9817" -> "9815" 
-  "9167" -> "9179" 
+  "9757" -> "9755" 
+  "9760" -> "9759" 
+  "9767" -> "9766" 
+  "9775" -> "9773" 
+  "9827" -> "9826" 
+  "9838" -> "9836" 
+  "9842" -> "9840" 
+  "9761" -> "9764" 
+  "9764" -> "9760" 
+  "9768" -> "9771" 
+  "9771" -> "9767" 
+  "9776" -> "9775" 
+  "9828" -> "9834" 
+  "9834" -> "9827" 
+  "9763" -> "9761" 
+  "9770" -> "9768" 
+  "9829" -> "9833" 
+  "9830" -> "9828" 
+  "9831" -> "9830" 
+  "9833" -> "9831" 
+  "9183" -> "9195" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/198-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/198-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/198-cfg.dot	2023-06-07 19:33:00.427398980 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/198-cfg.dot	2023-06-07 19:33:06.667398405 +0330
@@ -1,22 +1,22 @@
 digraph "addInputWindowCommands" {  
-"10475" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3914</SUB>> ]
-"10486" [label = <(merge,mPendingInputWindowCommands.merge(inputWindowCommands))<SUB>3919</SUB>> ]
-"10491" [label = <(RETURN,return flags;,return flags;)<SUB>3920</SUB>> ]
-"10479" [label = <(&lt;operator&gt;.fieldAccess,inputWindowCommands.syncInputWindows)<SUB>3915</SUB>> ]
-"10487" [label = <(&lt;operator&gt;.fieldAccess,mPendingInputWindowCommands.merge)<SUB>3919</SUB>> ]
-"10481" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>3915</SUB>> ]
-"10483" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3916</SUB>> ]
-"10489" [label = <(FIELD_IDENTIFIER,merge,merge)<SUB>3919</SUB>> ]
-"10471" [label = <(METHOD,addInputWindowCommands)<SUB>3913</SUB>> ]
-"10493" [label = <(METHOD_RETURN,uint32_t)<SUB>3913</SUB>> ]
-  "10475" -> "10481" 
-  "10486" -> "10491" 
-  "10491" -> "10493" 
-  "10479" -> "10483" 
-  "10479" -> "10489" 
-  "10487" -> "10486" 
-  "10481" -> "10479" 
-  "10483" -> "10489" 
-  "10489" -> "10487" 
-  "10471" -> "10475" 
+"10491" [label = <(&lt;operator&gt;.assignment,flags = 0)<SUB>3913</SUB>> ]
+"10502" [label = <(merge,mPendingInputWindowCommands.merge(inputWindowCommands))<SUB>3918</SUB>> ]
+"10507" [label = <(RETURN,return flags;,return flags;)<SUB>3919</SUB>> ]
+"10495" [label = <(&lt;operator&gt;.fieldAccess,inputWindowCommands.syncInputWindows)<SUB>3914</SUB>> ]
+"10503" [label = <(&lt;operator&gt;.fieldAccess,mPendingInputWindowCommands.merge)<SUB>3918</SUB>> ]
+"10497" [label = <(FIELD_IDENTIFIER,syncInputWindows,syncInputWindows)<SUB>3914</SUB>> ]
+"10499" [label = <(&lt;operators&gt;.assignmentOr,flags |= eTraversalNeeded)<SUB>3915</SUB>> ]
+"10505" [label = <(FIELD_IDENTIFIER,merge,merge)<SUB>3918</SUB>> ]
+"10487" [label = <(METHOD,addInputWindowCommands)<SUB>3912</SUB>> ]
+"10509" [label = <(METHOD_RETURN,uint32_t)<SUB>3912</SUB>> ]
+  "10491" -> "10497" 
+  "10502" -> "10507" 
+  "10507" -> "10509" 
+  "10495" -> "10499" 
+  "10495" -> "10505" 
+  "10503" -> "10502" 
+  "10497" -> "10495" 
+  "10499" -> "10505" 
+  "10505" -> "10503" 
+  "10487" -> "10491" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/199-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/199-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/199-cfg.dot	2023-06-07 19:33:00.427398980 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/199-cfg.dot	2023-06-07 19:33:06.667398405 +0330
@@ -1,80 +1,80 @@
 digraph "mirrorLayer" {  
-"10506" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; mirrorLayer)<SUB>3929</SUB>> ]
-"10511" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; mirrorFrom)<SUB>3930</SUB>> ]
-"10517" [label = <(&lt;operator&gt;.assignment,uniqueName = getUniqueLayerName(&quot;MirrorRoot&quot;))<SUB>3931</SUB>> ]
-"10572" [label = <(RETURN,return addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */);,return addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */);)<SUB>3949</SUB>> ]
-"10501" [label = <(&lt;operator&gt;.logicalNot,!mirrorFromHandle)<SUB>3925</SUB>> ]
-"10507" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3929</SUB>> ]
-"10512" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3930</SUB>> ]
-"10519" [label = <(getUniqueLayerName,getUniqueLayerName(&quot;MirrorRoot&quot;))<SUB>3931</SUB>> ]
-"10523" [label = <(_l,_l(mStateLock))<SUB>3934</SUB>> ]
-"10525" [label = <(&lt;operator&gt;.assignment,mirrorFrom = fromHandleLocked(mirrorFromHandle).promote())<SUB>3935</SUB>> ]
-"10539" [label = <(&lt;operator&gt;.assignment,result = createContainerLayer(client, std::move(uniqueName), -1, -1, 0,\012 LayerMetadata(), outHandle, &amp;mirrorLayer))<SUB>3940</SUB>> ]
-"10564" [label = <(&lt;operator&gt;.assignment,mirrorLayer-&gt;mClonedChild = mirrorFrom-&gt;createClone())<SUB>3946</SUB>> ]
-"10573" [label = <(addClientLayer,addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */))<SUB>3949</SUB>> ]
-"10504" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3926</SUB>> ]
-"10527" [label = <(promote,fromHandleLocked(mirrorFromHandle).promote())<SUB>3935</SUB>> ]
-"10533" [label = <(&lt;operator&gt;.logicalNot,!mirrorFrom)<SUB>3936</SUB>> ]
-"10541" [label = <(createContainerLayer,createContainerLayer(client, std::move(uniqueName), -1, -1, 0,\012 LayerMetadata(), outHandle, &amp;mirrorLayer))<SUB>3940</SUB>> ]
-"10558" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>3942</SUB>> ]
-"10565" [label = <(&lt;operator&gt;.indirectFieldAccess,mirrorLayer-&gt;mClonedChild)<SUB>3946</SUB>> ]
-"10568" [label = <(createClone,mirrorFrom-&gt;createClone())<SUB>3946</SUB>> ]
-"10575" [label = <(&lt;operator&gt;.indirection,*outHandle)<SUB>3949</SUB>> ]
-"10528" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(mirrorFromHandle).promote)<SUB>3935</SUB>> ]
-"10536" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3937</SUB>> ]
-"10543" [label = <(std::move,std::move(uniqueName))<SUB>3940</SUB>> ]
-"10548" [label = <(&lt;operator&gt;.minus,-1)<SUB>3940</SUB>> ]
-"10550" [label = <(&lt;operator&gt;.minus,-1)<SUB>3940</SUB>> ]
-"10553" [label = <(LayerMetadata,LayerMetadata())<SUB>3941</SUB>> ]
-"10555" [label = <(&lt;operator&gt;.addressOf,&amp;mirrorLayer)<SUB>3941</SUB>> ]
-"10562" [label = <(RETURN,return result;,return result;)<SUB>3943</SUB>> ]
-"10567" [label = <(FIELD_IDENTIFIER,mClonedChild,mClonedChild)<SUB>3946</SUB>> ]
-"10569" [label = <(&lt;operator&gt;.indirectFieldAccess,mirrorFrom-&gt;createClone)<SUB>3946</SUB>> ]
-"10529" [label = <(fromHandleLocked,fromHandleLocked(mirrorFromHandle))<SUB>3935</SUB>> ]
-"10531" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3935</SUB>> ]
-"10544" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3940</SUB>> ]
-"10571" [label = <(FIELD_IDENTIFIER,createClone,createClone)<SUB>3946</SUB>> ]
-"10546" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3940</SUB>> ]
-"10495" [label = <(METHOD,mirrorLayer)<SUB>3923</SUB>> ]
-"10583" [label = <(METHOD_RETURN,status_t)<SUB>3923</SUB>> ]
-  "10506" -> "10512" 
-  "10511" -> "10519" 
+"10522" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; mirrorLayer)<SUB>3928</SUB>> ]
+"10527" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; mirrorFrom)<SUB>3929</SUB>> ]
+"10533" [label = <(&lt;operator&gt;.assignment,uniqueName = getUniqueLayerName(&quot;MirrorRoot&quot;))<SUB>3930</SUB>> ]
+"10588" [label = <(RETURN,return addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */);,return addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */);)<SUB>3948</SUB>> ]
+"10517" [label = <(&lt;operator&gt;.logicalNot,!mirrorFromHandle)<SUB>3924</SUB>> ]
+"10523" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3928</SUB>> ]
+"10528" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3929</SUB>> ]
+"10535" [label = <(getUniqueLayerName,getUniqueLayerName(&quot;MirrorRoot&quot;))<SUB>3930</SUB>> ]
+"10539" [label = <(_l,_l(mStateLock))<SUB>3933</SUB>> ]
+"10541" [label = <(&lt;operator&gt;.assignment,mirrorFrom = fromHandleLocked(mirrorFromHandle).promote())<SUB>3934</SUB>> ]
+"10555" [label = <(&lt;operator&gt;.assignment,result = createContainerLayer(client, std::move(uniqueName), -1, -1, 0,\012 LayerMetadata(), outHandle, &amp;mirrorLayer))<SUB>3939</SUB>> ]
+"10580" [label = <(&lt;operator&gt;.assignment,mirrorLayer-&gt;mClonedChild = mirrorFrom-&gt;createClone())<SUB>3945</SUB>> ]
+"10589" [label = <(addClientLayer,addClientLayer(client, *outHandle, nullptr, mirrorLayer, nullptr, nullptr, false,\012 nullptr /* outTransformHint */))<SUB>3948</SUB>> ]
+"10520" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3925</SUB>> ]
+"10543" [label = <(promote,fromHandleLocked(mirrorFromHandle).promote())<SUB>3934</SUB>> ]
+"10549" [label = <(&lt;operator&gt;.logicalNot,!mirrorFrom)<SUB>3935</SUB>> ]
+"10557" [label = <(createContainerLayer,createContainerLayer(client, std::move(uniqueName), -1, -1, 0,\012 LayerMetadata(), outHandle, &amp;mirrorLayer))<SUB>3939</SUB>> ]
+"10574" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>3941</SUB>> ]
+"10581" [label = <(&lt;operator&gt;.indirectFieldAccess,mirrorLayer-&gt;mClonedChild)<SUB>3945</SUB>> ]
+"10584" [label = <(createClone,mirrorFrom-&gt;createClone())<SUB>3945</SUB>> ]
+"10591" [label = <(&lt;operator&gt;.indirection,*outHandle)<SUB>3948</SUB>> ]
+"10544" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(mirrorFromHandle).promote)<SUB>3934</SUB>> ]
+"10552" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>3936</SUB>> ]
+"10559" [label = <(std::move,std::move(uniqueName))<SUB>3939</SUB>> ]
+"10564" [label = <(&lt;operator&gt;.minus,-1)<SUB>3939</SUB>> ]
+"10566" [label = <(&lt;operator&gt;.minus,-1)<SUB>3939</SUB>> ]
+"10569" [label = <(LayerMetadata,LayerMetadata())<SUB>3940</SUB>> ]
+"10571" [label = <(&lt;operator&gt;.addressOf,&amp;mirrorLayer)<SUB>3940</SUB>> ]
+"10578" [label = <(RETURN,return result;,return result;)<SUB>3942</SUB>> ]
+"10583" [label = <(FIELD_IDENTIFIER,mClonedChild,mClonedChild)<SUB>3945</SUB>> ]
+"10585" [label = <(&lt;operator&gt;.indirectFieldAccess,mirrorFrom-&gt;createClone)<SUB>3945</SUB>> ]
+"10545" [label = <(fromHandleLocked,fromHandleLocked(mirrorFromHandle))<SUB>3934</SUB>> ]
+"10547" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>3934</SUB>> ]
+"10560" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3939</SUB>> ]
+"10587" [label = <(FIELD_IDENTIFIER,createClone,createClone)<SUB>3945</SUB>> ]
+"10562" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3939</SUB>> ]
+"10511" [label = <(METHOD,mirrorLayer)<SUB>3922</SUB>> ]
+"10599" [label = <(METHOD_RETURN,status_t)<SUB>3922</SUB>> ]
+  "10522" -> "10528" 
+  "10527" -> "10535" 
+  "10533" -> "10539" 
+  "10588" -> "10599" 
+  "10517" -> "10520" 
   "10517" -> "10523" 
-  "10572" -> "10583" 
-  "10501" -> "10504" 
-  "10501" -> "10507" 
-  "10507" -> "10506" 
-  "10512" -> "10511" 
-  "10519" -> "10517" 
-  "10523" -> "10529" 
-  "10525" -> "10533" 
-  "10539" -> "10558" 
-  "10564" -> "10575" 
-  "10573" -> "10572" 
-  "10504" -> "10583" 
-  "10527" -> "10525" 
-  "10533" -> "10536" 
-  "10533" -> "10546" 
-  "10541" -> "10539" 
-  "10558" -> "10562" 
-  "10558" -> "10567" 
-  "10565" -> "10571" 
-  "10568" -> "10564" 
-  "10575" -> "10573" 
+  "10523" -> "10522" 
   "10528" -> "10527" 
-  "10536" -> "10583" 
-  "10543" -> "10548" 
-  "10548" -> "10550" 
-  "10550" -> "10553" 
-  "10553" -> "10555" 
-  "10555" -> "10541" 
-  "10562" -> "10583" 
-  "10567" -> "10565" 
-  "10569" -> "10568" 
-  "10529" -> "10531" 
-  "10531" -> "10528" 
+  "10535" -> "10533" 
+  "10539" -> "10545" 
+  "10541" -> "10549" 
+  "10555" -> "10574" 
+  "10580" -> "10591" 
+  "10589" -> "10588" 
+  "10520" -> "10599" 
+  "10543" -> "10541" 
+  "10549" -> "10552" 
+  "10549" -> "10562" 
+  "10557" -> "10555" 
+  "10574" -> "10578" 
+  "10574" -> "10583" 
+  "10581" -> "10587" 
+  "10584" -> "10580" 
+  "10591" -> "10589" 
   "10544" -> "10543" 
-  "10571" -> "10569" 
-  "10546" -> "10544" 
-  "10495" -> "10501" 
+  "10552" -> "10599" 
+  "10559" -> "10564" 
+  "10564" -> "10566" 
+  "10566" -> "10569" 
+  "10569" -> "10571" 
+  "10571" -> "10557" 
+  "10578" -> "10599" 
+  "10583" -> "10581" 
+  "10585" -> "10584" 
+  "10545" -> "10547" 
+  "10547" -> "10544" 
+  "10560" -> "10559" 
+  "10587" -> "10585" 
+  "10562" -> "10560" 
+  "10511" -> "10517" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/2-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/2-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/2-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/2-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_9" {  
-"12" [label = <(METHOD,anonymous_lambda_9)<SUB>704</SUB>> ]
-"15" [label = <(METHOD_RETURN,ANY)<SUB>704</SUB>> ]
+"12" [label = <(METHOD,anonymous_lambda_9)<SUB>703</SUB>> ]
+"15" [label = <(METHOD_RETURN,ANY)<SUB>703</SUB>> ]
   "12" -> "15" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/20-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/20-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/20-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/20-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_27" {  
-"92" [label = <(METHOD,anonymous_lambda_27)<SUB>2777</SUB>> ]
-"95" [label = <(METHOD_RETURN,ANY)<SUB>2777</SUB>> ]
+"92" [label = <(METHOD,anonymous_lambda_27)<SUB>2776</SUB>> ]
+"95" [label = <(METHOD_RETURN,ANY)<SUB>2776</SUB>> ]
   "92" -> "95" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/200-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/200-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/200-cfg.dot	2023-06-07 19:33:00.427398980 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/200-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,258 +1,258 @@
 digraph "createLayer" {  
-"10617" [label = <(ALOG_ASSERT,ALOG_ASSERT(parentLayer == nullptr || parentHandle == nullptr,\012 &quot;Expected only one of parentLayer or parentHandle to be non-null. &quot;\012 &quot;Programmer error?&quot;))<SUB>3965</SUB>> ]
-"10627" [label = <(&lt;operator&gt;.assignment,result = NO_ERROR)<SUB>3969</SUB>> ]
-"10630" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; layer)<SUB>3971</SUB>> ]
-"10636" [label = <(&lt;operator&gt;.assignment,uniqueName = getUniqueLayerName(name.string()))<SUB>3973</SUB>> ]
-"10644" [label = <(&lt;operator&gt;.assignment,primaryDisplayOnly = false)<SUB>3975</SUB>> ]
-"10846" [label = <(&lt;operator&gt;.assignment,addToCurrentState = callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>4031</SUB>> ]
-"10849" [label = <(&lt;operator&gt;.assignment,result = addClientLayer(client, *handle, *gbp, layer, parentHandle, parentLayer,\012                            addToCurrentState, outTransformHint))<SUB>4032</SUB>> ]
-"10869" [label = <(saveSurfaceCreation,mInterceptor-&gt;saveSurfaceCreation(layer))<SUB>4037</SUB>> ]
-"10875" [label = <(RETURN,return result;,return result;)<SUB>4040</SUB>> ]
-"10600" [label = <(&lt;operator&gt;.lessThan,int32_t(w|h) &lt; 0)<SUB>3959</SUB>> ]
-"10618" [label = <(&lt;operator&gt;.logicalOr,parentLayer == nullptr || parentHandle == nullptr)<SUB>3965</SUB>> ]
-"10631" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3971</SUB>> ]
-"10638" [label = <(getUniqueLayerName,getUniqueLayerName(name.string()))<SUB>3973</SUB>> ]
-"10648" [label = <(has,metadata.has(METADATA_WINDOW_TYPE))<SUB>3979</SUB>> ]
-"10680" [label = <(&lt;operator&gt;.and,flags &amp; ISurfaceComposerClient::eFXSurfaceMask)<SUB>3987</SUB>> ]
-"10832" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>4023</SUB>> ]
-"10848" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>4031</SUB>> ]
-"10851" [label = <(addClientLayer,addClientLayer(client, *handle, *gbp, layer, parentHandle, parentLayer,\012                            addToCurrentState, outTransformHint))<SUB>4032</SUB>> ]
-"10863" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>4034</SUB>> ]
-"10870" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveSurfaceCreation)<SUB>4037</SUB>> ]
-"10601" [label = <(int32_t,int32_t(w|h))<SUB>3959</SUB>> ]
-"10607" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h is negative (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>3960</SUB>> ]
-"10615" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>3962</SUB>> ]
-"10619" [label = <(&lt;operator&gt;.equals,parentLayer == nullptr)<SUB>3965</SUB>> ]
-"10622" [label = <(&lt;operator&gt;.equals,parentHandle == nullptr)<SUB>3965</SUB>> ]
-"10639" [label = <(string,name.string())<SUB>3973</SUB>> ]
-"10649" [label = <(&lt;operator&gt;.fieldAccess,metadata.has)<SUB>3979</SUB>> ]
-"10655" [label = <(&lt;operator&gt;.assignment,windowType = metadata.getInt32(METADATA_WINDOW_TYPE, 0))<SUB>3980</SUB>> ]
-"10682" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceMask)<SUB>3987</SUB>> ]
-"10687" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceBufferQueue)<SUB>3988</SUB>> ]
-"10690" [label = <(&lt;operator&gt;.assignment,result = createBufferQueueLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), format, handle, gbp, &amp;layer))<SUB>3989</SUB>> ]
-"10714" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceBufferState)<SUB>3993</SUB>> ]
-"10717" [label = <(&lt;operator&gt;.assignment,result = createBufferStateLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), handle, &amp;layer))<SUB>3994</SUB>> ]
-"10739" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceEffect)<SUB>3997</SUB>> ]
-"10761" [label = <(&lt;operator&gt;.assignment,result = createEffectLayer(client, std::move(uniqueName), w, h, flags,\012                                       std::move(metadata), handle, &amp;layer))<SUB>4005</SUB>> ]
-"10783" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceContainer)<SUB>4008</SUB>> ]
-"10805" [label = <(&lt;operator&gt;.assignment,result = createContainerLayer(client, std::move(uniqueName), w, h, flags,\012                                          std::move(metadata), handle, &amp;layer))<SUB>4015</SUB>> ]
-"10827" [label = <(&lt;operator&gt;.assignment,result = BAD_VALUE)<SUB>4019</SUB>> ]
-"10836" [label = <(RETURN,return result;,return result;)<SUB>4024</SUB>> ]
-"10841" [label = <(setPrimaryDisplayOnly,layer-&gt;setPrimaryDisplayOnly())<SUB>4028</SUB>> ]
-"10853" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4032</SUB>> ]
-"10855" [label = <(&lt;operator&gt;.indirection,*gbp)<SUB>4032</SUB>> ]
-"10867" [label = <(RETURN,return result;,return result;)<SUB>4035</SUB>> ]
-"10872" [label = <(FIELD_IDENTIFIER,saveSurfaceCreation,saveSurfaceCreation)<SUB>4037</SUB>> ]
-"10602" [label = <(&lt;operator&gt;.or,w|h)<SUB>3959</SUB>> ]
-"10609" [label = <(int,int(w))<SUB>3961</SUB>> ]
-"10612" [label = <(int,int(h))<SUB>3961</SUB>> ]
-"10640" [label = <(&lt;operator&gt;.fieldAccess,name.string)<SUB>3973</SUB>> ]
-"10651" [label = <(FIELD_IDENTIFIER,has,has)<SUB>3979</SUB>> ]
-"10657" [label = <(getInt32,metadata.getInt32(METADATA_WINDOW_TYPE, 0))<SUB>3980</SUB>> ]
-"10664" [label = <(&lt;operator&gt;.equals,windowType == 441731)<SUB>3981</SUB>> ]
-"10684" [label = <(FIELD_IDENTIFIER,eFXSurfaceMask,eFXSurfaceMask)<SUB>3987</SUB>> ]
-"10689" [label = <(FIELD_IDENTIFIER,eFXSurfaceBufferQueue,eFXSurfaceBufferQueue)<SUB>3988</SUB>> ]
-"10692" [label = <(createBufferQueueLayer,createBufferQueueLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), format, handle, gbp, &amp;layer))<SUB>3989</SUB>> ]
-"10716" [label = <(FIELD_IDENTIFIER,eFXSurfaceBufferState,eFXSurfaceBufferState)<SUB>3993</SUB>> ]
-"10719" [label = <(createBufferStateLayer,createBufferStateLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), handle, &amp;layer))<SUB>3994</SUB>> ]
-"10741" [label = <(FIELD_IDENTIFIER,eFXSurfaceEffect,eFXSurfaceEffect)<SUB>3997</SUB>> ]
-"10743" [label = <(&lt;operator&gt;.logicalOr,w &gt; 0 || h &gt; 0)<SUB>3999</SUB>> ]
-"10763" [label = <(createEffectLayer,createEffectLayer(client, std::move(uniqueName), w, h, flags,\012                                       std::move(metadata), handle, &amp;layer))<SUB>4005</SUB>> ]
-"10785" [label = <(FIELD_IDENTIFIER,eFXSurfaceContainer,eFXSurfaceContainer)<SUB>4008</SUB>> ]
-"10787" [label = <(&lt;operator&gt;.logicalOr,w &gt; 0 || h &gt; 0)<SUB>4010</SUB>> ]
-"10807" [label = <(createContainerLayer,createContainerLayer(client, std::move(uniqueName), w, h, flags,\012                                          std::move(metadata), handle, &amp;layer))<SUB>4015</SUB>> ]
-"10842" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setPrimaryDisplayOnly)<SUB>4028</SUB>> ]
-"10610" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>3961</SUB>> ]
-"10613" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>3961</SUB>> ]
-"10642" [label = <(FIELD_IDENTIFIER,string,string)<SUB>3973</SUB>> ]
-"10658" [label = <(&lt;operator&gt;.fieldAccess,metadata.getInt32)<SUB>3980</SUB>> ]
-"10668" [label = <(setInt32,metadata.setInt32(METADATA_WINDOW_TYPE, InputWindowInfo::TYPE_NAVIGATION_BAR_PANEL))<SUB>3982</SUB>> ]
-"10676" [label = <(&lt;operator&gt;.assignment,primaryDisplayOnly = true)<SUB>3983</SUB>> ]
-"10694" [label = <(std::move,std::move(uniqueName))<SUB>3989</SUB>> ]
-"10702" [label = <(std::move,std::move(metadata))<SUB>3990</SUB>> ]
-"10710" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>3990</SUB>> ]
-"10721" [label = <(std::move,std::move(uniqueName))<SUB>3994</SUB>> ]
-"10729" [label = <(std::move,std::move(metadata))<SUB>3995</SUB>> ]
-"10735" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>3995</SUB>> ]
-"10744" [label = <(&lt;operator&gt;.greaterThan,w &gt; 0)<SUB>3999</SUB>> ]
-"10747" [label = <(&lt;operator&gt;.greaterThan,h &gt; 0)<SUB>3999</SUB>> ]
-"10751" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h cannot be set for color layer (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>4000</SUB>> ]
-"10759" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>4002</SUB>> ]
-"10765" [label = <(std::move,std::move(uniqueName))<SUB>4005</SUB>> ]
-"10773" [label = <(std::move,std::move(metadata))<SUB>4006</SUB>> ]
-"10779" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>4006</SUB>> ]
-"10788" [label = <(&lt;operator&gt;.greaterThan,w &gt; 0)<SUB>4010</SUB>> ]
-"10791" [label = <(&lt;operator&gt;.greaterThan,h &gt; 0)<SUB>4010</SUB>> ]
-"10795" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h cannot be set for container layer (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>4011</SUB>> ]
-"10803" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>4013</SUB>> ]
-"10809" [label = <(std::move,std::move(uniqueName))<SUB>4015</SUB>> ]
-"10817" [label = <(std::move,std::move(metadata))<SUB>4016</SUB>> ]
-"10823" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>4016</SUB>> ]
-"10844" [label = <(FIELD_IDENTIFIER,setPrimaryDisplayOnly,setPrimaryDisplayOnly)<SUB>4028</SUB>> ]
-"10660" [label = <(FIELD_IDENTIFIER,getInt32,getInt32)<SUB>3980</SUB>> ]
-"10669" [label = <(&lt;operator&gt;.fieldAccess,metadata.setInt32)<SUB>3982</SUB>> ]
-"10673" [label = <(&lt;operator&gt;.fieldAccess,InputWindowInfo::TYPE_NAVIGATION_BAR_PANEL)<SUB>3982</SUB>> ]
-"10695" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3989</SUB>> ]
-"10703" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3990</SUB>> ]
-"10722" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3994</SUB>> ]
-"10730" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3995</SUB>> ]
-"10753" [label = <(int,int(w))<SUB>4001</SUB>> ]
-"10756" [label = <(int,int(h))<SUB>4001</SUB>> ]
-"10766" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4005</SUB>> ]
-"10774" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4006</SUB>> ]
-"10797" [label = <(int,int(w))<SUB>4012</SUB>> ]
-"10800" [label = <(int,int(h))<SUB>4012</SUB>> ]
-"10810" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4015</SUB>> ]
-"10818" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4016</SUB>> ]
-"10671" [label = <(FIELD_IDENTIFIER,setInt32,setInt32)<SUB>3982</SUB>> ]
-"10675" [label = <(FIELD_IDENTIFIER,TYPE_NAVIGATION_BAR_PANEL,TYPE_NAVIGATION_BAR_PANEL)<SUB>3982</SUB>> ]
-"10697" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3989</SUB>> ]
-"10705" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3990</SUB>> ]
-"10724" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3994</SUB>> ]
-"10732" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3995</SUB>> ]
-"10754" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>4001</SUB>> ]
-"10757" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>4001</SUB>> ]
-"10768" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4005</SUB>> ]
-"10776" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4006</SUB>> ]
-"10798" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>4012</SUB>> ]
-"10801" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>4012</SUB>> ]
-"10812" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4015</SUB>> ]
-"10820" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4016</SUB>> ]
-"10585" [label = <(METHOD,createLayer)<SUB>3953</SUB>> ]
-"10877" [label = <(METHOD_RETURN,status_t)<SUB>3953</SUB>> ]
-  "10617" -> "10627" 
-  "10627" -> "10631" 
-  "10630" -> "10642" 
-  "10636" -> "10644" 
-  "10644" -> "10651" 
-  "10846" -> "10853" 
-  "10849" -> "10863" 
-  "10869" -> "10875" 
-  "10875" -> "10877" 
-  "10600" -> "10610" 
-  "10600" -> "10619" 
+"10633" [label = <(ALOG_ASSERT,ALOG_ASSERT(parentLayer == nullptr || parentHandle == nullptr,\012 &quot;Expected only one of parentLayer or parentHandle to be non-null. &quot;\012 &quot;Programmer error?&quot;))<SUB>3964</SUB>> ]
+"10643" [label = <(&lt;operator&gt;.assignment,result = NO_ERROR)<SUB>3968</SUB>> ]
+"10646" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; layer)<SUB>3970</SUB>> ]
+"10652" [label = <(&lt;operator&gt;.assignment,uniqueName = getUniqueLayerName(name.string()))<SUB>3972</SUB>> ]
+"10660" [label = <(&lt;operator&gt;.assignment,primaryDisplayOnly = false)<SUB>3974</SUB>> ]
+"10862" [label = <(&lt;operator&gt;.assignment,addToCurrentState = callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>4030</SUB>> ]
+"10865" [label = <(&lt;operator&gt;.assignment,result = addClientLayer(client, *handle, *gbp, layer, parentHandle, parentLayer,\012                            addToCurrentState, outTransformHint))<SUB>4031</SUB>> ]
+"10885" [label = <(saveSurfaceCreation,mInterceptor-&gt;saveSurfaceCreation(layer))<SUB>4036</SUB>> ]
+"10891" [label = <(RETURN,return result;,return result;)<SUB>4039</SUB>> ]
+"10616" [label = <(&lt;operator&gt;.lessThan,int32_t(w|h) &lt; 0)<SUB>3958</SUB>> ]
+"10634" [label = <(&lt;operator&gt;.logicalOr,parentLayer == nullptr || parentHandle == nullptr)<SUB>3964</SUB>> ]
+"10647" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>3970</SUB>> ]
+"10654" [label = <(getUniqueLayerName,getUniqueLayerName(name.string()))<SUB>3972</SUB>> ]
+"10664" [label = <(has,metadata.has(METADATA_WINDOW_TYPE))<SUB>3978</SUB>> ]
+"10696" [label = <(&lt;operator&gt;.and,flags &amp; ISurfaceComposerClient::eFXSurfaceMask)<SUB>3986</SUB>> ]
+"10848" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>4022</SUB>> ]
+"10864" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess())<SUB>4030</SUB>> ]
+"10867" [label = <(addClientLayer,addClientLayer(client, *handle, *gbp, layer, parentHandle, parentLayer,\012                            addToCurrentState, outTransformHint))<SUB>4031</SUB>> ]
+"10879" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>4033</SUB>> ]
+"10886" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;saveSurfaceCreation)<SUB>4036</SUB>> ]
+"10617" [label = <(int32_t,int32_t(w|h))<SUB>3958</SUB>> ]
+"10623" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h is negative (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>3959</SUB>> ]
+"10631" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>3961</SUB>> ]
+"10635" [label = <(&lt;operator&gt;.equals,parentLayer == nullptr)<SUB>3964</SUB>> ]
+"10638" [label = <(&lt;operator&gt;.equals,parentHandle == nullptr)<SUB>3964</SUB>> ]
+"10655" [label = <(string,name.string())<SUB>3972</SUB>> ]
+"10665" [label = <(&lt;operator&gt;.fieldAccess,metadata.has)<SUB>3978</SUB>> ]
+"10671" [label = <(&lt;operator&gt;.assignment,windowType = metadata.getInt32(METADATA_WINDOW_TYPE, 0))<SUB>3979</SUB>> ]
+"10698" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceMask)<SUB>3986</SUB>> ]
+"10703" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceBufferQueue)<SUB>3987</SUB>> ]
+"10706" [label = <(&lt;operator&gt;.assignment,result = createBufferQueueLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), format, handle, gbp, &amp;layer))<SUB>3988</SUB>> ]
+"10730" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceBufferState)<SUB>3992</SUB>> ]
+"10733" [label = <(&lt;operator&gt;.assignment,result = createBufferStateLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), handle, &amp;layer))<SUB>3993</SUB>> ]
+"10755" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceEffect)<SUB>3996</SUB>> ]
+"10777" [label = <(&lt;operator&gt;.assignment,result = createEffectLayer(client, std::move(uniqueName), w, h, flags,\012                                       std::move(metadata), handle, &amp;layer))<SUB>4004</SUB>> ]
+"10799" [label = <(&lt;operator&gt;.fieldAccess,ISurfaceComposerClient::eFXSurfaceContainer)<SUB>4007</SUB>> ]
+"10821" [label = <(&lt;operator&gt;.assignment,result = createContainerLayer(client, std::move(uniqueName), w, h, flags,\012                                          std::move(metadata), handle, &amp;layer))<SUB>4014</SUB>> ]
+"10843" [label = <(&lt;operator&gt;.assignment,result = BAD_VALUE)<SUB>4018</SUB>> ]
+"10852" [label = <(RETURN,return result;,return result;)<SUB>4023</SUB>> ]
+"10857" [label = <(setPrimaryDisplayOnly,layer-&gt;setPrimaryDisplayOnly())<SUB>4027</SUB>> ]
+"10869" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4031</SUB>> ]
+"10871" [label = <(&lt;operator&gt;.indirection,*gbp)<SUB>4031</SUB>> ]
+"10883" [label = <(RETURN,return result;,return result;)<SUB>4034</SUB>> ]
+"10888" [label = <(FIELD_IDENTIFIER,saveSurfaceCreation,saveSurfaceCreation)<SUB>4036</SUB>> ]
+"10618" [label = <(&lt;operator&gt;.or,w|h)<SUB>3958</SUB>> ]
+"10625" [label = <(int,int(w))<SUB>3960</SUB>> ]
+"10628" [label = <(int,int(h))<SUB>3960</SUB>> ]
+"10656" [label = <(&lt;operator&gt;.fieldAccess,name.string)<SUB>3972</SUB>> ]
+"10667" [label = <(FIELD_IDENTIFIER,has,has)<SUB>3978</SUB>> ]
+"10673" [label = <(getInt32,metadata.getInt32(METADATA_WINDOW_TYPE, 0))<SUB>3979</SUB>> ]
+"10680" [label = <(&lt;operator&gt;.equals,windowType == 441731)<SUB>3980</SUB>> ]
+"10700" [label = <(FIELD_IDENTIFIER,eFXSurfaceMask,eFXSurfaceMask)<SUB>3986</SUB>> ]
+"10705" [label = <(FIELD_IDENTIFIER,eFXSurfaceBufferQueue,eFXSurfaceBufferQueue)<SUB>3987</SUB>> ]
+"10708" [label = <(createBufferQueueLayer,createBufferQueueLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), format, handle, gbp, &amp;layer))<SUB>3988</SUB>> ]
+"10732" [label = <(FIELD_IDENTIFIER,eFXSurfaceBufferState,eFXSurfaceBufferState)<SUB>3992</SUB>> ]
+"10735" [label = <(createBufferStateLayer,createBufferStateLayer(client, std::move(uniqueName), w, h, flags,\012                                            std::move(metadata), handle, &amp;layer))<SUB>3993</SUB>> ]
+"10757" [label = <(FIELD_IDENTIFIER,eFXSurfaceEffect,eFXSurfaceEffect)<SUB>3996</SUB>> ]
+"10759" [label = <(&lt;operator&gt;.logicalOr,w &gt; 0 || h &gt; 0)<SUB>3998</SUB>> ]
+"10779" [label = <(createEffectLayer,createEffectLayer(client, std::move(uniqueName), w, h, flags,\012                                       std::move(metadata), handle, &amp;layer))<SUB>4004</SUB>> ]
+"10801" [label = <(FIELD_IDENTIFIER,eFXSurfaceContainer,eFXSurfaceContainer)<SUB>4007</SUB>> ]
+"10803" [label = <(&lt;operator&gt;.logicalOr,w &gt; 0 || h &gt; 0)<SUB>4009</SUB>> ]
+"10823" [label = <(createContainerLayer,createContainerLayer(client, std::move(uniqueName), w, h, flags,\012                                          std::move(metadata), handle, &amp;layer))<SUB>4014</SUB>> ]
+"10858" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setPrimaryDisplayOnly)<SUB>4027</SUB>> ]
+"10626" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>3960</SUB>> ]
+"10629" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>3960</SUB>> ]
+"10658" [label = <(FIELD_IDENTIFIER,string,string)<SUB>3972</SUB>> ]
+"10674" [label = <(&lt;operator&gt;.fieldAccess,metadata.getInt32)<SUB>3979</SUB>> ]
+"10684" [label = <(setInt32,metadata.setInt32(METADATA_WINDOW_TYPE, InputWindowInfo::TYPE_NAVIGATION_BAR_PANEL))<SUB>3981</SUB>> ]
+"10692" [label = <(&lt;operator&gt;.assignment,primaryDisplayOnly = true)<SUB>3982</SUB>> ]
+"10710" [label = <(std::move,std::move(uniqueName))<SUB>3988</SUB>> ]
+"10718" [label = <(std::move,std::move(metadata))<SUB>3989</SUB>> ]
+"10726" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>3989</SUB>> ]
+"10737" [label = <(std::move,std::move(uniqueName))<SUB>3993</SUB>> ]
+"10745" [label = <(std::move,std::move(metadata))<SUB>3994</SUB>> ]
+"10751" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>3994</SUB>> ]
+"10760" [label = <(&lt;operator&gt;.greaterThan,w &gt; 0)<SUB>3998</SUB>> ]
+"10763" [label = <(&lt;operator&gt;.greaterThan,h &gt; 0)<SUB>3998</SUB>> ]
+"10767" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h cannot be set for color layer (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>3999</SUB>> ]
+"10775" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>4001</SUB>> ]
+"10781" [label = <(std::move,std::move(uniqueName))<SUB>4004</SUB>> ]
+"10789" [label = <(std::move,std::move(metadata))<SUB>4005</SUB>> ]
+"10795" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>4005</SUB>> ]
+"10804" [label = <(&lt;operator&gt;.greaterThan,w &gt; 0)<SUB>4009</SUB>> ]
+"10807" [label = <(&lt;operator&gt;.greaterThan,h &gt; 0)<SUB>4009</SUB>> ]
+"10811" [label = <(ALOGE,ALOGE(&quot;createLayer() failed, w or h cannot be set for container layer (w=%d, h=%d)&quot;,\012 int(w), int(h)))<SUB>4010</SUB>> ]
+"10819" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>4012</SUB>> ]
+"10825" [label = <(std::move,std::move(uniqueName))<SUB>4014</SUB>> ]
+"10833" [label = <(std::move,std::move(metadata))<SUB>4015</SUB>> ]
+"10839" [label = <(&lt;operator&gt;.addressOf,&amp;layer)<SUB>4015</SUB>> ]
+"10860" [label = <(FIELD_IDENTIFIER,setPrimaryDisplayOnly,setPrimaryDisplayOnly)<SUB>4027</SUB>> ]
+"10676" [label = <(FIELD_IDENTIFIER,getInt32,getInt32)<SUB>3979</SUB>> ]
+"10685" [label = <(&lt;operator&gt;.fieldAccess,metadata.setInt32)<SUB>3981</SUB>> ]
+"10689" [label = <(&lt;operator&gt;.fieldAccess,InputWindowInfo::TYPE_NAVIGATION_BAR_PANEL)<SUB>3981</SUB>> ]
+"10711" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3988</SUB>> ]
+"10719" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3989</SUB>> ]
+"10738" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3993</SUB>> ]
+"10746" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>3994</SUB>> ]
+"10769" [label = <(int,int(w))<SUB>4000</SUB>> ]
+"10772" [label = <(int,int(h))<SUB>4000</SUB>> ]
+"10782" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4004</SUB>> ]
+"10790" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4005</SUB>> ]
+"10813" [label = <(int,int(w))<SUB>4011</SUB>> ]
+"10816" [label = <(int,int(h))<SUB>4011</SUB>> ]
+"10826" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4014</SUB>> ]
+"10834" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4015</SUB>> ]
+"10687" [label = <(FIELD_IDENTIFIER,setInt32,setInt32)<SUB>3981</SUB>> ]
+"10691" [label = <(FIELD_IDENTIFIER,TYPE_NAVIGATION_BAR_PANEL,TYPE_NAVIGATION_BAR_PANEL)<SUB>3981</SUB>> ]
+"10713" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3988</SUB>> ]
+"10721" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3989</SUB>> ]
+"10740" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3993</SUB>> ]
+"10748" [label = <(FIELD_IDENTIFIER,move,move)<SUB>3994</SUB>> ]
+"10770" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>4000</SUB>> ]
+"10773" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>4000</SUB>> ]
+"10784" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4004</SUB>> ]
+"10792" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4005</SUB>> ]
+"10814" [label = <(&lt;operator&gt;.constructorInitializer,(w))<SUB>4011</SUB>> ]
+"10817" [label = <(&lt;operator&gt;.constructorInitializer,(h))<SUB>4011</SUB>> ]
+"10828" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4014</SUB>> ]
+"10836" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4015</SUB>> ]
+"10601" [label = <(METHOD,createLayer)<SUB>3952</SUB>> ]
+"10893" [label = <(METHOD_RETURN,status_t)<SUB>3952</SUB>> ]
+  "10633" -> "10643" 
+  "10643" -> "10647" 
+  "10646" -> "10658" 
+  "10652" -> "10660" 
+  "10660" -> "10667" 
+  "10862" -> "10869" 
+  "10865" -> "10879" 
+  "10885" -> "10891" 
+  "10891" -> "10893" 
+  "10616" -> "10626" 
+  "10616" -> "10635" 
+  "10634" -> "10633" 
+  "10647" -> "10646" 
+  "10654" -> "10652" 
+  "10664" -> "10676" 
+  "10664" -> "10700" 
+  "10696" -> "10705" 
+  "10696" -> "10732" 
+  "10696" -> "10757" 
+  "10696" -> "10801" 
+  "10696" -> "10843" 
+  "10848" -> "10852" 
+  "10848" -> "10860" 
+  "10848" -> "10864" 
+  "10864" -> "10862" 
+  "10867" -> "10865" 
+  "10879" -> "10883" 
+  "10879" -> "10888" 
+  "10886" -> "10885" 
+  "10617" -> "10616" 
+  "10623" -> "10631" 
+  "10631" -> "10893" 
+  "10635" -> "10634" 
+  "10635" -> "10638" 
+  "10638" -> "10634" 
+  "10655" -> "10654" 
+  "10665" -> "10664" 
+  "10671" -> "10680" 
+  "10698" -> "10696" 
+  "10703" -> "10713" 
+  "10706" -> "10848" 
+  "10730" -> "10740" 
+  "10733" -> "10848" 
+  "10755" -> "10760" 
+  "10777" -> "10848" 
+  "10799" -> "10804" 
+  "10821" -> "10848" 
+  "10843" -> "10848" 
+  "10852" -> "10893" 
+  "10857" -> "10864" 
+  "10869" -> "10871" 
+  "10871" -> "10867" 
+  "10883" -> "10893" 
+  "10888" -> "10886" 
   "10618" -> "10617" 
-  "10631" -> "10630" 
-  "10638" -> "10636" 
-  "10648" -> "10660" 
-  "10648" -> "10684" 
-  "10680" -> "10689" 
-  "10680" -> "10716" 
-  "10680" -> "10741" 
-  "10680" -> "10785" 
-  "10680" -> "10827" 
-  "10832" -> "10836" 
-  "10832" -> "10844" 
-  "10832" -> "10848" 
-  "10848" -> "10846" 
-  "10851" -> "10849" 
-  "10863" -> "10867" 
-  "10863" -> "10872" 
-  "10870" -> "10869" 
-  "10601" -> "10600" 
-  "10607" -> "10615" 
-  "10615" -> "10877" 
-  "10619" -> "10618" 
-  "10619" -> "10622" 
-  "10622" -> "10618" 
-  "10639" -> "10638" 
-  "10649" -> "10648" 
-  "10655" -> "10664" 
-  "10682" -> "10680" 
-  "10687" -> "10697" 
-  "10690" -> "10832" 
-  "10714" -> "10724" 
-  "10717" -> "10832" 
-  "10739" -> "10744" 
-  "10761" -> "10832" 
-  "10783" -> "10788" 
-  "10805" -> "10832" 
-  "10827" -> "10832" 
-  "10836" -> "10877" 
-  "10841" -> "10848" 
-  "10853" -> "10855" 
-  "10855" -> "10851" 
-  "10867" -> "10877" 
-  "10872" -> "10870" 
-  "10602" -> "10601" 
-  "10609" -> "10613" 
-  "10612" -> "10607" 
-  "10640" -> "10639" 
-  "10651" -> "10649" 
-  "10657" -> "10655" 
-  "10664" -> "10671" 
-  "10664" -> "10684" 
-  "10684" -> "10682" 
-  "10689" -> "10687" 
-  "10692" -> "10690" 
-  "10716" -> "10714" 
-  "10719" -> "10717" 
-  "10741" -> "10739" 
-  "10743" -> "10754" 
-  "10743" -> "10768" 
-  "10763" -> "10761" 
-  "10785" -> "10783" 
-  "10787" -> "10798" 
-  "10787" -> "10812" 
-  "10807" -> "10805" 
-  "10842" -> "10841" 
-  "10610" -> "10609" 
-  "10613" -> "10612" 
-  "10642" -> "10640" 
-  "10658" -> "10657" 
-  "10668" -> "10676" 
-  "10676" -> "10684" 
-  "10694" -> "10705" 
-  "10702" -> "10710" 
-  "10710" -> "10692" 
-  "10721" -> "10732" 
-  "10729" -> "10735" 
-  "10735" -> "10719" 
-  "10744" -> "10743" 
-  "10744" -> "10747" 
-  "10747" -> "10743" 
-  "10751" -> "10759" 
-  "10759" -> "10877" 
-  "10765" -> "10776" 
-  "10773" -> "10779" 
-  "10779" -> "10763" 
-  "10788" -> "10787" 
-  "10788" -> "10791" 
-  "10791" -> "10787" 
-  "10795" -> "10803" 
-  "10803" -> "10877" 
-  "10809" -> "10820" 
-  "10817" -> "10823" 
-  "10823" -> "10807" 
-  "10844" -> "10842" 
-  "10660" -> "10658" 
-  "10669" -> "10675" 
-  "10673" -> "10668" 
-  "10695" -> "10694" 
-  "10703" -> "10702" 
-  "10722" -> "10721" 
-  "10730" -> "10729" 
-  "10753" -> "10757" 
-  "10756" -> "10751" 
-  "10766" -> "10765" 
-  "10774" -> "10773" 
-  "10797" -> "10801" 
-  "10800" -> "10795" 
-  "10810" -> "10809" 
-  "10818" -> "10817" 
-  "10671" -> "10669" 
-  "10675" -> "10673" 
-  "10697" -> "10695" 
+  "10625" -> "10629" 
+  "10628" -> "10623" 
+  "10656" -> "10655" 
+  "10667" -> "10665" 
+  "10673" -> "10671" 
+  "10680" -> "10687" 
+  "10680" -> "10700" 
+  "10700" -> "10698" 
   "10705" -> "10703" 
-  "10724" -> "10722" 
+  "10708" -> "10706" 
   "10732" -> "10730" 
-  "10754" -> "10753" 
-  "10757" -> "10756" 
-  "10768" -> "10766" 
-  "10776" -> "10774" 
-  "10798" -> "10797" 
-  "10801" -> "10800" 
-  "10812" -> "10810" 
-  "10820" -> "10818" 
-  "10585" -> "10602" 
+  "10735" -> "10733" 
+  "10757" -> "10755" 
+  "10759" -> "10770" 
+  "10759" -> "10784" 
+  "10779" -> "10777" 
+  "10801" -> "10799" 
+  "10803" -> "10814" 
+  "10803" -> "10828" 
+  "10823" -> "10821" 
+  "10858" -> "10857" 
+  "10626" -> "10625" 
+  "10629" -> "10628" 
+  "10658" -> "10656" 
+  "10674" -> "10673" 
+  "10684" -> "10692" 
+  "10692" -> "10700" 
+  "10710" -> "10721" 
+  "10718" -> "10726" 
+  "10726" -> "10708" 
+  "10737" -> "10748" 
+  "10745" -> "10751" 
+  "10751" -> "10735" 
+  "10760" -> "10759" 
+  "10760" -> "10763" 
+  "10763" -> "10759" 
+  "10767" -> "10775" 
+  "10775" -> "10893" 
+  "10781" -> "10792" 
+  "10789" -> "10795" 
+  "10795" -> "10779" 
+  "10804" -> "10803" 
+  "10804" -> "10807" 
+  "10807" -> "10803" 
+  "10811" -> "10819" 
+  "10819" -> "10893" 
+  "10825" -> "10836" 
+  "10833" -> "10839" 
+  "10839" -> "10823" 
+  "10860" -> "10858" 
+  "10676" -> "10674" 
+  "10685" -> "10691" 
+  "10689" -> "10684" 
+  "10711" -> "10710" 
+  "10719" -> "10718" 
+  "10738" -> "10737" 
+  "10746" -> "10745" 
+  "10769" -> "10773" 
+  "10772" -> "10767" 
+  "10782" -> "10781" 
+  "10790" -> "10789" 
+  "10813" -> "10817" 
+  "10816" -> "10811" 
+  "10826" -> "10825" 
+  "10834" -> "10833" 
+  "10687" -> "10685" 
+  "10691" -> "10689" 
+  "10713" -> "10711" 
+  "10721" -> "10719" 
+  "10740" -> "10738" 
+  "10748" -> "10746" 
+  "10770" -> "10769" 
+  "10773" -> "10772" 
+  "10784" -> "10782" 
+  "10792" -> "10790" 
+  "10814" -> "10813" 
+  "10817" -> "10816" 
+  "10828" -> "10826" 
+  "10836" -> "10834" 
+  "10601" -> "10618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/201-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/201-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/201-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/201-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,43 +1,43 @@
 digraph "getUniqueLayerName" {  
-"10883" [label = <(&lt;operator&gt;.assignment,dupeCounter = 0)<SUB>4044</SUB>> ]
-"10887" [label = <(&lt;operator&gt;.assignment,uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, dupeCounter))<SUB>4047</SUB>> ]
-"10897" [label = <(lock,lock(mStateLock))<SUB>4050</SUB>> ]
-"10900" [label = <(&lt;operator&gt;.assignment,matchFound = true)<SUB>4053</SUB>> ]
-"10914" [label = <(ALOGV_IF,ALOGV_IF(dupeCounter &gt; 0, &quot;duplicate layer name: changing %s to %s&quot;, name, uniqueName.c_str()))<SUB>4064</SUB>> ]
-"10924" [label = <(RETURN,return uniqueName;,return uniqueName;)<SUB>4065</SUB>> ]
-"10889" [label = <(base::StringPrintf,base::StringPrintf(&quot;%s#%u&quot;, name, dupeCounter))<SUB>4047</SUB>> ]
-"10915" [label = <(&lt;operator&gt;.greaterThan,dupeCounter &gt; 0)<SUB>4064</SUB>> ]
-"10920" [label = <(c_str,uniqueName.c_str())<SUB>4064</SUB>> ]
-"10890" [label = <(&lt;operator&gt;.fieldAccess,base::StringPrintf)<SUB>4047</SUB>> ]
-"10906" [label = <(&lt;operator&gt;.assignment,matchFound = false)<SUB>4055</SUB>> ]
-"10909" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == uniqueName) {\012                matchFound = true;\012                uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, ++dupeCounter);\012 }\012 }))<SUB>4056</SUB>> ]
-"10921" [label = <(&lt;operator&gt;.fieldAccess,uniqueName.c_str)<SUB>4064</SUB>> ]
-"10892" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>4047</SUB>> ]
-"10910" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>4056</SUB>> ]
-"10913" [label = <(METHOD_REF,ANY anonymous_lambda_42 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == uniqueName) {\012                matchFound = true;\012                uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, ++dupeCounter);\012 }\012 }))<SUB>4056</SUB>> ]
-"10923" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4064</SUB>> ]
-"10912" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4056</SUB>> ]
-"10879" [label = <(METHOD,getUniqueLayerName)<SUB>4043</SUB>> ]
-"10926" [label = <(METHOD_RETURN,string)<SUB>4043</SUB>> ]
-  "10883" -> "10892" 
-  "10887" -> "10897" 
-  "10897" -> "10900" 
-  "10900" -> "10906" 
-  "10900" -> "10915" 
-  "10914" -> "10924" 
-  "10924" -> "10926" 
-  "10889" -> "10887" 
-  "10915" -> "10923" 
-  "10920" -> "10914" 
-  "10890" -> "10889" 
-  "10906" -> "10912" 
-  "10909" -> "10906" 
-  "10909" -> "10915" 
-  "10921" -> "10920" 
-  "10892" -> "10890" 
-  "10910" -> "10913" 
-  "10913" -> "10909" 
-  "10923" -> "10921" 
-  "10912" -> "10910" 
-  "10879" -> "10883" 
+"10899" [label = <(&lt;operator&gt;.assignment,dupeCounter = 0)<SUB>4043</SUB>> ]
+"10903" [label = <(&lt;operator&gt;.assignment,uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, dupeCounter))<SUB>4046</SUB>> ]
+"10913" [label = <(lock,lock(mStateLock))<SUB>4049</SUB>> ]
+"10916" [label = <(&lt;operator&gt;.assignment,matchFound = true)<SUB>4052</SUB>> ]
+"10930" [label = <(ALOGV_IF,ALOGV_IF(dupeCounter &gt; 0, &quot;duplicate layer name: changing %s to %s&quot;, name, uniqueName.c_str()))<SUB>4063</SUB>> ]
+"10940" [label = <(RETURN,return uniqueName;,return uniqueName;)<SUB>4064</SUB>> ]
+"10905" [label = <(base::StringPrintf,base::StringPrintf(&quot;%s#%u&quot;, name, dupeCounter))<SUB>4046</SUB>> ]
+"10931" [label = <(&lt;operator&gt;.greaterThan,dupeCounter &gt; 0)<SUB>4063</SUB>> ]
+"10936" [label = <(c_str,uniqueName.c_str())<SUB>4063</SUB>> ]
+"10906" [label = <(&lt;operator&gt;.fieldAccess,base::StringPrintf)<SUB>4046</SUB>> ]
+"10922" [label = <(&lt;operator&gt;.assignment,matchFound = false)<SUB>4054</SUB>> ]
+"10925" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == uniqueName) {\012                matchFound = true;\012                uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, ++dupeCounter);\012 }\012 }))<SUB>4055</SUB>> ]
+"10937" [label = <(&lt;operator&gt;.fieldAccess,uniqueName.c_str)<SUB>4063</SUB>> ]
+"10908" [label = <(FIELD_IDENTIFIER,StringPrintf,StringPrintf)<SUB>4046</SUB>> ]
+"10926" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>4055</SUB>> ]
+"10929" [label = <(METHOD_REF,ANY anonymous_lambda_42 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == uniqueName) {\012                matchFound = true;\012                uniqueName = base::StringPrintf(&quot;%s#%u&quot;, name, ++dupeCounter);\012 }\012 }))<SUB>4055</SUB>> ]
+"10939" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4063</SUB>> ]
+"10928" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4055</SUB>> ]
+"10895" [label = <(METHOD,getUniqueLayerName)<SUB>4042</SUB>> ]
+"10942" [label = <(METHOD_RETURN,string)<SUB>4042</SUB>> ]
+  "10899" -> "10908" 
+  "10903" -> "10913" 
+  "10913" -> "10916" 
+  "10916" -> "10922" 
+  "10916" -> "10931" 
+  "10930" -> "10940" 
+  "10940" -> "10942" 
+  "10905" -> "10903" 
+  "10931" -> "10939" 
+  "10936" -> "10930" 
+  "10906" -> "10905" 
+  "10922" -> "10928" 
+  "10925" -> "10922" 
+  "10925" -> "10931" 
+  "10937" -> "10936" 
+  "10908" -> "10906" 
+  "10926" -> "10929" 
+  "10929" -> "10925" 
+  "10939" -> "10937" 
+  "10928" -> "10926" 
+  "10895" -> "10899" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/202-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/202-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/202-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/202-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,92 +1,92 @@
 digraph "createBufferQueueLayer" {  
-"10957" [label = <(&lt;operator&gt;.greaterThan,sp&lt;BufferQueueLayer&gt; layer)<SUB>4085</SUB>> ]
-"10963" [label = <(args,args(this, client, std::move(name), w, h, flags, std::move(metadata)))<SUB>4086</SUB>> ]
-"10979" [label = <(&lt;operator&gt;.assignment,args.textureName = getNewTexture())<SUB>4087</SUB>> ]
-"10996" [label = <(&lt;operator&gt;.assignment,err = layer-&gt;setDefaultBufferProperties(w, h, format))<SUB>4096</SUB>> ]
-"11028" [label = <(ALOGE_IF,ALOGE_IF(err, &quot;createBufferQueueLayer() failed (%s)&quot;, strerror(-err)))<SUB>4103</SUB>> ]
-"11034" [label = <(RETURN,return err;,return err;)<SUB>4104</SUB>> ]
-"10958" [label = <(&lt;operator&gt;.lessThan,sp&lt;BufferQueueLayer)<SUB>4085</SUB>> ]
-"10966" [label = <(std::move,std::move(name))<SUB>4086</SUB>> ]
-"10974" [label = <(std::move,std::move(metadata))<SUB>4086</SUB>> ]
-"10980" [label = <(&lt;operator&gt;.fieldAccess,args.textureName)<SUB>4087</SUB>> ]
-"10983" [label = <(getNewTexture,getNewTexture())<SUB>4087</SUB>> ]
-"10986" [label = <(lock,lock(mStateLock))<SUB>4092</SUB>> ]
-"10988" [label = <(&lt;operator&gt;.assignment,layer = getFactory().createBufferQueueLayer(args))<SUB>4093</SUB>> ]
-"10998" [label = <(setDefaultBufferProperties,layer-&gt;setDefaultBufferProperties(w, h, format))<SUB>4096</SUB>> ]
-"11006" [label = <(&lt;operator&gt;.equals,err == NO_ERROR)<SUB>4097</SUB>> ]
-"11031" [label = <(strerror,strerror(-err))<SUB>4103</SUB>> ]
-"10947" [label = <(&lt;operator&gt;.assignment,format = PIXEL_FORMAT_RGBA_8888)<SUB>4078</SUB>> ]
-"10953" [label = <(&lt;operator&gt;.assignment,format = PIXEL_FORMAT_RGBX_8888)<SUB>4081</SUB>> ]
-"10967" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4086</SUB>> ]
-"10975" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4086</SUB>> ]
-"10982" [label = <(FIELD_IDENTIFIER,textureName,textureName)<SUB>4087</SUB>> ]
-"10990" [label = <(createBufferQueueLayer,getFactory().createBufferQueueLayer(args))<SUB>4093</SUB>> ]
-"10999" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setDefaultBufferProperties)<SUB>4096</SUB>> ]
-"11010" [label = <(&lt;operator&gt;.assignment,*handle = layer-&gt;getHandle())<SUB>4098</SUB>> ]
-"11017" [label = <(&lt;operator&gt;.assignment,*gbp = layer-&gt;getProducer())<SUB>4099</SUB>> ]
-"11024" [label = <(&lt;operator&gt;.assignment,*outLayer = layer)<SUB>4100</SUB>> ]
-"11032" [label = <(&lt;operator&gt;.minus,-err)<SUB>4103</SUB>> ]
-"10969" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4086</SUB>> ]
-"10977" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4086</SUB>> ]
-"10991" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferQueueLayer)<SUB>4093</SUB>> ]
-"11001" [label = <(FIELD_IDENTIFIER,setDefaultBufferProperties,setDefaultBufferProperties)<SUB>4096</SUB>> ]
-"11011" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4098</SUB>> ]
-"11013" [label = <(getHandle,layer-&gt;getHandle())<SUB>4098</SUB>> ]
-"11018" [label = <(&lt;operator&gt;.indirection,*gbp)<SUB>4099</SUB>> ]
-"11020" [label = <(getProducer,layer-&gt;getProducer())<SUB>4099</SUB>> ]
-"11025" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4100</SUB>> ]
-"10992" [label = <(getFactory,getFactory())<SUB>4093</SUB>> ]
-"10993" [label = <(FIELD_IDENTIFIER,createBufferQueueLayer,createBufferQueueLayer)<SUB>4093</SUB>> ]
-"11014" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getHandle)<SUB>4098</SUB>> ]
-"11021" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getProducer)<SUB>4099</SUB>> ]
-"11016" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4098</SUB>> ]
-"11023" [label = <(FIELD_IDENTIFIER,getProducer,getProducer)<SUB>4099</SUB>> ]
-"10928" [label = <(METHOD,createBufferQueueLayer)<SUB>4068</SUB>> ]
-"11036" [label = <(METHOD_RETURN,status_t)<SUB>4068</SUB>> ]
-  "10957" -> "10969" 
-  "10963" -> "10982" 
-  "10979" -> "10986" 
-  "10996" -> "11006" 
-  "11028" -> "11034" 
-  "11034" -> "11036" 
-  "10958" -> "10957" 
-  "10966" -> "10977" 
-  "10974" -> "10963" 
-  "10980" -> "10983" 
-  "10983" -> "10979" 
-  "10986" -> "10992" 
-  "10988" -> "11001" 
-  "10998" -> "10996" 
-  "11006" -> "11011" 
-  "11006" -> "11032" 
-  "11031" -> "11028" 
-  "10947" -> "10958" 
-  "10953" -> "10958" 
-  "10967" -> "10966" 
-  "10975" -> "10974" 
-  "10982" -> "10980" 
-  "10990" -> "10988" 
-  "10999" -> "10998" 
-  "11010" -> "11018" 
-  "11017" -> "11025" 
-  "11024" -> "11032" 
-  "11032" -> "11031" 
-  "10969" -> "10967" 
-  "10977" -> "10975" 
+"10973" [label = <(&lt;operator&gt;.greaterThan,sp&lt;BufferQueueLayer&gt; layer)<SUB>4084</SUB>> ]
+"10979" [label = <(args,args(this, client, std::move(name), w, h, flags, std::move(metadata)))<SUB>4085</SUB>> ]
+"10995" [label = <(&lt;operator&gt;.assignment,args.textureName = getNewTexture())<SUB>4086</SUB>> ]
+"11012" [label = <(&lt;operator&gt;.assignment,err = layer-&gt;setDefaultBufferProperties(w, h, format))<SUB>4095</SUB>> ]
+"11044" [label = <(ALOGE_IF,ALOGE_IF(err, &quot;createBufferQueueLayer() failed (%s)&quot;, strerror(-err)))<SUB>4102</SUB>> ]
+"11050" [label = <(RETURN,return err;,return err;)<SUB>4103</SUB>> ]
+"10974" [label = <(&lt;operator&gt;.lessThan,sp&lt;BufferQueueLayer)<SUB>4084</SUB>> ]
+"10982" [label = <(std::move,std::move(name))<SUB>4085</SUB>> ]
+"10990" [label = <(std::move,std::move(metadata))<SUB>4085</SUB>> ]
+"10996" [label = <(&lt;operator&gt;.fieldAccess,args.textureName)<SUB>4086</SUB>> ]
+"10999" [label = <(getNewTexture,getNewTexture())<SUB>4086</SUB>> ]
+"11002" [label = <(lock,lock(mStateLock))<SUB>4091</SUB>> ]
+"11004" [label = <(&lt;operator&gt;.assignment,layer = getFactory().createBufferQueueLayer(args))<SUB>4092</SUB>> ]
+"11014" [label = <(setDefaultBufferProperties,layer-&gt;setDefaultBufferProperties(w, h, format))<SUB>4095</SUB>> ]
+"11022" [label = <(&lt;operator&gt;.equals,err == NO_ERROR)<SUB>4096</SUB>> ]
+"11047" [label = <(strerror,strerror(-err))<SUB>4102</SUB>> ]
+"10963" [label = <(&lt;operator&gt;.assignment,format = PIXEL_FORMAT_RGBA_8888)<SUB>4077</SUB>> ]
+"10969" [label = <(&lt;operator&gt;.assignment,format = PIXEL_FORMAT_RGBX_8888)<SUB>4080</SUB>> ]
+"10983" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4085</SUB>> ]
+"10991" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4085</SUB>> ]
+"10998" [label = <(FIELD_IDENTIFIER,textureName,textureName)<SUB>4086</SUB>> ]
+"11006" [label = <(createBufferQueueLayer,getFactory().createBufferQueueLayer(args))<SUB>4092</SUB>> ]
+"11015" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;setDefaultBufferProperties)<SUB>4095</SUB>> ]
+"11026" [label = <(&lt;operator&gt;.assignment,*handle = layer-&gt;getHandle())<SUB>4097</SUB>> ]
+"11033" [label = <(&lt;operator&gt;.assignment,*gbp = layer-&gt;getProducer())<SUB>4098</SUB>> ]
+"11040" [label = <(&lt;operator&gt;.assignment,*outLayer = layer)<SUB>4099</SUB>> ]
+"11048" [label = <(&lt;operator&gt;.minus,-err)<SUB>4102</SUB>> ]
+"10985" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4085</SUB>> ]
+"10993" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4085</SUB>> ]
+"11007" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferQueueLayer)<SUB>4092</SUB>> ]
+"11017" [label = <(FIELD_IDENTIFIER,setDefaultBufferProperties,setDefaultBufferProperties)<SUB>4095</SUB>> ]
+"11027" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4097</SUB>> ]
+"11029" [label = <(getHandle,layer-&gt;getHandle())<SUB>4097</SUB>> ]
+"11034" [label = <(&lt;operator&gt;.indirection,*gbp)<SUB>4098</SUB>> ]
+"11036" [label = <(getProducer,layer-&gt;getProducer())<SUB>4098</SUB>> ]
+"11041" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4099</SUB>> ]
+"11008" [label = <(getFactory,getFactory())<SUB>4092</SUB>> ]
+"11009" [label = <(FIELD_IDENTIFIER,createBufferQueueLayer,createBufferQueueLayer)<SUB>4092</SUB>> ]
+"11030" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getHandle)<SUB>4097</SUB>> ]
+"11037" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getProducer)<SUB>4098</SUB>> ]
+"11032" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4097</SUB>> ]
+"11039" [label = <(FIELD_IDENTIFIER,getProducer,getProducer)<SUB>4098</SUB>> ]
+"10944" [label = <(METHOD,createBufferQueueLayer)<SUB>4067</SUB>> ]
+"11052" [label = <(METHOD_RETURN,status_t)<SUB>4067</SUB>> ]
+  "10973" -> "10985" 
+  "10979" -> "10998" 
+  "10995" -> "11002" 
+  "11012" -> "11022" 
+  "11044" -> "11050" 
+  "11050" -> "11052" 
+  "10974" -> "10973" 
+  "10982" -> "10993" 
+  "10990" -> "10979" 
+  "10996" -> "10999" 
+  "10999" -> "10995" 
+  "11002" -> "11008" 
+  "11004" -> "11017" 
+  "11014" -> "11012" 
+  "11022" -> "11027" 
+  "11022" -> "11048" 
+  "11047" -> "11044" 
+  "10963" -> "10974" 
+  "10969" -> "10974" 
+  "10983" -> "10982" 
   "10991" -> "10990" 
-  "11001" -> "10999" 
-  "11011" -> "11016" 
-  "11013" -> "11010" 
-  "11018" -> "11023" 
-  "11020" -> "11017" 
-  "11025" -> "11024" 
-  "10992" -> "10993" 
+  "10998" -> "10996" 
+  "11006" -> "11004" 
+  "11015" -> "11014" 
+  "11026" -> "11034" 
+  "11033" -> "11041" 
+  "11040" -> "11048" 
+  "11048" -> "11047" 
+  "10985" -> "10983" 
   "10993" -> "10991" 
-  "11014" -> "11013" 
-  "11021" -> "11020" 
-  "11016" -> "11014" 
-  "11023" -> "11021" 
-  "10928" -> "10947" 
-  "10928" -> "10953" 
-  "10928" -> "10958" 
+  "11007" -> "11006" 
+  "11017" -> "11015" 
+  "11027" -> "11032" 
+  "11029" -> "11026" 
+  "11034" -> "11039" 
+  "11036" -> "11033" 
+  "11041" -> "11040" 
+  "11008" -> "11009" 
+  "11009" -> "11007" 
+  "11030" -> "11029" 
+  "11037" -> "11036" 
+  "11032" -> "11030" 
+  "11039" -> "11037" 
+  "10944" -> "10963" 
+  "10944" -> "10969" 
+  "10944" -> "10974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/203-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/203-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/203-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/203-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,57 +1,57 @@
 digraph "createBufferStateLayer" {  
-"11049" [label = <(args,args(this, client, std::move(name), w, h, flags, std::move(metadata)))<SUB>4111</SUB>> ]
-"11065" [label = <(&lt;operator&gt;.assignment,args.textureName = getNewTexture())<SUB>4112</SUB>> ]
-"11070" [label = <(&lt;operator&gt;.assignment,sp&lt;BufferStateLayer&gt; layer = getFactory().createBufferStateLayer(args))<SUB>4113</SUB>> ]
-"11081" [label = <(&lt;operator&gt;.assignment,*handle = layer-&gt;getHandle())<SUB>4114</SUB>> ]
-"11088" [label = <(&lt;operator&gt;.assignment,*outLayer = layer)<SUB>4115</SUB>> ]
-"11092" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4117</SUB>> ]
-"11052" [label = <(std::move,std::move(name))<SUB>4111</SUB>> ]
-"11060" [label = <(std::move,std::move(metadata))<SUB>4111</SUB>> ]
-"11066" [label = <(&lt;operator&gt;.fieldAccess,args.textureName)<SUB>4112</SUB>> ]
-"11069" [label = <(getNewTexture,getNewTexture())<SUB>4112</SUB>> ]
-"11071" [label = <(&lt;operator&gt;.greaterThan,sp&lt;BufferStateLayer&gt; layer)<SUB>4113</SUB>> ]
-"11076" [label = <(createBufferStateLayer,getFactory().createBufferStateLayer(args))<SUB>4113</SUB>> ]
-"11082" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4114</SUB>> ]
-"11084" [label = <(getHandle,layer-&gt;getHandle())<SUB>4114</SUB>> ]
-"11089" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4115</SUB>> ]
-"11053" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4111</SUB>> ]
-"11061" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4111</SUB>> ]
-"11068" [label = <(FIELD_IDENTIFIER,textureName,textureName)<SUB>4112</SUB>> ]
-"11072" [label = <(&lt;operator&gt;.lessThan,sp&lt;BufferStateLayer)<SUB>4113</SUB>> ]
-"11077" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferStateLayer)<SUB>4113</SUB>> ]
-"11085" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getHandle)<SUB>4114</SUB>> ]
-"11055" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4111</SUB>> ]
-"11063" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4111</SUB>> ]
-"11078" [label = <(getFactory,getFactory())<SUB>4113</SUB>> ]
-"11079" [label = <(FIELD_IDENTIFIER,createBufferStateLayer,createBufferStateLayer)<SUB>4113</SUB>> ]
-"11087" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4114</SUB>> ]
-"11038" [label = <(METHOD,createBufferStateLayer)<SUB>4107</SUB>> ]
-"11094" [label = <(METHOD_RETURN,status_t)<SUB>4107</SUB>> ]
-  "11049" -> "11068" 
-  "11065" -> "11072" 
-  "11070" -> "11082" 
-  "11081" -> "11089" 
-  "11088" -> "11092" 
-  "11092" -> "11094" 
-  "11052" -> "11063" 
-  "11060" -> "11049" 
-  "11066" -> "11069" 
-  "11069" -> "11065" 
-  "11071" -> "11078" 
-  "11076" -> "11070" 
-  "11082" -> "11087" 
-  "11084" -> "11081" 
-  "11089" -> "11088" 
-  "11053" -> "11052" 
-  "11061" -> "11060" 
-  "11068" -> "11066" 
-  "11072" -> "11071" 
+"11065" [label = <(args,args(this, client, std::move(name), w, h, flags, std::move(metadata)))<SUB>4110</SUB>> ]
+"11081" [label = <(&lt;operator&gt;.assignment,args.textureName = getNewTexture())<SUB>4111</SUB>> ]
+"11086" [label = <(&lt;operator&gt;.assignment,sp&lt;BufferStateLayer&gt; layer = getFactory().createBufferStateLayer(args))<SUB>4112</SUB>> ]
+"11097" [label = <(&lt;operator&gt;.assignment,*handle = layer-&gt;getHandle())<SUB>4113</SUB>> ]
+"11104" [label = <(&lt;operator&gt;.assignment,*outLayer = layer)<SUB>4114</SUB>> ]
+"11108" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4116</SUB>> ]
+"11068" [label = <(std::move,std::move(name))<SUB>4110</SUB>> ]
+"11076" [label = <(std::move,std::move(metadata))<SUB>4110</SUB>> ]
+"11082" [label = <(&lt;operator&gt;.fieldAccess,args.textureName)<SUB>4111</SUB>> ]
+"11085" [label = <(getNewTexture,getNewTexture())<SUB>4111</SUB>> ]
+"11087" [label = <(&lt;operator&gt;.greaterThan,sp&lt;BufferStateLayer&gt; layer)<SUB>4112</SUB>> ]
+"11092" [label = <(createBufferStateLayer,getFactory().createBufferStateLayer(args))<SUB>4112</SUB>> ]
+"11098" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4113</SUB>> ]
+"11100" [label = <(getHandle,layer-&gt;getHandle())<SUB>4113</SUB>> ]
+"11105" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4114</SUB>> ]
+"11069" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4110</SUB>> ]
+"11077" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4110</SUB>> ]
+"11084" [label = <(FIELD_IDENTIFIER,textureName,textureName)<SUB>4111</SUB>> ]
+"11088" [label = <(&lt;operator&gt;.lessThan,sp&lt;BufferStateLayer)<SUB>4112</SUB>> ]
+"11093" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createBufferStateLayer)<SUB>4112</SUB>> ]
+"11101" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getHandle)<SUB>4113</SUB>> ]
+"11071" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4110</SUB>> ]
+"11079" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4110</SUB>> ]
+"11094" [label = <(getFactory,getFactory())<SUB>4112</SUB>> ]
+"11095" [label = <(FIELD_IDENTIFIER,createBufferStateLayer,createBufferStateLayer)<SUB>4112</SUB>> ]
+"11103" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4113</SUB>> ]
+"11054" [label = <(METHOD,createBufferStateLayer)<SUB>4106</SUB>> ]
+"11110" [label = <(METHOD_RETURN,status_t)<SUB>4106</SUB>> ]
+  "11065" -> "11084" 
+  "11081" -> "11088" 
+  "11086" -> "11098" 
+  "11097" -> "11105" 
+  "11104" -> "11108" 
+  "11108" -> "11110" 
+  "11068" -> "11079" 
+  "11076" -> "11065" 
+  "11082" -> "11085" 
+  "11085" -> "11081" 
+  "11087" -> "11094" 
+  "11092" -> "11086" 
+  "11098" -> "11103" 
+  "11100" -> "11097" 
+  "11105" -> "11104" 
+  "11069" -> "11068" 
   "11077" -> "11076" 
-  "11085" -> "11084" 
-  "11055" -> "11053" 
-  "11063" -> "11061" 
-  "11078" -> "11079" 
+  "11084" -> "11082" 
+  "11088" -> "11087" 
+  "11093" -> "11092" 
+  "11101" -> "11100" 
+  "11071" -> "11069" 
   "11079" -> "11077" 
-  "11087" -> "11085" 
-  "11038" -> "11055" 
+  "11094" -> "11095" 
+  "11095" -> "11093" 
+  "11103" -> "11101" 
+  "11054" -> "11071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/204-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/204-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/204-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/204-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,45 +1,45 @@
 digraph "createEffectLayer" {  
-"11106" [label = <(&lt;operator&gt;.assignment,*outLayer = getFactory().createEffectLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4123</SUB>> ]
-"11129" [label = <(&lt;operator&gt;.assignment,*handle = (*outLayer)-&gt;getHandle())<SUB>4125</SUB>> ]
-"11137" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4126</SUB>> ]
-"11107" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4123</SUB>> ]
-"11109" [label = <(createEffectLayer,getFactory().createEffectLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4123</SUB>> ]
-"11130" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4125</SUB>> ]
-"11132" [label = <(getHandle,(*outLayer)-&gt;getHandle())<SUB>4125</SUB>> ]
-"11110" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createEffectLayer)<SUB>4123</SUB>> ]
-"11113" [label = <(&lt;operator&gt;.arrayInitializer,{this, client, std::move(name), w, h, flags, std::move(metadata)})<SUB>4124</SUB>> ]
-"11133" [label = <(&lt;operator&gt;.indirectFieldAccess,(*outLayer)-&gt;getHandle)<SUB>4125</SUB>> ]
-"11111" [label = <(getFactory,getFactory())<SUB>4123</SUB>> ]
-"11112" [label = <(FIELD_IDENTIFIER,createEffectLayer,createEffectLayer)<SUB>4123</SUB>> ]
-"11116" [label = <(std::move,std::move(name))<SUB>4124</SUB>> ]
-"11124" [label = <(std::move,std::move(metadata))<SUB>4124</SUB>> ]
-"11134" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4125</SUB>> ]
-"11136" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4125</SUB>> ]
-"11117" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4124</SUB>> ]
-"11125" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4124</SUB>> ]
-"11119" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4124</SUB>> ]
-"11127" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4124</SUB>> ]
-"11096" [label = <(METHOD,createEffectLayer)<SUB>4120</SUB>> ]
-"11139" [label = <(METHOD_RETURN,status_t)<SUB>4120</SUB>> ]
-  "11106" -> "11130" 
-  "11129" -> "11137" 
-  "11137" -> "11139" 
-  "11107" -> "11111" 
-  "11109" -> "11106" 
-  "11130" -> "11134" 
-  "11132" -> "11129" 
-  "11110" -> "11119" 
-  "11113" -> "11109" 
+"11122" [label = <(&lt;operator&gt;.assignment,*outLayer = getFactory().createEffectLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4122</SUB>> ]
+"11145" [label = <(&lt;operator&gt;.assignment,*handle = (*outLayer)-&gt;getHandle())<SUB>4124</SUB>> ]
+"11153" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4125</SUB>> ]
+"11123" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4122</SUB>> ]
+"11125" [label = <(createEffectLayer,getFactory().createEffectLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4122</SUB>> ]
+"11146" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4124</SUB>> ]
+"11148" [label = <(getHandle,(*outLayer)-&gt;getHandle())<SUB>4124</SUB>> ]
+"11126" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createEffectLayer)<SUB>4122</SUB>> ]
+"11129" [label = <(&lt;operator&gt;.arrayInitializer,{this, client, std::move(name), w, h, flags, std::move(metadata)})<SUB>4123</SUB>> ]
+"11149" [label = <(&lt;operator&gt;.indirectFieldAccess,(*outLayer)-&gt;getHandle)<SUB>4124</SUB>> ]
+"11127" [label = <(getFactory,getFactory())<SUB>4122</SUB>> ]
+"11128" [label = <(FIELD_IDENTIFIER,createEffectLayer,createEffectLayer)<SUB>4122</SUB>> ]
+"11132" [label = <(std::move,std::move(name))<SUB>4123</SUB>> ]
+"11140" [label = <(std::move,std::move(metadata))<SUB>4123</SUB>> ]
+"11150" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4124</SUB>> ]
+"11152" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4124</SUB>> ]
+"11133" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4123</SUB>> ]
+"11141" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4123</SUB>> ]
+"11135" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4123</SUB>> ]
+"11143" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4123</SUB>> ]
+"11112" [label = <(METHOD,createEffectLayer)<SUB>4119</SUB>> ]
+"11155" [label = <(METHOD_RETURN,status_t)<SUB>4119</SUB>> ]
+  "11122" -> "11146" 
+  "11145" -> "11153" 
+  "11153" -> "11155" 
+  "11123" -> "11127" 
+  "11125" -> "11122" 
+  "11146" -> "11150" 
+  "11148" -> "11145" 
+  "11126" -> "11135" 
+  "11129" -> "11125" 
+  "11149" -> "11148" 
+  "11127" -> "11128" 
+  "11128" -> "11126" 
+  "11132" -> "11143" 
+  "11140" -> "11129" 
+  "11150" -> "11152" 
+  "11152" -> "11149" 
   "11133" -> "11132" 
-  "11111" -> "11112" 
-  "11112" -> "11110" 
-  "11116" -> "11127" 
-  "11124" -> "11113" 
-  "11134" -> "11136" 
-  "11136" -> "11133" 
-  "11117" -> "11116" 
-  "11125" -> "11124" 
-  "11119" -> "11117" 
-  "11127" -> "11125" 
-  "11096" -> "11107" 
+  "11141" -> "11140" 
+  "11135" -> "11133" 
+  "11143" -> "11141" 
+  "11112" -> "11123" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/205-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/205-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/205-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/205-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,45 +1,45 @@
 digraph "createContainerLayer" {  
-"11151" [label = <(&lt;operator&gt;.assignment,*outLayer = getFactory().createContainerLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4133</SUB>> ]
-"11174" [label = <(&lt;operator&gt;.assignment,*handle = (*outLayer)-&gt;getHandle())<SUB>4135</SUB>> ]
-"11182" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4136</SUB>> ]
-"11152" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4133</SUB>> ]
-"11154" [label = <(createContainerLayer,getFactory().createContainerLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4133</SUB>> ]
-"11175" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4135</SUB>> ]
-"11177" [label = <(getHandle,(*outLayer)-&gt;getHandle())<SUB>4135</SUB>> ]
-"11155" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createContainerLayer)<SUB>4133</SUB>> ]
-"11158" [label = <(&lt;operator&gt;.arrayInitializer,{this, client, std::move(name), w, h, flags, std::move(metadata)})<SUB>4134</SUB>> ]
-"11178" [label = <(&lt;operator&gt;.indirectFieldAccess,(*outLayer)-&gt;getHandle)<SUB>4135</SUB>> ]
-"11156" [label = <(getFactory,getFactory())<SUB>4133</SUB>> ]
-"11157" [label = <(FIELD_IDENTIFIER,createContainerLayer,createContainerLayer)<SUB>4133</SUB>> ]
-"11161" [label = <(std::move,std::move(name))<SUB>4134</SUB>> ]
-"11169" [label = <(std::move,std::move(metadata))<SUB>4134</SUB>> ]
-"11179" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4135</SUB>> ]
-"11181" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4135</SUB>> ]
-"11162" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4134</SUB>> ]
-"11170" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4134</SUB>> ]
-"11164" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4134</SUB>> ]
-"11172" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4134</SUB>> ]
-"11141" [label = <(METHOD,createContainerLayer)<SUB>4129</SUB>> ]
-"11184" [label = <(METHOD_RETURN,status_t)<SUB>4129</SUB>> ]
-  "11151" -> "11175" 
-  "11174" -> "11182" 
-  "11182" -> "11184" 
-  "11152" -> "11156" 
-  "11154" -> "11151" 
-  "11175" -> "11179" 
-  "11177" -> "11174" 
-  "11155" -> "11164" 
-  "11158" -> "11154" 
+"11167" [label = <(&lt;operator&gt;.assignment,*outLayer = getFactory().createContainerLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4132</SUB>> ]
+"11190" [label = <(&lt;operator&gt;.assignment,*handle = (*outLayer)-&gt;getHandle())<SUB>4134</SUB>> ]
+"11198" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4135</SUB>> ]
+"11168" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4132</SUB>> ]
+"11170" [label = <(createContainerLayer,getFactory().createContainerLayer(\012 {this, client, std::move(name), w, h, flags, std::move(metadata)}))<SUB>4132</SUB>> ]
+"11191" [label = <(&lt;operator&gt;.indirection,*handle)<SUB>4134</SUB>> ]
+"11193" [label = <(getHandle,(*outLayer)-&gt;getHandle())<SUB>4134</SUB>> ]
+"11171" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createContainerLayer)<SUB>4132</SUB>> ]
+"11174" [label = <(&lt;operator&gt;.arrayInitializer,{this, client, std::move(name), w, h, flags, std::move(metadata)})<SUB>4133</SUB>> ]
+"11194" [label = <(&lt;operator&gt;.indirectFieldAccess,(*outLayer)-&gt;getHandle)<SUB>4134</SUB>> ]
+"11172" [label = <(getFactory,getFactory())<SUB>4132</SUB>> ]
+"11173" [label = <(FIELD_IDENTIFIER,createContainerLayer,createContainerLayer)<SUB>4132</SUB>> ]
+"11177" [label = <(std::move,std::move(name))<SUB>4133</SUB>> ]
+"11185" [label = <(std::move,std::move(metadata))<SUB>4133</SUB>> ]
+"11195" [label = <(&lt;operator&gt;.indirection,*outLayer)<SUB>4134</SUB>> ]
+"11197" [label = <(FIELD_IDENTIFIER,getHandle,getHandle)<SUB>4134</SUB>> ]
+"11178" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4133</SUB>> ]
+"11186" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>4133</SUB>> ]
+"11180" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4133</SUB>> ]
+"11188" [label = <(FIELD_IDENTIFIER,move,move)<SUB>4133</SUB>> ]
+"11157" [label = <(METHOD,createContainerLayer)<SUB>4128</SUB>> ]
+"11200" [label = <(METHOD_RETURN,status_t)<SUB>4128</SUB>> ]
+  "11167" -> "11191" 
+  "11190" -> "11198" 
+  "11198" -> "11200" 
+  "11168" -> "11172" 
+  "11170" -> "11167" 
+  "11191" -> "11195" 
+  "11193" -> "11190" 
+  "11171" -> "11180" 
+  "11174" -> "11170" 
+  "11194" -> "11193" 
+  "11172" -> "11173" 
+  "11173" -> "11171" 
+  "11177" -> "11188" 
+  "11185" -> "11174" 
+  "11195" -> "11197" 
+  "11197" -> "11194" 
   "11178" -> "11177" 
-  "11156" -> "11157" 
-  "11157" -> "11155" 
-  "11161" -> "11172" 
-  "11169" -> "11158" 
-  "11179" -> "11181" 
-  "11181" -> "11178" 
-  "11162" -> "11161" 
-  "11170" -> "11169" 
-  "11164" -> "11162" 
-  "11172" -> "11170" 
-  "11141" -> "11152" 
+  "11186" -> "11185" 
+  "11180" -> "11178" 
+  "11188" -> "11186" 
+  "11157" -> "11168" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/206-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/206-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/206-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/206-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,13 +1,13 @@
 digraph "markLayerPendingRemovalLocked" {  
-"11189" [label = <(add,mLayersPendingRemoval.add(layer))<SUB>4140</SUB>> ]
-"11194" [label = <(&lt;operator&gt;.assignment,mLayersRemoved = true)<SUB>4141</SUB>> ]
-"11190" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.add)<SUB>4140</SUB>> ]
-"11192" [label = <(FIELD_IDENTIFIER,add,add)<SUB>4140</SUB>> ]
-"11186" [label = <(METHOD,markLayerPendingRemovalLocked)<SUB>4139</SUB>> ]
-"11198" [label = <(METHOD_RETURN,void)<SUB>4139</SUB>> ]
-  "11189" -> "11194" 
-  "11194" -> "11198" 
-  "11190" -> "11189" 
-  "11192" -> "11190" 
-  "11186" -> "11192" 
+"11205" [label = <(add,mLayersPendingRemoval.add(layer))<SUB>4139</SUB>> ]
+"11210" [label = <(&lt;operator&gt;.assignment,mLayersRemoved = true)<SUB>4140</SUB>> ]
+"11206" [label = <(&lt;operator&gt;.fieldAccess,mLayersPendingRemoval.add)<SUB>4139</SUB>> ]
+"11208" [label = <(FIELD_IDENTIFIER,add,add)<SUB>4139</SUB>> ]
+"11202" [label = <(METHOD,markLayerPendingRemovalLocked)<SUB>4138</SUB>> ]
+"11214" [label = <(METHOD_RETURN,void)<SUB>4138</SUB>> ]
+  "11205" -> "11210" 
+  "11210" -> "11214" 
+  "11206" -> "11205" 
+  "11208" -> "11206" 
+  "11202" -> "11208" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/207-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/207-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/207-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/207-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,68 +1,68 @@
 digraph "onHandleDestroyed" {  
-"11204" [label = <(lock,lock(mStateLock))<SUB>4147</SUB>> ]
-"11221" [label = <(markLayerPendingRemovalLocked,markLayerPendingRemovalLocked(layer))<SUB>4155</SUB>> ]
-"11224" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.begin())<SUB>4157</SUB>> ]
-"11256" [label = <(clear,layer.clear())<SUB>4166</SUB>> ]
-"11207" [label = <(&lt;operator&gt;.equals,layer-&gt;getParent() == nullptr)<SUB>4152</SUB>> ]
-"11226" [label = <(begin,mLayersByLocalBinderToken.begin())<SUB>4157</SUB>> ]
-"11231" [label = <(&lt;operator&gt;.notEquals,it != mLayersByLocalBinderToken.end())<SUB>4158</SUB>> ]
-"11257" [label = <(&lt;operator&gt;.fieldAccess,layer.clear)<SUB>4166</SUB>> ]
-"11208" [label = <(getParent,layer-&gt;getParent())<SUB>4152</SUB>> ]
-"11214" [label = <(remove,mCurrentState.layersSortedByZ.remove(layer))<SUB>4153</SUB>> ]
-"11227" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.begin)<SUB>4157</SUB>> ]
-"11233" [label = <(end,mLayersByLocalBinderToken.end())<SUB>4158</SUB>> ]
-"11259" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>4166</SUB>> ]
-"11209" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>4152</SUB>> ]
-"11215" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.remove)<SUB>4153</SUB>> ]
-"11229" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>4157</SUB>> ]
-"11234" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.end)<SUB>4158</SUB>> ]
-"11239" [label = <(&lt;operator&gt;.equals,it-&gt;second == layer)<SUB>4159</SUB>> ]
-"11211" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>4152</SUB>> ]
-"11216" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>4153</SUB>> ]
-"11219" [label = <(FIELD_IDENTIFIER,remove,remove)<SUB>4153</SUB>> ]
-"11236" [label = <(FIELD_IDENTIFIER,end,end)<SUB>4158</SUB>> ]
-"11240" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>4159</SUB>> ]
-"11245" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.erase(it))<SUB>4160</SUB>> ]
-"11218" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>4153</SUB>> ]
-"11242" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4159</SUB>> ]
-"11247" [label = <(erase,mLayersByLocalBinderToken.erase(it))<SUB>4160</SUB>> ]
-"11254" [label = <(&lt;operator&gt;.postIncrement,it++)<SUB>4162</SUB>> ]
-"11248" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.erase)<SUB>4160</SUB>> ]
-"11250" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>4160</SUB>> ]
-"11200" [label = <(METHOD,onHandleDestroyed)<SUB>4145</SUB>> ]
-"11260" [label = <(METHOD_RETURN,void)<SUB>4145</SUB>> ]
-  "11204" -> "11211" 
-  "11221" -> "11229" 
-  "11224" -> "11236" 
-  "11256" -> "11260" 
-  "11207" -> "11218" 
-  "11207" -> "11221" 
-  "11226" -> "11224" 
-  "11231" -> "11242" 
-  "11231" -> "11259" 
-  "11257" -> "11256" 
-  "11208" -> "11207" 
-  "11214" -> "11221" 
-  "11227" -> "11226" 
-  "11233" -> "11231" 
-  "11259" -> "11257" 
-  "11209" -> "11208" 
-  "11215" -> "11214" 
-  "11229" -> "11227" 
-  "11234" -> "11233" 
-  "11239" -> "11250" 
-  "11239" -> "11254" 
-  "11211" -> "11209" 
-  "11216" -> "11219" 
-  "11219" -> "11215" 
-  "11236" -> "11234" 
-  "11240" -> "11239" 
-  "11245" -> "11236" 
-  "11218" -> "11216" 
+"11220" [label = <(lock,lock(mStateLock))<SUB>4146</SUB>> ]
+"11237" [label = <(markLayerPendingRemovalLocked,markLayerPendingRemovalLocked(layer))<SUB>4154</SUB>> ]
+"11240" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.begin())<SUB>4156</SUB>> ]
+"11272" [label = <(clear,layer.clear())<SUB>4165</SUB>> ]
+"11223" [label = <(&lt;operator&gt;.equals,layer-&gt;getParent() == nullptr)<SUB>4151</SUB>> ]
+"11242" [label = <(begin,mLayersByLocalBinderToken.begin())<SUB>4156</SUB>> ]
+"11247" [label = <(&lt;operator&gt;.notEquals,it != mLayersByLocalBinderToken.end())<SUB>4157</SUB>> ]
+"11273" [label = <(&lt;operator&gt;.fieldAccess,layer.clear)<SUB>4165</SUB>> ]
+"11224" [label = <(getParent,layer-&gt;getParent())<SUB>4151</SUB>> ]
+"11230" [label = <(remove,mCurrentState.layersSortedByZ.remove(layer))<SUB>4152</SUB>> ]
+"11243" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.begin)<SUB>4156</SUB>> ]
+"11249" [label = <(end,mLayersByLocalBinderToken.end())<SUB>4157</SUB>> ]
+"11275" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>4165</SUB>> ]
+"11225" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;getParent)<SUB>4151</SUB>> ]
+"11231" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ.remove)<SUB>4152</SUB>> ]
+"11245" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>4156</SUB>> ]
+"11250" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.end)<SUB>4157</SUB>> ]
+"11255" [label = <(&lt;operator&gt;.equals,it-&gt;second == layer)<SUB>4158</SUB>> ]
+"11227" [label = <(FIELD_IDENTIFIER,getParent,getParent)<SUB>4151</SUB>> ]
+"11232" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>4152</SUB>> ]
+"11235" [label = <(FIELD_IDENTIFIER,remove,remove)<SUB>4152</SUB>> ]
+"11252" [label = <(FIELD_IDENTIFIER,end,end)<SUB>4157</SUB>> ]
+"11256" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>4158</SUB>> ]
+"11261" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.erase(it))<SUB>4159</SUB>> ]
+"11234" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>4152</SUB>> ]
+"11258" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4158</SUB>> ]
+"11263" [label = <(erase,mLayersByLocalBinderToken.erase(it))<SUB>4159</SUB>> ]
+"11270" [label = <(&lt;operator&gt;.postIncrement,it++)<SUB>4161</SUB>> ]
+"11264" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.erase)<SUB>4159</SUB>> ]
+"11266" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>4159</SUB>> ]
+"11216" [label = <(METHOD,onHandleDestroyed)<SUB>4144</SUB>> ]
+"11276" [label = <(METHOD_RETURN,void)<SUB>4144</SUB>> ]
+  "11220" -> "11227" 
+  "11237" -> "11245" 
+  "11240" -> "11252" 
+  "11272" -> "11276" 
+  "11223" -> "11234" 
+  "11223" -> "11237" 
   "11242" -> "11240" 
-  "11247" -> "11245" 
-  "11254" -> "11236" 
-  "11248" -> "11247" 
-  "11250" -> "11248" 
-  "11200" -> "11204" 
+  "11247" -> "11258" 
+  "11247" -> "11275" 
+  "11273" -> "11272" 
+  "11224" -> "11223" 
+  "11230" -> "11237" 
+  "11243" -> "11242" 
+  "11249" -> "11247" 
+  "11275" -> "11273" 
+  "11225" -> "11224" 
+  "11231" -> "11230" 
+  "11245" -> "11243" 
+  "11250" -> "11249" 
+  "11255" -> "11266" 
+  "11255" -> "11270" 
+  "11227" -> "11225" 
+  "11232" -> "11235" 
+  "11235" -> "11231" 
+  "11252" -> "11250" 
+  "11256" -> "11255" 
+  "11261" -> "11252" 
+  "11234" -> "11232" 
+  "11258" -> "11256" 
+  "11263" -> "11261" 
+  "11270" -> "11252" 
+  "11264" -> "11263" 
+  "11266" -> "11264" 
+  "11216" -> "11220" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/208-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/208-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/208-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/208-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,158 +1,158 @@
 digraph "onInitializeDisplays" {  
-"11265" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>4172</SUB>> ]
-"11274" [label = <(&lt;operator&gt;.assignment,token = display-&gt;getDisplayToken().promote())<SUB>4175</SUB>> ]
-"11283" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(token == nullptr))<SUB>4176</SUB>> ]
-"11287" [label = <(&lt;operator&gt;.greaterThan,Vector&lt;ComposerState&gt; state)<SUB>4179</SUB>> ]
-"11292" [label = <(&lt;operator&gt;.greaterThan,Vector&lt;DisplayState&gt; displays)<SUB>4180</SUB>> ]
-"11298" [label = <(&lt;operator&gt;.assignment,d.what = DisplayState::eDisplayProjectionChanged |\012 DisplayState::eLayerStackChanged)<SUB>4182</SUB>> ]
-"11309" [label = <(&lt;operator&gt;.assignment,d.token = token)<SUB>4184</SUB>> ]
-"11314" [label = <(&lt;operator&gt;.assignment,d.layerStack = 0)<SUB>4185</SUB>> ]
-"11319" [label = <(&lt;operator&gt;.assignment,d.orientation = ui::ROTATION_0)<SUB>4186</SUB>> ]
-"11326" [label = <(makeInvalid,d.frame.makeInvalid())<SUB>4187</SUB>> ]
-"11332" [label = <(makeInvalid,d.viewport.makeInvalid())<SUB>4188</SUB>> ]
-"11338" [label = <(&lt;operator&gt;.assignment,d.width = 0)<SUB>4189</SUB>> ]
-"11343" [label = <(&lt;operator&gt;.assignment,d.height = 0)<SUB>4190</SUB>> ]
-"11348" [label = <(add,displays.add(d))<SUB>4191</SUB>> ]
-"11353" [label = <(setTransactionState,setTransactionState(state, displays, 0, nullptr, mPendingInputWindowCommands, -1, {}, false,\012 {}))<SUB>4192</SUB>> ]
-"11364" [label = <(setPowerModeInternal,setPowerModeInternal(display, hal::PowerMode::ON))<SUB>4195</SUB>> ]
-"11372" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4196</SUB>> ]
-"11381" [label = <(setDisplayRefreshPeriod,mAnimFrameTracker.setDisplayRefreshPeriod(vsyncPeriod))<SUB>4197</SUB>> ]
-"11387" [label = <(&lt;operator&gt;.assignment,stats{0 /* vsyncTime */, vsyncPeriod})<SUB>4201</SUB>> ]
-"11392" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, 0))<SUB>4202</SUB>> ]
-"11267" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>4172</SUB>> ]
-"11269" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>4173</SUB>> ]
-"11276" [label = <(promote,display-&gt;getDisplayToken().promote())<SUB>4175</SUB>> ]
-"11284" [label = <(&lt;operator&gt;.equals,token == nullptr)<SUB>4176</SUB>> ]
-"11288" [label = <(&lt;operator&gt;.lessThan,Vector&lt;ComposerState)<SUB>4179</SUB>> ]
-"11293" [label = <(&lt;operator&gt;.lessThan,Vector&lt;DisplayState)<SUB>4180</SUB>> ]
-"11299" [label = <(&lt;operator&gt;.fieldAccess,d.what)<SUB>4182</SUB>> ]
-"11302" [label = <(&lt;operator&gt;.or,DisplayState::eDisplayProjectionChanged |\012 DisplayState::eLayerStackChanged)<SUB>4182</SUB>> ]
-"11310" [label = <(&lt;operator&gt;.fieldAccess,d.token)<SUB>4184</SUB>> ]
-"11315" [label = <(&lt;operator&gt;.fieldAccess,d.layerStack)<SUB>4185</SUB>> ]
-"11320" [label = <(&lt;operator&gt;.fieldAccess,d.orientation)<SUB>4186</SUB>> ]
-"11323" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_0)<SUB>4186</SUB>> ]
-"11327" [label = <(&lt;operator&gt;.fieldAccess,d.frame.makeInvalid)<SUB>4187</SUB>> ]
-"11333" [label = <(&lt;operator&gt;.fieldAccess,d.viewport.makeInvalid)<SUB>4188</SUB>> ]
-"11339" [label = <(&lt;operator&gt;.fieldAccess,d.width)<SUB>4189</SUB>> ]
-"11344" [label = <(&lt;operator&gt;.fieldAccess,d.height)<SUB>4190</SUB>> ]
-"11349" [label = <(&lt;operator&gt;.fieldAccess,displays.add)<SUB>4191</SUB>> ]
-"11359" [label = <(&lt;operator&gt;.minus,-1)<SUB>4192</SUB>> ]
-"11361" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>4192</SUB>> ]
-"11363" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>4193</SUB>> ]
-"11366" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4195</SUB>> ]
-"11374" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4196</SUB>> ]
-"11382" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setDisplayRefreshPeriod)<SUB>4197</SUB>> ]
-"11389" [label = <(&lt;operator&gt;.arrayInitializer,{0 /* vsyncTime */, vsyncPeriod})<SUB>4201</SUB>> ]
-"11272" [label = <(RETURN,return;,return;)<SUB>4173</SUB>> ]
-"11277" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getDisplayToken().promote)<SUB>4175</SUB>> ]
-"11301" [label = <(FIELD_IDENTIFIER,what,what)<SUB>4182</SUB>> ]
-"11303" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplayProjectionChanged)<SUB>4182</SUB>> ]
-"11306" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eLayerStackChanged)<SUB>4183</SUB>> ]
-"11312" [label = <(FIELD_IDENTIFIER,token,token)<SUB>4184</SUB>> ]
-"11317" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>4185</SUB>> ]
-"11322" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>4186</SUB>> ]
-"11325" [label = <(FIELD_IDENTIFIER,ROTATION_0,ROTATION_0)<SUB>4186</SUB>> ]
-"11328" [label = <(&lt;operator&gt;.fieldAccess,d.frame)<SUB>4187</SUB>> ]
-"11331" [label = <(FIELD_IDENTIFIER,makeInvalid,makeInvalid)<SUB>4187</SUB>> ]
-"11334" [label = <(&lt;operator&gt;.fieldAccess,d.viewport)<SUB>4188</SUB>> ]
-"11337" [label = <(FIELD_IDENTIFIER,makeInvalid,makeInvalid)<SUB>4188</SUB>> ]
-"11341" [label = <(FIELD_IDENTIFIER,width,width)<SUB>4189</SUB>> ]
-"11346" [label = <(FIELD_IDENTIFIER,height,height)<SUB>4190</SUB>> ]
-"11351" [label = <(FIELD_IDENTIFIER,add,add)<SUB>4191</SUB>> ]
-"11367" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4195</SUB>> ]
-"11370" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4195</SUB>> ]
-"11375" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>4196</SUB>> ]
-"11384" [label = <(FIELD_IDENTIFIER,setDisplayRefreshPeriod,setDisplayRefreshPeriod)<SUB>4197</SUB>> ]
-"11278" [label = <(getDisplayToken,display-&gt;getDisplayToken())<SUB>4175</SUB>> ]
-"11282" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>4175</SUB>> ]
-"11305" [label = <(FIELD_IDENTIFIER,eDisplayProjectionChanged,eDisplayProjectionChanged)<SUB>4182</SUB>> ]
-"11308" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>4183</SUB>> ]
-"11330" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>4187</SUB>> ]
-"11336" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>4188</SUB>> ]
-"11376" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>4196</SUB>> ]
-"11380" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>4196</SUB>> ]
-"11279" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getDisplayToken)<SUB>4175</SUB>> ]
-"11377" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>4196</SUB>> ]
-"11281" [label = <(FIELD_IDENTIFIER,getDisplayToken,getDisplayToken)<SUB>4175</SUB>> ]
-"11379" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>4196</SUB>> ]
-"11262" [label = <(METHOD,onInitializeDisplays)<SUB>4171</SUB>> ]
-"11395" [label = <(METHOD_RETURN,void)<SUB>4171</SUB>> ]
-  "11265" -> "11269" 
-  "11274" -> "11284" 
-  "11283" -> "11288" 
-  "11287" -> "11293" 
-  "11292" -> "11301" 
-  "11298" -> "11312" 
-  "11309" -> "11317" 
-  "11314" -> "11322" 
-  "11319" -> "11330" 
-  "11326" -> "11336" 
-  "11332" -> "11341" 
-  "11338" -> "11346" 
-  "11343" -> "11351" 
-  "11348" -> "11359" 
-  "11353" -> "11367" 
-  "11364" -> "11379" 
-  "11372" -> "11384" 
-  "11381" -> "11389" 
-  "11387" -> "11392" 
-  "11392" -> "11395" 
-  "11267" -> "11265" 
-  "11269" -> "11272" 
-  "11269" -> "11281" 
-  "11276" -> "11274" 
-  "11284" -> "11283" 
-  "11288" -> "11287" 
-  "11293" -> "11292" 
-  "11299" -> "11305" 
-  "11302" -> "11298" 
-  "11310" -> "11309" 
-  "11315" -> "11314" 
-  "11320" -> "11325" 
-  "11323" -> "11319" 
-  "11327" -> "11326" 
-  "11333" -> "11332" 
-  "11339" -> "11338" 
-  "11344" -> "11343" 
+"11281" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>4171</SUB>> ]
+"11290" [label = <(&lt;operator&gt;.assignment,token = display-&gt;getDisplayToken().promote())<SUB>4174</SUB>> ]
+"11299" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(token == nullptr))<SUB>4175</SUB>> ]
+"11303" [label = <(&lt;operator&gt;.greaterThan,Vector&lt;ComposerState&gt; state)<SUB>4178</SUB>> ]
+"11308" [label = <(&lt;operator&gt;.greaterThan,Vector&lt;DisplayState&gt; displays)<SUB>4179</SUB>> ]
+"11314" [label = <(&lt;operator&gt;.assignment,d.what = DisplayState::eDisplayProjectionChanged |\012 DisplayState::eLayerStackChanged)<SUB>4181</SUB>> ]
+"11325" [label = <(&lt;operator&gt;.assignment,d.token = token)<SUB>4183</SUB>> ]
+"11330" [label = <(&lt;operator&gt;.assignment,d.layerStack = 0)<SUB>4184</SUB>> ]
+"11335" [label = <(&lt;operator&gt;.assignment,d.orientation = ui::ROTATION_0)<SUB>4185</SUB>> ]
+"11342" [label = <(makeInvalid,d.frame.makeInvalid())<SUB>4186</SUB>> ]
+"11348" [label = <(makeInvalid,d.viewport.makeInvalid())<SUB>4187</SUB>> ]
+"11354" [label = <(&lt;operator&gt;.assignment,d.width = 0)<SUB>4188</SUB>> ]
+"11359" [label = <(&lt;operator&gt;.assignment,d.height = 0)<SUB>4189</SUB>> ]
+"11364" [label = <(add,displays.add(d))<SUB>4190</SUB>> ]
+"11369" [label = <(setTransactionState,setTransactionState(state, displays, 0, nullptr, mPendingInputWindowCommands, -1, {}, false,\012 {}))<SUB>4191</SUB>> ]
+"11380" [label = <(setPowerModeInternal,setPowerModeInternal(display, hal::PowerMode::ON))<SUB>4194</SUB>> ]
+"11388" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4195</SUB>> ]
+"11397" [label = <(setDisplayRefreshPeriod,mAnimFrameTracker.setDisplayRefreshPeriod(vsyncPeriod))<SUB>4196</SUB>> ]
+"11403" [label = <(&lt;operator&gt;.assignment,stats{0 /* vsyncTime */, vsyncPeriod})<SUB>4200</SUB>> ]
+"11408" [label = <(setCompositorTimingSnapped,setCompositorTimingSnapped(stats, 0))<SUB>4201</SUB>> ]
+"11283" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>4171</SUB>> ]
+"11285" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>4172</SUB>> ]
+"11292" [label = <(promote,display-&gt;getDisplayToken().promote())<SUB>4174</SUB>> ]
+"11300" [label = <(&lt;operator&gt;.equals,token == nullptr)<SUB>4175</SUB>> ]
+"11304" [label = <(&lt;operator&gt;.lessThan,Vector&lt;ComposerState)<SUB>4178</SUB>> ]
+"11309" [label = <(&lt;operator&gt;.lessThan,Vector&lt;DisplayState)<SUB>4179</SUB>> ]
+"11315" [label = <(&lt;operator&gt;.fieldAccess,d.what)<SUB>4181</SUB>> ]
+"11318" [label = <(&lt;operator&gt;.or,DisplayState::eDisplayProjectionChanged |\012 DisplayState::eLayerStackChanged)<SUB>4181</SUB>> ]
+"11326" [label = <(&lt;operator&gt;.fieldAccess,d.token)<SUB>4183</SUB>> ]
+"11331" [label = <(&lt;operator&gt;.fieldAccess,d.layerStack)<SUB>4184</SUB>> ]
+"11336" [label = <(&lt;operator&gt;.fieldAccess,d.orientation)<SUB>4185</SUB>> ]
+"11339" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_0)<SUB>4185</SUB>> ]
+"11343" [label = <(&lt;operator&gt;.fieldAccess,d.frame.makeInvalid)<SUB>4186</SUB>> ]
+"11349" [label = <(&lt;operator&gt;.fieldAccess,d.viewport.makeInvalid)<SUB>4187</SUB>> ]
+"11355" [label = <(&lt;operator&gt;.fieldAccess,d.width)<SUB>4188</SUB>> ]
+"11360" [label = <(&lt;operator&gt;.fieldAccess,d.height)<SUB>4189</SUB>> ]
+"11365" [label = <(&lt;operator&gt;.fieldAccess,displays.add)<SUB>4190</SUB>> ]
+"11375" [label = <(&lt;operator&gt;.minus,-1)<SUB>4191</SUB>> ]
+"11377" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>4191</SUB>> ]
+"11379" [label = <(&lt;operator&gt;.arrayInitializer,{})<SUB>4192</SUB>> ]
+"11382" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4194</SUB>> ]
+"11390" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4195</SUB>> ]
+"11398" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.setDisplayRefreshPeriod)<SUB>4196</SUB>> ]
+"11405" [label = <(&lt;operator&gt;.arrayInitializer,{0 /* vsyncTime */, vsyncPeriod})<SUB>4200</SUB>> ]
+"11288" [label = <(RETURN,return;,return;)<SUB>4172</SUB>> ]
+"11293" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getDisplayToken().promote)<SUB>4174</SUB>> ]
+"11317" [label = <(FIELD_IDENTIFIER,what,what)<SUB>4181</SUB>> ]
+"11319" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eDisplayProjectionChanged)<SUB>4181</SUB>> ]
+"11322" [label = <(&lt;operator&gt;.fieldAccess,DisplayState::eLayerStackChanged)<SUB>4182</SUB>> ]
+"11328" [label = <(FIELD_IDENTIFIER,token,token)<SUB>4183</SUB>> ]
+"11333" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>4184</SUB>> ]
+"11338" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>4185</SUB>> ]
+"11341" [label = <(FIELD_IDENTIFIER,ROTATION_0,ROTATION_0)<SUB>4185</SUB>> ]
+"11344" [label = <(&lt;operator&gt;.fieldAccess,d.frame)<SUB>4186</SUB>> ]
+"11347" [label = <(FIELD_IDENTIFIER,makeInvalid,makeInvalid)<SUB>4186</SUB>> ]
+"11350" [label = <(&lt;operator&gt;.fieldAccess,d.viewport)<SUB>4187</SUB>> ]
+"11353" [label = <(FIELD_IDENTIFIER,makeInvalid,makeInvalid)<SUB>4187</SUB>> ]
+"11357" [label = <(FIELD_IDENTIFIER,width,width)<SUB>4188</SUB>> ]
+"11362" [label = <(FIELD_IDENTIFIER,height,height)<SUB>4189</SUB>> ]
+"11367" [label = <(FIELD_IDENTIFIER,add,add)<SUB>4190</SUB>> ]
+"11383" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4194</SUB>> ]
+"11386" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4194</SUB>> ]
+"11391" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>4195</SUB>> ]
+"11400" [label = <(FIELD_IDENTIFIER,setDisplayRefreshPeriod,setDisplayRefreshPeriod)<SUB>4196</SUB>> ]
+"11294" [label = <(getDisplayToken,display-&gt;getDisplayToken())<SUB>4174</SUB>> ]
+"11298" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>4174</SUB>> ]
+"11321" [label = <(FIELD_IDENTIFIER,eDisplayProjectionChanged,eDisplayProjectionChanged)<SUB>4181</SUB>> ]
+"11324" [label = <(FIELD_IDENTIFIER,eLayerStackChanged,eLayerStackChanged)<SUB>4182</SUB>> ]
+"11346" [label = <(FIELD_IDENTIFIER,frame,frame)<SUB>4186</SUB>> ]
+"11352" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>4187</SUB>> ]
+"11392" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>4195</SUB>> ]
+"11396" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>4195</SUB>> ]
+"11295" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getDisplayToken)<SUB>4174</SUB>> ]
+"11393" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>4195</SUB>> ]
+"11297" [label = <(FIELD_IDENTIFIER,getDisplayToken,getDisplayToken)<SUB>4174</SUB>> ]
+"11395" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>4195</SUB>> ]
+"11278" [label = <(METHOD,onInitializeDisplays)<SUB>4170</SUB>> ]
+"11411" [label = <(METHOD_RETURN,void)<SUB>4170</SUB>> ]
+  "11281" -> "11285" 
+  "11290" -> "11300" 
+  "11299" -> "11304" 
+  "11303" -> "11309" 
+  "11308" -> "11317" 
+  "11314" -> "11328" 
+  "11325" -> "11333" 
+  "11330" -> "11338" 
+  "11335" -> "11346" 
+  "11342" -> "11352" 
+  "11348" -> "11357" 
+  "11354" -> "11362" 
+  "11359" -> "11367" 
+  "11364" -> "11375" 
+  "11369" -> "11383" 
+  "11380" -> "11395" 
+  "11388" -> "11400" 
+  "11397" -> "11405" 
+  "11403" -> "11408" 
+  "11408" -> "11411" 
+  "11283" -> "11281" 
+  "11285" -> "11288" 
+  "11285" -> "11297" 
+  "11292" -> "11290" 
+  "11300" -> "11299" 
+  "11304" -> "11303" 
+  "11309" -> "11308" 
+  "11315" -> "11321" 
+  "11318" -> "11314" 
+  "11326" -> "11325" 
+  "11331" -> "11330" 
+  "11336" -> "11341" 
+  "11339" -> "11335" 
+  "11343" -> "11342" 
   "11349" -> "11348" 
-  "11359" -> "11361" 
-  "11361" -> "11363" 
-  "11363" -> "11353" 
-  "11366" -> "11364" 
-  "11374" -> "11372" 
-  "11382" -> "11381" 
-  "11389" -> "11387" 
-  "11272" -> "11395" 
-  "11277" -> "11276" 
-  "11301" -> "11299" 
-  "11303" -> "11308" 
-  "11306" -> "11302" 
-  "11312" -> "11310" 
+  "11355" -> "11354" 
+  "11360" -> "11359" 
+  "11365" -> "11364" 
+  "11375" -> "11377" 
+  "11377" -> "11379" 
+  "11379" -> "11369" 
+  "11382" -> "11380" 
+  "11390" -> "11388" 
+  "11398" -> "11397" 
+  "11405" -> "11403" 
+  "11288" -> "11411" 
+  "11293" -> "11292" 
   "11317" -> "11315" 
-  "11322" -> "11320" 
-  "11325" -> "11323" 
-  "11328" -> "11331" 
-  "11331" -> "11327" 
-  "11334" -> "11337" 
-  "11337" -> "11333" 
+  "11319" -> "11324" 
+  "11322" -> "11318" 
+  "11328" -> "11326" 
+  "11333" -> "11331" 
+  "11338" -> "11336" 
   "11341" -> "11339" 
+  "11344" -> "11347" 
+  "11347" -> "11343" 
+  "11350" -> "11353" 
+  "11353" -> "11349" 
+  "11357" -> "11355" 
+  "11362" -> "11360" 
+  "11367" -> "11365" 
+  "11383" -> "11386" 
+  "11386" -> "11382" 
+  "11391" -> "11390" 
+  "11400" -> "11398" 
+  "11294" -> "11298" 
+  "11298" -> "11293" 
+  "11321" -> "11319" 
+  "11324" -> "11322" 
   "11346" -> "11344" 
-  "11351" -> "11349" 
-  "11367" -> "11370" 
-  "11370" -> "11366" 
-  "11375" -> "11374" 
-  "11384" -> "11382" 
-  "11278" -> "11282" 
-  "11282" -> "11277" 
-  "11305" -> "11303" 
-  "11308" -> "11306" 
-  "11330" -> "11328" 
-  "11336" -> "11334" 
-  "11376" -> "11380" 
-  "11380" -> "11375" 
-  "11279" -> "11278" 
-  "11377" -> "11376" 
-  "11281" -> "11279" 
-  "11379" -> "11377" 
-  "11262" -> "11267" 
+  "11352" -> "11350" 
+  "11392" -> "11396" 
+  "11396" -> "11391" 
+  "11295" -> "11294" 
+  "11393" -> "11392" 
+  "11297" -> "11295" 
+  "11395" -> "11393" 
+  "11278" -> "11283" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/209-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/209-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/209-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/209-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,9 +1,9 @@
 digraph "initializeDisplays" {  
-"11399" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([this]() MAIN_THREAD { onInitializeDisplays(); },static_cast&lt;void&gt;(schedule([this]() MAIN_THREAD { onInitializeDisplays(); })<SUB>4207</SUB>> ]
-"11400" [label = <(UNKNOWN,));,));)<SUB>4207</SUB>> ]
-"11397" [label = <(METHOD,initializeDisplays)<SUB>4205</SUB>> ]
-"11401" [label = <(METHOD_RETURN,void)<SUB>4205</SUB>> ]
-  "11399" -> "11400" 
-  "11400" -> "11401" 
-  "11397" -> "11399" 
+"11415" [label = <(UNKNOWN,static_cast&lt;void&gt;(schedule([this]() MAIN_THREAD { onInitializeDisplays(); },static_cast&lt;void&gt;(schedule([this]() MAIN_THREAD { onInitializeDisplays(); })<SUB>4206</SUB>> ]
+"11416" [label = <(UNKNOWN,));,));)<SUB>4206</SUB>> ]
+"11413" [label = <(METHOD,initializeDisplays)<SUB>4204</SUB>> ]
+"11417" [label = <(METHOD_RETURN,void)<SUB>4204</SUB>> ]
+  "11415" -> "11416" 
+  "11416" -> "11417" 
+  "11413" -> "11415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/21-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/21-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/21-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/21-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_28" {  
-"97" [label = <(METHOD,anonymous_lambda_28)<SUB>2883</SUB>> ]
-"100" [label = <(METHOD_RETURN,ANY)<SUB>2883</SUB>> ]
+"97" [label = <(METHOD,anonymous_lambda_28)<SUB>2882</SUB>> ]
+"100" [label = <(METHOD_RETURN,ANY)<SUB>2882</SUB>> ]
   "97" -> "100" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/210-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/210-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/210-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/210-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,409 +1,409 @@
 digraph "setPowerModeInternal" {  
-"11418" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4216</SUB>> ]
-"11424" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>4217</SUB>> ]
-"11427" [label = <(ALOGD,ALOGD(&quot;Setting power mode %d on display %s&quot;, mode, to_string(*displayId).c_str()))<SUB>4219</SUB>> ]
-"11437" [label = <(&lt;operator&gt;.assignment,currentMode = display-&gt;getPowerMode())<SUB>4221</SUB>> ]
-"11449" [label = <(setPowerMode,display-&gt;setPowerMode(mode))<SUB>4226</SUB>> ]
-"11472" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4231</SUB>> ]
-"11742" [label = <(ALOGD,ALOGD(&quot;Finished setting power mode %d on display %s&quot;, mode, to_string(*displayId).c_str()))<SUB>4287</SUB>> ]
-"11408" [label = <(isVirtual,display-&gt;isVirtual())<SUB>4211</SUB>> ]
-"11420" [label = <(getId,display-&gt;getId())<SUB>4216</SUB>> ]
-"11425" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4217</SUB>> ]
-"11430" [label = <(c_str,to_string(*displayId).c_str())<SUB>4219</SUB>> ]
-"11439" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>4221</SUB>> ]
-"11444" [label = <(&lt;operator&gt;.equals,mode == currentMode)<SUB>4222</SUB>> ]
-"11450" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setPowerMode)<SUB>4226</SUB>> ]
-"11455" [label = <(isEnabled,mInterceptor-&gt;isEnabled())<SUB>4228</SUB>> ]
-"11474" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4231</SUB>> ]
-"11482" [label = <(&lt;operator&gt;.equals,currentMode == hal::PowerMode::OFF)<SUB>4232</SUB>> ]
-"11716" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4281</SUB>> ]
-"11745" [label = <(c_str,to_string(*displayId).c_str())<SUB>4287</SUB>> ]
-"11409" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>4211</SUB>> ]
-"11413" [label = <(ALOGE,ALOGE(&quot;%s: Invalid operation on virtual display&quot;, __FUNCTION__))<SUB>4212</SUB>> ]
-"11416" [label = <(RETURN,return;,return;)<SUB>4213</SUB>> ]
-"11421" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4216</SUB>> ]
-"11431" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4219</SUB>> ]
-"11440" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>4221</SUB>> ]
-"11448" [label = <(RETURN,return;,return;)<SUB>4223</SUB>> ]
-"11452" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4226</SUB>> ]
-"11456" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;isEnabled)<SUB>4228</SUB>> ]
-"11460" [label = <(savePowerModeUpdate,mInterceptor-&gt;savePowerModeUpdate(display-&gt;getSequenceId(), static_cast&lt;int32_t&gt;(mode)))<SUB>4229</SUB>> ]
-"11475" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>4231</SUB>> ]
-"11484" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>4232</SUB>> ]
-"11503" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4236</SUB>> ]
-"11542" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>4243</SUB>> ]
-"11545" [label = <(&lt;operator&gt;.assignment,mHasPoweredOff = true)<SUB>4244</SUB>> ]
-"11548" [label = <(repaintEverything,repaintEverything())<SUB>4245</SUB>> ]
-"11717" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4281</SUB>> ]
-"11721" [label = <(setPowerMode,mTimeStats-&gt;setPowerMode(mode))<SUB>4282</SUB>> ]
-"11726" [label = <(setPowerMode,mRefreshRateStats-&gt;setPowerMode(mode))<SUB>4283</SUB>> ]
-"11731" [label = <(setDisplayPowerState,mScheduler-&gt;setDisplayPowerState(mode == hal::PowerMode::ON))<SUB>4284</SUB>> ]
-"11746" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4287</SUB>> ]
-"11411" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>4211</SUB>> ]
-"11423" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4216</SUB>> ]
-"11432" [label = <(to_string,to_string(*displayId))<SUB>4219</SUB>> ]
-"11435" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4219</SUB>> ]
-"11442" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>4221</SUB>> ]
-"11458" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>4228</SUB>> ]
-"11461" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;savePowerModeUpdate)<SUB>4229</SUB>> ]
-"11464" [label = <(getSequenceId,display-&gt;getSequenceId())<SUB>4229</SUB>> ]
-"11468" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(mode))<SUB>4229</SUB>> ]
-"11476" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>4231</SUB>> ]
-"11480" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>4231</SUB>> ]
-"11485" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4232</SUB>> ]
-"11488" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>4232</SUB>> ]
-"11491" [label = <(&lt;operator&gt;.notEquals,SurfaceFlinger::setSchedFifo(true) != NO_ERROR)<SUB>4233</SUB>> ]
-"11504" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4236</SUB>> ]
-"11507" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4236</SUB>> ]
-"11511" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; mode != hal::PowerMode::DOZE_SUSPEND)<SUB>4237</SUB>> ]
-"11719" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4281</SUB>> ]
-"11722" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;setPowerMode)<SUB>4282</SUB>> ]
-"11727" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setPowerMode)<SUB>4283</SUB>> ]
-"11732" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setDisplayPowerState)<SUB>4284</SUB>> ]
-"11735" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::ON)<SUB>4284</SUB>> ]
-"11747" [label = <(to_string,to_string(*displayId))<SUB>4287</SUB>> ]
-"11750" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4287</SUB>> ]
-"11433" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4219</SUB>> ]
-"11463" [label = <(FIELD_IDENTIFIER,savePowerModeUpdate,savePowerModeUpdate)<SUB>4229</SUB>> ]
-"11465" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSequenceId)<SUB>4229</SUB>> ]
-"11469" [label = <(UNKNOWN,int32_t,int32_t)<SUB>4229</SUB>> ]
-"11477" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>4231</SUB>> ]
-"11492" [label = <(SurfaceFlinger::setSchedFifo,SurfaceFlinger::setSchedFifo(true))<SUB>4233</SUB>> ]
-"11499" [label = <(ALOGW,ALOGW(&quot;Couldn't set SCHED_FIFO on display on: %s\n&quot;, strerror(errno)))<SUB>4234</SUB>> ]
-"11505" [label = <(getHwComposer,getHwComposer())<SUB>4236</SUB>> ]
-"11506" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4236</SUB>> ]
-"11512" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4237</SUB>> ]
-"11516" [label = <(&lt;operator&gt;.notEquals,mode != hal::PowerMode::DOZE_SUSPEND)<SUB>4237</SUB>> ]
-"11524" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, mHWCVsyncPendingState))<SUB>4238</SUB>> ]
-"11531" [label = <(onScreenAcquired,mScheduler-&gt;onScreenAcquired(mAppConnectionHandle))<SUB>4239</SUB>> ]
-"11536" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, vsyncPeriod))<SUB>4240</SUB>> ]
-"11552" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::OFF)<SUB>4246</SUB>> ]
-"11724" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4282</SUB>> ]
-"11729" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4283</SUB>> ]
-"11734" [label = <(FIELD_IDENTIFIER,setDisplayPowerState,setDisplayPowerState)<SUB>4284</SUB>> ]
-"11737" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4284</SUB>> ]
-"11748" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4287</SUB>> ]
-"11467" [label = <(FIELD_IDENTIFIER,getSequenceId,getSequenceId)<SUB>4229</SUB>> ]
-"11479" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>4231</SUB>> ]
-"11493" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::setSchedFifo)<SUB>4233</SUB>> ]
-"11501" [label = <(strerror,strerror(errno))<SUB>4234</SUB>> ]
-"11513" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4237</SUB>> ]
-"11518" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4237</SUB>> ]
-"11525" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>4238</SUB>> ]
-"11528" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4238</SUB>> ]
-"11532" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenAcquired)<SUB>4239</SUB>> ]
-"11537" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>4240</SUB>> ]
-"11554" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>4246</SUB>> ]
-"11597" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, hal::Vsync::DISABLE))<SUB>4257</SUB>> ]
-"11608" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4259</SUB>> ]
-"11615" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>4260</SUB>> ]
-"11738" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4284</SUB>> ]
-"11741" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4284</SUB>> ]
-"11495" [label = <(FIELD_IDENTIFIER,setSchedFifo,setSchedFifo)<SUB>4233</SUB>> ]
-"11515" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4237</SUB>> ]
-"11519" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4237</SUB>> ]
-"11522" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4237</SUB>> ]
-"11526" [label = <(getHwComposer,getHwComposer())<SUB>4238</SUB>> ]
-"11527" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>4238</SUB>> ]
-"11534" [label = <(FIELD_IDENTIFIER,onScreenAcquired,onScreenAcquired)<SUB>4239</SUB>> ]
-"11539" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>4240</SUB>> ]
-"11555" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4246</SUB>> ]
-"11558" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>4246</SUB>> ]
-"11561" [label = <(&lt;operator&gt;.notEquals,SurfaceFlinger::setSchedFifo(false) != NO_ERROR)<SUB>4248</SUB>> ]
-"11574" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; currentMode != hal::PowerMode::DOZE_SUSPEND)<SUB>4251</SUB>> ]
-"11598" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>4257</SUB>> ]
-"11601" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4257</SUB>> ]
-"11603" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::DISABLE)<SUB>4257</SUB>> ]
-"11609" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4259</SUB>> ]
-"11612" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4259</SUB>> ]
-"11562" [label = <(SurfaceFlinger::setSchedFifo,SurfaceFlinger::setSchedFifo(false))<SUB>4248</SUB>> ]
-"11569" [label = <(ALOGW,ALOGW(&quot;Couldn't set SCHED_OTHER on display off: %s\n&quot;, strerror(errno)))<SUB>4249</SUB>> ]
-"11575" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4251</SUB>> ]
-"11579" [label = <(&lt;operator&gt;.notEquals,currentMode != hal::PowerMode::DOZE_SUSPEND)<SUB>4251</SUB>> ]
-"11587" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>4252</SUB>> ]
-"11592" [label = <(onScreenReleased,mScheduler-&gt;onScreenReleased(mAppConnectionHandle))<SUB>4253</SUB>> ]
-"11599" [label = <(getHwComposer,getHwComposer())<SUB>4257</SUB>> ]
-"11600" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>4257</SUB>> ]
-"11604" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>4257</SUB>> ]
-"11607" [label = <(FIELD_IDENTIFIER,DISABLE,DISABLE)<SUB>4257</SUB>> ]
-"11610" [label = <(getHwComposer,getHwComposer())<SUB>4259</SUB>> ]
-"11611" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4259</SUB>> ]
-"11621" [label = <(&lt;operator&gt;.logicalOr,mode == hal::PowerMode::DOZE || mode == hal::PowerMode::ON)<SUB>4262</SUB>> ]
-"11563" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::setSchedFifo)<SUB>4248</SUB>> ]
-"11571" [label = <(strerror,strerror(errno))<SUB>4249</SUB>> ]
-"11576" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4251</SUB>> ]
-"11581" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4251</SUB>> ]
-"11588" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>4252</SUB>> ]
-"11593" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenReleased)<SUB>4253</SUB>> ]
-"11622" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::DOZE)<SUB>4262</SUB>> ]
-"11629" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::ON)<SUB>4262</SUB>> ]
-"11637" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4264</SUB>> ]
-"11565" [label = <(FIELD_IDENTIFIER,setSchedFifo,setSchedFifo)<SUB>4248</SUB>> ]
-"11578" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4251</SUB>> ]
-"11582" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4251</SUB>> ]
-"11585" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4251</SUB>> ]
-"11590" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>4252</SUB>> ]
-"11595" [label = <(FIELD_IDENTIFIER,onScreenReleased,onScreenReleased)<SUB>4253</SUB>> ]
-"11624" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE)<SUB>4262</SUB>> ]
-"11631" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4262</SUB>> ]
-"11638" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4264</SUB>> ]
-"11641" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4264</SUB>> ]
-"11645" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; currentMode == hal::PowerMode::DOZE_SUSPEND)<SUB>4265</SUB>> ]
-"11625" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4262</SUB>> ]
-"11628" [label = <(FIELD_IDENTIFIER,DOZE,DOZE)<SUB>4262</SUB>> ]
-"11632" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4262</SUB>> ]
-"11635" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4262</SUB>> ]
-"11639" [label = <(getHwComposer,getHwComposer())<SUB>4264</SUB>> ]
-"11640" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4264</SUB>> ]
-"11646" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4265</SUB>> ]
-"11650" [label = <(&lt;operator&gt;.equals,currentMode == hal::PowerMode::DOZE_SUSPEND)<SUB>4265</SUB>> ]
-"11658" [label = <(onScreenAcquired,mScheduler-&gt;onScreenAcquired(mAppConnectionHandle))<SUB>4266</SUB>> ]
-"11663" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, vsyncPeriod))<SUB>4267</SUB>> ]
-"11672" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::DOZE_SUSPEND)<SUB>4269</SUB>> ]
-"11647" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4265</SUB>> ]
-"11652" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4265</SUB>> ]
-"11659" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenAcquired)<SUB>4266</SUB>> ]
-"11664" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>4267</SUB>> ]
-"11674" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4269</SUB>> ]
-"11696" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4275</SUB>> ]
-"11649" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4265</SUB>> ]
-"11653" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4265</SUB>> ]
-"11656" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4265</SUB>> ]
-"11661" [label = <(FIELD_IDENTIFIER,onScreenAcquired,onScreenAcquired)<SUB>4266</SUB>> ]
-"11666" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>4267</SUB>> ]
-"11675" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4269</SUB>> ]
-"11678" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4269</SUB>> ]
-"11681" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4271</SUB>> ]
-"11697" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4275</SUB>> ]
-"11700" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4275</SUB>> ]
-"11705" [label = <(ALOGE,ALOGE(&quot;Attempting to set unknown power mode: %d\n&quot;, mode))<SUB>4277</SUB>> ]
-"11708" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4278</SUB>> ]
-"11682" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4271</SUB>> ]
-"11686" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>4272</SUB>> ]
-"11691" [label = <(onScreenReleased,mScheduler-&gt;onScreenReleased(mAppConnectionHandle))<SUB>4273</SUB>> ]
-"11698" [label = <(getHwComposer,getHwComposer())<SUB>4275</SUB>> ]
-"11699" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4275</SUB>> ]
-"11709" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4278</SUB>> ]
-"11712" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4278</SUB>> ]
-"11684" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4271</SUB>> ]
-"11687" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>4272</SUB>> ]
-"11692" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenReleased)<SUB>4273</SUB>> ]
-"11710" [label = <(getHwComposer,getHwComposer())<SUB>4278</SUB>> ]
-"11711" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4278</SUB>> ]
-"11689" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>4272</SUB>> ]
-"11694" [label = <(FIELD_IDENTIFIER,onScreenReleased,onScreenReleased)<SUB>4273</SUB>> ]
-"11403" [label = <(METHOD,setPowerModeInternal)<SUB>4210</SUB>> ]
-"11751" [label = <(METHOD_RETURN,void)<SUB>4210</SUB>> ]
-  "11418" -> "11425" 
-  "11424" -> "11433" 
-  "11427" -> "11442" 
-  "11437" -> "11444" 
-  "11449" -> "11458" 
-  "11472" -> "11485" 
-  "11742" -> "11751" 
-  "11408" -> "11413" 
-  "11408" -> "11423" 
-  "11420" -> "11418" 
+"11434" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4215</SUB>> ]
+"11440" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>4216</SUB>> ]
+"11443" [label = <(ALOGD,ALOGD(&quot;Setting power mode %d on display %s&quot;, mode, to_string(*displayId).c_str()))<SUB>4218</SUB>> ]
+"11453" [label = <(&lt;operator&gt;.assignment,currentMode = display-&gt;getPowerMode())<SUB>4220</SUB>> ]
+"11465" [label = <(setPowerMode,display-&gt;setPowerMode(mode))<SUB>4225</SUB>> ]
+"11488" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4230</SUB>> ]
+"11758" [label = <(ALOGD,ALOGD(&quot;Finished setting power mode %d on display %s&quot;, mode, to_string(*displayId).c_str()))<SUB>4286</SUB>> ]
+"11424" [label = <(isVirtual,display-&gt;isVirtual())<SUB>4210</SUB>> ]
+"11436" [label = <(getId,display-&gt;getId())<SUB>4215</SUB>> ]
+"11441" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4216</SUB>> ]
+"11446" [label = <(c_str,to_string(*displayId).c_str())<SUB>4218</SUB>> ]
+"11455" [label = <(getPowerMode,display-&gt;getPowerMode())<SUB>4220</SUB>> ]
+"11460" [label = <(&lt;operator&gt;.equals,mode == currentMode)<SUB>4221</SUB>> ]
+"11466" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setPowerMode)<SUB>4225</SUB>> ]
+"11471" [label = <(isEnabled,mInterceptor-&gt;isEnabled())<SUB>4227</SUB>> ]
+"11490" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod())<SUB>4230</SUB>> ]
+"11498" [label = <(&lt;operator&gt;.equals,currentMode == hal::PowerMode::OFF)<SUB>4231</SUB>> ]
+"11732" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4280</SUB>> ]
+"11761" [label = <(c_str,to_string(*displayId).c_str())<SUB>4286</SUB>> ]
+"11425" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>4210</SUB>> ]
+"11429" [label = <(ALOGE,ALOGE(&quot;%s: Invalid operation on virtual display&quot;, __FUNCTION__))<SUB>4211</SUB>> ]
+"11432" [label = <(RETURN,return;,return;)<SUB>4212</SUB>> ]
+"11437" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4215</SUB>> ]
+"11447" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4218</SUB>> ]
+"11456" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPowerMode)<SUB>4220</SUB>> ]
+"11464" [label = <(RETURN,return;,return;)<SUB>4222</SUB>> ]
+"11468" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4225</SUB>> ]
+"11472" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;isEnabled)<SUB>4227</SUB>> ]
+"11476" [label = <(savePowerModeUpdate,mInterceptor-&gt;savePowerModeUpdate(display-&gt;getSequenceId(), static_cast&lt;int32_t&gt;(mode)))<SUB>4228</SUB>> ]
+"11491" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate().getVsyncPeriod)<SUB>4230</SUB>> ]
+"11500" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>4231</SUB>> ]
+"11519" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4235</SUB>> ]
+"11558" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>4242</SUB>> ]
+"11561" [label = <(&lt;operator&gt;.assignment,mHasPoweredOff = true)<SUB>4243</SUB>> ]
+"11564" [label = <(repaintEverything,repaintEverything())<SUB>4244</SUB>> ]
+"11733" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4280</SUB>> ]
+"11737" [label = <(setPowerMode,mTimeStats-&gt;setPowerMode(mode))<SUB>4281</SUB>> ]
+"11742" [label = <(setPowerMode,mRefreshRateStats-&gt;setPowerMode(mode))<SUB>4282</SUB>> ]
+"11747" [label = <(setDisplayPowerState,mScheduler-&gt;setDisplayPowerState(mode == hal::PowerMode::ON))<SUB>4283</SUB>> ]
+"11762" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4286</SUB>> ]
+"11427" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>4210</SUB>> ]
+"11439" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4215</SUB>> ]
+"11448" [label = <(to_string,to_string(*displayId))<SUB>4218</SUB>> ]
+"11451" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4218</SUB>> ]
+"11458" [label = <(FIELD_IDENTIFIER,getPowerMode,getPowerMode)<SUB>4220</SUB>> ]
+"11474" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>4227</SUB>> ]
+"11477" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;savePowerModeUpdate)<SUB>4228</SUB>> ]
+"11480" [label = <(getSequenceId,display-&gt;getSequenceId())<SUB>4228</SUB>> ]
+"11484" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(mode))<SUB>4228</SUB>> ]
+"11492" [label = <(getCurrentRefreshRate,mRefreshRateConfigs-&gt;getCurrentRefreshRate())<SUB>4230</SUB>> ]
+"11496" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>4230</SUB>> ]
+"11501" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4231</SUB>> ]
+"11504" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>4231</SUB>> ]
+"11507" [label = <(&lt;operator&gt;.notEquals,SurfaceFlinger::setSchedFifo(true) != NO_ERROR)<SUB>4232</SUB>> ]
+"11520" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4235</SUB>> ]
+"11523" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4235</SUB>> ]
+"11527" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; mode != hal::PowerMode::DOZE_SUSPEND)<SUB>4236</SUB>> ]
+"11735" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4280</SUB>> ]
+"11738" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;setPowerMode)<SUB>4281</SUB>> ]
+"11743" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;setPowerMode)<SUB>4282</SUB>> ]
+"11748" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setDisplayPowerState)<SUB>4283</SUB>> ]
+"11751" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::ON)<SUB>4283</SUB>> ]
+"11763" [label = <(to_string,to_string(*displayId))<SUB>4286</SUB>> ]
+"11766" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4286</SUB>> ]
+"11449" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4218</SUB>> ]
+"11479" [label = <(FIELD_IDENTIFIER,savePowerModeUpdate,savePowerModeUpdate)<SUB>4228</SUB>> ]
+"11481" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSequenceId)<SUB>4228</SUB>> ]
+"11485" [label = <(UNKNOWN,int32_t,int32_t)<SUB>4228</SUB>> ]
+"11493" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentRefreshRate)<SUB>4230</SUB>> ]
+"11508" [label = <(SurfaceFlinger::setSchedFifo,SurfaceFlinger::setSchedFifo(true))<SUB>4232</SUB>> ]
+"11515" [label = <(ALOGW,ALOGW(&quot;Couldn't set SCHED_FIFO on display on: %s\n&quot;, strerror(errno)))<SUB>4233</SUB>> ]
+"11521" [label = <(getHwComposer,getHwComposer())<SUB>4235</SUB>> ]
+"11522" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4235</SUB>> ]
+"11528" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4236</SUB>> ]
+"11532" [label = <(&lt;operator&gt;.notEquals,mode != hal::PowerMode::DOZE_SUSPEND)<SUB>4236</SUB>> ]
+"11540" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, mHWCVsyncPendingState))<SUB>4237</SUB>> ]
+"11547" [label = <(onScreenAcquired,mScheduler-&gt;onScreenAcquired(mAppConnectionHandle))<SUB>4238</SUB>> ]
+"11552" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, vsyncPeriod))<SUB>4239</SUB>> ]
+"11568" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::OFF)<SUB>4245</SUB>> ]
+"11740" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4281</SUB>> ]
+"11745" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4282</SUB>> ]
+"11750" [label = <(FIELD_IDENTIFIER,setDisplayPowerState,setDisplayPowerState)<SUB>4283</SUB>> ]
+"11753" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4283</SUB>> ]
+"11764" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4286</SUB>> ]
+"11483" [label = <(FIELD_IDENTIFIER,getSequenceId,getSequenceId)<SUB>4228</SUB>> ]
+"11495" [label = <(FIELD_IDENTIFIER,getCurrentRefreshRate,getCurrentRefreshRate)<SUB>4230</SUB>> ]
+"11509" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::setSchedFifo)<SUB>4232</SUB>> ]
+"11517" [label = <(strerror,strerror(errno))<SUB>4233</SUB>> ]
+"11529" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4236</SUB>> ]
+"11534" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4236</SUB>> ]
+"11541" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>4237</SUB>> ]
+"11544" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4237</SUB>> ]
+"11548" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenAcquired)<SUB>4238</SUB>> ]
+"11553" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>4239</SUB>> ]
+"11570" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::OFF)<SUB>4245</SUB>> ]
+"11613" [label = <(setVsyncEnabled,getHwComposer().setVsyncEnabled(*displayId, hal::Vsync::DISABLE))<SUB>4256</SUB>> ]
+"11624" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4258</SUB>> ]
+"11631" [label = <(&lt;operator&gt;.assignment,mVisibleRegionsDirty = true)<SUB>4259</SUB>> ]
+"11754" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4283</SUB>> ]
+"11757" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4283</SUB>> ]
+"11511" [label = <(FIELD_IDENTIFIER,setSchedFifo,setSchedFifo)<SUB>4232</SUB>> ]
+"11531" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4236</SUB>> ]
+"11535" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4236</SUB>> ]
+"11538" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4236</SUB>> ]
+"11542" [label = <(getHwComposer,getHwComposer())<SUB>4237</SUB>> ]
+"11543" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>4237</SUB>> ]
+"11550" [label = <(FIELD_IDENTIFIER,onScreenAcquired,onScreenAcquired)<SUB>4238</SUB>> ]
+"11555" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>4239</SUB>> ]
+"11571" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4245</SUB>> ]
+"11574" [label = <(FIELD_IDENTIFIER,OFF,OFF)<SUB>4245</SUB>> ]
+"11577" [label = <(&lt;operator&gt;.notEquals,SurfaceFlinger::setSchedFifo(false) != NO_ERROR)<SUB>4247</SUB>> ]
+"11590" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; currentMode != hal::PowerMode::DOZE_SUSPEND)<SUB>4250</SUB>> ]
+"11614" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setVsyncEnabled)<SUB>4256</SUB>> ]
+"11617" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4256</SUB>> ]
+"11619" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync::DISABLE)<SUB>4256</SUB>> ]
+"11625" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4258</SUB>> ]
+"11628" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4258</SUB>> ]
+"11578" [label = <(SurfaceFlinger::setSchedFifo,SurfaceFlinger::setSchedFifo(false))<SUB>4247</SUB>> ]
+"11585" [label = <(ALOGW,ALOGW(&quot;Couldn't set SCHED_OTHER on display off: %s\n&quot;, strerror(errno)))<SUB>4248</SUB>> ]
+"11591" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4250</SUB>> ]
+"11595" [label = <(&lt;operator&gt;.notEquals,currentMode != hal::PowerMode::DOZE_SUSPEND)<SUB>4250</SUB>> ]
+"11603" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>4251</SUB>> ]
+"11608" [label = <(onScreenReleased,mScheduler-&gt;onScreenReleased(mAppConnectionHandle))<SUB>4252</SUB>> ]
+"11615" [label = <(getHwComposer,getHwComposer())<SUB>4256</SUB>> ]
+"11616" [label = <(FIELD_IDENTIFIER,setVsyncEnabled,setVsyncEnabled)<SUB>4256</SUB>> ]
+"11620" [label = <(&lt;operator&gt;.fieldAccess,hal::Vsync)<SUB>4256</SUB>> ]
+"11623" [label = <(FIELD_IDENTIFIER,DISABLE,DISABLE)<SUB>4256</SUB>> ]
+"11626" [label = <(getHwComposer,getHwComposer())<SUB>4258</SUB>> ]
+"11627" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4258</SUB>> ]
+"11637" [label = <(&lt;operator&gt;.logicalOr,mode == hal::PowerMode::DOZE || mode == hal::PowerMode::ON)<SUB>4261</SUB>> ]
+"11579" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::setSchedFifo)<SUB>4247</SUB>> ]
+"11587" [label = <(strerror,strerror(errno))<SUB>4248</SUB>> ]
+"11592" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4250</SUB>> ]
+"11597" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4250</SUB>> ]
+"11604" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>4251</SUB>> ]
+"11609" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenReleased)<SUB>4252</SUB>> ]
+"11638" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::DOZE)<SUB>4261</SUB>> ]
+"11645" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::ON)<SUB>4261</SUB>> ]
+"11653" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4263</SUB>> ]
+"11581" [label = <(FIELD_IDENTIFIER,setSchedFifo,setSchedFifo)<SUB>4247</SUB>> ]
+"11594" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4250</SUB>> ]
+"11598" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4250</SUB>> ]
+"11601" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4250</SUB>> ]
+"11606" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>4251</SUB>> ]
+"11611" [label = <(FIELD_IDENTIFIER,onScreenReleased,onScreenReleased)<SUB>4252</SUB>> ]
+"11640" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE)<SUB>4261</SUB>> ]
+"11647" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::ON)<SUB>4261</SUB>> ]
+"11654" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4263</SUB>> ]
+"11657" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4263</SUB>> ]
+"11661" [label = <(&lt;operator&gt;.logicalAnd,display-&gt;isPrimary() &amp;&amp; currentMode == hal::PowerMode::DOZE_SUSPEND)<SUB>4264</SUB>> ]
+"11641" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4261</SUB>> ]
+"11644" [label = <(FIELD_IDENTIFIER,DOZE,DOZE)<SUB>4261</SUB>> ]
+"11648" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4261</SUB>> ]
+"11651" [label = <(FIELD_IDENTIFIER,ON,ON)<SUB>4261</SUB>> ]
+"11655" [label = <(getHwComposer,getHwComposer())<SUB>4263</SUB>> ]
+"11656" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4263</SUB>> ]
+"11662" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4264</SUB>> ]
+"11666" [label = <(&lt;operator&gt;.equals,currentMode == hal::PowerMode::DOZE_SUSPEND)<SUB>4264</SUB>> ]
+"11674" [label = <(onScreenAcquired,mScheduler-&gt;onScreenAcquired(mAppConnectionHandle))<SUB>4265</SUB>> ]
+"11679" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, vsyncPeriod))<SUB>4266</SUB>> ]
+"11688" [label = <(&lt;operator&gt;.equals,mode == hal::PowerMode::DOZE_SUSPEND)<SUB>4268</SUB>> ]
+"11663" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4264</SUB>> ]
+"11668" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4264</SUB>> ]
+"11675" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenAcquired)<SUB>4265</SUB>> ]
+"11680" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>4266</SUB>> ]
+"11690" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode::DOZE_SUSPEND)<SUB>4268</SUB>> ]
+"11712" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4274</SUB>> ]
+"11665" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4264</SUB>> ]
+"11669" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4264</SUB>> ]
+"11672" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4264</SUB>> ]
+"11677" [label = <(FIELD_IDENTIFIER,onScreenAcquired,onScreenAcquired)<SUB>4265</SUB>> ]
+"11682" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>4266</SUB>> ]
+"11691" [label = <(&lt;operator&gt;.fieldAccess,hal::PowerMode)<SUB>4268</SUB>> ]
+"11694" [label = <(FIELD_IDENTIFIER,DOZE_SUSPEND,DOZE_SUSPEND)<SUB>4268</SUB>> ]
+"11697" [label = <(isPrimary,display-&gt;isPrimary())<SUB>4270</SUB>> ]
+"11713" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4274</SUB>> ]
+"11716" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4274</SUB>> ]
+"11721" [label = <(ALOGE,ALOGE(&quot;Attempting to set unknown power mode: %d\n&quot;, mode))<SUB>4276</SUB>> ]
+"11724" [label = <(setPowerMode,getHwComposer().setPowerMode(*displayId, mode))<SUB>4277</SUB>> ]
+"11698" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>4270</SUB>> ]
+"11702" [label = <(disableHardwareVsync,mScheduler-&gt;disableHardwareVsync(true))<SUB>4271</SUB>> ]
+"11707" [label = <(onScreenReleased,mScheduler-&gt;onScreenReleased(mAppConnectionHandle))<SUB>4272</SUB>> ]
+"11714" [label = <(getHwComposer,getHwComposer())<SUB>4274</SUB>> ]
+"11715" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4274</SUB>> ]
+"11725" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setPowerMode)<SUB>4277</SUB>> ]
+"11728" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4277</SUB>> ]
+"11700" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>4270</SUB>> ]
+"11703" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;disableHardwareVsync)<SUB>4271</SUB>> ]
+"11708" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onScreenReleased)<SUB>4272</SUB>> ]
+"11726" [label = <(getHwComposer,getHwComposer())<SUB>4277</SUB>> ]
+"11727" [label = <(FIELD_IDENTIFIER,setPowerMode,setPowerMode)<SUB>4277</SUB>> ]
+"11705" [label = <(FIELD_IDENTIFIER,disableHardwareVsync,disableHardwareVsync)<SUB>4271</SUB>> ]
+"11710" [label = <(FIELD_IDENTIFIER,onScreenReleased,onScreenReleased)<SUB>4272</SUB>> ]
+"11419" [label = <(METHOD,setPowerModeInternal)<SUB>4209</SUB>> ]
+"11767" [label = <(METHOD_RETURN,void)<SUB>4209</SUB>> ]
+  "11434" -> "11441" 
+  "11440" -> "11449" 
+  "11443" -> "11458" 
+  "11453" -> "11460" 
+  "11465" -> "11474" 
+  "11488" -> "11501" 
+  "11758" -> "11767" 
+  "11424" -> "11429" 
+  "11424" -> "11439" 
+  "11436" -> "11434" 
+  "11441" -> "11440" 
+  "11446" -> "11443" 
+  "11455" -> "11453" 
+  "11460" -> "11464" 
+  "11460" -> "11468" 
+  "11466" -> "11465" 
+  "11471" -> "11479" 
+  "11471" -> "11495" 
+  "11490" -> "11488" 
+  "11498" -> "11511" 
+  "11498" -> "11571" 
+  "11732" -> "11740" 
+  "11732" -> "11764" 
+  "11761" -> "11758" 
   "11425" -> "11424" 
-  "11430" -> "11427" 
-  "11439" -> "11437" 
-  "11444" -> "11448" 
-  "11444" -> "11452" 
-  "11450" -> "11449" 
-  "11455" -> "11463" 
-  "11455" -> "11479" 
-  "11474" -> "11472" 
-  "11482" -> "11495" 
-  "11482" -> "11555" 
-  "11716" -> "11724" 
-  "11716" -> "11748" 
-  "11745" -> "11742" 
-  "11409" -> "11408" 
-  "11413" -> "11416" 
-  "11416" -> "11751" 
-  "11421" -> "11420" 
-  "11431" -> "11430" 
-  "11440" -> "11439" 
-  "11448" -> "11751" 
-  "11452" -> "11450" 
+  "11429" -> "11432" 
+  "11432" -> "11767" 
+  "11437" -> "11436" 
+  "11447" -> "11446" 
   "11456" -> "11455" 
-  "11460" -> "11479" 
-  "11475" -> "11474" 
-  "11484" -> "11482" 
-  "11503" -> "11515" 
-  "11542" -> "11545" 
-  "11545" -> "11548" 
-  "11548" -> "11719" 
-  "11717" -> "11716" 
-  "11721" -> "11729" 
-  "11726" -> "11734" 
-  "11731" -> "11748" 
-  "11746" -> "11745" 
-  "11411" -> "11409" 
-  "11423" -> "11421" 
-  "11432" -> "11435" 
-  "11435" -> "11431" 
-  "11442" -> "11440" 
+  "11464" -> "11767" 
+  "11468" -> "11466" 
+  "11472" -> "11471" 
+  "11476" -> "11495" 
+  "11491" -> "11490" 
+  "11500" -> "11498" 
+  "11519" -> "11531" 
+  "11558" -> "11561" 
+  "11561" -> "11564" 
+  "11564" -> "11735" 
+  "11733" -> "11732" 
+  "11737" -> "11745" 
+  "11742" -> "11750" 
+  "11747" -> "11764" 
+  "11762" -> "11761" 
+  "11427" -> "11425" 
+  "11439" -> "11437" 
+  "11448" -> "11451" 
+  "11451" -> "11447" 
   "11458" -> "11456" 
-  "11461" -> "11467" 
-  "11464" -> "11469" 
-  "11468" -> "11460" 
-  "11476" -> "11480" 
-  "11480" -> "11475" 
-  "11485" -> "11488" 
-  "11488" -> "11484" 
-  "11491" -> "11505" 
-  "11491" -> "11501" 
-  "11504" -> "11507" 
-  "11507" -> "11503" 
-  "11511" -> "11526" 
-  "11511" -> "11542" 
-  "11719" -> "11717" 
-  "11722" -> "11721" 
-  "11727" -> "11726" 
-  "11732" -> "11738" 
-  "11735" -> "11731" 
-  "11747" -> "11750" 
-  "11750" -> "11746" 
-  "11433" -> "11432" 
-  "11463" -> "11461" 
-  "11465" -> "11464" 
-  "11469" -> "11468" 
-  "11477" -> "11476" 
-  "11492" -> "11491" 
-  "11499" -> "11505" 
-  "11505" -> "11506" 
-  "11506" -> "11504" 
-  "11512" -> "11511" 
-  "11512" -> "11519" 
-  "11516" -> "11511" 
-  "11524" -> "11534" 
-  "11531" -> "11539" 
-  "11536" -> "11542" 
-  "11552" -> "11565" 
-  "11552" -> "11625" 
-  "11724" -> "11722" 
-  "11729" -> "11727" 
-  "11734" -> "11732" 
-  "11737" -> "11735" 
-  "11748" -> "11747" 
-  "11467" -> "11465" 
+  "11474" -> "11472" 
+  "11477" -> "11483" 
+  "11480" -> "11485" 
+  "11484" -> "11476" 
+  "11492" -> "11496" 
+  "11496" -> "11491" 
+  "11501" -> "11504" 
+  "11504" -> "11500" 
+  "11507" -> "11521" 
+  "11507" -> "11517" 
+  "11520" -> "11523" 
+  "11523" -> "11519" 
+  "11527" -> "11542" 
+  "11527" -> "11558" 
+  "11735" -> "11733" 
+  "11738" -> "11737" 
+  "11743" -> "11742" 
+  "11748" -> "11754" 
+  "11751" -> "11747" 
+  "11763" -> "11766" 
+  "11766" -> "11762" 
+  "11449" -> "11448" 
   "11479" -> "11477" 
+  "11481" -> "11480" 
+  "11485" -> "11484" 
   "11493" -> "11492" 
-  "11501" -> "11499" 
-  "11513" -> "11512" 
-  "11518" -> "11516" 
-  "11525" -> "11528" 
-  "11528" -> "11524" 
-  "11532" -> "11531" 
-  "11537" -> "11536" 
-  "11554" -> "11552" 
-  "11597" -> "11610" 
-  "11608" -> "11615" 
-  "11615" -> "11719" 
-  "11738" -> "11741" 
-  "11741" -> "11737" 
+  "11508" -> "11507" 
+  "11515" -> "11521" 
+  "11521" -> "11522" 
+  "11522" -> "11520" 
+  "11528" -> "11527" 
+  "11528" -> "11535" 
+  "11532" -> "11527" 
+  "11540" -> "11550" 
+  "11547" -> "11555" 
+  "11552" -> "11558" 
+  "11568" -> "11581" 
+  "11568" -> "11641" 
+  "11740" -> "11738" 
+  "11745" -> "11743" 
+  "11750" -> "11748" 
+  "11753" -> "11751" 
+  "11764" -> "11763" 
+  "11483" -> "11481" 
   "11495" -> "11493" 
-  "11515" -> "11513" 
-  "11519" -> "11522" 
-  "11522" -> "11518" 
-  "11526" -> "11527" 
-  "11527" -> "11525" 
+  "11509" -> "11508" 
+  "11517" -> "11515" 
+  "11529" -> "11528" 
   "11534" -> "11532" 
-  "11539" -> "11537" 
-  "11555" -> "11558" 
-  "11558" -> "11554" 
-  "11561" -> "11571" 
-  "11561" -> "11578" 
-  "11574" -> "11599" 
-  "11574" -> "11590" 
-  "11598" -> "11601" 
-  "11601" -> "11604" 
-  "11603" -> "11597" 
-  "11609" -> "11612" 
-  "11612" -> "11608" 
-  "11562" -> "11561" 
-  "11569" -> "11578" 
-  "11575" -> "11574" 
-  "11575" -> "11582" 
-  "11579" -> "11574" 
-  "11587" -> "11595" 
-  "11592" -> "11599" 
-  "11599" -> "11600" 
-  "11600" -> "11598" 
-  "11604" -> "11607" 
-  "11607" -> "11603" 
-  "11610" -> "11611" 
-  "11611" -> "11609" 
-  "11621" -> "11639" 
-  "11621" -> "11675" 
-  "11563" -> "11562" 
-  "11571" -> "11569" 
-  "11576" -> "11575" 
-  "11581" -> "11579" 
-  "11588" -> "11587" 
-  "11593" -> "11592" 
-  "11622" -> "11621" 
-  "11622" -> "11632" 
-  "11629" -> "11621" 
-  "11637" -> "11649" 
-  "11565" -> "11563" 
-  "11578" -> "11576" 
-  "11582" -> "11585" 
-  "11585" -> "11581" 
-  "11590" -> "11588" 
-  "11595" -> "11593" 
-  "11624" -> "11622" 
-  "11631" -> "11629" 
-  "11638" -> "11641" 
-  "11641" -> "11637" 
-  "11645" -> "11661" 
-  "11645" -> "11719" 
+  "11541" -> "11544" 
+  "11544" -> "11540" 
+  "11548" -> "11547" 
+  "11553" -> "11552" 
+  "11570" -> "11568" 
+  "11613" -> "11626" 
+  "11624" -> "11631" 
+  "11631" -> "11735" 
+  "11754" -> "11757" 
+  "11757" -> "11753" 
+  "11511" -> "11509" 
+  "11531" -> "11529" 
+  "11535" -> "11538" 
+  "11538" -> "11534" 
+  "11542" -> "11543" 
+  "11543" -> "11541" 
+  "11550" -> "11548" 
+  "11555" -> "11553" 
+  "11571" -> "11574" 
+  "11574" -> "11570" 
+  "11577" -> "11587" 
+  "11577" -> "11594" 
+  "11590" -> "11615" 
+  "11590" -> "11606" 
+  "11614" -> "11617" 
+  "11617" -> "11620" 
+  "11619" -> "11613" 
   "11625" -> "11628" 
   "11628" -> "11624" 
-  "11632" -> "11635" 
-  "11635" -> "11631" 
-  "11639" -> "11640" 
+  "11578" -> "11577" 
+  "11585" -> "11594" 
+  "11591" -> "11590" 
+  "11591" -> "11598" 
+  "11595" -> "11590" 
+  "11603" -> "11611" 
+  "11608" -> "11615" 
+  "11615" -> "11616" 
+  "11616" -> "11614" 
+  "11620" -> "11623" 
+  "11623" -> "11619" 
+  "11626" -> "11627" 
+  "11627" -> "11625" 
+  "11637" -> "11655" 
+  "11637" -> "11691" 
+  "11579" -> "11578" 
+  "11587" -> "11585" 
+  "11592" -> "11591" 
+  "11597" -> "11595" 
+  "11604" -> "11603" 
+  "11609" -> "11608" 
+  "11638" -> "11637" 
+  "11638" -> "11648" 
+  "11645" -> "11637" 
+  "11653" -> "11665" 
+  "11581" -> "11579" 
+  "11594" -> "11592" 
+  "11598" -> "11601" 
+  "11601" -> "11597" 
+  "11606" -> "11604" 
+  "11611" -> "11609" 
   "11640" -> "11638" 
-  "11646" -> "11645" 
-  "11646" -> "11653" 
-  "11650" -> "11645" 
-  "11658" -> "11666" 
-  "11663" -> "11719" 
-  "11672" -> "11684" 
-  "11672" -> "11705" 
-  "11647" -> "11646" 
-  "11652" -> "11650" 
-  "11659" -> "11658" 
-  "11664" -> "11663" 
-  "11674" -> "11672" 
-  "11696" -> "11719" 
-  "11649" -> "11647" 
-  "11653" -> "11656" 
-  "11656" -> "11652" 
-  "11661" -> "11659" 
-  "11666" -> "11664" 
-  "11675" -> "11678" 
-  "11678" -> "11674" 
-  "11681" -> "11698" 
-  "11681" -> "11689" 
-  "11697" -> "11700" 
-  "11700" -> "11696" 
-  "11705" -> "11710" 
-  "11708" -> "11719" 
-  "11682" -> "11681" 
-  "11686" -> "11694" 
-  "11691" -> "11698" 
-  "11698" -> "11699" 
-  "11699" -> "11697" 
-  "11709" -> "11712" 
-  "11712" -> "11708" 
-  "11684" -> "11682" 
-  "11687" -> "11686" 
-  "11692" -> "11691" 
-  "11710" -> "11711" 
-  "11711" -> "11709" 
-  "11689" -> "11687" 
-  "11694" -> "11692" 
-  "11403" -> "11411" 
+  "11647" -> "11645" 
+  "11654" -> "11657" 
+  "11657" -> "11653" 
+  "11661" -> "11677" 
+  "11661" -> "11735" 
+  "11641" -> "11644" 
+  "11644" -> "11640" 
+  "11648" -> "11651" 
+  "11651" -> "11647" 
+  "11655" -> "11656" 
+  "11656" -> "11654" 
+  "11662" -> "11661" 
+  "11662" -> "11669" 
+  "11666" -> "11661" 
+  "11674" -> "11682" 
+  "11679" -> "11735" 
+  "11688" -> "11700" 
+  "11688" -> "11721" 
+  "11663" -> "11662" 
+  "11668" -> "11666" 
+  "11675" -> "11674" 
+  "11680" -> "11679" 
+  "11690" -> "11688" 
+  "11712" -> "11735" 
+  "11665" -> "11663" 
+  "11669" -> "11672" 
+  "11672" -> "11668" 
+  "11677" -> "11675" 
+  "11682" -> "11680" 
+  "11691" -> "11694" 
+  "11694" -> "11690" 
+  "11697" -> "11714" 
+  "11697" -> "11705" 
+  "11713" -> "11716" 
+  "11716" -> "11712" 
+  "11721" -> "11726" 
+  "11724" -> "11735" 
+  "11698" -> "11697" 
+  "11702" -> "11710" 
+  "11707" -> "11714" 
+  "11714" -> "11715" 
+  "11715" -> "11713" 
+  "11725" -> "11728" 
+  "11728" -> "11724" 
+  "11700" -> "11698" 
+  "11703" -> "11702" 
+  "11708" -> "11707" 
+  "11726" -> "11727" 
+  "11727" -> "11725" 
+  "11705" -> "11703" 
+  "11710" -> "11708" 
+  "11419" -> "11427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/211-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/211-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/211-cfg.dot	2023-06-07 19:33:00.437398979 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/211-cfg.dot	2023-06-07 19:33:06.677398402 +0330
@@ -1,9 +1,9 @@
 digraph "setPowerMode" {  
-"11757" [label = <(UNKNOWN,schedule([=]() MAIN_THREAD {\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set power mode %d for invalid display token %p&quot;, mode,\012                  displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set power mode %d for virtual display&quot;, mode);\012 } else {\012            setPowerModeInternal(display, static_cast&lt;hal::PowerMode&gt;(mode));\012 }\012 },schedule([=]() MAIN_THREAD {\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set power mode %d for invalid display token %p&quot;, mode,\012                  displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set power mode %d for virtual display&quot;, mode);\012 } else {\012            setPowerModeInternal(display, static_cast&lt;hal::PowerMode&gt;(mode));\012 }\012 })<SUB>4291</SUB>> ]
-"11758" [label = <(UNKNOWN,).wait();,).wait();)<SUB>4301</SUB>> ]
-"11753" [label = <(METHOD,setPowerMode)<SUB>4290</SUB>> ]
-"11759" [label = <(METHOD_RETURN,void)<SUB>4290</SUB>> ]
-  "11757" -> "11758" 
-  "11758" -> "11759" 
-  "11753" -> "11757" 
+"11773" [label = <(UNKNOWN,schedule([=]() MAIN_THREAD {\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set power mode %d for invalid display token %p&quot;, mode,\012                  displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set power mode %d for virtual display&quot;, mode);\012 } else {\012            setPowerModeInternal(display, static_cast&lt;hal::PowerMode&gt;(mode));\012 }\012 },schedule([=]() MAIN_THREAD {\012 const auto display = getDisplayDeviceLocked(displayToken);\012 if (!display) {\012            ALOGE(&quot;Attempt to set power mode %d for invalid display token %p&quot;, mode,\012                  displayToken.get());\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set power mode %d for virtual display&quot;, mode);\012 } else {\012            setPowerModeInternal(display, static_cast&lt;hal::PowerMode&gt;(mode));\012 }\012 })<SUB>4290</SUB>> ]
+"11774" [label = <(UNKNOWN,).wait();,).wait();)<SUB>4300</SUB>> ]
+"11769" [label = <(METHOD,setPowerMode)<SUB>4289</SUB>> ]
+"11775" [label = <(METHOD_RETURN,void)<SUB>4289</SUB>> ]
+  "11773" -> "11774" 
+  "11774" -> "11775" 
+  "11769" -> "11773" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/212-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/212-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/212-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/212-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,295 +1,295 @@
 digraph "doDump" {  
-"11768" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4307</SUB>> ]
-"11775" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4308</SUB>> ]
-"11782" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4309</SUB>> ]
-"12006" [label = <(write,write(fd, result.c_str(), result.size()))<SUB>4362</SUB>> ]
-"12016" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4363</SUB>> ]
-"11770" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4307</SUB>> ]
-"11777" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4308</SUB>> ]
-"11784" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4309</SUB>> ]
-"11789" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_SHELL) &amp;&amp;\012 !PermissionCache::checkPermission(sDump, pid, uid))<SUB>4311</SUB>> ]
-"12008" [label = <(c_str,result.c_str())<SUB>4362</SUB>> ]
-"12012" [label = <(size,result.size())<SUB>4362</SUB>> ]
-"11771" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4307</SUB>> ]
-"11778" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4308</SUB>> ]
-"11785" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4309</SUB>> ]
-"11790" [label = <(&lt;operator&gt;.notEquals,uid != AID_SHELL)<SUB>4311</SUB>> ]
-"11793" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sDump, pid, uid))<SUB>4312</SUB>> ]
-"11802" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Permission Denial: can't dump SurfaceFlinger from pid=%d, uid=%d\n&quot;,\012                      pid, uid))<SUB>4313</SUB>> ]
-"12009" [label = <(&lt;operator&gt;.fieldAccess,result.c_str)<SUB>4362</SUB>> ]
-"12013" [label = <(&lt;operator&gt;.fieldAccess,result.size)<SUB>4362</SUB>> ]
-"11773" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4307</SUB>> ]
-"11780" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4308</SUB>> ]
-"11787" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4309</SUB>> ]
-"11794" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sDump, pid, uid))<SUB>4312</SUB>> ]
-"11803" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4313</SUB>> ]
-"11811" [label = <(&lt;operator&gt;.assignment,dumpers = {\012 {&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)},\012 {&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })},\012 {&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)},\012 {&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)},\012 {&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)},\012 {&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)},\012 {&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)},\012 {&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)},\012 {&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)},\012 {&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)},\012 {&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)},\012 })<SUB>4316</SUB>> ]
-"11889" [label = <(&lt;operator&gt;.assignment,flag = args.empty() ? &quot;&quot;s : std::string(String8(args[0])))<SUB>4331</SUB>> ]
-"11906" [label = <(&lt;operator&gt;.assignment,dumpLayers = true)<SUB>4333</SUB>> ]
-"12011" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4362</SUB>> ]
-"12015" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4362</SUB>> ]
-"11795" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4312</SUB>> ]
-"11813" [label = <(&lt;operator&gt;.arrayInitializer,{\012 {&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)},\012 {&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })},\012 {&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)},\012 {&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)},\012 {&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)},\012 {&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)},\012 {&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)},\012 {&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)},\012 {&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)},\012 {&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)},\012 {&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)},\012 })<SUB>4316</SUB>> ]
-"11891" [label = <(&lt;operator&gt;.conditional,args.empty() ? &quot;&quot;s : std::string(String8(args[0])))<SUB>4331</SUB>> ]
-"11911" [label = <(lock,lock(mStateLock, s2ns(1), __FUNCTION__))<SUB>4335</SUB>> ]
-"11797" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4312</SUB>> ]
-"11814" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)})<SUB>4317</SUB>> ]
-"11821" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })})<SUB>4318</SUB>> ]
-"11825" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)})<SUB>4320</SUB>> ]
-"11832" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)})<SUB>4321</SUB>> ]
-"11839" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)})<SUB>4322</SUB>> ]
-"11846" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)})<SUB>4323</SUB>> ]
-"11853" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)})<SUB>4324</SUB>> ]
-"11860" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)})<SUB>4325</SUB>> ]
-"11867" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)})<SUB>4326</SUB>> ]
-"11874" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)})<SUB>4327</SUB>> ]
-"11881" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)})<SUB>4328</SUB>> ]
-"11892" [label = <(empty,args.empty())<SUB>4331</SUB>> ]
-"11897" [label = <(std::string,std::string(String8(args[0])))<SUB>4331</SUB>> ]
-"11913" [label = <(s2ns,s2ns(1))<SUB>4335</SUB>> ]
-"11917" [label = <(&lt;operator&gt;.logicalNot,!lock.locked())<SUB>4336</SUB>> ]
-"11936" [label = <(&lt;operator&gt;.notEquals,it != dumpers.end())<SUB>4341</SUB>> ]
-"11966" [label = <(&lt;operator&gt;.assignment,layersProto = dumpProtoFromMainThread())<SUB>4350</SUB>> ]
-"11816" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData))<SUB>4317</SUB>> ]
-"11823" [label = <(dumper,dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); }))<SUB>4319</SUB>> ]
-"11827" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData))<SUB>4320</SUB>> ]
-"11834" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked))<SUB>4321</SUB>> ]
-"11841" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::dumpStatsLocked))<SUB>4322</SUB>> ]
-"11848" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::clearStatsLocked))<SUB>4323</SUB>> ]
-"11855" [label = <(dumper,dumper(&amp;SurfaceFlinger::listLayersLocked))<SUB>4324</SUB>> ]
-"11862" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpStaticScreenStats))<SUB>4325</SUB>> ]
-"11869" [label = <(protoDumper,protoDumper(&amp;SurfaceFlinger::dumpTimeStats))<SUB>4326</SUB>> ]
-"11876" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpVSync))<SUB>4327</SUB>> ]
-"11883" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpWideColorInfo))<SUB>4328</SUB>> ]
-"11893" [label = <(&lt;operator&gt;.fieldAccess,args.empty)<SUB>4331</SUB>> ]
-"11898" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>4331</SUB>> ]
-"11901" [label = <(String8,String8(args[0]))<SUB>4331</SUB>> ]
-"11918" [label = <(locked,lock.locked())<SUB>4336</SUB>> ]
-"11923" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Dumping without lock after timeout: %s (%d)\n&quot;,\012                              strerror(-lock.status), lock.status))<SUB>4337</SUB>> ]
-"11938" [label = <(end,dumpers.end())<SUB>4341</SUB>> ]
-"11943" [label = <(it-&gt;second,(it-&gt;second)(args, asProto, result))<SUB>4342</SUB>> ]
-"11950" [label = <(&lt;operator&gt;.assignment,dumpLayers = false)<SUB>4343</SUB>> ]
-"11968" [label = <(dumpProtoFromMainThread,dumpProtoFromMainThread())<SUB>4350</SUB>> ]
-"11817" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpDisplayIdentificationData)<SUB>4317</SUB>> ]
-"11824" [label = <(METHOD_REF,ANY anonymous_lambda_43 (std::string&amp; s),dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); }))<SUB>4319</SUB>> ]
-"11828" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)<SUB>4320</SUB>> ]
-"11835" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpFrameEventsLocked)<SUB>4321</SUB>> ]
-"11842" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpStatsLocked)<SUB>4322</SUB>> ]
-"11849" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::clearStatsLocked)<SUB>4323</SUB>> ]
-"11856" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::listLayersLocked)<SUB>4324</SUB>> ]
-"11863" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpStaticScreenStats)<SUB>4325</SUB>> ]
-"11870" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpTimeStats)<SUB>4326</SUB>> ]
-"11877" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpVSync)<SUB>4327</SUB>> ]
-"11884" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpWideColorInfo)<SUB>4328</SUB>> ]
-"11895" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>4331</SUB>> ]
-"11900" [label = <(FIELD_IDENTIFIER,string,string)<SUB>4331</SUB>> ]
-"11902" [label = <(&lt;operator&gt;.indirectIndexAccess,args[0])<SUB>4331</SUB>> ]
-"11919" [label = <(&lt;operator&gt;.fieldAccess,lock.locked)<SUB>4336</SUB>> ]
-"11924" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4337</SUB>> ]
-"11927" [label = <(strerror,strerror(-lock.status))<SUB>4338</SUB>> ]
-"11932" [label = <(&lt;operator&gt;.fieldAccess,lock.status)<SUB>4338</SUB>> ]
-"11939" [label = <(&lt;operator&gt;.fieldAccess,dumpers.end)<SUB>4341</SUB>> ]
-"11944" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>4342</SUB>> ]
-"11972" [label = <(append,result.append(layersProto.SerializeAsString()))<SUB>4352</SUB>> ]
-"11818" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpDisplayIdentificationData)<SUB>4317</SUB>> ]
-"11829" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpRawDisplayIdentificationData)<SUB>4320</SUB>> ]
-"11836" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpFrameEventsLocked)<SUB>4321</SUB>> ]
-"11843" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpStatsLocked)<SUB>4322</SUB>> ]
-"11850" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::clearStatsLocked)<SUB>4323</SUB>> ]
-"11857" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::listLayersLocked)<SUB>4324</SUB>> ]
-"11864" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpStaticScreenStats)<SUB>4325</SUB>> ]
-"11871" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpTimeStats)<SUB>4326</SUB>> ]
-"11878" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpVSync)<SUB>4327</SUB>> ]
-"11885" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpWideColorInfo)<SUB>4328</SUB>> ]
-"11921" [label = <(FIELD_IDENTIFIER,locked,locked)<SUB>4336</SUB>> ]
-"11928" [label = <(&lt;operator&gt;.minus,-lock.status)<SUB>4338</SUB>> ]
-"11934" [label = <(FIELD_IDENTIFIER,status,status)<SUB>4338</SUB>> ]
-"11941" [label = <(FIELD_IDENTIFIER,end,end)<SUB>4341</SUB>> ]
-"11946" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4342</SUB>> ]
-"11956" [label = <(&lt;operator&gt;.logicalNot,!asProto)<SUB>4344</SUB>> ]
-"11973" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4352</SUB>> ]
-"11976" [label = <(SerializeAsString,layersProto.SerializeAsString())<SUB>4352</SUB>> ]
-"11983" [label = <(&lt;operator&gt;.assignment,layerTree = LayerProtoParser::generateLayerTree(layersProto))<SUB>4355</SUB>> ]
-"11990" [label = <(append,result.append(LayerProtoParser::layerTreeToString(layerTree)))<SUB>4356</SUB>> ]
-"11999" [label = <(append,result.append(&quot;\n&quot;))<SUB>4357</SUB>> ]
-"12004" [label = <(dumpOffscreenLayers,dumpOffscreenLayers(result))<SUB>4358</SUB>> ]
-"11820" [label = <(FIELD_IDENTIFIER,dumpDisplayIdentificationData,dumpDisplayIdentificationData)<SUB>4317</SUB>> ]
-"11831" [label = <(FIELD_IDENTIFIER,dumpRawDisplayIdentificationData,dumpRawDisplayIdentificationData)<SUB>4320</SUB>> ]
-"11838" [label = <(FIELD_IDENTIFIER,dumpFrameEventsLocked,dumpFrameEventsLocked)<SUB>4321</SUB>> ]
-"11845" [label = <(FIELD_IDENTIFIER,dumpStatsLocked,dumpStatsLocked)<SUB>4322</SUB>> ]
-"11852" [label = <(FIELD_IDENTIFIER,clearStatsLocked,clearStatsLocked)<SUB>4323</SUB>> ]
-"11859" [label = <(FIELD_IDENTIFIER,listLayersLocked,listLayersLocked)<SUB>4324</SUB>> ]
-"11866" [label = <(FIELD_IDENTIFIER,dumpStaticScreenStats,dumpStaticScreenStats)<SUB>4325</SUB>> ]
-"11873" [label = <(FIELD_IDENTIFIER,dumpTimeStats,dumpTimeStats)<SUB>4326</SUB>> ]
-"11880" [label = <(FIELD_IDENTIFIER,dumpVSync,dumpVSync)<SUB>4327</SUB>> ]
-"11887" [label = <(FIELD_IDENTIFIER,dumpWideColorInfo,dumpWideColorInfo)<SUB>4328</SUB>> ]
-"11929" [label = <(&lt;operator&gt;.fieldAccess,lock.status)<SUB>4338</SUB>> ]
-"11959" [label = <(dumpAllLocked,dumpAllLocked(args, result))<SUB>4345</SUB>> ]
-"11975" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4352</SUB>> ]
-"11977" [label = <(&lt;operator&gt;.fieldAccess,layersProto.SerializeAsString)<SUB>4352</SUB>> ]
-"11985" [label = <(LayerProtoParser::generateLayerTree,LayerProtoParser::generateLayerTree(layersProto))<SUB>4355</SUB>> ]
-"11991" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4356</SUB>> ]
-"11994" [label = <(LayerProtoParser::layerTreeToString,LayerProtoParser::layerTreeToString(layerTree))<SUB>4356</SUB>> ]
-"12000" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4357</SUB>> ]
-"11931" [label = <(FIELD_IDENTIFIER,status,status)<SUB>4338</SUB>> ]
-"11979" [label = <(FIELD_IDENTIFIER,SerializeAsString,SerializeAsString)<SUB>4352</SUB>> ]
-"11986" [label = <(&lt;operator&gt;.fieldAccess,LayerProtoParser::generateLayerTree)<SUB>4355</SUB>> ]
-"11993" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4356</SUB>> ]
-"11995" [label = <(&lt;operator&gt;.fieldAccess,LayerProtoParser::layerTreeToString)<SUB>4356</SUB>> ]
-"12002" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4357</SUB>> ]
-"11988" [label = <(FIELD_IDENTIFIER,generateLayerTree,generateLayerTree)<SUB>4355</SUB>> ]
-"11997" [label = <(FIELD_IDENTIFIER,layerTreeToString,layerTreeToString)<SUB>4356</SUB>> ]
-"11761" [label = <(METHOD,doDump)<SUB>4304</SUB>> ]
-"12018" [label = <(METHOD_RETURN,status_t)<SUB>4304</SUB>> ]
-  "11768" -> "11780" 
-  "11775" -> "11787" 
-  "11782" -> "11790" 
-  "12006" -> "12016" 
-  "12016" -> "12018" 
-  "11770" -> "11768" 
-  "11777" -> "11775" 
-  "11784" -> "11782" 
-  "11789" -> "11803" 
-  "11789" -> "11820" 
-  "12008" -> "12015" 
-  "12012" -> "12006" 
-  "11771" -> "11770" 
-  "11778" -> "11777" 
-  "11785" -> "11784" 
-  "11790" -> "11789" 
-  "11790" -> "11797" 
-  "11793" -> "11789" 
-  "11802" -> "12011" 
-  "12009" -> "12008" 
-  "12013" -> "12012" 
-  "11773" -> "11771" 
-  "11780" -> "11778" 
-  "11787" -> "11785" 
+"11784" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4306</SUB>> ]
+"11791" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4307</SUB>> ]
+"11798" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4308</SUB>> ]
+"12022" [label = <(write,write(fd, result.c_str(), result.size()))<SUB>4361</SUB>> ]
+"12032" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>4362</SUB>> ]
+"11786" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4306</SUB>> ]
+"11793" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4307</SUB>> ]
+"11800" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4308</SUB>> ]
+"11805" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_SHELL) &amp;&amp;\012 !PermissionCache::checkPermission(sDump, pid, uid))<SUB>4310</SUB>> ]
+"12024" [label = <(c_str,result.c_str())<SUB>4361</SUB>> ]
+"12028" [label = <(size,result.size())<SUB>4361</SUB>> ]
+"11787" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4306</SUB>> ]
+"11794" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4307</SUB>> ]
+"11801" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4308</SUB>> ]
+"11806" [label = <(&lt;operator&gt;.notEquals,uid != AID_SHELL)<SUB>4310</SUB>> ]
+"11809" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sDump, pid, uid))<SUB>4311</SUB>> ]
+"11818" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Permission Denial: can't dump SurfaceFlinger from pid=%d, uid=%d\n&quot;,\012                      pid, uid))<SUB>4312</SUB>> ]
+"12025" [label = <(&lt;operator&gt;.fieldAccess,result.c_str)<SUB>4361</SUB>> ]
+"12029" [label = <(&lt;operator&gt;.fieldAccess,result.size)<SUB>4361</SUB>> ]
+"11789" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4306</SUB>> ]
+"11796" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4307</SUB>> ]
+"11803" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4308</SUB>> ]
+"11810" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sDump, pid, uid))<SUB>4311</SUB>> ]
+"11819" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4312</SUB>> ]
+"11827" [label = <(&lt;operator&gt;.assignment,dumpers = {\012 {&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)},\012 {&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })},\012 {&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)},\012 {&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)},\012 {&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)},\012 {&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)},\012 {&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)},\012 {&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)},\012 {&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)},\012 {&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)},\012 {&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)},\012 })<SUB>4315</SUB>> ]
+"11905" [label = <(&lt;operator&gt;.assignment,flag = args.empty() ? &quot;&quot;s : std::string(String8(args[0])))<SUB>4330</SUB>> ]
+"11922" [label = <(&lt;operator&gt;.assignment,dumpLayers = true)<SUB>4332</SUB>> ]
+"12027" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4361</SUB>> ]
+"12031" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4361</SUB>> ]
+"11811" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4311</SUB>> ]
+"11829" [label = <(&lt;operator&gt;.arrayInitializer,{\012 {&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)},\012 {&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })},\012 {&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)},\012 {&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)},\012 {&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)},\012 {&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)},\012 {&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)},\012 {&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)},\012 {&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)},\012 {&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)},\012 {&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)},\012 })<SUB>4315</SUB>> ]
+"11907" [label = <(&lt;operator&gt;.conditional,args.empty() ? &quot;&quot;s : std::string(String8(args[0])))<SUB>4330</SUB>> ]
+"11927" [label = <(lock,lock(mStateLock, s2ns(1), __FUNCTION__))<SUB>4334</SUB>> ]
+"11813" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4311</SUB>> ]
+"11830" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--display-id&quot;s, dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData)})<SUB>4316</SUB>> ]
+"11837" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--dispsync&quot;s,\012                 dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); })})<SUB>4317</SUB>> ]
+"11841" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--edid&quot;s, argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)})<SUB>4319</SUB>> ]
+"11848" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--frame-events&quot;s, dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked)})<SUB>4320</SUB>> ]
+"11855" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--latency&quot;s, argsDumper(&amp;SurfaceFlinger::dumpStatsLocked)})<SUB>4321</SUB>> ]
+"11862" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--latency-clear&quot;s, argsDumper(&amp;SurfaceFlinger::clearStatsLocked)})<SUB>4322</SUB>> ]
+"11869" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--list&quot;s, dumper(&amp;SurfaceFlinger::listLayersLocked)})<SUB>4323</SUB>> ]
+"11876" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--static-screen&quot;s, dumper(&amp;SurfaceFlinger::dumpStaticScreenStats)})<SUB>4324</SUB>> ]
+"11883" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--timestats&quot;s, protoDumper(&amp;SurfaceFlinger::dumpTimeStats)})<SUB>4325</SUB>> ]
+"11890" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--vsync&quot;s, dumper(&amp;SurfaceFlinger::dumpVSync)})<SUB>4326</SUB>> ]
+"11897" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;--wide-color&quot;s, dumper(&amp;SurfaceFlinger::dumpWideColorInfo)})<SUB>4327</SUB>> ]
+"11908" [label = <(empty,args.empty())<SUB>4330</SUB>> ]
+"11913" [label = <(std::string,std::string(String8(args[0])))<SUB>4330</SUB>> ]
+"11929" [label = <(s2ns,s2ns(1))<SUB>4334</SUB>> ]
+"11933" [label = <(&lt;operator&gt;.logicalNot,!lock.locked())<SUB>4335</SUB>> ]
+"11952" [label = <(&lt;operator&gt;.notEquals,it != dumpers.end())<SUB>4340</SUB>> ]
+"11982" [label = <(&lt;operator&gt;.assignment,layersProto = dumpProtoFromMainThread())<SUB>4349</SUB>> ]
+"11832" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpDisplayIdentificationData))<SUB>4316</SUB>> ]
+"11839" [label = <(dumper,dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); }))<SUB>4318</SUB>> ]
+"11843" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::dumpRawDisplayIdentificationData))<SUB>4319</SUB>> ]
+"11850" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpFrameEventsLocked))<SUB>4320</SUB>> ]
+"11857" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::dumpStatsLocked))<SUB>4321</SUB>> ]
+"11864" [label = <(argsDumper,argsDumper(&amp;SurfaceFlinger::clearStatsLocked))<SUB>4322</SUB>> ]
+"11871" [label = <(dumper,dumper(&amp;SurfaceFlinger::listLayersLocked))<SUB>4323</SUB>> ]
+"11878" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpStaticScreenStats))<SUB>4324</SUB>> ]
+"11885" [label = <(protoDumper,protoDumper(&amp;SurfaceFlinger::dumpTimeStats))<SUB>4325</SUB>> ]
+"11892" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpVSync))<SUB>4326</SUB>> ]
+"11899" [label = <(dumper,dumper(&amp;SurfaceFlinger::dumpWideColorInfo))<SUB>4327</SUB>> ]
+"11909" [label = <(&lt;operator&gt;.fieldAccess,args.empty)<SUB>4330</SUB>> ]
+"11914" [label = <(&lt;operator&gt;.fieldAccess,std::string)<SUB>4330</SUB>> ]
+"11917" [label = <(String8,String8(args[0]))<SUB>4330</SUB>> ]
+"11934" [label = <(locked,lock.locked())<SUB>4335</SUB>> ]
+"11939" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Dumping without lock after timeout: %s (%d)\n&quot;,\012                              strerror(-lock.status), lock.status))<SUB>4336</SUB>> ]
+"11954" [label = <(end,dumpers.end())<SUB>4340</SUB>> ]
+"11959" [label = <(it-&gt;second,(it-&gt;second)(args, asProto, result))<SUB>4341</SUB>> ]
+"11966" [label = <(&lt;operator&gt;.assignment,dumpLayers = false)<SUB>4342</SUB>> ]
+"11984" [label = <(dumpProtoFromMainThread,dumpProtoFromMainThread())<SUB>4349</SUB>> ]
+"11833" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpDisplayIdentificationData)<SUB>4316</SUB>> ]
+"11840" [label = <(METHOD_REF,ANY anonymous_lambda_43 (std::string&amp; s),dumper([this](std::string&amp; s) { mScheduler-&gt;getPrimaryDispSync().dump(s); }))<SUB>4318</SUB>> ]
+"11844" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpRawDisplayIdentificationData)<SUB>4319</SUB>> ]
+"11851" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpFrameEventsLocked)<SUB>4320</SUB>> ]
+"11858" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpStatsLocked)<SUB>4321</SUB>> ]
+"11865" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::clearStatsLocked)<SUB>4322</SUB>> ]
+"11872" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::listLayersLocked)<SUB>4323</SUB>> ]
+"11879" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpStaticScreenStats)<SUB>4324</SUB>> ]
+"11886" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpTimeStats)<SUB>4325</SUB>> ]
+"11893" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpVSync)<SUB>4326</SUB>> ]
+"11900" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::dumpWideColorInfo)<SUB>4327</SUB>> ]
+"11911" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>4330</SUB>> ]
+"11916" [label = <(FIELD_IDENTIFIER,string,string)<SUB>4330</SUB>> ]
+"11918" [label = <(&lt;operator&gt;.indirectIndexAccess,args[0])<SUB>4330</SUB>> ]
+"11935" [label = <(&lt;operator&gt;.fieldAccess,lock.locked)<SUB>4335</SUB>> ]
+"11940" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4336</SUB>> ]
+"11943" [label = <(strerror,strerror(-lock.status))<SUB>4337</SUB>> ]
+"11948" [label = <(&lt;operator&gt;.fieldAccess,lock.status)<SUB>4337</SUB>> ]
+"11955" [label = <(&lt;operator&gt;.fieldAccess,dumpers.end)<SUB>4340</SUB>> ]
+"11960" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>4341</SUB>> ]
+"11988" [label = <(append,result.append(layersProto.SerializeAsString()))<SUB>4351</SUB>> ]
+"11834" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpDisplayIdentificationData)<SUB>4316</SUB>> ]
+"11845" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpRawDisplayIdentificationData)<SUB>4319</SUB>> ]
+"11852" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpFrameEventsLocked)<SUB>4320</SUB>> ]
+"11859" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpStatsLocked)<SUB>4321</SUB>> ]
+"11866" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::clearStatsLocked)<SUB>4322</SUB>> ]
+"11873" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::listLayersLocked)<SUB>4323</SUB>> ]
+"11880" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpStaticScreenStats)<SUB>4324</SUB>> ]
+"11887" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpTimeStats)<SUB>4325</SUB>> ]
+"11894" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpVSync)<SUB>4326</SUB>> ]
+"11901" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::dumpWideColorInfo)<SUB>4327</SUB>> ]
+"11937" [label = <(FIELD_IDENTIFIER,locked,locked)<SUB>4335</SUB>> ]
+"11944" [label = <(&lt;operator&gt;.minus,-lock.status)<SUB>4337</SUB>> ]
+"11950" [label = <(FIELD_IDENTIFIER,status,status)<SUB>4337</SUB>> ]
+"11957" [label = <(FIELD_IDENTIFIER,end,end)<SUB>4340</SUB>> ]
+"11962" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4341</SUB>> ]
+"11972" [label = <(&lt;operator&gt;.logicalNot,!asProto)<SUB>4343</SUB>> ]
+"11989" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4351</SUB>> ]
+"11992" [label = <(SerializeAsString,layersProto.SerializeAsString())<SUB>4351</SUB>> ]
+"11999" [label = <(&lt;operator&gt;.assignment,layerTree = LayerProtoParser::generateLayerTree(layersProto))<SUB>4354</SUB>> ]
+"12006" [label = <(append,result.append(LayerProtoParser::layerTreeToString(layerTree)))<SUB>4355</SUB>> ]
+"12015" [label = <(append,result.append(&quot;\n&quot;))<SUB>4356</SUB>> ]
+"12020" [label = <(dumpOffscreenLayers,dumpOffscreenLayers(result))<SUB>4357</SUB>> ]
+"11836" [label = <(FIELD_IDENTIFIER,dumpDisplayIdentificationData,dumpDisplayIdentificationData)<SUB>4316</SUB>> ]
+"11847" [label = <(FIELD_IDENTIFIER,dumpRawDisplayIdentificationData,dumpRawDisplayIdentificationData)<SUB>4319</SUB>> ]
+"11854" [label = <(FIELD_IDENTIFIER,dumpFrameEventsLocked,dumpFrameEventsLocked)<SUB>4320</SUB>> ]
+"11861" [label = <(FIELD_IDENTIFIER,dumpStatsLocked,dumpStatsLocked)<SUB>4321</SUB>> ]
+"11868" [label = <(FIELD_IDENTIFIER,clearStatsLocked,clearStatsLocked)<SUB>4322</SUB>> ]
+"11875" [label = <(FIELD_IDENTIFIER,listLayersLocked,listLayersLocked)<SUB>4323</SUB>> ]
+"11882" [label = <(FIELD_IDENTIFIER,dumpStaticScreenStats,dumpStaticScreenStats)<SUB>4324</SUB>> ]
+"11889" [label = <(FIELD_IDENTIFIER,dumpTimeStats,dumpTimeStats)<SUB>4325</SUB>> ]
+"11896" [label = <(FIELD_IDENTIFIER,dumpVSync,dumpVSync)<SUB>4326</SUB>> ]
+"11903" [label = <(FIELD_IDENTIFIER,dumpWideColorInfo,dumpWideColorInfo)<SUB>4327</SUB>> ]
+"11945" [label = <(&lt;operator&gt;.fieldAccess,lock.status)<SUB>4337</SUB>> ]
+"11975" [label = <(dumpAllLocked,dumpAllLocked(args, result))<SUB>4344</SUB>> ]
+"11991" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4351</SUB>> ]
+"11993" [label = <(&lt;operator&gt;.fieldAccess,layersProto.SerializeAsString)<SUB>4351</SUB>> ]
+"12001" [label = <(LayerProtoParser::generateLayerTree,LayerProtoParser::generateLayerTree(layersProto))<SUB>4354</SUB>> ]
+"12007" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4355</SUB>> ]
+"12010" [label = <(LayerProtoParser::layerTreeToString,LayerProtoParser::layerTreeToString(layerTree))<SUB>4355</SUB>> ]
+"12016" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4356</SUB>> ]
+"11947" [label = <(FIELD_IDENTIFIER,status,status)<SUB>4337</SUB>> ]
+"11995" [label = <(FIELD_IDENTIFIER,SerializeAsString,SerializeAsString)<SUB>4351</SUB>> ]
+"12002" [label = <(&lt;operator&gt;.fieldAccess,LayerProtoParser::generateLayerTree)<SUB>4354</SUB>> ]
+"12009" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4355</SUB>> ]
+"12011" [label = <(&lt;operator&gt;.fieldAccess,LayerProtoParser::layerTreeToString)<SUB>4355</SUB>> ]
+"12018" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4356</SUB>> ]
+"12004" [label = <(FIELD_IDENTIFIER,generateLayerTree,generateLayerTree)<SUB>4354</SUB>> ]
+"12013" [label = <(FIELD_IDENTIFIER,layerTreeToString,layerTreeToString)<SUB>4355</SUB>> ]
+"11777" [label = <(METHOD,doDump)<SUB>4303</SUB>> ]
+"12034" [label = <(METHOD_RETURN,status_t)<SUB>4303</SUB>> ]
+  "11784" -> "11796" 
+  "11791" -> "11803" 
+  "11798" -> "11806" 
+  "12022" -> "12032" 
+  "12032" -> "12034" 
+  "11786" -> "11784" 
+  "11793" -> "11791" 
+  "11800" -> "11798" 
+  "11805" -> "11819" 
+  "11805" -> "11836" 
+  "12024" -> "12031" 
+  "12028" -> "12022" 
+  "11787" -> "11786" 
   "11794" -> "11793" 
-  "11803" -> "11802" 
-  "11811" -> "11895" 
-  "11889" -> "11906" 
-  "11906" -> "11913" 
-  "12011" -> "12009" 
-  "12015" -> "12013" 
-  "11795" -> "11794" 
+  "11801" -> "11800" 
+  "11806" -> "11805" 
+  "11806" -> "11813" 
+  "11809" -> "11805" 
+  "11818" -> "12027" 
+  "12025" -> "12024" 
+  "12029" -> "12028" 
+  "11789" -> "11787" 
+  "11796" -> "11794" 
+  "11803" -> "11801" 
+  "11810" -> "11809" 
+  "11819" -> "11818" 
+  "11827" -> "11911" 
+  "11905" -> "11922" 
+  "11922" -> "11929" 
+  "12027" -> "12025" 
+  "12031" -> "12029" 
+  "11811" -> "11810" 
+  "11829" -> "11827" 
+  "11907" -> "11905" 
+  "11927" -> "11937" 
   "11813" -> "11811" 
-  "11891" -> "11889" 
-  "11911" -> "11921" 
-  "11797" -> "11795" 
-  "11814" -> "11824" 
-  "11821" -> "11831" 
-  "11825" -> "11838" 
-  "11832" -> "11845" 
-  "11839" -> "11852" 
-  "11846" -> "11859" 
-  "11853" -> "11866" 
-  "11860" -> "11873" 
-  "11867" -> "11880" 
-  "11874" -> "11887" 
-  "11881" -> "11813" 
-  "11892" -> "11891" 
-  "11892" -> "11900" 
-  "11897" -> "11891" 
-  "11913" -> "11911" 
-  "11917" -> "11924" 
-  "11917" -> "11941" 
-  "11936" -> "11946" 
-  "11936" -> "11956" 
-  "11966" -> "11975" 
-  "11966" -> "11988" 
-  "11816" -> "11814" 
-  "11823" -> "11821" 
-  "11827" -> "11825" 
-  "11834" -> "11832" 
-  "11841" -> "11839" 
-  "11848" -> "11846" 
-  "11855" -> "11853" 
-  "11862" -> "11860" 
-  "11869" -> "11867" 
-  "11876" -> "11874" 
-  "11883" -> "11881" 
+  "11830" -> "11840" 
+  "11837" -> "11847" 
+  "11841" -> "11854" 
+  "11848" -> "11861" 
+  "11855" -> "11868" 
+  "11862" -> "11875" 
+  "11869" -> "11882" 
+  "11876" -> "11889" 
+  "11883" -> "11896" 
+  "11890" -> "11903" 
+  "11897" -> "11829" 
+  "11908" -> "11907" 
+  "11908" -> "11916" 
+  "11913" -> "11907" 
+  "11929" -> "11927" 
+  "11933" -> "11940" 
+  "11933" -> "11957" 
+  "11952" -> "11962" 
+  "11952" -> "11972" 
+  "11982" -> "11991" 
+  "11982" -> "12004" 
+  "11832" -> "11830" 
+  "11839" -> "11837" 
+  "11843" -> "11841" 
+  "11850" -> "11848" 
+  "11857" -> "11855" 
+  "11864" -> "11862" 
+  "11871" -> "11869" 
+  "11878" -> "11876" 
+  "11885" -> "11883" 
+  "11892" -> "11890" 
+  "11899" -> "11897" 
+  "11909" -> "11908" 
+  "11914" -> "11918" 
+  "11917" -> "11913" 
+  "11934" -> "11933" 
+  "11939" -> "11957" 
+  "11954" -> "11952" 
+  "11959" -> "11966" 
+  "11966" -> "11984" 
+  "11966" -> "12027" 
+  "11984" -> "11982" 
+  "11833" -> "11832" 
+  "11840" -> "11839" 
+  "11844" -> "11843" 
+  "11851" -> "11850" 
+  "11858" -> "11857" 
+  "11865" -> "11864" 
+  "11872" -> "11871" 
+  "11879" -> "11878" 
+  "11886" -> "11885" 
   "11893" -> "11892" 
-  "11898" -> "11902" 
-  "11901" -> "11897" 
+  "11900" -> "11899" 
+  "11911" -> "11909" 
+  "11916" -> "11914" 
   "11918" -> "11917" 
-  "11923" -> "11941" 
-  "11938" -> "11936" 
+  "11935" -> "11934" 
+  "11940" -> "11947" 
   "11943" -> "11950" 
-  "11950" -> "11968" 
-  "11950" -> "12011" 
-  "11968" -> "11966" 
-  "11817" -> "11816" 
-  "11824" -> "11823" 
-  "11828" -> "11827" 
-  "11835" -> "11834" 
-  "11842" -> "11841" 
-  "11849" -> "11848" 
-  "11856" -> "11855" 
-  "11863" -> "11862" 
-  "11870" -> "11869" 
-  "11877" -> "11876" 
-  "11884" -> "11883" 
-  "11895" -> "11893" 
-  "11900" -> "11898" 
-  "11902" -> "11901" 
-  "11919" -> "11918" 
-  "11924" -> "11931" 
-  "11927" -> "11934" 
-  "11932" -> "11923" 
-  "11939" -> "11938" 
+  "11948" -> "11939" 
+  "11955" -> "11954" 
+  "11960" -> "11959" 
+  "11988" -> "12027" 
+  "11834" -> "11833" 
+  "11845" -> "11844" 
+  "11852" -> "11851" 
+  "11859" -> "11858" 
+  "11866" -> "11865" 
+  "11873" -> "11872" 
+  "11880" -> "11879" 
+  "11887" -> "11886" 
+  "11894" -> "11893" 
+  "11901" -> "11900" 
+  "11937" -> "11935" 
   "11944" -> "11943" 
-  "11972" -> "12011" 
-  "11818" -> "11817" 
-  "11829" -> "11828" 
-  "11836" -> "11835" 
-  "11843" -> "11842" 
-  "11850" -> "11849" 
-  "11857" -> "11856" 
-  "11864" -> "11863" 
-  "11871" -> "11870" 
-  "11878" -> "11877" 
-  "11885" -> "11884" 
-  "11921" -> "11919" 
-  "11928" -> "11927" 
-  "11934" -> "11932" 
-  "11941" -> "11939" 
-  "11946" -> "11944" 
-  "11956" -> "11959" 
-  "11956" -> "11968" 
-  "11956" -> "12011" 
-  "11973" -> "11979" 
-  "11976" -> "11972" 
-  "11983" -> "11993" 
-  "11990" -> "12002" 
-  "11999" -> "12004" 
-  "12004" -> "12011" 
-  "11820" -> "11818" 
-  "11831" -> "11829" 
-  "11838" -> "11836" 
-  "11845" -> "11843" 
-  "11852" -> "11850" 
-  "11859" -> "11857" 
-  "11866" -> "11864" 
-  "11873" -> "11871" 
-  "11880" -> "11878" 
-  "11887" -> "11885" 
-  "11929" -> "11928" 
-  "11959" -> "11968" 
-  "11959" -> "12011" 
-  "11975" -> "11973" 
-  "11977" -> "11976" 
-  "11985" -> "11983" 
-  "11991" -> "11997" 
-  "11994" -> "11990" 
-  "12000" -> "11999" 
-  "11931" -> "11929" 
-  "11979" -> "11977" 
-  "11986" -> "11985" 
-  "11993" -> "11991" 
-  "11995" -> "11994" 
-  "12002" -> "12000" 
-  "11988" -> "11986" 
-  "11997" -> "11995" 
-  "11761" -> "11773" 
+  "11950" -> "11948" 
+  "11957" -> "11955" 
+  "11962" -> "11960" 
+  "11972" -> "11975" 
+  "11972" -> "11984" 
+  "11972" -> "12027" 
+  "11989" -> "11995" 
+  "11992" -> "11988" 
+  "11999" -> "12009" 
+  "12006" -> "12018" 
+  "12015" -> "12020" 
+  "12020" -> "12027" 
+  "11836" -> "11834" 
+  "11847" -> "11845" 
+  "11854" -> "11852" 
+  "11861" -> "11859" 
+  "11868" -> "11866" 
+  "11875" -> "11873" 
+  "11882" -> "11880" 
+  "11889" -> "11887" 
+  "11896" -> "11894" 
+  "11903" -> "11901" 
+  "11945" -> "11944" 
+  "11975" -> "11984" 
+  "11975" -> "12027" 
+  "11991" -> "11989" 
+  "11993" -> "11992" 
+  "12001" -> "11999" 
+  "12007" -> "12013" 
+  "12010" -> "12006" 
+  "12016" -> "12015" 
+  "11947" -> "11945" 
+  "11995" -> "11993" 
+  "12002" -> "12001" 
+  "12009" -> "12007" 
+  "12011" -> "12010" 
+  "12018" -> "12016" 
+  "12004" -> "12002" 
+  "12013" -> "12011" 
+  "11777" -> "11789" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/213-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/213-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/213-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/213-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,27 +1,27 @@
 digraph "dumpCritical" {  
-"12037" [label = <(RETURN,return doDump(fd, DumpArgs(), asProto);,return doDump(fd, DumpArgs(), asProto);)<SUB>4371</SUB>> ]
-"12026" [label = <(&lt;operator&gt;.logicalAnd,asProto &amp;&amp; mTracing.isEnabled())<SUB>4367</SUB>> ]
-"12038" [label = <(doDump,doDump(fd, DumpArgs(), asProto))<SUB>4371</SUB>> ]
-"12028" [label = <(isEnabled,mTracing.isEnabled())<SUB>4367</SUB>> ]
-"12033" [label = <(writeToFileAsync,mTracing.writeToFileAsync())<SUB>4368</SUB>> ]
-"12040" [label = <(DumpArgs,DumpArgs())<SUB>4371</SUB>> ]
-"12029" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>4367</SUB>> ]
-"12034" [label = <(&lt;operator&gt;.fieldAccess,mTracing.writeToFileAsync)<SUB>4368</SUB>> ]
-"12031" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>4367</SUB>> ]
-"12036" [label = <(FIELD_IDENTIFIER,writeToFileAsync,writeToFileAsync)<SUB>4368</SUB>> ]
-"12020" [label = <(METHOD,dumpCritical)<SUB>4366</SUB>> ]
-"12042" [label = <(METHOD_RETURN,status_t)<SUB>4366</SUB>> ]
-  "12037" -> "12042" 
-  "12026" -> "12036" 
-  "12026" -> "12040" 
-  "12038" -> "12037" 
-  "12028" -> "12026" 
-  "12033" -> "12040" 
-  "12040" -> "12038" 
-  "12029" -> "12028" 
-  "12034" -> "12033" 
-  "12031" -> "12029" 
-  "12036" -> "12034" 
-  "12020" -> "12026" 
-  "12020" -> "12031" 
+"12053" [label = <(RETURN,return doDump(fd, DumpArgs(), asProto);,return doDump(fd, DumpArgs(), asProto);)<SUB>4370</SUB>> ]
+"12042" [label = <(&lt;operator&gt;.logicalAnd,asProto &amp;&amp; mTracing.isEnabled())<SUB>4366</SUB>> ]
+"12054" [label = <(doDump,doDump(fd, DumpArgs(), asProto))<SUB>4370</SUB>> ]
+"12044" [label = <(isEnabled,mTracing.isEnabled())<SUB>4366</SUB>> ]
+"12049" [label = <(writeToFileAsync,mTracing.writeToFileAsync())<SUB>4367</SUB>> ]
+"12056" [label = <(DumpArgs,DumpArgs())<SUB>4370</SUB>> ]
+"12045" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>4366</SUB>> ]
+"12050" [label = <(&lt;operator&gt;.fieldAccess,mTracing.writeToFileAsync)<SUB>4367</SUB>> ]
+"12047" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>4366</SUB>> ]
+"12052" [label = <(FIELD_IDENTIFIER,writeToFileAsync,writeToFileAsync)<SUB>4367</SUB>> ]
+"12036" [label = <(METHOD,dumpCritical)<SUB>4365</SUB>> ]
+"12058" [label = <(METHOD_RETURN,status_t)<SUB>4365</SUB>> ]
+  "12053" -> "12058" 
+  "12042" -> "12052" 
+  "12042" -> "12056" 
+  "12054" -> "12053" 
+  "12044" -> "12042" 
+  "12049" -> "12056" 
+  "12056" -> "12054" 
+  "12045" -> "12044" 
+  "12050" -> "12049" 
+  "12047" -> "12045" 
+  "12052" -> "12050" 
+  "12036" -> "12042" 
+  "12036" -> "12047" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/214-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/214-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/214-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/214-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,13 +1,13 @@
 digraph "listLayersLocked" {  
-"12047" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder(\012 [&amp;](Layer* layer) { StringAppendF(&amp;result, &quot;%s\n&quot;, layer-&gt;getDebugName()); }))<SUB>4375</SUB>> ]
-"12048" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4375</SUB>> ]
-"12051" [label = <(METHOD_REF,ANY anonymous_lambda_44 (Layer* layer),mCurrentState.traverseInZOrder(\012 [&amp;](Layer* layer) { StringAppendF(&amp;result, &quot;%s\n&quot;, layer-&gt;getDebugName()); }))<SUB>4376</SUB>> ]
-"12050" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4375</SUB>> ]
-"12044" [label = <(METHOD,listLayersLocked)<SUB>4374</SUB>> ]
-"12052" [label = <(METHOD_RETURN,void)<SUB>4374</SUB>> ]
-  "12047" -> "12052" 
-  "12048" -> "12051" 
-  "12051" -> "12047" 
-  "12050" -> "12048" 
-  "12044" -> "12050" 
+"12063" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder(\012 [&amp;](Layer* layer) { StringAppendF(&amp;result, &quot;%s\n&quot;, layer-&gt;getDebugName()); }))<SUB>4374</SUB>> ]
+"12064" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4374</SUB>> ]
+"12067" [label = <(METHOD_REF,ANY anonymous_lambda_44 (Layer* layer),mCurrentState.traverseInZOrder(\012 [&amp;](Layer* layer) { StringAppendF(&amp;result, &quot;%s\n&quot;, layer-&gt;getDebugName()); }))<SUB>4375</SUB>> ]
+"12066" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4374</SUB>> ]
+"12060" [label = <(METHOD,listLayersLocked)<SUB>4373</SUB>> ]
+"12068" [label = <(METHOD_RETURN,void)<SUB>4373</SUB>> ]
+  "12063" -> "12068" 
+  "12064" -> "12067" 
+  "12067" -> "12063" 
+  "12066" -> "12064" 
+  "12060" -> "12066" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/215-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/215-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/215-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/215-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,36 +1,36 @@
 digraph "dumpStatsLocked" {  
-"12058" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot;%&quot; PRId64 &quot;\n&quot;, getVsyncPeriodFromHWC());,StringAppendF(&amp;result, &quot;%&quot; PRId64 &quot;\n&quot;, getVsyncPeriodFromHWC());)<SUB>4380</SUB>> ]
-"12060" [label = <(&lt;operator&gt;.greaterThan,args.size() &gt; 1)<SUB>4382</SUB>> ]
-"12061" [label = <(size,args.size())<SUB>4382</SUB>> ]
-"12068" [label = <(&lt;operator&gt;.assignment,name = String8(args[1]))<SUB>4383</SUB>> ]
-"12074" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == name.string()) {\012                layer-&gt;dumpFrameStats(result);\012 }\012 }))<SUB>4384</SUB>> ]
-"12062" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4382</SUB>> ]
-"12070" [label = <(String8,String8(args[1]))<SUB>4383</SUB>> ]
-"12075" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4384</SUB>> ]
-"12078" [label = <(METHOD_REF,ANY anonymous_lambda_45 (Layer* layer),mCurrentState.traverseInZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == name.string()) {\012                layer-&gt;dumpFrameStats(result);\012 }\012 }))<SUB>4384</SUB>> ]
-"12081" [label = <(dumpStats,mAnimFrameTracker.dumpStats(result))<SUB>4390</SUB>> ]
-"12064" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4382</SUB>> ]
-"12071" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4383</SUB>> ]
-"12077" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4384</SUB>> ]
-"12082" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.dumpStats)<SUB>4390</SUB>> ]
-"12084" [label = <(FIELD_IDENTIFIER,dumpStats,dumpStats)<SUB>4390</SUB>> ]
-"12054" [label = <(METHOD,dumpStatsLocked)<SUB>4379</SUB>> ]
-"12086" [label = <(METHOD_RETURN,void)<SUB>4379</SUB>> ]
-  "12058" -> "12064" 
-  "12060" -> "12071" 
-  "12060" -> "12084" 
-  "12061" -> "12060" 
-  "12068" -> "12077" 
-  "12074" -> "12086" 
-  "12062" -> "12061" 
-  "12070" -> "12068" 
-  "12075" -> "12078" 
-  "12078" -> "12074" 
-  "12081" -> "12086" 
-  "12064" -> "12062" 
-  "12071" -> "12070" 
-  "12077" -> "12075" 
-  "12082" -> "12081" 
-  "12084" -> "12082" 
-  "12054" -> "12058" 
+"12074" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot;%&quot; PRId64 &quot;\n&quot;, getVsyncPeriodFromHWC());,StringAppendF(&amp;result, &quot;%&quot; PRId64 &quot;\n&quot;, getVsyncPeriodFromHWC());)<SUB>4379</SUB>> ]
+"12076" [label = <(&lt;operator&gt;.greaterThan,args.size() &gt; 1)<SUB>4381</SUB>> ]
+"12077" [label = <(size,args.size())<SUB>4381</SUB>> ]
+"12084" [label = <(&lt;operator&gt;.assignment,name = String8(args[1]))<SUB>4382</SUB>> ]
+"12090" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == name.string()) {\012                layer-&gt;dumpFrameStats(result);\012 }\012 }))<SUB>4383</SUB>> ]
+"12078" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4381</SUB>> ]
+"12086" [label = <(String8,String8(args[1]))<SUB>4382</SUB>> ]
+"12091" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4383</SUB>> ]
+"12094" [label = <(METHOD_REF,ANY anonymous_lambda_45 (Layer* layer),mCurrentState.traverseInZOrder([&amp;](Layer* layer) {\012 if (layer-&gt;getName() == name.string()) {\012                layer-&gt;dumpFrameStats(result);\012 }\012 }))<SUB>4383</SUB>> ]
+"12097" [label = <(dumpStats,mAnimFrameTracker.dumpStats(result))<SUB>4389</SUB>> ]
+"12080" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4381</SUB>> ]
+"12087" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4382</SUB>> ]
+"12093" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4383</SUB>> ]
+"12098" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.dumpStats)<SUB>4389</SUB>> ]
+"12100" [label = <(FIELD_IDENTIFIER,dumpStats,dumpStats)<SUB>4389</SUB>> ]
+"12070" [label = <(METHOD,dumpStatsLocked)<SUB>4378</SUB>> ]
+"12102" [label = <(METHOD_RETURN,void)<SUB>4378</SUB>> ]
+  "12074" -> "12080" 
+  "12076" -> "12087" 
+  "12076" -> "12100" 
+  "12077" -> "12076" 
+  "12084" -> "12093" 
+  "12090" -> "12102" 
+  "12078" -> "12077" 
+  "12086" -> "12084" 
+  "12091" -> "12094" 
+  "12094" -> "12090" 
+  "12097" -> "12102" 
+  "12080" -> "12078" 
+  "12087" -> "12086" 
+  "12093" -> "12091" 
+  "12098" -> "12097" 
+  "12100" -> "12098" 
+  "12070" -> "12074" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/216-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/216-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/216-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/216-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,40 +1,40 @@
 digraph "clearStatsLocked" {  
-"12093" [label = <(&lt;operator&gt;.assignment,clearAll = args.size() &lt; 2)<SUB>4395</SUB>> ]
-"12102" [label = <(&lt;operator&gt;.assignment,name = clearAll ? String8() : String8(args[1]))<SUB>4396</SUB>> ]
-"12111" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 if (clearAll || layer-&gt;getName() == name.string()) {\012            layer-&gt;clearFrameStats();\012 }\012 }))<SUB>4398</SUB>> ]
-"12116" [label = <(clearStats,mAnimFrameTracker.clearStats())<SUB>4404</SUB>> ]
-"12095" [label = <(&lt;operator&gt;.lessThan,args.size() &lt; 2)<SUB>4395</SUB>> ]
-"12104" [label = <(&lt;operator&gt;.conditional,clearAll ? String8() : String8(args[1]))<SUB>4396</SUB>> ]
-"12112" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>4398</SUB>> ]
-"12115" [label = <(METHOD_REF,ANY anonymous_lambda_46 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 if (clearAll || layer-&gt;getName() == name.string()) {\012            layer-&gt;clearFrameStats();\012 }\012 }))<SUB>4398</SUB>> ]
-"12117" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.clearStats)<SUB>4404</SUB>> ]
-"12096" [label = <(size,args.size())<SUB>4395</SUB>> ]
-"12106" [label = <(String8,String8())<SUB>4396</SUB>> ]
-"12107" [label = <(String8,String8(args[1]))<SUB>4396</SUB>> ]
-"12114" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4398</SUB>> ]
-"12119" [label = <(FIELD_IDENTIFIER,clearStats,clearStats)<SUB>4404</SUB>> ]
-"12097" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4395</SUB>> ]
-"12108" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4396</SUB>> ]
-"12099" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4395</SUB>> ]
-"12088" [label = <(METHOD,clearStatsLocked)<SUB>4394</SUB>> ]
-"12120" [label = <(METHOD_RETURN,void)<SUB>4394</SUB>> ]
-  "12093" -> "12106" 
-  "12093" -> "12108" 
-  "12102" -> "12114" 
-  "12111" -> "12119" 
-  "12116" -> "12120" 
-  "12095" -> "12093" 
-  "12104" -> "12102" 
-  "12112" -> "12115" 
-  "12115" -> "12111" 
-  "12117" -> "12116" 
-  "12096" -> "12095" 
-  "12106" -> "12104" 
-  "12107" -> "12104" 
-  "12114" -> "12112" 
-  "12119" -> "12117" 
-  "12097" -> "12096" 
-  "12108" -> "12107" 
-  "12099" -> "12097" 
-  "12088" -> "12099" 
+"12109" [label = <(&lt;operator&gt;.assignment,clearAll = args.size() &lt; 2)<SUB>4394</SUB>> ]
+"12118" [label = <(&lt;operator&gt;.assignment,name = clearAll ? String8() : String8(args[1]))<SUB>4395</SUB>> ]
+"12127" [label = <(traverse,mCurrentState.traverse([&amp;](Layer* layer) {\012 if (clearAll || layer-&gt;getName() == name.string()) {\012            layer-&gt;clearFrameStats();\012 }\012 }))<SUB>4397</SUB>> ]
+"12132" [label = <(clearStats,mAnimFrameTracker.clearStats())<SUB>4403</SUB>> ]
+"12111" [label = <(&lt;operator&gt;.lessThan,args.size() &lt; 2)<SUB>4394</SUB>> ]
+"12120" [label = <(&lt;operator&gt;.conditional,clearAll ? String8() : String8(args[1]))<SUB>4395</SUB>> ]
+"12128" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverse)<SUB>4397</SUB>> ]
+"12131" [label = <(METHOD_REF,ANY anonymous_lambda_46 (Layer* layer),mCurrentState.traverse([&amp;](Layer* layer) {\012 if (clearAll || layer-&gt;getName() == name.string()) {\012            layer-&gt;clearFrameStats();\012 }\012 }))<SUB>4397</SUB>> ]
+"12133" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.clearStats)<SUB>4403</SUB>> ]
+"12112" [label = <(size,args.size())<SUB>4394</SUB>> ]
+"12122" [label = <(String8,String8())<SUB>4395</SUB>> ]
+"12123" [label = <(String8,String8(args[1]))<SUB>4395</SUB>> ]
+"12130" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4397</SUB>> ]
+"12135" [label = <(FIELD_IDENTIFIER,clearStats,clearStats)<SUB>4403</SUB>> ]
+"12113" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4394</SUB>> ]
+"12124" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4395</SUB>> ]
+"12115" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4394</SUB>> ]
+"12104" [label = <(METHOD,clearStatsLocked)<SUB>4393</SUB>> ]
+"12136" [label = <(METHOD_RETURN,void)<SUB>4393</SUB>> ]
+  "12109" -> "12122" 
+  "12109" -> "12124" 
+  "12118" -> "12130" 
+  "12127" -> "12135" 
+  "12132" -> "12136" 
+  "12111" -> "12109" 
+  "12120" -> "12118" 
+  "12128" -> "12131" 
+  "12131" -> "12127" 
+  "12133" -> "12132" 
+  "12112" -> "12111" 
+  "12122" -> "12120" 
+  "12123" -> "12120" 
+  "12130" -> "12128" 
+  "12135" -> "12133" 
+  "12113" -> "12112" 
+  "12124" -> "12123" 
+  "12115" -> "12113" 
+  "12104" -> "12115" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/217-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/217-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/217-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/217-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,11 +1,11 @@
 digraph "dumpTimeStats" {  
-"12127" [label = <(parseArgs,mTimeStats-&gt;parseArgs(asProto, args, result))<SUB>4408</SUB>> ]
-"12128" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;parseArgs)<SUB>4408</SUB>> ]
-"12130" [label = <(FIELD_IDENTIFIER,parseArgs,parseArgs)<SUB>4408</SUB>> ]
-"12122" [label = <(METHOD,dumpTimeStats)<SUB>4407</SUB>> ]
-"12134" [label = <(METHOD_RETURN,void)<SUB>4407</SUB>> ]
-  "12127" -> "12134" 
-  "12128" -> "12127" 
-  "12130" -> "12128" 
-  "12122" -> "12130" 
+"12143" [label = <(parseArgs,mTimeStats-&gt;parseArgs(asProto, args, result))<SUB>4407</SUB>> ]
+"12144" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;parseArgs)<SUB>4407</SUB>> ]
+"12146" [label = <(FIELD_IDENTIFIER,parseArgs,parseArgs)<SUB>4407</SUB>> ]
+"12138" [label = <(METHOD,dumpTimeStats)<SUB>4406</SUB>> ]
+"12150" [label = <(METHOD_RETURN,void)<SUB>4406</SUB>> ]
+  "12143" -> "12150" 
+  "12144" -> "12143" 
+  "12146" -> "12144" 
+  "12138" -> "12146" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/218-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/218-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/218-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/218-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,19 +1,19 @@
 digraph "logFrameStats" {  
-"12138" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;logFrameStats();\012 }))<SUB>4414</SUB>> ]
-"12143" [label = <(logAndResetStats,mAnimFrameTracker.logAndResetStats(&quot;&lt;win-anim&gt;&quot;))<SUB>4418</SUB>> ]
-"12139" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>4414</SUB>> ]
-"12142" [label = <(METHOD_REF,ANY anonymous_lambda_47 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;logFrameStats();\012 }))<SUB>4414</SUB>> ]
-"12144" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.logAndResetStats)<SUB>4418</SUB>> ]
-"12141" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4414</SUB>> ]
-"12146" [label = <(FIELD_IDENTIFIER,logAndResetStats,logAndResetStats)<SUB>4418</SUB>> ]
-"12136" [label = <(METHOD,logFrameStats)<SUB>4413</SUB>> ]
-"12148" [label = <(METHOD_RETURN,void)<SUB>4413</SUB>> ]
-  "12138" -> "12146" 
-  "12143" -> "12148" 
-  "12139" -> "12142" 
-  "12142" -> "12138" 
-  "12144" -> "12143" 
-  "12141" -> "12139" 
-  "12146" -> "12144" 
-  "12136" -> "12141" 
+"12154" [label = <(traverse,mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;logFrameStats();\012 }))<SUB>4413</SUB>> ]
+"12159" [label = <(logAndResetStats,mAnimFrameTracker.logAndResetStats(&quot;&lt;win-anim&gt;&quot;))<SUB>4417</SUB>> ]
+"12155" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverse)<SUB>4413</SUB>> ]
+"12158" [label = <(METHOD_REF,ANY anonymous_lambda_47 (Layer* layer),mDrawingState.traverse([&amp;](Layer* layer) {\012        layer-&gt;logFrameStats();\012 }))<SUB>4413</SUB>> ]
+"12160" [label = <(&lt;operator&gt;.fieldAccess,mAnimFrameTracker.logAndResetStats)<SUB>4417</SUB>> ]
+"12157" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>4413</SUB>> ]
+"12162" [label = <(FIELD_IDENTIFIER,logAndResetStats,logAndResetStats)<SUB>4417</SUB>> ]
+"12152" [label = <(METHOD,logFrameStats)<SUB>4412</SUB>> ]
+"12164" [label = <(METHOD_RETURN,void)<SUB>4412</SUB>> ]
+  "12154" -> "12162" 
+  "12159" -> "12164" 
+  "12155" -> "12158" 
+  "12158" -> "12154" 
+  "12160" -> "12159" 
+  "12157" -> "12155" 
+  "12162" -> "12160" 
+  "12152" -> "12157" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/219-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/219-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/219-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/219-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,42 +1,42 @@
 digraph "appendSfConfigString" {  
-"12153" [label = <(append,result.append(&quot; [sf&quot;))<SUB>4422</SUB>> ]
-"12166" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; PRESENT_TIME_OFFSET=%&quot; PRId64, dispSyncPresentTimeOffset);,StringAppendF(&amp;result, &quot; PRESENT_TIME_OFFSET=%&quot; PRId64, dispSyncPresentTimeOffset);)<SUB>4427</SUB>> ]
-"12167" [label = <(StringAppendF,StringAppendF(&amp;result, &quot; FORCE_HWC_FOR_RBG_TO_YUV=%d&quot;, useHwcForRgbToYuv))<SUB>4428</SUB>> ]
-"12172" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; MAX_VIRT_DISPLAY_DIM=%&quot; PRIu64, maxVirtualDisplaySize);,StringAppendF(&amp;result, &quot; MAX_VIRT_DISPLAY_DIM=%&quot; PRIu64, maxVirtualDisplaySize);)<SUB>4429</SUB>> ]
-"12173" [label = <(StringAppendF,StringAppendF(&amp;result, &quot; RUNNING_WITHOUT_SYNC_FRAMEWORK=%d&quot;, !hasSyncFramework))<SUB>4430</SUB>> ]
-"12179" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; NUM_FRAMEBUFFER_SURFACE_BUFFERS=%&quot; PRId64,\012                  maxFrameBufferAcquiredBuffers);,StringAppendF(&amp;result, &quot; NUM_FRAMEBUFFER_SURFACE_BUFFERS=%&quot; PRId64,\012                  maxFrameBufferAcquiredBuffers);)<SUB>4431</SUB>> ]
-"12180" [label = <(append,result.append(&quot;]&quot;))<SUB>4433</SUB>> ]
-"12154" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4422</SUB>> ]
-"12159" [label = <(isLayerTripleBufferingDisabled,isLayerTripleBufferingDisabled())<SUB>4424</SUB>> ]
-"12168" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4428</SUB>> ]
-"12174" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4430</SUB>> ]
-"12177" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>4430</SUB>> ]
-"12181" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4433</SUB>> ]
-"12156" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4422</SUB>> ]
-"12161" [label = <(append,result.append(&quot; DISABLE_TRIPLE_BUFFERING&quot;))<SUB>4425</SUB>> ]
-"12183" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4433</SUB>> ]
-"12162" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4425</SUB>> ]
-"12164" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4425</SUB>> ]
-"12150" [label = <(METHOD,appendSfConfigString)<SUB>4421</SUB>> ]
-"12185" [label = <(METHOD_RETURN,void)<SUB>4421</SUB>> ]
-  "12153" -> "12159" 
-  "12166" -> "12168" 
-  "12167" -> "12172" 
-  "12172" -> "12174" 
-  "12173" -> "12179" 
-  "12179" -> "12183" 
-  "12180" -> "12185" 
-  "12154" -> "12153" 
-  "12159" -> "12166" 
-  "12159" -> "12164" 
-  "12168" -> "12167" 
-  "12174" -> "12177" 
-  "12177" -> "12173" 
-  "12181" -> "12180" 
-  "12156" -> "12154" 
-  "12161" -> "12166" 
-  "12183" -> "12181" 
-  "12162" -> "12161" 
-  "12164" -> "12162" 
-  "12150" -> "12156" 
+"12169" [label = <(append,result.append(&quot; [sf&quot;))<SUB>4421</SUB>> ]
+"12182" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; PRESENT_TIME_OFFSET=%&quot; PRId64, dispSyncPresentTimeOffset);,StringAppendF(&amp;result, &quot; PRESENT_TIME_OFFSET=%&quot; PRId64, dispSyncPresentTimeOffset);)<SUB>4426</SUB>> ]
+"12183" [label = <(StringAppendF,StringAppendF(&amp;result, &quot; FORCE_HWC_FOR_RBG_TO_YUV=%d&quot;, useHwcForRgbToYuv))<SUB>4427</SUB>> ]
+"12188" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; MAX_VIRT_DISPLAY_DIM=%&quot; PRIu64, maxVirtualDisplaySize);,StringAppendF(&amp;result, &quot; MAX_VIRT_DISPLAY_DIM=%&quot; PRIu64, maxVirtualDisplaySize);)<SUB>4428</SUB>> ]
+"12189" [label = <(StringAppendF,StringAppendF(&amp;result, &quot; RUNNING_WITHOUT_SYNC_FRAMEWORK=%d&quot;, !hasSyncFramework))<SUB>4429</SUB>> ]
+"12195" [label = <(UNKNOWN,StringAppendF(&amp;result, &quot; NUM_FRAMEBUFFER_SURFACE_BUFFERS=%&quot; PRId64,\012                  maxFrameBufferAcquiredBuffers);,StringAppendF(&amp;result, &quot; NUM_FRAMEBUFFER_SURFACE_BUFFERS=%&quot; PRId64,\012                  maxFrameBufferAcquiredBuffers);)<SUB>4430</SUB>> ]
+"12196" [label = <(append,result.append(&quot;]&quot;))<SUB>4432</SUB>> ]
+"12170" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4421</SUB>> ]
+"12175" [label = <(isLayerTripleBufferingDisabled,isLayerTripleBufferingDisabled())<SUB>4423</SUB>> ]
+"12184" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4427</SUB>> ]
+"12190" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4429</SUB>> ]
+"12193" [label = <(&lt;operator&gt;.logicalNot,!hasSyncFramework)<SUB>4429</SUB>> ]
+"12197" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4432</SUB>> ]
+"12172" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4421</SUB>> ]
+"12177" [label = <(append,result.append(&quot; DISABLE_TRIPLE_BUFFERING&quot;))<SUB>4424</SUB>> ]
+"12199" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4432</SUB>> ]
+"12178" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4424</SUB>> ]
+"12180" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4424</SUB>> ]
+"12166" [label = <(METHOD,appendSfConfigString)<SUB>4420</SUB>> ]
+"12201" [label = <(METHOD_RETURN,void)<SUB>4420</SUB>> ]
+  "12169" -> "12175" 
+  "12182" -> "12184" 
+  "12183" -> "12188" 
+  "12188" -> "12190" 
+  "12189" -> "12195" 
+  "12195" -> "12199" 
+  "12196" -> "12201" 
+  "12170" -> "12169" 
+  "12175" -> "12182" 
+  "12175" -> "12180" 
+  "12184" -> "12183" 
+  "12190" -> "12193" 
+  "12193" -> "12189" 
+  "12197" -> "12196" 
+  "12172" -> "12170" 
+  "12177" -> "12182" 
+  "12199" -> "12197" 
+  "12178" -> "12177" 
+  "12180" -> "12178" 
+  "12166" -> "12172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/22-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/22-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/22-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/22-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_29" {  
-"102" [label = <(METHOD,anonymous_lambda_29)<SUB>2918</SUB>> ]
-"105" [label = <(METHOD_RETURN,ANY)<SUB>2918</SUB>> ]
+"102" [label = <(METHOD,anonymous_lambda_29)<SUB>2917</SUB>> ]
+"105" [label = <(METHOD_RETURN,ANY)<SUB>2917</SUB>> ]
   "102" -> "105" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/220-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/220-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/220-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/220-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,166 +1,166 @@
 digraph "dumpVSync" {  
-"12190" [label = <(dump,mScheduler-&gt;dump(result))<SUB>4437</SUB>> ]
-"12195" [label = <(dump,mRefreshRateStats-&gt;dump(result))<SUB>4439</SUB>> ]
-"12200" [label = <(append,result.append(&quot;\n&quot;))<SUB>4440</SUB>> ]
-"12205" [label = <(dump,mPhaseConfiguration-&gt;dump(result))<SUB>4442</SUB>> ]
-"12210" [label = <(UNKNOWN,StringAppendF(&amp;result,\012 &quot;      present offset: %9&quot; PRId64 &quot; ns\t     VSYNC period: %9&quot; PRId64 &quot; ns\n\n&quot;,\012                  dispSyncPresentTimeOffset, getVsyncPeriodFromHWC());,StringAppendF(&amp;result,\012 &quot;      present offset: %9&quot; PRId64 &quot; ns\t     VSYNC period: %9&quot; PRId64 &quot; ns\n\n&quot;,\012                  dispSyncPresentTimeOffset, getVsyncPeriodFromHWC());)<SUB>4443</SUB>> ]
-"12212" [label = <(&lt;operator&gt;.assignment,policy = mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>4447</SUB>> ]
-"12218" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;DesiredDisplayConfigSpecs (DisplayManager): default config ID: %d&quot;\012 &quot;, primary range: [%.2f %.2f], app request range: [%.2f %.2f]\n\n&quot;,\012                  policy.defaultConfig.value(), policy.primaryRange.min, policy.primaryRange.max,\012                  policy.appRequestRange.min, policy.appRequestRange.max))<SUB>4448</SUB>> ]
-"12248" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;(config override by backdoor: %s)\n\n&quot;,\012                  mDebugDisplayConfigSetByBackdoor ? &quot;yes&quot; : &quot;no&quot;))<SUB>4453</SUB>> ]
-"12257" [label = <(&lt;operator&gt;.assignment,currentPolicy = mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>4455</SUB>> ]
-"12298" [label = <(dump,mScheduler-&gt;dump(mAppConnectionHandle, result))<SUB>4465</SUB>> ]
-"12304" [label = <(dump,mScheduler-&gt;getPrimaryDispSync().dump(result))<SUB>4466</SUB>> ]
-"12191" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;dump)<SUB>4437</SUB>> ]
-"12196" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;dump)<SUB>4439</SUB>> ]
-"12201" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4440</SUB>> ]
-"12206" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;dump)<SUB>4442</SUB>> ]
-"12214" [label = <(getDisplayManagerPolicy,mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>4447</SUB>> ]
-"12219" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4448</SUB>> ]
-"12222" [label = <(value,policy.defaultConfig.value())<SUB>4451</SUB>> ]
-"12228" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.min)<SUB>4451</SUB>> ]
-"12233" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.max)<SUB>4451</SUB>> ]
-"12238" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.min)<SUB>4452</SUB>> ]
-"12243" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.max)<SUB>4452</SUB>> ]
-"12249" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4453</SUB>> ]
-"12252" [label = <(&lt;operator&gt;.conditional,mDebugDisplayConfigSetByBackdoor ? &quot;yes&quot; : &quot;no&quot;)<SUB>4454</SUB>> ]
-"12259" [label = <(getCurrentPolicy,mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>4455</SUB>> ]
-"12264" [label = <(&lt;operator&gt;.notEquals,currentPolicy != policy)<SUB>4456</SUB>> ]
-"12299" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;dump)<SUB>4465</SUB>> ]
-"12305" [label = <(&lt;operator&gt;.fieldAccess,mScheduler-&gt;getPrimaryDispSync().dump)<SUB>4466</SUB>> ]
-"12193" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4437</SUB>> ]
-"12198" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4439</SUB>> ]
-"12203" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4440</SUB>> ]
-"12208" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4442</SUB>> ]
-"12215" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getDisplayManagerPolicy)<SUB>4447</SUB>> ]
-"12223" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig.value)<SUB>4451</SUB>> ]
-"12229" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>4451</SUB>> ]
-"12232" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4451</SUB>> ]
-"12234" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>4451</SUB>> ]
-"12237" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4451</SUB>> ]
-"12239" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>4452</SUB>> ]
-"12242" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4452</SUB>> ]
-"12244" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>4452</SUB>> ]
-"12247" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4452</SUB>> ]
-"12260" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentPolicy)<SUB>4455</SUB>> ]
-"12268" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;DesiredDisplayConfigSpecs (Override): default config ID: %d&quot;\012 &quot;, primary range: [%.2f %.2f], app request range: [%.2f %.2f]\n\n&quot;,\012                      currentPolicy.defaultConfig.value(), currentPolicy.primaryRange.min,\012                      currentPolicy.primaryRange.max, currentPolicy.appRequestRange.min,\012                      currentPolicy.appRequestRange.max))<SUB>4457</SUB>> ]
-"12301" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4465</SUB>> ]
-"12306" [label = <(getPrimaryDispSync,mScheduler-&gt;getPrimaryDispSync())<SUB>4466</SUB>> ]
-"12310" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4466</SUB>> ]
-"12217" [label = <(FIELD_IDENTIFIER,getDisplayManagerPolicy,getDisplayManagerPolicy)<SUB>4447</SUB>> ]
-"12224" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig)<SUB>4451</SUB>> ]
-"12227" [label = <(FIELD_IDENTIFIER,value,value)<SUB>4451</SUB>> ]
-"12231" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4451</SUB>> ]
-"12236" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4451</SUB>> ]
-"12241" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4452</SUB>> ]
-"12246" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4452</SUB>> ]
-"12262" [label = <(FIELD_IDENTIFIER,getCurrentPolicy,getCurrentPolicy)<SUB>4455</SUB>> ]
-"12269" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4457</SUB>> ]
-"12272" [label = <(value,currentPolicy.defaultConfig.value())<SUB>4460</SUB>> ]
-"12278" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.min)<SUB>4460</SUB>> ]
-"12283" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.max)<SUB>4461</SUB>> ]
-"12288" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.min)<SUB>4461</SUB>> ]
-"12293" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.max)<SUB>4462</SUB>> ]
-"12307" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getPrimaryDispSync)<SUB>4466</SUB>> ]
-"12226" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>4451</SUB>> ]
-"12273" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig.value)<SUB>4460</SUB>> ]
-"12279" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>4460</SUB>> ]
-"12282" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4460</SUB>> ]
-"12284" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>4461</SUB>> ]
-"12287" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4461</SUB>> ]
-"12289" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>4461</SUB>> ]
-"12292" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4461</SUB>> ]
-"12294" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>4462</SUB>> ]
-"12297" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4462</SUB>> ]
-"12309" [label = <(FIELD_IDENTIFIER,getPrimaryDispSync,getPrimaryDispSync)<SUB>4466</SUB>> ]
-"12274" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>4460</SUB>> ]
-"12277" [label = <(FIELD_IDENTIFIER,value,value)<SUB>4460</SUB>> ]
-"12281" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4460</SUB>> ]
-"12286" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4461</SUB>> ]
-"12291" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4461</SUB>> ]
-"12296" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4462</SUB>> ]
-"12276" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>4460</SUB>> ]
-"12187" [label = <(METHOD,dumpVSync)<SUB>4436</SUB>> ]
-"12312" [label = <(METHOD_RETURN,void)<SUB>4436</SUB>> ]
-  "12190" -> "12198" 
-  "12195" -> "12203" 
-  "12200" -> "12208" 
-  "12205" -> "12210" 
-  "12210" -> "12217" 
-  "12212" -> "12219" 
-  "12218" -> "12249" 
-  "12248" -> "12262" 
-  "12257" -> "12264" 
-  "12298" -> "12309" 
-  "12304" -> "12312" 
-  "12191" -> "12190" 
-  "12196" -> "12195" 
-  "12201" -> "12200" 
-  "12206" -> "12205" 
+"12206" [label = <(dump,mScheduler-&gt;dump(result))<SUB>4436</SUB>> ]
+"12211" [label = <(dump,mRefreshRateStats-&gt;dump(result))<SUB>4438</SUB>> ]
+"12216" [label = <(append,result.append(&quot;\n&quot;))<SUB>4439</SUB>> ]
+"12221" [label = <(dump,mPhaseConfiguration-&gt;dump(result))<SUB>4441</SUB>> ]
+"12226" [label = <(UNKNOWN,StringAppendF(&amp;result,\012 &quot;      present offset: %9&quot; PRId64 &quot; ns\t     VSYNC period: %9&quot; PRId64 &quot; ns\n\n&quot;,\012                  dispSyncPresentTimeOffset, getVsyncPeriodFromHWC());,StringAppendF(&amp;result,\012 &quot;      present offset: %9&quot; PRId64 &quot; ns\t     VSYNC period: %9&quot; PRId64 &quot; ns\n\n&quot;,\012                  dispSyncPresentTimeOffset, getVsyncPeriodFromHWC());)<SUB>4442</SUB>> ]
+"12228" [label = <(&lt;operator&gt;.assignment,policy = mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>4446</SUB>> ]
+"12234" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;DesiredDisplayConfigSpecs (DisplayManager): default config ID: %d&quot;\012 &quot;, primary range: [%.2f %.2f], app request range: [%.2f %.2f]\n\n&quot;,\012                  policy.defaultConfig.value(), policy.primaryRange.min, policy.primaryRange.max,\012                  policy.appRequestRange.min, policy.appRequestRange.max))<SUB>4447</SUB>> ]
+"12264" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;(config override by backdoor: %s)\n\n&quot;,\012                  mDebugDisplayConfigSetByBackdoor ? &quot;yes&quot; : &quot;no&quot;))<SUB>4452</SUB>> ]
+"12273" [label = <(&lt;operator&gt;.assignment,currentPolicy = mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>4454</SUB>> ]
+"12314" [label = <(dump,mScheduler-&gt;dump(mAppConnectionHandle, result))<SUB>4464</SUB>> ]
+"12320" [label = <(dump,mScheduler-&gt;getPrimaryDispSync().dump(result))<SUB>4465</SUB>> ]
+"12207" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;dump)<SUB>4436</SUB>> ]
+"12212" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateStats-&gt;dump)<SUB>4438</SUB>> ]
+"12217" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4439</SUB>> ]
+"12222" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;dump)<SUB>4441</SUB>> ]
+"12230" [label = <(getDisplayManagerPolicy,mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>4446</SUB>> ]
+"12235" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4447</SUB>> ]
+"12238" [label = <(value,policy.defaultConfig.value())<SUB>4450</SUB>> ]
+"12244" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.min)<SUB>4450</SUB>> ]
+"12249" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.max)<SUB>4450</SUB>> ]
+"12254" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.min)<SUB>4451</SUB>> ]
+"12259" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.max)<SUB>4451</SUB>> ]
+"12265" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4452</SUB>> ]
+"12268" [label = <(&lt;operator&gt;.conditional,mDebugDisplayConfigSetByBackdoor ? &quot;yes&quot; : &quot;no&quot;)<SUB>4453</SUB>> ]
+"12275" [label = <(getCurrentPolicy,mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>4454</SUB>> ]
+"12280" [label = <(&lt;operator&gt;.notEquals,currentPolicy != policy)<SUB>4455</SUB>> ]
+"12315" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;dump)<SUB>4464</SUB>> ]
+"12321" [label = <(&lt;operator&gt;.fieldAccess,mScheduler-&gt;getPrimaryDispSync().dump)<SUB>4465</SUB>> ]
+"12209" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4436</SUB>> ]
+"12214" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4438</SUB>> ]
+"12219" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4439</SUB>> ]
+"12224" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4441</SUB>> ]
+"12231" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getDisplayManagerPolicy)<SUB>4446</SUB>> ]
+"12239" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig.value)<SUB>4450</SUB>> ]
+"12245" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>4450</SUB>> ]
+"12248" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4450</SUB>> ]
+"12250" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>4450</SUB>> ]
+"12253" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4450</SUB>> ]
+"12255" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>4451</SUB>> ]
+"12258" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4451</SUB>> ]
+"12260" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>4451</SUB>> ]
+"12263" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4451</SUB>> ]
+"12276" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentPolicy)<SUB>4454</SUB>> ]
+"12284" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;DesiredDisplayConfigSpecs (Override): default config ID: %d&quot;\012 &quot;, primary range: [%.2f %.2f], app request range: [%.2f %.2f]\n\n&quot;,\012                      currentPolicy.defaultConfig.value(), currentPolicy.primaryRange.min,\012                      currentPolicy.primaryRange.max, currentPolicy.appRequestRange.min,\012                      currentPolicy.appRequestRange.max))<SUB>4456</SUB>> ]
+"12317" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4464</SUB>> ]
+"12322" [label = <(getPrimaryDispSync,mScheduler-&gt;getPrimaryDispSync())<SUB>4465</SUB>> ]
+"12326" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4465</SUB>> ]
+"12233" [label = <(FIELD_IDENTIFIER,getDisplayManagerPolicy,getDisplayManagerPolicy)<SUB>4446</SUB>> ]
+"12240" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig)<SUB>4450</SUB>> ]
+"12243" [label = <(FIELD_IDENTIFIER,value,value)<SUB>4450</SUB>> ]
+"12247" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4450</SUB>> ]
+"12252" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4450</SUB>> ]
+"12257" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4451</SUB>> ]
+"12262" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4451</SUB>> ]
+"12278" [label = <(FIELD_IDENTIFIER,getCurrentPolicy,getCurrentPolicy)<SUB>4454</SUB>> ]
+"12285" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4456</SUB>> ]
+"12288" [label = <(value,currentPolicy.defaultConfig.value())<SUB>4459</SUB>> ]
+"12294" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.min)<SUB>4459</SUB>> ]
+"12299" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.max)<SUB>4460</SUB>> ]
+"12304" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.min)<SUB>4460</SUB>> ]
+"12309" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.max)<SUB>4461</SUB>> ]
+"12323" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getPrimaryDispSync)<SUB>4465</SUB>> ]
+"12242" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>4450</SUB>> ]
+"12289" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig.value)<SUB>4459</SUB>> ]
+"12295" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>4459</SUB>> ]
+"12298" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4459</SUB>> ]
+"12300" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>4460</SUB>> ]
+"12303" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4460</SUB>> ]
+"12305" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>4460</SUB>> ]
+"12308" [label = <(FIELD_IDENTIFIER,min,min)<SUB>4460</SUB>> ]
+"12310" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>4461</SUB>> ]
+"12313" [label = <(FIELD_IDENTIFIER,max,max)<SUB>4461</SUB>> ]
+"12325" [label = <(FIELD_IDENTIFIER,getPrimaryDispSync,getPrimaryDispSync)<SUB>4465</SUB>> ]
+"12290" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>4459</SUB>> ]
+"12293" [label = <(FIELD_IDENTIFIER,value,value)<SUB>4459</SUB>> ]
+"12297" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4459</SUB>> ]
+"12302" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>4460</SUB>> ]
+"12307" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4460</SUB>> ]
+"12312" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>4461</SUB>> ]
+"12292" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>4459</SUB>> ]
+"12203" [label = <(METHOD,dumpVSync)<SUB>4435</SUB>> ]
+"12328" [label = <(METHOD_RETURN,void)<SUB>4435</SUB>> ]
+  "12206" -> "12214" 
+  "12211" -> "12219" 
+  "12216" -> "12224" 
+  "12221" -> "12226" 
+  "12226" -> "12233" 
+  "12228" -> "12235" 
+  "12234" -> "12265" 
+  "12264" -> "12278" 
+  "12273" -> "12280" 
+  "12314" -> "12325" 
+  "12320" -> "12328" 
+  "12207" -> "12206" 
+  "12212" -> "12211" 
+  "12217" -> "12216" 
+  "12222" -> "12221" 
+  "12230" -> "12228" 
+  "12235" -> "12242" 
+  "12238" -> "12247" 
+  "12244" -> "12252" 
+  "12249" -> "12257" 
+  "12254" -> "12262" 
+  "12259" -> "12234" 
+  "12265" -> "12268" 
+  "12268" -> "12264" 
+  "12275" -> "12273" 
+  "12280" -> "12285" 
+  "12280" -> "12317" 
+  "12315" -> "12314" 
+  "12321" -> "12320" 
+  "12209" -> "12207" 
   "12214" -> "12212" 
-  "12219" -> "12226" 
-  "12222" -> "12231" 
-  "12228" -> "12236" 
-  "12233" -> "12241" 
-  "12238" -> "12246" 
-  "12243" -> "12218" 
-  "12249" -> "12252" 
-  "12252" -> "12248" 
-  "12259" -> "12257" 
-  "12264" -> "12269" 
-  "12264" -> "12301" 
-  "12299" -> "12298" 
-  "12305" -> "12304" 
-  "12193" -> "12191" 
-  "12198" -> "12196" 
-  "12203" -> "12201" 
-  "12208" -> "12206" 
-  "12215" -> "12214" 
-  "12223" -> "12222" 
-  "12229" -> "12232" 
-  "12232" -> "12228" 
-  "12234" -> "12237" 
-  "12237" -> "12233" 
-  "12239" -> "12242" 
-  "12242" -> "12238" 
-  "12244" -> "12247" 
-  "12247" -> "12243" 
-  "12260" -> "12259" 
-  "12268" -> "12301" 
-  "12301" -> "12299" 
-  "12306" -> "12310" 
-  "12310" -> "12305" 
-  "12217" -> "12215" 
-  "12224" -> "12227" 
-  "12227" -> "12223" 
-  "12231" -> "12229" 
-  "12236" -> "12234" 
-  "12241" -> "12239" 
-  "12246" -> "12244" 
+  "12219" -> "12217" 
+  "12224" -> "12222" 
+  "12231" -> "12230" 
+  "12239" -> "12238" 
+  "12245" -> "12248" 
+  "12248" -> "12244" 
+  "12250" -> "12253" 
+  "12253" -> "12249" 
+  "12255" -> "12258" 
+  "12258" -> "12254" 
+  "12260" -> "12263" 
+  "12263" -> "12259" 
+  "12276" -> "12275" 
+  "12284" -> "12317" 
+  "12317" -> "12315" 
+  "12322" -> "12326" 
+  "12326" -> "12321" 
+  "12233" -> "12231" 
+  "12240" -> "12243" 
+  "12243" -> "12239" 
+  "12247" -> "12245" 
+  "12252" -> "12250" 
+  "12257" -> "12255" 
   "12262" -> "12260" 
-  "12269" -> "12276" 
-  "12272" -> "12281" 
-  "12278" -> "12286" 
-  "12283" -> "12291" 
-  "12288" -> "12296" 
-  "12293" -> "12268" 
-  "12307" -> "12306" 
-  "12226" -> "12224" 
-  "12273" -> "12272" 
-  "12279" -> "12282" 
-  "12282" -> "12278" 
-  "12284" -> "12287" 
-  "12287" -> "12283" 
-  "12289" -> "12292" 
-  "12292" -> "12288" 
-  "12294" -> "12297" 
-  "12297" -> "12293" 
-  "12309" -> "12307" 
-  "12274" -> "12277" 
-  "12277" -> "12273" 
-  "12281" -> "12279" 
-  "12286" -> "12284" 
-  "12291" -> "12289" 
-  "12296" -> "12294" 
-  "12276" -> "12274" 
-  "12187" -> "12193" 
+  "12278" -> "12276" 
+  "12285" -> "12292" 
+  "12288" -> "12297" 
+  "12294" -> "12302" 
+  "12299" -> "12307" 
+  "12304" -> "12312" 
+  "12309" -> "12284" 
+  "12323" -> "12322" 
+  "12242" -> "12240" 
+  "12289" -> "12288" 
+  "12295" -> "12298" 
+  "12298" -> "12294" 
+  "12300" -> "12303" 
+  "12303" -> "12299" 
+  "12305" -> "12308" 
+  "12308" -> "12304" 
+  "12310" -> "12313" 
+  "12313" -> "12309" 
+  "12325" -> "12323" 
+  "12290" -> "12293" 
+  "12293" -> "12289" 
+  "12297" -> "12295" 
+  "12302" -> "12300" 
+  "12307" -> "12305" 
+  "12312" -> "12310" 
+  "12292" -> "12290" 
+  "12203" -> "12209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/221-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/221-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/221-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/221-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,124 +1,124 @@
 digraph "dumpStaticScreenStats" {  
-"12317" [label = <(append,result.append(&quot;Static screen stats:\n&quot;))<SUB>4470</SUB>> ]
-"12374" [label = <(&lt;operator&gt;.assignment,bucketTimeSec = getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] / 1e9)<SUB>4477</SUB>> ]
-"12388" [label = <(&lt;operator&gt;.assignment,percent = 100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]) / getBE().mTotalTime)<SUB>4478</SUB>> ]
-"12407" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  %zd+ frames: %.3f s (%.1f%%)\n&quot;, SurfaceFlingerBE::NUM_BUCKETS - 1,\012                  bucketTimeSec, percent))<SUB>4480</SUB>> ]
-"12318" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4470</SUB>> ]
-"12328" [label = <(&lt;operator&gt;.lessThan,b &lt; SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4471</SUB>> ]
-"12335" [label = <(&lt;operator&gt;.preIncrement,++b)<SUB>4471</SUB>> ]
-"12376" [label = <(&lt;operator&gt;.division,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] / 1e9)<SUB>4477</SUB>> ]
-"12390" [label = <(&lt;operator&gt;.division,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]) / getBE().mTotalTime)<SUB>4478</SUB>> ]
-"12408" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4480</SUB>> ]
-"12411" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4480</SUB>> ]
-"12320" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4470</SUB>> ]
-"12325" [label = <(&lt;operator&gt;.assignment,b = 0)<SUB>4471</SUB>> ]
-"12330" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4471</SUB>> ]
-"12339" [label = <(&lt;operator&gt;.assignment,bucketTimeSec = getBE().mFrameBuckets[b] / 1e9)<SUB>4472</SUB>> ]
-"12349" [label = <(&lt;operator&gt;.assignment,percent = 100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]) / getBE().mTotalTime)<SUB>4473</SUB>> ]
-"12364" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  &lt; %zd frames: %.3f s (%.1f%%)\n&quot;, b + 1, bucketTimeSec, percent))<SUB>4475</SUB>> ]
-"12377" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>4477</SUB>> ]
-"12391" [label = <(&lt;operator&gt;.multiplication,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]))<SUB>4478</SUB>> ]
-"12404" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>4479</SUB>> ]
-"12412" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4480</SUB>> ]
-"12331" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4471</SUB>> ]
-"12341" [label = <(&lt;operator&gt;.division,getBE().mFrameBuckets[b] / 1e9)<SUB>4472</SUB>> ]
-"12351" [label = <(&lt;operator&gt;.division,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]) / getBE().mTotalTime)<SUB>4473</SUB>> ]
-"12365" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4475</SUB>> ]
-"12368" [label = <(&lt;operator&gt;.addition,b + 1)<SUB>4475</SUB>> ]
-"12378" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4477</SUB>> ]
-"12381" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4477</SUB>> ]
-"12393" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]))<SUB>4479</SUB>> ]
-"12405" [label = <(getBE,getBE())<SUB>4479</SUB>> ]
-"12406" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>4479</SUB>> ]
-"12414" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4480</SUB>> ]
-"12333" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4471</SUB>> ]
-"12342" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[b])<SUB>4472</SUB>> ]
-"12352" [label = <(&lt;operator&gt;.multiplication,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]))<SUB>4473</SUB>> ]
-"12361" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>4474</SUB>> ]
-"12379" [label = <(getBE,getBE())<SUB>4477</SUB>> ]
-"12380" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4477</SUB>> ]
-"12382" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4477</SUB>> ]
-"12394" [label = <(UNKNOWN,float,float)<SUB>4479</SUB>> ]
-"12395" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>4479</SUB>> ]
-"12343" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4472</SUB>> ]
-"12354" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(getBE().mFrameBuckets[b]))<SUB>4474</SUB>> ]
-"12362" [label = <(getBE,getBE())<SUB>4474</SUB>> ]
-"12363" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>4474</SUB>> ]
-"12384" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4477</SUB>> ]
-"12396" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4479</SUB>> ]
-"12399" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4479</SUB>> ]
-"12344" [label = <(getBE,getBE())<SUB>4472</SUB>> ]
-"12345" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4472</SUB>> ]
-"12355" [label = <(UNKNOWN,float,float)<SUB>4474</SUB>> ]
-"12356" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[b])<SUB>4474</SUB>> ]
-"12397" [label = <(getBE,getBE())<SUB>4479</SUB>> ]
-"12398" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4479</SUB>> ]
-"12400" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4479</SUB>> ]
-"12357" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4474</SUB>> ]
-"12402" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4479</SUB>> ]
-"12358" [label = <(getBE,getBE())<SUB>4474</SUB>> ]
-"12359" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4474</SUB>> ]
-"12314" [label = <(METHOD,dumpStaticScreenStats)<SUB>4469</SUB>> ]
-"12418" [label = <(METHOD_RETURN,void)<SUB>4469</SUB>> ]
-  "12317" -> "12325" 
-  "12374" -> "12394" 
-  "12388" -> "12408" 
-  "12407" -> "12418" 
-  "12318" -> "12317" 
-  "12328" -> "12344" 
-  "12328" -> "12379" 
-  "12335" -> "12333" 
-  "12376" -> "12374" 
-  "12390" -> "12388" 
-  "12408" -> "12414" 
-  "12411" -> "12407" 
-  "12320" -> "12318" 
-  "12325" -> "12333" 
-  "12330" -> "12328" 
-  "12339" -> "12355" 
-  "12349" -> "12365" 
-  "12364" -> "12335" 
-  "12377" -> "12376" 
-  "12391" -> "12405" 
-  "12404" -> "12390" 
-  "12412" -> "12411" 
-  "12331" -> "12330" 
-  "12341" -> "12339" 
+"12333" [label = <(append,result.append(&quot;Static screen stats:\n&quot;))<SUB>4469</SUB>> ]
+"12390" [label = <(&lt;operator&gt;.assignment,bucketTimeSec = getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] / 1e9)<SUB>4476</SUB>> ]
+"12404" [label = <(&lt;operator&gt;.assignment,percent = 100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]) / getBE().mTotalTime)<SUB>4477</SUB>> ]
+"12423" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  %zd+ frames: %.3f s (%.1f%%)\n&quot;, SurfaceFlingerBE::NUM_BUCKETS - 1,\012                  bucketTimeSec, percent))<SUB>4479</SUB>> ]
+"12334" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4469</SUB>> ]
+"12344" [label = <(&lt;operator&gt;.lessThan,b &lt; SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4470</SUB>> ]
+"12351" [label = <(&lt;operator&gt;.preIncrement,++b)<SUB>4470</SUB>> ]
+"12392" [label = <(&lt;operator&gt;.division,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1] / 1e9)<SUB>4476</SUB>> ]
+"12406" [label = <(&lt;operator&gt;.division,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]) / getBE().mTotalTime)<SUB>4477</SUB>> ]
+"12424" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4479</SUB>> ]
+"12427" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4479</SUB>> ]
+"12336" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4469</SUB>> ]
+"12341" [label = <(&lt;operator&gt;.assignment,b = 0)<SUB>4470</SUB>> ]
+"12346" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4470</SUB>> ]
+"12355" [label = <(&lt;operator&gt;.assignment,bucketTimeSec = getBE().mFrameBuckets[b] / 1e9)<SUB>4471</SUB>> ]
+"12365" [label = <(&lt;operator&gt;.assignment,percent = 100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]) / getBE().mTotalTime)<SUB>4472</SUB>> ]
+"12380" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  &lt; %zd frames: %.3f s (%.1f%%)\n&quot;, b + 1, bucketTimeSec, percent))<SUB>4474</SUB>> ]
+"12393" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>4476</SUB>> ]
+"12407" [label = <(&lt;operator&gt;.multiplication,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]))<SUB>4477</SUB>> ]
+"12420" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>4478</SUB>> ]
+"12428" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4479</SUB>> ]
+"12347" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4470</SUB>> ]
+"12357" [label = <(&lt;operator&gt;.division,getBE().mFrameBuckets[b] / 1e9)<SUB>4471</SUB>> ]
+"12367" [label = <(&lt;operator&gt;.division,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]) / getBE().mTotalTime)<SUB>4472</SUB>> ]
+"12381" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4474</SUB>> ]
+"12384" [label = <(&lt;operator&gt;.addition,b + 1)<SUB>4474</SUB>> ]
+"12394" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4476</SUB>> ]
+"12397" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4476</SUB>> ]
+"12409" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1]))<SUB>4478</SUB>> ]
+"12421" [label = <(getBE,getBE())<SUB>4478</SUB>> ]
+"12422" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>4478</SUB>> ]
+"12430" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4479</SUB>> ]
+"12349" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4470</SUB>> ]
+"12358" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[b])<SUB>4471</SUB>> ]
+"12368" [label = <(&lt;operator&gt;.multiplication,100.0f *\012 static_cast&lt;float&gt;(getBE().mFrameBuckets[b]))<SUB>4472</SUB>> ]
+"12377" [label = <(&lt;operator&gt;.fieldAccess,getBE().mTotalTime)<SUB>4473</SUB>> ]
+"12395" [label = <(getBE,getBE())<SUB>4476</SUB>> ]
+"12396" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4476</SUB>> ]
+"12398" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4476</SUB>> ]
+"12410" [label = <(UNKNOWN,float,float)<SUB>4478</SUB>> ]
+"12411" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[SurfaceFlingerBE::NUM_BUCKETS - 1])<SUB>4478</SUB>> ]
+"12359" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4471</SUB>> ]
+"12370" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(getBE().mFrameBuckets[b]))<SUB>4473</SUB>> ]
+"12378" [label = <(getBE,getBE())<SUB>4473</SUB>> ]
+"12379" [label = <(FIELD_IDENTIFIER,mTotalTime,mTotalTime)<SUB>4473</SUB>> ]
+"12400" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4476</SUB>> ]
+"12412" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4478</SUB>> ]
+"12415" [label = <(&lt;operator&gt;.subtraction,SurfaceFlingerBE::NUM_BUCKETS - 1)<SUB>4478</SUB>> ]
+"12360" [label = <(getBE,getBE())<SUB>4471</SUB>> ]
+"12361" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4471</SUB>> ]
+"12371" [label = <(UNKNOWN,float,float)<SUB>4473</SUB>> ]
+"12372" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mFrameBuckets[b])<SUB>4473</SUB>> ]
+"12413" [label = <(getBE,getBE())<SUB>4478</SUB>> ]
+"12414" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4478</SUB>> ]
+"12416" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlingerBE::NUM_BUCKETS)<SUB>4478</SUB>> ]
+"12373" [label = <(&lt;operator&gt;.fieldAccess,getBE().mFrameBuckets)<SUB>4473</SUB>> ]
+"12418" [label = <(FIELD_IDENTIFIER,NUM_BUCKETS,NUM_BUCKETS)<SUB>4478</SUB>> ]
+"12374" [label = <(getBE,getBE())<SUB>4473</SUB>> ]
+"12375" [label = <(FIELD_IDENTIFIER,mFrameBuckets,mFrameBuckets)<SUB>4473</SUB>> ]
+"12330" [label = <(METHOD,dumpStaticScreenStats)<SUB>4468</SUB>> ]
+"12434" [label = <(METHOD_RETURN,void)<SUB>4468</SUB>> ]
+  "12333" -> "12341" 
+  "12390" -> "12410" 
+  "12404" -> "12424" 
+  "12423" -> "12434" 
+  "12334" -> "12333" 
+  "12344" -> "12360" 
+  "12344" -> "12395" 
   "12351" -> "12349" 
-  "12365" -> "12368" 
-  "12368" -> "12364" 
-  "12378" -> "12384" 
-  "12381" -> "12377" 
-  "12393" -> "12391" 
-  "12405" -> "12406" 
+  "12392" -> "12390" 
   "12406" -> "12404" 
+  "12424" -> "12430" 
+  "12427" -> "12423" 
+  "12336" -> "12334" 
+  "12341" -> "12349" 
+  "12346" -> "12344" 
+  "12355" -> "12371" 
+  "12365" -> "12381" 
+  "12380" -> "12351" 
+  "12393" -> "12392" 
+  "12407" -> "12421" 
+  "12420" -> "12406" 
+  "12428" -> "12427" 
+  "12347" -> "12346" 
+  "12357" -> "12355" 
+  "12367" -> "12365" 
+  "12381" -> "12384" 
+  "12384" -> "12380" 
+  "12394" -> "12400" 
+  "12397" -> "12393" 
+  "12409" -> "12407" 
+  "12421" -> "12422" 
+  "12422" -> "12420" 
+  "12430" -> "12428" 
+  "12349" -> "12347" 
+  "12358" -> "12357" 
+  "12368" -> "12378" 
+  "12377" -> "12367" 
+  "12395" -> "12396" 
+  "12396" -> "12394" 
+  "12398" -> "12397" 
+  "12410" -> "12413" 
+  "12411" -> "12409" 
+  "12359" -> "12358" 
+  "12370" -> "12368" 
+  "12378" -> "12379" 
+  "12379" -> "12377" 
+  "12400" -> "12398" 
+  "12412" -> "12418" 
+  "12415" -> "12411" 
+  "12360" -> "12361" 
+  "12361" -> "12359" 
+  "12371" -> "12374" 
+  "12372" -> "12370" 
+  "12413" -> "12414" 
   "12414" -> "12412" 
-  "12333" -> "12331" 
-  "12342" -> "12341" 
-  "12352" -> "12362" 
-  "12361" -> "12351" 
-  "12379" -> "12380" 
-  "12380" -> "12378" 
-  "12382" -> "12381" 
-  "12394" -> "12397" 
-  "12395" -> "12393" 
-  "12343" -> "12342" 
-  "12354" -> "12352" 
-  "12362" -> "12363" 
-  "12363" -> "12361" 
-  "12384" -> "12382" 
-  "12396" -> "12402" 
-  "12399" -> "12395" 
-  "12344" -> "12345" 
-  "12345" -> "12343" 
-  "12355" -> "12358" 
-  "12356" -> "12354" 
-  "12397" -> "12398" 
-  "12398" -> "12396" 
-  "12400" -> "12399" 
-  "12357" -> "12356" 
-  "12402" -> "12400" 
-  "12358" -> "12359" 
-  "12359" -> "12357" 
-  "12314" -> "12320" 
+  "12416" -> "12415" 
+  "12373" -> "12372" 
+  "12418" -> "12416" 
+  "12374" -> "12375" 
+  "12375" -> "12373" 
+  "12330" -> "12336" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/222-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/222-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/222-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/222-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,91 +1,91 @@
 digraph "recordBufferingStats" {  
-"12425" [label = <(lock,lock(getBE().mBufferingStatsMutex))<SUB>4486</SUB>> ]
-"12430" [label = <(&lt;operator&gt;.assignment,&amp; stats = getBE().mBufferingStats[layerName])<SUB>4487</SUB>> ]
-"12426" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStatsMutex)<SUB>4486</SUB>> ]
-"12432" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mBufferingStats[layerName])<SUB>4487</SUB>> ]
-"12427" [label = <(getBE,getBE())<SUB>4486</SUB>> ]
-"12428" [label = <(FIELD_IDENTIFIER,mBufferingStatsMutex,mBufferingStatsMutex)<SUB>4486</SUB>> ]
-"12433" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStats)<SUB>4487</SUB>> ]
-"12484" [label = <(&lt;operator&gt;.preIncrement,++stats.numSegments)<SUB>4497</SUB>> ]
-"12488" [label = <(&lt;operator&gt;.assignmentPlus,stats.totalTime += segment.totalTime)<SUB>4498</SUB>> ]
-"12434" [label = <(getBE,getBE())<SUB>4487</SUB>> ]
-"12435" [label = <(FIELD_IDENTIFIER,mBufferingStats,mBufferingStats)<SUB>4487</SUB>> ]
-"12442" [label = <(&lt;operator&gt;.logicalNot,!segment.usedThirdBuffer)<SUB>4489</SUB>> ]
-"12455" [label = <(&lt;operator&gt;.lessThan,segment.occupancyAverage &lt; 1.0f)<SUB>4492</SUB>> ]
-"12485" [label = <(&lt;operator&gt;.fieldAccess,stats.numSegments)<SUB>4497</SUB>> ]
-"12489" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4498</SUB>> ]
-"12492" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4498</SUB>> ]
-"12443" [label = <(&lt;operator&gt;.fieldAccess,segment.usedThirdBuffer)<SUB>4489</SUB>> ]
-"12447" [label = <(&lt;operator&gt;.assignmentPlus,stats.twoBufferTime += segment.totalTime)<SUB>4490</SUB>> ]
-"12456" [label = <(&lt;operator&gt;.fieldAccess,segment.occupancyAverage)<SUB>4492</SUB>> ]
-"12461" [label = <(&lt;operator&gt;.assignmentPlus,stats.doubleBufferedTime += segment.totalTime)<SUB>4493</SUB>> ]
-"12487" [label = <(FIELD_IDENTIFIER,numSegments,numSegments)<SUB>4497</SUB>> ]
-"12491" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4498</SUB>> ]
-"12494" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4498</SUB>> ]
-"12445" [label = <(FIELD_IDENTIFIER,usedThirdBuffer,usedThirdBuffer)<SUB>4489</SUB>> ]
-"12448" [label = <(&lt;operator&gt;.fieldAccess,stats.twoBufferTime)<SUB>4490</SUB>> ]
-"12451" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4490</SUB>> ]
-"12458" [label = <(FIELD_IDENTIFIER,occupancyAverage,occupancyAverage)<SUB>4492</SUB>> ]
-"12462" [label = <(&lt;operator&gt;.fieldAccess,stats.doubleBufferedTime)<SUB>4493</SUB>> ]
-"12465" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4493</SUB>> ]
-"12450" [label = <(FIELD_IDENTIFIER,twoBufferTime,twoBufferTime)<SUB>4490</SUB>> ]
-"12453" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4490</SUB>> ]
-"12464" [label = <(FIELD_IDENTIFIER,doubleBufferedTime,doubleBufferedTime)<SUB>4493</SUB>> ]
-"12467" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4493</SUB>> ]
-"12471" [label = <(&lt;operator&gt;.lessThan,segment.occupancyAverage &lt; 2.0f)<SUB>4494</SUB>> ]
-"12472" [label = <(&lt;operator&gt;.fieldAccess,segment.occupancyAverage)<SUB>4494</SUB>> ]
-"12477" [label = <(&lt;operator&gt;.assignmentPlus,stats.tripleBufferedTime += segment.totalTime)<SUB>4495</SUB>> ]
-"12474" [label = <(FIELD_IDENTIFIER,occupancyAverage,occupancyAverage)<SUB>4494</SUB>> ]
-"12478" [label = <(&lt;operator&gt;.fieldAccess,stats.tripleBufferedTime)<SUB>4495</SUB>> ]
-"12481" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4495</SUB>> ]
-"12480" [label = <(FIELD_IDENTIFIER,tripleBufferedTime,tripleBufferedTime)<SUB>4495</SUB>> ]
-"12483" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4495</SUB>> ]
-"12420" [label = <(METHOD,recordBufferingStats)<SUB>4484</SUB>> ]
-"12495" [label = <(METHOD_RETURN,void)<SUB>4484</SUB>> ]
-  "12425" -> "12434" 
-  "12430" -> "12445" 
-  "12426" -> "12425" 
-  "12432" -> "12430" 
-  "12427" -> "12428" 
-  "12428" -> "12426" 
-  "12433" -> "12432" 
-  "12484" -> "12491" 
-  "12488" -> "12495" 
-  "12488" -> "12445" 
-  "12434" -> "12435" 
-  "12435" -> "12433" 
-  "12442" -> "12450" 
-  "12442" -> "12458" 
-  "12455" -> "12464" 
-  "12455" -> "12474" 
-  "12485" -> "12484" 
-  "12489" -> "12494" 
-  "12492" -> "12488" 
-  "12443" -> "12442" 
-  "12447" -> "12458" 
-  "12456" -> "12455" 
-  "12461" -> "12487" 
-  "12487" -> "12485" 
-  "12491" -> "12489" 
-  "12494" -> "12492" 
-  "12445" -> "12443" 
-  "12448" -> "12453" 
-  "12451" -> "12447" 
-  "12458" -> "12456" 
-  "12462" -> "12467" 
-  "12465" -> "12461" 
-  "12450" -> "12448" 
-  "12453" -> "12451" 
-  "12464" -> "12462" 
-  "12467" -> "12465" 
+"12441" [label = <(lock,lock(getBE().mBufferingStatsMutex))<SUB>4485</SUB>> ]
+"12446" [label = <(&lt;operator&gt;.assignment,&amp; stats = getBE().mBufferingStats[layerName])<SUB>4486</SUB>> ]
+"12442" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStatsMutex)<SUB>4485</SUB>> ]
+"12448" [label = <(&lt;operator&gt;.indirectIndexAccess,getBE().mBufferingStats[layerName])<SUB>4486</SUB>> ]
+"12443" [label = <(getBE,getBE())<SUB>4485</SUB>> ]
+"12444" [label = <(FIELD_IDENTIFIER,mBufferingStatsMutex,mBufferingStatsMutex)<SUB>4485</SUB>> ]
+"12449" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStats)<SUB>4486</SUB>> ]
+"12500" [label = <(&lt;operator&gt;.preIncrement,++stats.numSegments)<SUB>4496</SUB>> ]
+"12504" [label = <(&lt;operator&gt;.assignmentPlus,stats.totalTime += segment.totalTime)<SUB>4497</SUB>> ]
+"12450" [label = <(getBE,getBE())<SUB>4486</SUB>> ]
+"12451" [label = <(FIELD_IDENTIFIER,mBufferingStats,mBufferingStats)<SUB>4486</SUB>> ]
+"12458" [label = <(&lt;operator&gt;.logicalNot,!segment.usedThirdBuffer)<SUB>4488</SUB>> ]
+"12471" [label = <(&lt;operator&gt;.lessThan,segment.occupancyAverage &lt; 1.0f)<SUB>4491</SUB>> ]
+"12501" [label = <(&lt;operator&gt;.fieldAccess,stats.numSegments)<SUB>4496</SUB>> ]
+"12505" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4497</SUB>> ]
+"12508" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4497</SUB>> ]
+"12459" [label = <(&lt;operator&gt;.fieldAccess,segment.usedThirdBuffer)<SUB>4488</SUB>> ]
+"12463" [label = <(&lt;operator&gt;.assignmentPlus,stats.twoBufferTime += segment.totalTime)<SUB>4489</SUB>> ]
+"12472" [label = <(&lt;operator&gt;.fieldAccess,segment.occupancyAverage)<SUB>4491</SUB>> ]
+"12477" [label = <(&lt;operator&gt;.assignmentPlus,stats.doubleBufferedTime += segment.totalTime)<SUB>4492</SUB>> ]
+"12503" [label = <(FIELD_IDENTIFIER,numSegments,numSegments)<SUB>4496</SUB>> ]
+"12507" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4497</SUB>> ]
+"12510" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4497</SUB>> ]
+"12461" [label = <(FIELD_IDENTIFIER,usedThirdBuffer,usedThirdBuffer)<SUB>4488</SUB>> ]
+"12464" [label = <(&lt;operator&gt;.fieldAccess,stats.twoBufferTime)<SUB>4489</SUB>> ]
+"12467" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4489</SUB>> ]
+"12474" [label = <(FIELD_IDENTIFIER,occupancyAverage,occupancyAverage)<SUB>4491</SUB>> ]
+"12478" [label = <(&lt;operator&gt;.fieldAccess,stats.doubleBufferedTime)<SUB>4492</SUB>> ]
+"12481" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4492</SUB>> ]
+"12466" [label = <(FIELD_IDENTIFIER,twoBufferTime,twoBufferTime)<SUB>4489</SUB>> ]
+"12469" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4489</SUB>> ]
+"12480" [label = <(FIELD_IDENTIFIER,doubleBufferedTime,doubleBufferedTime)<SUB>4492</SUB>> ]
+"12483" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4492</SUB>> ]
+"12487" [label = <(&lt;operator&gt;.lessThan,segment.occupancyAverage &lt; 2.0f)<SUB>4493</SUB>> ]
+"12488" [label = <(&lt;operator&gt;.fieldAccess,segment.occupancyAverage)<SUB>4493</SUB>> ]
+"12493" [label = <(&lt;operator&gt;.assignmentPlus,stats.tripleBufferedTime += segment.totalTime)<SUB>4494</SUB>> ]
+"12490" [label = <(FIELD_IDENTIFIER,occupancyAverage,occupancyAverage)<SUB>4493</SUB>> ]
+"12494" [label = <(&lt;operator&gt;.fieldAccess,stats.tripleBufferedTime)<SUB>4494</SUB>> ]
+"12497" [label = <(&lt;operator&gt;.fieldAccess,segment.totalTime)<SUB>4494</SUB>> ]
+"12496" [label = <(FIELD_IDENTIFIER,tripleBufferedTime,tripleBufferedTime)<SUB>4494</SUB>> ]
+"12499" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4494</SUB>> ]
+"12436" [label = <(METHOD,recordBufferingStats)<SUB>4483</SUB>> ]
+"12511" [label = <(METHOD_RETURN,void)<SUB>4483</SUB>> ]
+  "12441" -> "12450" 
+  "12446" -> "12461" 
+  "12442" -> "12441" 
+  "12448" -> "12446" 
+  "12443" -> "12444" 
+  "12444" -> "12442" 
+  "12449" -> "12448" 
+  "12500" -> "12507" 
+  "12504" -> "12511" 
+  "12504" -> "12461" 
+  "12450" -> "12451" 
+  "12451" -> "12449" 
+  "12458" -> "12466" 
+  "12458" -> "12474" 
   "12471" -> "12480" 
-  "12471" -> "12487" 
+  "12471" -> "12490" 
+  "12501" -> "12500" 
+  "12505" -> "12510" 
+  "12508" -> "12504" 
+  "12459" -> "12458" 
+  "12463" -> "12474" 
   "12472" -> "12471" 
-  "12477" -> "12487" 
+  "12477" -> "12503" 
+  "12503" -> "12501" 
+  "12507" -> "12505" 
+  "12510" -> "12508" 
+  "12461" -> "12459" 
+  "12464" -> "12469" 
+  "12467" -> "12463" 
   "12474" -> "12472" 
   "12478" -> "12483" 
   "12481" -> "12477" 
+  "12466" -> "12464" 
+  "12469" -> "12467" 
   "12480" -> "12478" 
   "12483" -> "12481" 
-  "12420" -> "12427" 
+  "12487" -> "12496" 
+  "12487" -> "12503" 
+  "12488" -> "12487" 
+  "12493" -> "12503" 
+  "12490" -> "12488" 
+  "12494" -> "12499" 
+  "12497" -> "12493" 
+  "12496" -> "12494" 
+  "12499" -> "12497" 
+  "12436" -> "12443" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/223-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/223-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/223-cfg.dot	2023-06-07 19:33:00.447398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/223-cfg.dot	2023-06-07 19:33:06.687398403 +0330
@@ -1,40 +1,40 @@
 digraph "dumpFrameEventsLocked" {  
-"12500" [label = <(append,result.append(&quot;Layer frame timestamps:\n&quot;))<SUB>4503</SUB>> ]
-"12506" [label = <(&lt;operator&gt;.assignment,&amp; currentLayers = mCurrentState.layersSortedByZ)<SUB>4505</SUB>> ]
-"12512" [label = <(&lt;operator&gt;.assignment,count = currentLayers.size())<SUB>4506</SUB>> ]
-"12501" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4503</SUB>> ]
-"12508" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>4505</SUB>> ]
-"12514" [label = <(size,currentLayers.size())<SUB>4506</SUB>> ]
-"12524" [label = <(&lt;operator&gt;.lessThan,i&lt;count)<SUB>4507</SUB>> ]
-"12527" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>4507</SUB>> ]
-"12503" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4503</SUB>> ]
-"12510" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>4505</SUB>> ]
-"12515" [label = <(&lt;operator&gt;.fieldAccess,currentLayers.size)<SUB>4506</SUB>> ]
-"12521" [label = <(&lt;operator&gt;.assignment,i=0)<SUB>4507</SUB>> ]
-"12530" [label = <(dumpFrameEvents,currentLayers[i]-&gt;dumpFrameEvents(result))<SUB>4508</SUB>> ]
-"12517" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4506</SUB>> ]
-"12531" [label = <(&lt;operator&gt;.indirectFieldAccess,currentLayers[i]-&gt;dumpFrameEvents)<SUB>4508</SUB>> ]
-"12532" [label = <(&lt;operator&gt;.indirectIndexAccess,currentLayers[i])<SUB>4508</SUB>> ]
-"12535" [label = <(FIELD_IDENTIFIER,dumpFrameEvents,dumpFrameEvents)<SUB>4508</SUB>> ]
-"12497" [label = <(METHOD,dumpFrameEventsLocked)<SUB>4502</SUB>> ]
-"12537" [label = <(METHOD_RETURN,void)<SUB>4502</SUB>> ]
-  "12500" -> "12510" 
-  "12506" -> "12517" 
-  "12512" -> "12521" 
-  "12501" -> "12500" 
-  "12508" -> "12506" 
-  "12514" -> "12512" 
-  "12524" -> "12537" 
-  "12524" -> "12532" 
-  "12527" -> "12524" 
-  "12503" -> "12501" 
-  "12510" -> "12508" 
-  "12515" -> "12514" 
-  "12521" -> "12524" 
-  "12530" -> "12527" 
-  "12517" -> "12515" 
+"12516" [label = <(append,result.append(&quot;Layer frame timestamps:\n&quot;))<SUB>4502</SUB>> ]
+"12522" [label = <(&lt;operator&gt;.assignment,&amp; currentLayers = mCurrentState.layersSortedByZ)<SUB>4504</SUB>> ]
+"12528" [label = <(&lt;operator&gt;.assignment,count = currentLayers.size())<SUB>4505</SUB>> ]
+"12517" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4502</SUB>> ]
+"12524" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.layersSortedByZ)<SUB>4504</SUB>> ]
+"12530" [label = <(size,currentLayers.size())<SUB>4505</SUB>> ]
+"12540" [label = <(&lt;operator&gt;.lessThan,i&lt;count)<SUB>4506</SUB>> ]
+"12543" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>4506</SUB>> ]
+"12519" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4502</SUB>> ]
+"12526" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>4504</SUB>> ]
+"12531" [label = <(&lt;operator&gt;.fieldAccess,currentLayers.size)<SUB>4505</SUB>> ]
+"12537" [label = <(&lt;operator&gt;.assignment,i=0)<SUB>4506</SUB>> ]
+"12546" [label = <(dumpFrameEvents,currentLayers[i]-&gt;dumpFrameEvents(result))<SUB>4507</SUB>> ]
+"12533" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4505</SUB>> ]
+"12547" [label = <(&lt;operator&gt;.indirectFieldAccess,currentLayers[i]-&gt;dumpFrameEvents)<SUB>4507</SUB>> ]
+"12548" [label = <(&lt;operator&gt;.indirectIndexAccess,currentLayers[i])<SUB>4507</SUB>> ]
+"12551" [label = <(FIELD_IDENTIFIER,dumpFrameEvents,dumpFrameEvents)<SUB>4507</SUB>> ]
+"12513" [label = <(METHOD,dumpFrameEventsLocked)<SUB>4501</SUB>> ]
+"12553" [label = <(METHOD_RETURN,void)<SUB>4501</SUB>> ]
+  "12516" -> "12526" 
+  "12522" -> "12533" 
+  "12528" -> "12537" 
+  "12517" -> "12516" 
+  "12524" -> "12522" 
+  "12530" -> "12528" 
+  "12540" -> "12553" 
+  "12540" -> "12548" 
+  "12543" -> "12540" 
+  "12519" -> "12517" 
+  "12526" -> "12524" 
   "12531" -> "12530" 
-  "12532" -> "12535" 
-  "12535" -> "12531" 
-  "12497" -> "12503" 
+  "12537" -> "12540" 
+  "12546" -> "12543" 
+  "12533" -> "12531" 
+  "12547" -> "12546" 
+  "12548" -> "12551" 
+  "12551" -> "12547" 
+  "12513" -> "12519" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/224-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/224-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/224-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/224-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,179 +1,179 @@
 digraph "dumpBufferingStats" {  
-"12542" [label = <(append,result.append(&quot;Buffering stats:\n&quot;))<SUB>4513</SUB>> ]
-"12547" [label = <(append,result.append(&quot;  [Layer name] &lt;Active time&gt; &lt;Two buffer&gt; &quot;\012 &quot;&lt;Double buffered&gt; &lt;Triple buffered&gt;\n&quot;))<SUB>4514</SUB>> ]
-"12553" [label = <(lock,lock(getBE().mBufferingStatsMutex))<SUB>4516</SUB>> ]
-"12696" [label = <(append,result.append(&quot;\n&quot;))<SUB>4541</SUB>> ]
-"12543" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4513</SUB>> ]
-"12548" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4514</SUB>> ]
-"12554" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStatsMutex)<SUB>4516</SUB>> ]
-"12697" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4541</SUB>> ]
-"12545" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4513</SUB>> ]
-"12550" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4514</SUB>> ]
-"12555" [label = <(getBE,getBE())<SUB>4516</SUB>> ]
-"12556" [label = <(FIELD_IDENTIFIER,mBufferingStatsMutex,mBufferingStatsMutex)<SUB>4516</SUB>> ]
-"12566" [label = <(&lt;operator&gt;.assignment,* name = statsPair.first.c_str())<SUB>4520</SUB>> ]
-"12575" [label = <(&lt;operator&gt;.assignment,&amp; stats = statsPair.second)<SUB>4521</SUB>> ]
-"12589" [label = <(&lt;operator&gt;.assignment,activeTime = ns2ms(stats.totalTime) / 1000.0f)<SUB>4525</SUB>> ]
-"12598" [label = <(&lt;operator&gt;.assignment,twoBufferRatio = static_cast&lt;float&gt;(stats.twoBufferTime) /\012                stats.totalTime)<SUB>4526</SUB>> ]
-"12610" [label = <(&lt;operator&gt;.assignment,doubleBufferRatio = static_cast&lt;float&gt;(\012                stats.doubleBufferedTime) / stats.totalTime)<SUB>4528</SUB>> ]
-"12622" [label = <(&lt;operator&gt;.assignment,tripleBufferRatio = static_cast&lt;float&gt;(\012                stats.tripleBufferedTime) / stats.totalTime)<SUB>4530</SUB>> ]
-"12633" [label = <(insert,sorted.insert({activeTime, {name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio}}))<SUB>4532</SUB>> ]
-"12649" [label = <(&lt;operator&gt;.assignment,activeTime = sortedPair.first)<SUB>4536</SUB>> ]
-"12655" [label = <(&lt;operator&gt;.assignment,&amp; values = sortedPair.second)<SUB>4537</SUB>> ]
-"12660" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  [%s] %.2f %.3f %.3f %.3f\n&quot;, std::get&lt;0&gt;(values).c_str(),\012                      activeTime, std::get&lt;1&gt;(values), std::get&lt;2&gt;(values), std::get&lt;3&gt;(values)))<SUB>4538</SUB>> ]
-"12699" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4541</SUB>> ]
-"12568" [label = <(c_str,statsPair.first.c_str())<SUB>4520</SUB>> ]
-"12577" [label = <(&lt;operator&gt;.fieldAccess,statsPair.second)<SUB>4521</SUB>> ]
-"12581" [label = <(&lt;operator&gt;.equals,stats.numSegments == 0)<SUB>4522</SUB>> ]
-"12591" [label = <(&lt;operator&gt;.division,ns2ms(stats.totalTime) / 1000.0f)<SUB>4525</SUB>> ]
-"12600" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(stats.twoBufferTime) /\012                stats.totalTime)<SUB>4526</SUB>> ]
-"12612" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(\012                stats.doubleBufferedTime) / stats.totalTime)<SUB>4528</SUB>> ]
-"12624" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(\012                stats.tripleBufferedTime) / stats.totalTime)<SUB>4530</SUB>> ]
-"12634" [label = <(&lt;operator&gt;.fieldAccess,sorted.insert)<SUB>4532</SUB>> ]
-"12637" [label = <(&lt;operator&gt;.arrayInitializer,{activeTime, {name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio}})<SUB>4532</SUB>> ]
-"12651" [label = <(&lt;operator&gt;.fieldAccess,sortedPair.first)<SUB>4536</SUB>> ]
-"12657" [label = <(&lt;operator&gt;.fieldAccess,sortedPair.second)<SUB>4537</SUB>> ]
-"12661" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4538</SUB>> ]
-"12664" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;0&gt;(values).c_str())<SUB>4538</SUB>> ]
-"12675" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;1&gt;(values))<SUB>4539</SUB>> ]
-"12682" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;2&gt;(values))<SUB>4539</SUB>> ]
-"12689" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;3&gt;(values))<SUB>4539</SUB>> ]
-"12569" [label = <(&lt;operator&gt;.fieldAccess,statsPair.first.c_str)<SUB>4520</SUB>> ]
-"12579" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4521</SUB>> ]
-"12582" [label = <(&lt;operator&gt;.fieldAccess,stats.numSegments)<SUB>4522</SUB>> ]
-"12592" [label = <(ns2ms,ns2ms(stats.totalTime))<SUB>4525</SUB>> ]
-"12601" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(stats.twoBufferTime))<SUB>4526</SUB>> ]
-"12606" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4527</SUB>> ]
-"12613" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(\012                stats.doubleBufferedTime))<SUB>4528</SUB>> ]
-"12618" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4529</SUB>> ]
-"12625" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(\012                stats.tripleBufferedTime))<SUB>4530</SUB>> ]
-"12630" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4531</SUB>> ]
-"12636" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>4532</SUB>> ]
-"12639" [label = <(&lt;operator&gt;.arrayInitializer,{name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio})<SUB>4532</SUB>> ]
-"12653" [label = <(FIELD_IDENTIFIER,first,first)<SUB>4536</SUB>> ]
-"12659" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4537</SUB>> ]
-"12665" [label = <(&lt;operator&gt;.lessThan,std::get&lt;0)<SUB>4538</SUB>> ]
-"12670" [label = <(c_str,(values).c_str())<SUB>4538</SUB>> ]
-"12676" [label = <(&lt;operator&gt;.lessThan,std::get&lt;1)<SUB>4539</SUB>> ]
-"12683" [label = <(&lt;operator&gt;.lessThan,std::get&lt;2)<SUB>4539</SUB>> ]
-"12690" [label = <(&lt;operator&gt;.lessThan,std::get&lt;3)<SUB>4539</SUB>> ]
-"12570" [label = <(&lt;operator&gt;.fieldAccess,statsPair.first)<SUB>4520</SUB>> ]
-"12573" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4520</SUB>> ]
-"12584" [label = <(FIELD_IDENTIFIER,numSegments,numSegments)<SUB>4522</SUB>> ]
-"12593" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4525</SUB>> ]
-"12602" [label = <(UNKNOWN,float,float)<SUB>4526</SUB>> ]
-"12603" [label = <(&lt;operator&gt;.fieldAccess,stats.twoBufferTime)<SUB>4526</SUB>> ]
-"12608" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4527</SUB>> ]
-"12614" [label = <(UNKNOWN,float,float)<SUB>4528</SUB>> ]
-"12615" [label = <(&lt;operator&gt;.fieldAccess,stats.doubleBufferedTime)<SUB>4529</SUB>> ]
-"12620" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4529</SUB>> ]
-"12626" [label = <(UNKNOWN,float,float)<SUB>4530</SUB>> ]
-"12627" [label = <(&lt;operator&gt;.fieldAccess,stats.tripleBufferedTime)<SUB>4531</SUB>> ]
-"12632" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4531</SUB>> ]
-"12666" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4538</SUB>> ]
-"12671" [label = <(&lt;operator&gt;.fieldAccess,(values).c_str)<SUB>4538</SUB>> ]
-"12677" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4539</SUB>> ]
-"12684" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4539</SUB>> ]
-"12691" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4539</SUB>> ]
-"12572" [label = <(FIELD_IDENTIFIER,first,first)<SUB>4520</SUB>> ]
-"12595" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4525</SUB>> ]
-"12605" [label = <(FIELD_IDENTIFIER,twoBufferTime,twoBufferTime)<SUB>4526</SUB>> ]
-"12617" [label = <(FIELD_IDENTIFIER,doubleBufferedTime,doubleBufferedTime)<SUB>4529</SUB>> ]
-"12629" [label = <(FIELD_IDENTIFIER,tripleBufferedTime,tripleBufferedTime)<SUB>4531</SUB>> ]
-"12668" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4538</SUB>> ]
-"12673" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4538</SUB>> ]
-"12679" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4539</SUB>> ]
-"12686" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4539</SUB>> ]
-"12693" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4539</SUB>> ]
-"12539" [label = <(METHOD,dumpBufferingStats)<SUB>4512</SUB>> ]
-"12701" [label = <(METHOD_RETURN,void)<SUB>4512</SUB>> ]
-  "12542" -> "12550" 
-  "12547" -> "12555" 
-  "12553" -> "12572" 
-  "12696" -> "12701" 
-  "12543" -> "12542" 
-  "12548" -> "12547" 
-  "12554" -> "12553" 
-  "12697" -> "12696" 
-  "12545" -> "12543" 
-  "12550" -> "12548" 
-  "12555" -> "12556" 
-  "12556" -> "12554" 
-  "12566" -> "12579" 
-  "12575" -> "12584" 
-  "12589" -> "12602" 
-  "12598" -> "12614" 
-  "12610" -> "12626" 
-  "12622" -> "12636" 
-  "12633" -> "12572" 
-  "12633" -> "12653" 
-  "12649" -> "12659" 
-  "12655" -> "12661" 
-  "12660" -> "12653" 
-  "12660" -> "12699" 
-  "12699" -> "12697" 
-  "12568" -> "12566" 
-  "12577" -> "12575" 
-  "12581" -> "12595" 
-  "12591" -> "12589" 
+"12558" [label = <(append,result.append(&quot;Buffering stats:\n&quot;))<SUB>4512</SUB>> ]
+"12563" [label = <(append,result.append(&quot;  [Layer name] &lt;Active time&gt; &lt;Two buffer&gt; &quot;\012 &quot;&lt;Double buffered&gt; &lt;Triple buffered&gt;\n&quot;))<SUB>4513</SUB>> ]
+"12569" [label = <(lock,lock(getBE().mBufferingStatsMutex))<SUB>4515</SUB>> ]
+"12712" [label = <(append,result.append(&quot;\n&quot;))<SUB>4540</SUB>> ]
+"12559" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4512</SUB>> ]
+"12564" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4513</SUB>> ]
+"12570" [label = <(&lt;operator&gt;.fieldAccess,getBE().mBufferingStatsMutex)<SUB>4515</SUB>> ]
+"12713" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4540</SUB>> ]
+"12561" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4512</SUB>> ]
+"12566" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4513</SUB>> ]
+"12571" [label = <(getBE,getBE())<SUB>4515</SUB>> ]
+"12572" [label = <(FIELD_IDENTIFIER,mBufferingStatsMutex,mBufferingStatsMutex)<SUB>4515</SUB>> ]
+"12582" [label = <(&lt;operator&gt;.assignment,* name = statsPair.first.c_str())<SUB>4519</SUB>> ]
+"12591" [label = <(&lt;operator&gt;.assignment,&amp; stats = statsPair.second)<SUB>4520</SUB>> ]
+"12605" [label = <(&lt;operator&gt;.assignment,activeTime = ns2ms(stats.totalTime) / 1000.0f)<SUB>4524</SUB>> ]
+"12614" [label = <(&lt;operator&gt;.assignment,twoBufferRatio = static_cast&lt;float&gt;(stats.twoBufferTime) /\012                stats.totalTime)<SUB>4525</SUB>> ]
+"12626" [label = <(&lt;operator&gt;.assignment,doubleBufferRatio = static_cast&lt;float&gt;(\012                stats.doubleBufferedTime) / stats.totalTime)<SUB>4527</SUB>> ]
+"12638" [label = <(&lt;operator&gt;.assignment,tripleBufferRatio = static_cast&lt;float&gt;(\012                stats.tripleBufferedTime) / stats.totalTime)<SUB>4529</SUB>> ]
+"12649" [label = <(insert,sorted.insert({activeTime, {name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio}}))<SUB>4531</SUB>> ]
+"12665" [label = <(&lt;operator&gt;.assignment,activeTime = sortedPair.first)<SUB>4535</SUB>> ]
+"12671" [label = <(&lt;operator&gt;.assignment,&amp; values = sortedPair.second)<SUB>4536</SUB>> ]
+"12676" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  [%s] %.2f %.3f %.3f %.3f\n&quot;, std::get&lt;0&gt;(values).c_str(),\012                      activeTime, std::get&lt;1&gt;(values), std::get&lt;2&gt;(values), std::get&lt;3&gt;(values)))<SUB>4537</SUB>> ]
+"12715" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4540</SUB>> ]
+"12584" [label = <(c_str,statsPair.first.c_str())<SUB>4519</SUB>> ]
+"12593" [label = <(&lt;operator&gt;.fieldAccess,statsPair.second)<SUB>4520</SUB>> ]
+"12597" [label = <(&lt;operator&gt;.equals,stats.numSegments == 0)<SUB>4521</SUB>> ]
+"12607" [label = <(&lt;operator&gt;.division,ns2ms(stats.totalTime) / 1000.0f)<SUB>4524</SUB>> ]
+"12616" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(stats.twoBufferTime) /\012                stats.totalTime)<SUB>4525</SUB>> ]
+"12628" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(\012                stats.doubleBufferedTime) / stats.totalTime)<SUB>4527</SUB>> ]
+"12640" [label = <(&lt;operator&gt;.division,static_cast&lt;float&gt;(\012                stats.tripleBufferedTime) / stats.totalTime)<SUB>4529</SUB>> ]
+"12650" [label = <(&lt;operator&gt;.fieldAccess,sorted.insert)<SUB>4531</SUB>> ]
+"12653" [label = <(&lt;operator&gt;.arrayInitializer,{activeTime, {name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio}})<SUB>4531</SUB>> ]
+"12667" [label = <(&lt;operator&gt;.fieldAccess,sortedPair.first)<SUB>4535</SUB>> ]
+"12673" [label = <(&lt;operator&gt;.fieldAccess,sortedPair.second)<SUB>4536</SUB>> ]
+"12677" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4537</SUB>> ]
+"12680" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;0&gt;(values).c_str())<SUB>4537</SUB>> ]
+"12691" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;1&gt;(values))<SUB>4538</SUB>> ]
+"12698" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;2&gt;(values))<SUB>4538</SUB>> ]
+"12705" [label = <(&lt;operator&gt;.greaterThan,std::get&lt;3&gt;(values))<SUB>4538</SUB>> ]
+"12585" [label = <(&lt;operator&gt;.fieldAccess,statsPair.first.c_str)<SUB>4519</SUB>> ]
+"12595" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4520</SUB>> ]
+"12598" [label = <(&lt;operator&gt;.fieldAccess,stats.numSegments)<SUB>4521</SUB>> ]
+"12608" [label = <(ns2ms,ns2ms(stats.totalTime))<SUB>4524</SUB>> ]
+"12617" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(stats.twoBufferTime))<SUB>4525</SUB>> ]
+"12622" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4526</SUB>> ]
+"12629" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(\012                stats.doubleBufferedTime))<SUB>4527</SUB>> ]
+"12634" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4528</SUB>> ]
+"12641" [label = <(&lt;operator&gt;.cast,static_cast&lt;float&gt;(\012                stats.tripleBufferedTime))<SUB>4529</SUB>> ]
+"12646" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4530</SUB>> ]
+"12652" [label = <(FIELD_IDENTIFIER,insert,insert)<SUB>4531</SUB>> ]
+"12655" [label = <(&lt;operator&gt;.arrayInitializer,{name, twoBufferRatio,\012                doubleBufferRatio, tripleBufferRatio})<SUB>4531</SUB>> ]
+"12669" [label = <(FIELD_IDENTIFIER,first,first)<SUB>4535</SUB>> ]
+"12675" [label = <(FIELD_IDENTIFIER,second,second)<SUB>4536</SUB>> ]
+"12681" [label = <(&lt;operator&gt;.lessThan,std::get&lt;0)<SUB>4537</SUB>> ]
+"12686" [label = <(c_str,(values).c_str())<SUB>4537</SUB>> ]
+"12692" [label = <(&lt;operator&gt;.lessThan,std::get&lt;1)<SUB>4538</SUB>> ]
+"12699" [label = <(&lt;operator&gt;.lessThan,std::get&lt;2)<SUB>4538</SUB>> ]
+"12706" [label = <(&lt;operator&gt;.lessThan,std::get&lt;3)<SUB>4538</SUB>> ]
+"12586" [label = <(&lt;operator&gt;.fieldAccess,statsPair.first)<SUB>4519</SUB>> ]
+"12589" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4519</SUB>> ]
+"12600" [label = <(FIELD_IDENTIFIER,numSegments,numSegments)<SUB>4521</SUB>> ]
+"12609" [label = <(&lt;operator&gt;.fieldAccess,stats.totalTime)<SUB>4524</SUB>> ]
+"12618" [label = <(UNKNOWN,float,float)<SUB>4525</SUB>> ]
+"12619" [label = <(&lt;operator&gt;.fieldAccess,stats.twoBufferTime)<SUB>4525</SUB>> ]
+"12624" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4526</SUB>> ]
+"12630" [label = <(UNKNOWN,float,float)<SUB>4527</SUB>> ]
+"12631" [label = <(&lt;operator&gt;.fieldAccess,stats.doubleBufferedTime)<SUB>4528</SUB>> ]
+"12636" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4528</SUB>> ]
+"12642" [label = <(UNKNOWN,float,float)<SUB>4529</SUB>> ]
+"12643" [label = <(&lt;operator&gt;.fieldAccess,stats.tripleBufferedTime)<SUB>4530</SUB>> ]
+"12648" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4530</SUB>> ]
+"12682" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4537</SUB>> ]
+"12687" [label = <(&lt;operator&gt;.fieldAccess,(values).c_str)<SUB>4537</SUB>> ]
+"12693" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4538</SUB>> ]
+"12700" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4538</SUB>> ]
+"12707" [label = <(&lt;operator&gt;.fieldAccess,std::get)<SUB>4538</SUB>> ]
+"12588" [label = <(FIELD_IDENTIFIER,first,first)<SUB>4519</SUB>> ]
+"12611" [label = <(FIELD_IDENTIFIER,totalTime,totalTime)<SUB>4524</SUB>> ]
+"12621" [label = <(FIELD_IDENTIFIER,twoBufferTime,twoBufferTime)<SUB>4525</SUB>> ]
+"12633" [label = <(FIELD_IDENTIFIER,doubleBufferedTime,doubleBufferedTime)<SUB>4528</SUB>> ]
+"12645" [label = <(FIELD_IDENTIFIER,tripleBufferedTime,tripleBufferedTime)<SUB>4530</SUB>> ]
+"12684" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4537</SUB>> ]
+"12689" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4537</SUB>> ]
+"12695" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4538</SUB>> ]
+"12702" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4538</SUB>> ]
+"12709" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4538</SUB>> ]
+"12555" [label = <(METHOD,dumpBufferingStats)<SUB>4511</SUB>> ]
+"12717" [label = <(METHOD_RETURN,void)<SUB>4511</SUB>> ]
+  "12558" -> "12566" 
+  "12563" -> "12571" 
+  "12569" -> "12588" 
+  "12712" -> "12717" 
+  "12559" -> "12558" 
+  "12564" -> "12563" 
+  "12570" -> "12569" 
+  "12713" -> "12712" 
+  "12561" -> "12559" 
+  "12566" -> "12564" 
+  "12571" -> "12572" 
+  "12572" -> "12570" 
+  "12582" -> "12595" 
+  "12591" -> "12600" 
+  "12605" -> "12618" 
+  "12614" -> "12630" 
+  "12626" -> "12642" 
+  "12638" -> "12652" 
+  "12649" -> "12588" 
+  "12649" -> "12669" 
+  "12665" -> "12675" 
+  "12671" -> "12677" 
+  "12676" -> "12669" 
+  "12676" -> "12715" 
+  "12715" -> "12713" 
+  "12584" -> "12582" 
+  "12593" -> "12591" 
+  "12597" -> "12611" 
+  "12607" -> "12605" 
+  "12616" -> "12614" 
+  "12628" -> "12626" 
+  "12640" -> "12638" 
+  "12650" -> "12655" 
+  "12653" -> "12649" 
+  "12667" -> "12665" 
+  "12673" -> "12671" 
+  "12677" -> "12684" 
+  "12680" -> "12695" 
+  "12691" -> "12702" 
+  "12698" -> "12709" 
+  "12705" -> "12676" 
+  "12585" -> "12584" 
+  "12595" -> "12593" 
+  "12598" -> "12597" 
+  "12608" -> "12607" 
+  "12617" -> "12624" 
+  "12622" -> "12616" 
+  "12629" -> "12636" 
+  "12634" -> "12628" 
+  "12641" -> "12648" 
+  "12646" -> "12640" 
+  "12652" -> "12650" 
+  "12655" -> "12653" 
+  "12669" -> "12667" 
+  "12675" -> "12673" 
+  "12681" -> "12689" 
+  "12686" -> "12680" 
+  "12692" -> "12691" 
+  "12699" -> "12698" 
+  "12706" -> "12705" 
+  "12586" -> "12589" 
+  "12589" -> "12585" 
   "12600" -> "12598" 
-  "12612" -> "12610" 
+  "12609" -> "12608" 
+  "12618" -> "12621" 
+  "12619" -> "12617" 
   "12624" -> "12622" 
-  "12634" -> "12639" 
-  "12637" -> "12633" 
-  "12651" -> "12649" 
-  "12657" -> "12655" 
-  "12661" -> "12668" 
-  "12664" -> "12679" 
-  "12675" -> "12686" 
-  "12682" -> "12693" 
-  "12689" -> "12660" 
-  "12569" -> "12568" 
-  "12579" -> "12577" 
-  "12582" -> "12581" 
-  "12592" -> "12591" 
-  "12601" -> "12608" 
-  "12606" -> "12600" 
-  "12613" -> "12620" 
-  "12618" -> "12612" 
-  "12625" -> "12632" 
-  "12630" -> "12624" 
+  "12630" -> "12633" 
+  "12631" -> "12629" 
   "12636" -> "12634" 
-  "12639" -> "12637" 
-  "12653" -> "12651" 
-  "12659" -> "12657" 
-  "12665" -> "12673" 
-  "12670" -> "12664" 
-  "12676" -> "12675" 
-  "12683" -> "12682" 
-  "12690" -> "12689" 
-  "12570" -> "12573" 
-  "12573" -> "12569" 
-  "12584" -> "12582" 
-  "12593" -> "12592" 
-  "12602" -> "12605" 
-  "12603" -> "12601" 
-  "12608" -> "12606" 
-  "12614" -> "12617" 
-  "12615" -> "12613" 
-  "12620" -> "12618" 
-  "12626" -> "12629" 
-  "12627" -> "12625" 
-  "12632" -> "12630" 
-  "12666" -> "12665" 
-  "12671" -> "12670" 
-  "12677" -> "12676" 
-  "12684" -> "12683" 
-  "12691" -> "12690" 
-  "12572" -> "12570" 
-  "12595" -> "12593" 
-  "12605" -> "12603" 
-  "12617" -> "12615" 
-  "12629" -> "12627" 
-  "12668" -> "12666" 
-  "12673" -> "12671" 
-  "12679" -> "12677" 
-  "12686" -> "12684" 
-  "12693" -> "12691" 
-  "12539" -> "12545" 
+  "12642" -> "12645" 
+  "12643" -> "12641" 
+  "12648" -> "12646" 
+  "12682" -> "12681" 
+  "12687" -> "12686" 
+  "12693" -> "12692" 
+  "12700" -> "12699" 
+  "12707" -> "12706" 
+  "12588" -> "12586" 
+  "12611" -> "12609" 
+  "12621" -> "12619" 
+  "12633" -> "12631" 
+  "12645" -> "12643" 
+  "12684" -> "12682" 
+  "12689" -> "12687" 
+  "12695" -> "12693" 
+  "12702" -> "12700" 
+  "12709" -> "12707" 
+  "12555" -> "12561" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/225-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/225-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/225-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/225-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,123 +1,123 @@
 digraph "dumpDisplayIdentificationData" {  
-"12713" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4546</SUB>> ]
-"12725" [label = <(&lt;operator&gt;.assignment,hwcDisplayId = getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>4550</SUB>> ]
-"12738" [label = <(UNKNOWN,StringAppendF(&amp;result,\012 &quot;Display %s (HWC display %&quot; PRIu64 &quot;): &quot;, to_string(*displayId).c_str(),\012 *hwcDisplayId);,StringAppendF(&amp;result,\012 &quot;Display %s (HWC display %&quot; PRIu64 &quot;): &quot;, to_string(*displayId).c_str(),\012 *hwcDisplayId);)<SUB>4555</SUB>> ]
-"12772" [label = <(&lt;operator&gt;.assignment,edid = parseEdid(data))<SUB>4570</SUB>> ]
-"12786" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;port=%u pnpId=%s displayName=\&quot;&quot;, port, edid-&gt;pnpId.data()))<SUB>4576</SUB>> ]
-"12797" [label = <(append,result.append(edid-&gt;displayName.data(), edid-&gt;displayName.length()))<SUB>4577</SUB>> ]
-"12813" [label = <(append,result.append(&quot;\&quot;\n&quot;))<SUB>4578</SUB>> ]
-"12715" [label = <(getId,display-&gt;getId())<SUB>4546</SUB>> ]
-"12720" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4547</SUB>> ]
-"12727" [label = <(fromPhysicalDisplayId,getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>4550</SUB>> ]
-"12734" [label = <(&lt;operator&gt;.logicalNot,!hwcDisplayId)<SUB>4551</SUB>> ]
-"12742" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>4560</SUB>> ]
-"12761" [label = <(&lt;operator&gt;.logicalNot,!isEdid(data))<SUB>4565</SUB>> ]
-"12774" [label = <(parseEdid,parseEdid(data))<SUB>4570</SUB>> ]
-"12777" [label = <(&lt;operator&gt;.logicalNot,!edid)<SUB>4571</SUB>> ]
-"12787" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4576</SUB>> ]
-"12791" [label = <(data,edid-&gt;pnpId.data())<SUB>4576</SUB>> ]
-"12798" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4577</SUB>> ]
-"12801" [label = <(data,edid-&gt;displayName.data())<SUB>4577</SUB>> ]
-"12807" [label = <(length,edid-&gt;displayName.length())<SUB>4577</SUB>> ]
-"12814" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4578</SUB>> ]
-"12716" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4546</SUB>> ]
-"12728" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().fromPhysicalDisplayId)<SUB>4550</SUB>> ]
-"12731" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4550</SUB>> ]
-"12743" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>4560</SUB>> ]
-"12754" [label = <(append,result.append(&quot;no identification data\n&quot;))<SUB>4561</SUB>> ]
-"12762" [label = <(isEdid,isEdid(data))<SUB>4565</SUB>> ]
-"12765" [label = <(append,result.append(&quot;unknown identification data\n&quot;))<SUB>4566</SUB>> ]
-"12780" [label = <(append,result.append(&quot;invalid EDID\n&quot;))<SUB>4572</SUB>> ]
-"12792" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;pnpId.data)<SUB>4576</SUB>> ]
-"12800" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4577</SUB>> ]
-"12802" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;displayName.data)<SUB>4577</SUB>> ]
-"12808" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;displayName.length)<SUB>4577</SUB>> ]
-"12816" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4578</SUB>> ]
-"12718" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4546</SUB>> ]
-"12729" [label = <(getHwComposer,getHwComposer())<SUB>4550</SUB>> ]
-"12730" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>4550</SUB>> ]
-"12744" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>4560</SUB>> ]
-"12747" [label = <(&lt;operator&gt;.indirection,*hwcDisplayId)<SUB>4560</SUB>> ]
-"12749" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>4560</SUB>> ]
-"12751" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>4560</SUB>> ]
-"12755" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4561</SUB>> ]
-"12766" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4566</SUB>> ]
-"12781" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4572</SUB>> ]
-"12793" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;pnpId)<SUB>4576</SUB>> ]
-"12796" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4576</SUB>> ]
-"12803" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;displayName)<SUB>4577</SUB>> ]
-"12806" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4577</SUB>> ]
-"12809" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;displayName)<SUB>4577</SUB>> ]
-"12812" [label = <(FIELD_IDENTIFIER,length,length)<SUB>4577</SUB>> ]
-"12745" [label = <(getHwComposer,getHwComposer())<SUB>4560</SUB>> ]
-"12746" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>4560</SUB>> ]
-"12757" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4561</SUB>> ]
-"12768" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4566</SUB>> ]
-"12783" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4572</SUB>> ]
-"12795" [label = <(FIELD_IDENTIFIER,pnpId,pnpId)<SUB>4576</SUB>> ]
-"12805" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>4577</SUB>> ]
-"12811" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>4577</SUB>> ]
-"12703" [label = <(METHOD,dumpDisplayIdentificationData)<SUB>4544</SUB>> ]
-"12818" [label = <(METHOD_RETURN,void)<SUB>4544</SUB>> ]
-  "12713" -> "12720" 
-  "12725" -> "12734" 
-  "12738" -> "12745" 
-  "12772" -> "12777" 
-  "12786" -> "12800" 
-  "12797" -> "12816" 
-  "12813" -> "12818" 
-  "12813" -> "12718" 
-  "12715" -> "12713" 
-  "12720" -> "12729" 
-  "12727" -> "12725" 
-  "12734" -> "12738" 
-  "12742" -> "12757" 
-  "12742" -> "12762" 
-  "12761" -> "12768" 
-  "12761" -> "12774" 
-  "12774" -> "12772" 
-  "12777" -> "12783" 
-  "12777" -> "12787" 
-  "12787" -> "12795" 
-  "12791" -> "12786" 
-  "12798" -> "12805" 
-  "12801" -> "12811" 
-  "12807" -> "12797" 
-  "12814" -> "12813" 
-  "12716" -> "12715" 
-  "12728" -> "12731" 
-  "12731" -> "12727" 
-  "12743" -> "12742" 
-  "12762" -> "12761" 
-  "12792" -> "12791" 
-  "12800" -> "12798" 
-  "12802" -> "12801" 
+"12729" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4545</SUB>> ]
+"12741" [label = <(&lt;operator&gt;.assignment,hwcDisplayId = getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>4549</SUB>> ]
+"12754" [label = <(UNKNOWN,StringAppendF(&amp;result,\012 &quot;Display %s (HWC display %&quot; PRIu64 &quot;): &quot;, to_string(*displayId).c_str(),\012 *hwcDisplayId);,StringAppendF(&amp;result,\012 &quot;Display %s (HWC display %&quot; PRIu64 &quot;): &quot;, to_string(*displayId).c_str(),\012 *hwcDisplayId);)<SUB>4554</SUB>> ]
+"12788" [label = <(&lt;operator&gt;.assignment,edid = parseEdid(data))<SUB>4569</SUB>> ]
+"12802" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;port=%u pnpId=%s displayName=\&quot;&quot;, port, edid-&gt;pnpId.data()))<SUB>4575</SUB>> ]
+"12813" [label = <(append,result.append(edid-&gt;displayName.data(), edid-&gt;displayName.length()))<SUB>4576</SUB>> ]
+"12829" [label = <(append,result.append(&quot;\&quot;\n&quot;))<SUB>4577</SUB>> ]
+"12731" [label = <(getId,display-&gt;getId())<SUB>4545</SUB>> ]
+"12736" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4546</SUB>> ]
+"12743" [label = <(fromPhysicalDisplayId,getHwComposer().fromPhysicalDisplayId(*displayId))<SUB>4549</SUB>> ]
+"12750" [label = <(&lt;operator&gt;.logicalNot,!hwcDisplayId)<SUB>4550</SUB>> ]
+"12758" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>4559</SUB>> ]
+"12777" [label = <(&lt;operator&gt;.logicalNot,!isEdid(data))<SUB>4564</SUB>> ]
+"12790" [label = <(parseEdid,parseEdid(data))<SUB>4569</SUB>> ]
+"12793" [label = <(&lt;operator&gt;.logicalNot,!edid)<SUB>4570</SUB>> ]
+"12803" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4575</SUB>> ]
+"12807" [label = <(data,edid-&gt;pnpId.data())<SUB>4575</SUB>> ]
+"12814" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4576</SUB>> ]
+"12817" [label = <(data,edid-&gt;displayName.data())<SUB>4576</SUB>> ]
+"12823" [label = <(length,edid-&gt;displayName.length())<SUB>4576</SUB>> ]
+"12830" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4577</SUB>> ]
+"12732" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4545</SUB>> ]
+"12744" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().fromPhysicalDisplayId)<SUB>4549</SUB>> ]
+"12747" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4549</SUB>> ]
+"12759" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(*hwcDisplayId, &amp;port, &amp;data))<SUB>4559</SUB>> ]
+"12770" [label = <(append,result.append(&quot;no identification data\n&quot;))<SUB>4560</SUB>> ]
+"12778" [label = <(isEdid,isEdid(data))<SUB>4564</SUB>> ]
+"12781" [label = <(append,result.append(&quot;unknown identification data\n&quot;))<SUB>4565</SUB>> ]
+"12796" [label = <(append,result.append(&quot;invalid EDID\n&quot;))<SUB>4571</SUB>> ]
+"12808" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;pnpId.data)<SUB>4575</SUB>> ]
+"12816" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4576</SUB>> ]
+"12818" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;displayName.data)<SUB>4576</SUB>> ]
+"12824" [label = <(&lt;operator&gt;.fieldAccess,edid-&gt;displayName.length)<SUB>4576</SUB>> ]
+"12832" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4577</SUB>> ]
+"12734" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4545</SUB>> ]
+"12745" [label = <(getHwComposer,getHwComposer())<SUB>4549</SUB>> ]
+"12746" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>4549</SUB>> ]
+"12760" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>4559</SUB>> ]
+"12763" [label = <(&lt;operator&gt;.indirection,*hwcDisplayId)<SUB>4559</SUB>> ]
+"12765" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>4559</SUB>> ]
+"12767" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>4559</SUB>> ]
+"12771" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4560</SUB>> ]
+"12782" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4565</SUB>> ]
+"12797" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4571</SUB>> ]
+"12809" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;pnpId)<SUB>4575</SUB>> ]
+"12812" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4575</SUB>> ]
+"12819" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;displayName)<SUB>4576</SUB>> ]
+"12822" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4576</SUB>> ]
+"12825" [label = <(&lt;operator&gt;.indirectFieldAccess,edid-&gt;displayName)<SUB>4576</SUB>> ]
+"12828" [label = <(FIELD_IDENTIFIER,length,length)<SUB>4576</SUB>> ]
+"12761" [label = <(getHwComposer,getHwComposer())<SUB>4559</SUB>> ]
+"12762" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>4559</SUB>> ]
+"12773" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4560</SUB>> ]
+"12784" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4565</SUB>> ]
+"12799" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4571</SUB>> ]
+"12811" [label = <(FIELD_IDENTIFIER,pnpId,pnpId)<SUB>4575</SUB>> ]
+"12821" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>4576</SUB>> ]
+"12827" [label = <(FIELD_IDENTIFIER,displayName,displayName)<SUB>4576</SUB>> ]
+"12719" [label = <(METHOD,dumpDisplayIdentificationData)<SUB>4543</SUB>> ]
+"12834" [label = <(METHOD_RETURN,void)<SUB>4543</SUB>> ]
+  "12729" -> "12736" 
+  "12741" -> "12750" 
+  "12754" -> "12761" 
+  "12788" -> "12793" 
+  "12802" -> "12816" 
+  "12813" -> "12832" 
+  "12829" -> "12834" 
+  "12829" -> "12734" 
+  "12731" -> "12729" 
+  "12736" -> "12745" 
+  "12743" -> "12741" 
+  "12750" -> "12754" 
+  "12758" -> "12773" 
+  "12758" -> "12778" 
+  "12777" -> "12784" 
+  "12777" -> "12790" 
+  "12790" -> "12788" 
+  "12793" -> "12799" 
+  "12793" -> "12803" 
+  "12803" -> "12811" 
+  "12807" -> "12802" 
+  "12814" -> "12821" 
+  "12817" -> "12827" 
+  "12823" -> "12813" 
+  "12830" -> "12829" 
+  "12732" -> "12731" 
+  "12744" -> "12747" 
+  "12747" -> "12743" 
+  "12759" -> "12758" 
+  "12778" -> "12777" 
   "12808" -> "12807" 
   "12816" -> "12814" 
-  "12718" -> "12716" 
-  "12729" -> "12730" 
-  "12730" -> "12728" 
-  "12744" -> "12747" 
-  "12747" -> "12749" 
-  "12749" -> "12751" 
-  "12751" -> "12743" 
-  "12755" -> "12754" 
-  "12766" -> "12765" 
-  "12781" -> "12780" 
-  "12793" -> "12796" 
-  "12796" -> "12792" 
-  "12803" -> "12806" 
-  "12806" -> "12802" 
-  "12809" -> "12812" 
-  "12812" -> "12808" 
+  "12818" -> "12817" 
+  "12824" -> "12823" 
+  "12832" -> "12830" 
+  "12734" -> "12732" 
   "12745" -> "12746" 
   "12746" -> "12744" 
-  "12757" -> "12755" 
-  "12768" -> "12766" 
-  "12783" -> "12781" 
-  "12795" -> "12793" 
-  "12805" -> "12803" 
+  "12760" -> "12763" 
+  "12763" -> "12765" 
+  "12765" -> "12767" 
+  "12767" -> "12759" 
+  "12771" -> "12770" 
+  "12782" -> "12781" 
+  "12797" -> "12796" 
+  "12809" -> "12812" 
+  "12812" -> "12808" 
+  "12819" -> "12822" 
+  "12822" -> "12818" 
+  "12825" -> "12828" 
+  "12828" -> "12824" 
+  "12761" -> "12762" 
+  "12762" -> "12760" 
+  "12773" -> "12771" 
+  "12784" -> "12782" 
+  "12799" -> "12797" 
   "12811" -> "12809" 
-  "12703" -> "12818" 
-  "12703" -> "12718" 
+  "12821" -> "12819" 
+  "12827" -> "12825" 
+  "12719" -> "12834" 
+  "12719" -> "12734" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/226-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/226-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/226-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/226-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,66 +1,66 @@
 digraph "dumpRawDisplayIdentificationData" {  
-"12828" [label = <(&lt;operator&gt;.logicalAnd,args.size() &gt; 1 &amp;&amp; base::ParseUint(String8(args[1]), &amp;hwcDisplayId) &amp;&amp;\012        getHwComposer().getDisplayIdentificationData(hwcDisplayId, &amp;port, &amp;data))<SUB>4588</SUB>> ]
-"12829" [label = <(&lt;operator&gt;.logicalAnd,args.size() &gt; 1 &amp;&amp; base::ParseUint(String8(args[1]), &amp;hwcDisplayId))<SUB>4588</SUB>> ]
-"12846" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(hwcDisplayId, &amp;port, &amp;data))<SUB>4589</SUB>> ]
-"12856" [label = <(append,result.append(reinterpret_cast&lt;const char*&gt;(data.data()), data.size()))<SUB>4590</SUB>> ]
-"12830" [label = <(&lt;operator&gt;.greaterThan,args.size() &gt; 1)<SUB>4588</SUB>> ]
-"12836" [label = <(base::ParseUint,base::ParseUint(String8(args[1]), &amp;hwcDisplayId))<SUB>4588</SUB>> ]
-"12847" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>4589</SUB>> ]
-"12851" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>4589</SUB>> ]
-"12853" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>4589</SUB>> ]
-"12857" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4590</SUB>> ]
-"12860" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const char*&gt;(data.data()))<SUB>4590</SUB>> ]
-"12866" [label = <(size,data.size())<SUB>4590</SUB>> ]
-"12831" [label = <(size,args.size())<SUB>4588</SUB>> ]
-"12837" [label = <(&lt;operator&gt;.fieldAccess,base::ParseUint)<SUB>4588</SUB>> ]
-"12840" [label = <(String8,String8(args[1]))<SUB>4588</SUB>> ]
-"12844" [label = <(&lt;operator&gt;.addressOf,&amp;hwcDisplayId)<SUB>4588</SUB>> ]
-"12848" [label = <(getHwComposer,getHwComposer())<SUB>4589</SUB>> ]
-"12849" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>4589</SUB>> ]
-"12859" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4590</SUB>> ]
-"12861" [label = <(UNKNOWN,const char*,const char*)<SUB>4590</SUB>> ]
-"12862" [label = <(data,data.data())<SUB>4590</SUB>> ]
-"12867" [label = <(&lt;operator&gt;.fieldAccess,data.size)<SUB>4590</SUB>> ]
-"12832" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4588</SUB>> ]
-"12839" [label = <(FIELD_IDENTIFIER,ParseUint,ParseUint)<SUB>4588</SUB>> ]
-"12841" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4588</SUB>> ]
-"12863" [label = <(&lt;operator&gt;.fieldAccess,data.data)<SUB>4590</SUB>> ]
-"12869" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4590</SUB>> ]
-"12834" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4588</SUB>> ]
-"12865" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4590</SUB>> ]
-"12820" [label = <(METHOD,dumpRawDisplayIdentificationData)<SUB>4582</SUB>> ]
-"12870" [label = <(METHOD_RETURN,void)<SUB>4582</SUB>> ]
-  "12828" -> "12870" 
-  "12828" -> "12859" 
-  "12829" -> "12848" 
-  "12829" -> "12828" 
-  "12846" -> "12828" 
-  "12856" -> "12870" 
-  "12830" -> "12829" 
-  "12830" -> "12839" 
-  "12836" -> "12829" 
-  "12847" -> "12851" 
-  "12851" -> "12853" 
-  "12853" -> "12846" 
-  "12857" -> "12861" 
-  "12860" -> "12869" 
-  "12866" -> "12856" 
-  "12831" -> "12830" 
-  "12837" -> "12841" 
-  "12840" -> "12844" 
-  "12844" -> "12836" 
-  "12848" -> "12849" 
-  "12849" -> "12847" 
-  "12859" -> "12857" 
-  "12861" -> "12865" 
-  "12862" -> "12860" 
-  "12867" -> "12866" 
-  "12832" -> "12831" 
-  "12839" -> "12837" 
-  "12841" -> "12840" 
-  "12863" -> "12862" 
-  "12869" -> "12867" 
-  "12834" -> "12832" 
+"12844" [label = <(&lt;operator&gt;.logicalAnd,args.size() &gt; 1 &amp;&amp; base::ParseUint(String8(args[1]), &amp;hwcDisplayId) &amp;&amp;\012        getHwComposer().getDisplayIdentificationData(hwcDisplayId, &amp;port, &amp;data))<SUB>4587</SUB>> ]
+"12845" [label = <(&lt;operator&gt;.logicalAnd,args.size() &gt; 1 &amp;&amp; base::ParseUint(String8(args[1]), &amp;hwcDisplayId))<SUB>4587</SUB>> ]
+"12862" [label = <(getDisplayIdentificationData,getHwComposer().getDisplayIdentificationData(hwcDisplayId, &amp;port, &amp;data))<SUB>4588</SUB>> ]
+"12872" [label = <(append,result.append(reinterpret_cast&lt;const char*&gt;(data.data()), data.size()))<SUB>4589</SUB>> ]
+"12846" [label = <(&lt;operator&gt;.greaterThan,args.size() &gt; 1)<SUB>4587</SUB>> ]
+"12852" [label = <(base::ParseUint,base::ParseUint(String8(args[1]), &amp;hwcDisplayId))<SUB>4587</SUB>> ]
+"12863" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayIdentificationData)<SUB>4588</SUB>> ]
+"12867" [label = <(&lt;operator&gt;.addressOf,&amp;port)<SUB>4588</SUB>> ]
+"12869" [label = <(&lt;operator&gt;.addressOf,&amp;data)<SUB>4588</SUB>> ]
+"12873" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4589</SUB>> ]
+"12876" [label = <(&lt;operator&gt;.cast,reinterpret_cast&lt;const char*&gt;(data.data()))<SUB>4589</SUB>> ]
+"12882" [label = <(size,data.size())<SUB>4589</SUB>> ]
+"12847" [label = <(size,args.size())<SUB>4587</SUB>> ]
+"12853" [label = <(&lt;operator&gt;.fieldAccess,base::ParseUint)<SUB>4587</SUB>> ]
+"12856" [label = <(String8,String8(args[1]))<SUB>4587</SUB>> ]
+"12860" [label = <(&lt;operator&gt;.addressOf,&amp;hwcDisplayId)<SUB>4587</SUB>> ]
+"12864" [label = <(getHwComposer,getHwComposer())<SUB>4588</SUB>> ]
+"12865" [label = <(FIELD_IDENTIFIER,getDisplayIdentificationData,getDisplayIdentificationData)<SUB>4588</SUB>> ]
+"12875" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4589</SUB>> ]
+"12877" [label = <(UNKNOWN,const char*,const char*)<SUB>4589</SUB>> ]
+"12878" [label = <(data,data.data())<SUB>4589</SUB>> ]
+"12883" [label = <(&lt;operator&gt;.fieldAccess,data.size)<SUB>4589</SUB>> ]
+"12848" [label = <(&lt;operator&gt;.fieldAccess,args.size)<SUB>4587</SUB>> ]
+"12855" [label = <(FIELD_IDENTIFIER,ParseUint,ParseUint)<SUB>4587</SUB>> ]
+"12857" [label = <(&lt;operator&gt;.indirectIndexAccess,args[1])<SUB>4587</SUB>> ]
+"12879" [label = <(&lt;operator&gt;.fieldAccess,data.data)<SUB>4589</SUB>> ]
+"12885" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4589</SUB>> ]
+"12850" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4587</SUB>> ]
+"12881" [label = <(FIELD_IDENTIFIER,data,data)<SUB>4589</SUB>> ]
+"12836" [label = <(METHOD,dumpRawDisplayIdentificationData)<SUB>4581</SUB>> ]
+"12886" [label = <(METHOD_RETURN,void)<SUB>4581</SUB>> ]
+  "12844" -> "12886" 
+  "12844" -> "12875" 
+  "12845" -> "12864" 
+  "12845" -> "12844" 
+  "12862" -> "12844" 
+  "12872" -> "12886" 
+  "12846" -> "12845" 
+  "12846" -> "12855" 
+  "12852" -> "12845" 
+  "12863" -> "12867" 
+  "12867" -> "12869" 
+  "12869" -> "12862" 
+  "12873" -> "12877" 
+  "12876" -> "12885" 
+  "12882" -> "12872" 
+  "12847" -> "12846" 
+  "12853" -> "12857" 
+  "12856" -> "12860" 
+  "12860" -> "12852" 
+  "12864" -> "12865" 
   "12865" -> "12863" 
-  "12820" -> "12834" 
+  "12875" -> "12873" 
+  "12877" -> "12881" 
+  "12878" -> "12876" 
+  "12883" -> "12882" 
+  "12848" -> "12847" 
+  "12855" -> "12853" 
+  "12857" -> "12856" 
+  "12879" -> "12878" 
+  "12885" -> "12883" 
+  "12850" -> "12848" 
+  "12881" -> "12879" 
+  "12836" -> "12850" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/227-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/227-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/227-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/227-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,120 +1,120 @@
 digraph "dumpWideColorInfo" {  
-"12875" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Device has wide color built-in display: %d\n&quot;, hasWideColorDisplay))<SUB>4595</SUB>> ]
-"12880" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Device uses color management: %d\n&quot;, useColorManagement))<SUB>4596</SUB>> ]
-"12885" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;DisplayColorSetting: %s\n&quot;,\012                  decodeDisplayColorSetting(mDisplayColorSetting).c_str()))<SUB>4597</SUB>> ]
-"12972" [label = <(append,result.append(&quot;\n&quot;))<SUB>4618</SUB>> ]
-"12876" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4595</SUB>> ]
-"12881" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4596</SUB>> ]
-"12886" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4597</SUB>> ]
-"12889" [label = <(c_str,decodeDisplayColorSetting(mDisplayColorSetting).c_str())<SUB>4598</SUB>> ]
-"12973" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4618</SUB>> ]
-"12890" [label = <(&lt;operator&gt;.fieldAccess,decodeDisplayColorSetting(mDisplayColorSetting).c_str)<SUB>4598</SUB>> ]
-"12901" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4603</SUB>> ]
-"12912" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Display %s color modes:\n&quot;, to_string(*displayId).c_str()))<SUB>4608</SUB>> ]
-"12922" [label = <(&lt;operator&gt;.assignment,std::vector&lt;ColorMode&gt; modes = getHwComposer().getColorModes(*displayId))<SUB>4609</SUB>> ]
-"12951" [label = <(&lt;operator&gt;.assignment,currentMode = display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>4614</SUB>> ]
-"12962" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;    Current color mode: %s (%d)\n&quot;,\012                      decodeColorMode(currentMode).c_str(), currentMode))<SUB>4615</SUB>> ]
-"12975" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4618</SUB>> ]
-"12891" [label = <(decodeDisplayColorSetting,decodeDisplayColorSetting(mDisplayColorSetting))<SUB>4598</SUB>> ]
-"12893" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4598</SUB>> ]
-"12903" [label = <(getId,display-&gt;getId())<SUB>4603</SUB>> ]
-"12908" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4604</SUB>> ]
-"12913" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4608</SUB>> ]
-"12916" [label = <(c_str,to_string(*displayId).c_str())<SUB>4608</SUB>> ]
-"12923" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>4609</SUB>> ]
-"12930" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>4609</SUB>> ]
-"12953" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>4614</SUB>> ]
-"12963" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4615</SUB>> ]
-"12966" [label = <(c_str,decodeColorMode(currentMode).c_str())<SUB>4616</SUB>> ]
-"12904" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4603</SUB>> ]
-"12917" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4608</SUB>> ]
-"12924" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>4609</SUB>> ]
-"12931" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>4609</SUB>> ]
-"12934" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4609</SUB>> ]
-"12940" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;    %s (%d)\n&quot;, decodeColorMode(mode).c_str(), mode))<SUB>4611</SUB>> ]
-"12954" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>4614</SUB>> ]
-"12961" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>4614</SUB>> ]
-"12967" [label = <(&lt;operator&gt;.fieldAccess,decodeColorMode(currentMode).c_str)<SUB>4616</SUB>> ]
-"12906" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4603</SUB>> ]
-"12918" [label = <(to_string,to_string(*displayId))<SUB>4608</SUB>> ]
-"12921" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4608</SUB>> ]
-"12925" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>4609</SUB>> ]
-"12932" [label = <(getHwComposer,getHwComposer())<SUB>4609</SUB>> ]
-"12933" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>4609</SUB>> ]
-"12941" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4611</SUB>> ]
-"12944" [label = <(c_str,decodeColorMode(mode).c_str())<SUB>4611</SUB>> ]
-"12955" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>4614</SUB>> ]
-"12968" [label = <(decodeColorMode,decodeColorMode(currentMode))<SUB>4616</SUB>> ]
-"12970" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4616</SUB>> ]
-"12919" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4608</SUB>> ]
-"12927" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>4609</SUB>> ]
-"12945" [label = <(&lt;operator&gt;.fieldAccess,decodeColorMode(mode).c_str)<SUB>4611</SUB>> ]
-"12956" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>4614</SUB>> ]
-"12960" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>4614</SUB>> ]
-"12946" [label = <(decodeColorMode,decodeColorMode(mode))<SUB>4611</SUB>> ]
-"12948" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4611</SUB>> ]
-"12957" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>4614</SUB>> ]
-"12959" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>4614</SUB>> ]
-"12872" [label = <(METHOD,dumpWideColorInfo)<SUB>4594</SUB>> ]
-"12977" [label = <(METHOD_RETURN,void)<SUB>4594</SUB>> ]
-  "12875" -> "12881" 
-  "12880" -> "12886" 
-  "12885" -> "12906" 
-  "12885" -> "12975" 
-  "12972" -> "12977" 
-  "12876" -> "12875" 
-  "12881" -> "12880" 
-  "12886" -> "12891" 
-  "12889" -> "12885" 
+"12891" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Device has wide color built-in display: %d\n&quot;, hasWideColorDisplay))<SUB>4594</SUB>> ]
+"12896" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Device uses color management: %d\n&quot;, useColorManagement))<SUB>4595</SUB>> ]
+"12901" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;DisplayColorSetting: %s\n&quot;,\012                  decodeDisplayColorSetting(mDisplayColorSetting).c_str()))<SUB>4596</SUB>> ]
+"12988" [label = <(append,result.append(&quot;\n&quot;))<SUB>4617</SUB>> ]
+"12892" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4594</SUB>> ]
+"12897" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4595</SUB>> ]
+"12902" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4596</SUB>> ]
+"12905" [label = <(c_str,decodeDisplayColorSetting(mDisplayColorSetting).c_str())<SUB>4597</SUB>> ]
+"12989" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4617</SUB>> ]
+"12906" [label = <(&lt;operator&gt;.fieldAccess,decodeDisplayColorSetting(mDisplayColorSetting).c_str)<SUB>4597</SUB>> ]
+"12917" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4602</SUB>> ]
+"12928" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Display %s color modes:\n&quot;, to_string(*displayId).c_str()))<SUB>4607</SUB>> ]
+"12938" [label = <(&lt;operator&gt;.assignment,std::vector&lt;ColorMode&gt; modes = getHwComposer().getColorModes(*displayId))<SUB>4608</SUB>> ]
+"12967" [label = <(&lt;operator&gt;.assignment,currentMode = display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>4613</SUB>> ]
+"12978" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;    Current color mode: %s (%d)\n&quot;,\012                      decodeColorMode(currentMode).c_str(), currentMode))<SUB>4614</SUB>> ]
+"12991" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4617</SUB>> ]
+"12907" [label = <(decodeDisplayColorSetting,decodeDisplayColorSetting(mDisplayColorSetting))<SUB>4597</SUB>> ]
+"12909" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4597</SUB>> ]
+"12919" [label = <(getId,display-&gt;getId())<SUB>4602</SUB>> ]
+"12924" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4603</SUB>> ]
+"12929" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4607</SUB>> ]
+"12932" [label = <(c_str,to_string(*displayId).c_str())<SUB>4607</SUB>> ]
+"12939" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;ColorMode&gt; modes)<SUB>4608</SUB>> ]
+"12946" [label = <(getColorModes,getHwComposer().getColorModes(*displayId))<SUB>4608</SUB>> ]
+"12969" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>4613</SUB>> ]
+"12979" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4614</SUB>> ]
+"12982" [label = <(c_str,decodeColorMode(currentMode).c_str())<SUB>4615</SUB>> ]
+"12920" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4602</SUB>> ]
+"12933" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4607</SUB>> ]
+"12940" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;ColorMode)<SUB>4608</SUB>> ]
+"12947" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getColorModes)<SUB>4608</SUB>> ]
+"12950" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4608</SUB>> ]
+"12956" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;    %s (%d)\n&quot;, decodeColorMode(mode).c_str(), mode))<SUB>4610</SUB>> ]
+"12970" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>4613</SUB>> ]
+"12977" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>4613</SUB>> ]
+"12983" [label = <(&lt;operator&gt;.fieldAccess,decodeColorMode(currentMode).c_str)<SUB>4615</SUB>> ]
+"12922" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4602</SUB>> ]
+"12934" [label = <(to_string,to_string(*displayId))<SUB>4607</SUB>> ]
+"12937" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4607</SUB>> ]
+"12941" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>4608</SUB>> ]
+"12948" [label = <(getHwComposer,getHwComposer())<SUB>4608</SUB>> ]
+"12949" [label = <(FIELD_IDENTIFIER,getColorModes,getColorModes)<SUB>4608</SUB>> ]
+"12957" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4610</SUB>> ]
+"12960" [label = <(c_str,decodeColorMode(mode).c_str())<SUB>4610</SUB>> ]
+"12971" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>4613</SUB>> ]
+"12984" [label = <(decodeColorMode,decodeColorMode(currentMode))<SUB>4615</SUB>> ]
+"12986" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4615</SUB>> ]
+"12935" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4607</SUB>> ]
+"12943" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>4608</SUB>> ]
+"12961" [label = <(&lt;operator&gt;.fieldAccess,decodeColorMode(mode).c_str)<SUB>4610</SUB>> ]
+"12972" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>4613</SUB>> ]
+"12976" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>4613</SUB>> ]
+"12962" [label = <(decodeColorMode,decodeColorMode(mode))<SUB>4610</SUB>> ]
+"12964" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4610</SUB>> ]
+"12973" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>4613</SUB>> ]
+"12975" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>4613</SUB>> ]
+"12888" [label = <(METHOD,dumpWideColorInfo)<SUB>4593</SUB>> ]
+"12993" [label = <(METHOD_RETURN,void)<SUB>4593</SUB>> ]
+  "12891" -> "12897" 
+  "12896" -> "12902" 
+  "12901" -> "12922" 
+  "12901" -> "12991" 
+  "12988" -> "12993" 
+  "12892" -> "12891" 
+  "12897" -> "12896" 
+  "12902" -> "12907" 
+  "12905" -> "12901" 
+  "12989" -> "12988" 
+  "12906" -> "12905" 
+  "12917" -> "12924" 
+  "12928" -> "12943" 
+  "12938" -> "12957" 
+  "12967" -> "12979" 
+  "12978" -> "12922" 
+  "12978" -> "12991" 
+  "12991" -> "12989" 
+  "12907" -> "12909" 
+  "12909" -> "12906" 
+  "12919" -> "12917" 
+  "12924" -> "12929" 
+  "12929" -> "12935" 
+  "12932" -> "12928" 
+  "12939" -> "12948" 
+  "12946" -> "12938" 
+  "12969" -> "12967" 
+  "12979" -> "12984" 
+  "12982" -> "12978" 
+  "12920" -> "12919" 
+  "12933" -> "12932" 
+  "12940" -> "12939" 
+  "12947" -> "12950" 
+  "12950" -> "12946" 
+  "12956" -> "12957" 
+  "12956" -> "12975" 
+  "12970" -> "12977" 
+  "12977" -> "12969" 
+  "12983" -> "12982" 
+  "12922" -> "12920" 
+  "12934" -> "12937" 
+  "12937" -> "12933" 
+  "12941" -> "12940" 
+  "12948" -> "12949" 
+  "12949" -> "12947" 
+  "12957" -> "12962" 
+  "12960" -> "12956" 
+  "12971" -> "12970" 
+  "12984" -> "12986" 
+  "12986" -> "12983" 
+  "12935" -> "12934" 
+  "12943" -> "12941" 
+  "12961" -> "12960" 
+  "12972" -> "12976" 
+  "12976" -> "12971" 
+  "12962" -> "12964" 
+  "12964" -> "12961" 
   "12973" -> "12972" 
-  "12890" -> "12889" 
-  "12901" -> "12908" 
-  "12912" -> "12927" 
-  "12922" -> "12941" 
-  "12951" -> "12963" 
-  "12962" -> "12906" 
-  "12962" -> "12975" 
   "12975" -> "12973" 
-  "12891" -> "12893" 
-  "12893" -> "12890" 
-  "12903" -> "12901" 
-  "12908" -> "12913" 
-  "12913" -> "12919" 
-  "12916" -> "12912" 
-  "12923" -> "12932" 
-  "12930" -> "12922" 
-  "12953" -> "12951" 
-  "12963" -> "12968" 
-  "12966" -> "12962" 
-  "12904" -> "12903" 
-  "12917" -> "12916" 
-  "12924" -> "12923" 
-  "12931" -> "12934" 
-  "12934" -> "12930" 
-  "12940" -> "12941" 
-  "12940" -> "12959" 
-  "12954" -> "12961" 
-  "12961" -> "12953" 
-  "12967" -> "12966" 
-  "12906" -> "12904" 
-  "12918" -> "12921" 
-  "12921" -> "12917" 
-  "12925" -> "12924" 
-  "12932" -> "12933" 
-  "12933" -> "12931" 
-  "12941" -> "12946" 
-  "12944" -> "12940" 
-  "12955" -> "12954" 
-  "12968" -> "12970" 
-  "12970" -> "12967" 
-  "12919" -> "12918" 
-  "12927" -> "12925" 
-  "12945" -> "12944" 
-  "12956" -> "12960" 
-  "12960" -> "12955" 
-  "12946" -> "12948" 
-  "12948" -> "12945" 
-  "12957" -> "12956" 
-  "12959" -> "12957" 
-  "12872" -> "12876" 
+  "12888" -> "12892" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/228-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/228-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/228-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/228-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,29 +1,29 @@
 digraph "dumpDrawingStateProto" {  
-"12983" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>4623</SUB>> ]
-"13006" [label = <(RETURN,return layersProto;,return layersProto;)<SUB>4630</SUB>> ]
-"12985" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>4623</SUB>> ]
-"12996" [label = <(writeToProto,layer-&gt;writeToProto(layersProto, traceFlags, display.get()))<SUB>4627</SUB>> ]
-"12987" [label = <(android.SurfaceFlinger.dumpDrawingStateProto.anonymous_lambda_48,())<SUB>4623</SUB>> ]
-"12997" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;writeToProto)<SUB>4627</SUB>> ]
-"13002" [label = <(get,display.get())<SUB>4627</SUB>> ]
-"12988" [label = <(METHOD_REF,ANY anonymous_lambda_48 (),())<SUB>4623</SUB>> ]
-"12999" [label = <(FIELD_IDENTIFIER,writeToProto,writeToProto)<SUB>4627</SUB>> ]
-"13003" [label = <(&lt;operator&gt;.fieldAccess,display.get)<SUB>4627</SUB>> ]
-"13005" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4627</SUB>> ]
-"12979" [label = <(METHOD,dumpDrawingStateProto)<SUB>4621</SUB>> ]
-"13008" [label = <(METHOD_RETURN,LayersProto)<SUB>4621</SUB>> ]
-  "12983" -> "12999" 
-  "13006" -> "13008" 
-  "12985" -> "12988" 
-  "12985" -> "12983" 
-  "12996" -> "12999" 
-  "12996" -> "13006" 
-  "12987" -> "12983" 
-  "12997" -> "13005" 
-  "13002" -> "12996" 
-  "12988" -> "12987" 
-  "12999" -> "12997" 
-  "13003" -> "13002" 
-  "13005" -> "13003" 
-  "12979" -> "12985" 
+"12999" [label = <(&lt;operator&gt;.assignment,display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>4622</SUB>> ]
+"13022" [label = <(RETURN,return layersProto;,return layersProto;)<SUB>4629</SUB>> ]
+"13001" [label = <(ON_MAIN_THREAD,ON_MAIN_THREAD(getDefaultDisplayDeviceLocked()))<SUB>4622</SUB>> ]
+"13012" [label = <(writeToProto,layer-&gt;writeToProto(layersProto, traceFlags, display.get()))<SUB>4626</SUB>> ]
+"13003" [label = <(android.SurfaceFlinger.dumpDrawingStateProto.anonymous_lambda_48,())<SUB>4622</SUB>> ]
+"13013" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;writeToProto)<SUB>4626</SUB>> ]
+"13018" [label = <(get,display.get())<SUB>4626</SUB>> ]
+"13004" [label = <(METHOD_REF,ANY anonymous_lambda_48 (),())<SUB>4622</SUB>> ]
+"13015" [label = <(FIELD_IDENTIFIER,writeToProto,writeToProto)<SUB>4626</SUB>> ]
+"13019" [label = <(&lt;operator&gt;.fieldAccess,display.get)<SUB>4626</SUB>> ]
+"13021" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4626</SUB>> ]
+"12995" [label = <(METHOD,dumpDrawingStateProto)<SUB>4620</SUB>> ]
+"13024" [label = <(METHOD_RETURN,LayersProto)<SUB>4620</SUB>> ]
+  "12999" -> "13015" 
+  "13022" -> "13024" 
+  "13001" -> "13004" 
+  "13001" -> "12999" 
+  "13012" -> "13015" 
+  "13012" -> "13022" 
+  "13003" -> "12999" 
+  "13013" -> "13021" 
+  "13018" -> "13012" 
+  "13004" -> "13003" 
+  "13015" -> "13013" 
+  "13019" -> "13018" 
+  "13021" -> "13019" 
+  "12995" -> "13001" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/229-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/229-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/229-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/229-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,13 +1,13 @@
 digraph "dumpHwc" {  
-"13013" [label = <(dump,getHwComposer().dump(result))<SUB>4634</SUB>> ]
-"13014" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().dump)<SUB>4634</SUB>> ]
-"13015" [label = <(getHwComposer,getHwComposer())<SUB>4634</SUB>> ]
-"13016" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4634</SUB>> ]
-"13010" [label = <(METHOD,dumpHwc)<SUB>4633</SUB>> ]
-"13018" [label = <(METHOD_RETURN,void)<SUB>4633</SUB>> ]
-  "13013" -> "13018" 
-  "13014" -> "13013" 
-  "13015" -> "13016" 
-  "13016" -> "13014" 
-  "13010" -> "13015" 
+"13029" [label = <(dump,getHwComposer().dump(result))<SUB>4633</SUB>> ]
+"13030" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().dump)<SUB>4633</SUB>> ]
+"13031" [label = <(getHwComposer,getHwComposer())<SUB>4633</SUB>> ]
+"13032" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4633</SUB>> ]
+"13026" [label = <(METHOD,dumpHwc)<SUB>4632</SUB>> ]
+"13034" [label = <(METHOD_RETURN,void)<SUB>4632</SUB>> ]
+  "13029" -> "13034" 
+  "13030" -> "13029" 
+  "13031" -> "13032" 
+  "13032" -> "13030" 
+  "13026" -> "13031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/23-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/23-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/23-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/23-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_30" {  
-"107" [label = <(METHOD,anonymous_lambda_30)<SUB>2938</SUB>> ]
-"109" [label = <(METHOD_RETURN,ANY)<SUB>2938</SUB>> ]
+"107" [label = <(METHOD,anonymous_lambda_30)<SUB>2937</SUB>> ]
+"109" [label = <(METHOD_RETURN,ANY)<SUB>2937</SUB>> ]
   "107" -> "109" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/230-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/230-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/230-cfg.dot	2023-06-07 19:33:00.457398977 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/230-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,62 +1,62 @@
 digraph "dumpOffscreenLayersProto" {  
-"13025" [label = <(&lt;operator&gt;.assignment,* rootProto = layersProto.add_layers())<SUB>4640</SUB>> ]
-"13032" [label = <(&lt;operator&gt;.assignment,offscreenRootLayerId = INT32_MAX - 2)<SUB>4641</SUB>> ]
-"13037" [label = <(set_id,rootProto-&gt;set_id(offscreenRootLayerId))<SUB>4642</SUB>> ]
-"13042" [label = <(set_name,rootProto-&gt;set_name(&quot;Offscreen Root&quot;))<SUB>4643</SUB>> ]
-"13047" [label = <(set_parent,rootProto-&gt;set_parent(-1))<SUB>4644</SUB>> ]
-"13027" [label = <(add_layers,layersProto.add_layers())<SUB>4640</SUB>> ]
-"13034" [label = <(&lt;operator&gt;.subtraction,INT32_MAX - 2)<SUB>4641</SUB>> ]
-"13038" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_id)<SUB>4642</SUB>> ]
-"13043" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_name)<SUB>4643</SUB>> ]
-"13048" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_parent)<SUB>4644</SUB>> ]
-"13051" [label = <(&lt;operator&gt;.minus,-1)<SUB>4644</SUB>> ]
-"13028" [label = <(&lt;operator&gt;.fieldAccess,layersProto.add_layers)<SUB>4640</SUB>> ]
-"13040" [label = <(FIELD_IDENTIFIER,set_id,set_id)<SUB>4642</SUB>> ]
-"13045" [label = <(FIELD_IDENTIFIER,set_name,set_name)<SUB>4643</SUB>> ]
-"13050" [label = <(FIELD_IDENTIFIER,set_parent,set_parent)<SUB>4644</SUB>> ]
-"13057" [label = <(add_children,rootProto-&gt;add_children(offscreenLayer-&gt;sequence))<SUB>4648</SUB>> ]
-"13065" [label = <(&lt;operator&gt;.assignment,* layerProto =\012                offscreenLayer-&gt;writeToProto(layersProto, traceFlags, nullptr /*device*/))<SUB>4651</SUB>> ]
-"13074" [label = <(set_parent,layerProto-&gt;set_parent(offscreenRootLayerId))<SUB>4653</SUB>> ]
-"13030" [label = <(FIELD_IDENTIFIER,add_layers,add_layers)<SUB>4640</SUB>> ]
-"13058" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;add_children)<SUB>4648</SUB>> ]
-"13061" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;sequence)<SUB>4648</SUB>> ]
-"13067" [label = <(writeToProto,offscreenLayer-&gt;writeToProto(layersProto, traceFlags, nullptr /*device*/))<SUB>4652</SUB>> ]
-"13075" [label = <(&lt;operator&gt;.indirectFieldAccess,layerProto-&gt;set_parent)<SUB>4653</SUB>> ]
-"13060" [label = <(FIELD_IDENTIFIER,add_children,add_children)<SUB>4648</SUB>> ]
-"13063" [label = <(FIELD_IDENTIFIER,sequence,sequence)<SUB>4648</SUB>> ]
-"13068" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;writeToProto)<SUB>4652</SUB>> ]
-"13077" [label = <(FIELD_IDENTIFIER,set_parent,set_parent)<SUB>4653</SUB>> ]
-"13070" [label = <(FIELD_IDENTIFIER,writeToProto,writeToProto)<SUB>4652</SUB>> ]
-"13020" [label = <(METHOD,dumpOffscreenLayersProto)<SUB>4637</SUB>> ]
-"13079" [label = <(METHOD_RETURN,void)<SUB>4637</SUB>> ]
-  "13025" -> "13034" 
-  "13032" -> "13040" 
-  "13037" -> "13045" 
-  "13042" -> "13050" 
-  "13047" -> "13060" 
-  "13027" -> "13025" 
-  "13034" -> "13032" 
-  "13038" -> "13037" 
-  "13043" -> "13042" 
-  "13048" -> "13051" 
-  "13051" -> "13047" 
-  "13028" -> "13027" 
-  "13040" -> "13038" 
-  "13045" -> "13043" 
+"13041" [label = <(&lt;operator&gt;.assignment,* rootProto = layersProto.add_layers())<SUB>4639</SUB>> ]
+"13048" [label = <(&lt;operator&gt;.assignment,offscreenRootLayerId = INT32_MAX - 2)<SUB>4640</SUB>> ]
+"13053" [label = <(set_id,rootProto-&gt;set_id(offscreenRootLayerId))<SUB>4641</SUB>> ]
+"13058" [label = <(set_name,rootProto-&gt;set_name(&quot;Offscreen Root&quot;))<SUB>4642</SUB>> ]
+"13063" [label = <(set_parent,rootProto-&gt;set_parent(-1))<SUB>4643</SUB>> ]
+"13043" [label = <(add_layers,layersProto.add_layers())<SUB>4639</SUB>> ]
+"13050" [label = <(&lt;operator&gt;.subtraction,INT32_MAX - 2)<SUB>4640</SUB>> ]
+"13054" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_id)<SUB>4641</SUB>> ]
+"13059" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_name)<SUB>4642</SUB>> ]
+"13064" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;set_parent)<SUB>4643</SUB>> ]
+"13067" [label = <(&lt;operator&gt;.minus,-1)<SUB>4643</SUB>> ]
+"13044" [label = <(&lt;operator&gt;.fieldAccess,layersProto.add_layers)<SUB>4639</SUB>> ]
+"13056" [label = <(FIELD_IDENTIFIER,set_id,set_id)<SUB>4641</SUB>> ]
+"13061" [label = <(FIELD_IDENTIFIER,set_name,set_name)<SUB>4642</SUB>> ]
+"13066" [label = <(FIELD_IDENTIFIER,set_parent,set_parent)<SUB>4643</SUB>> ]
+"13073" [label = <(add_children,rootProto-&gt;add_children(offscreenLayer-&gt;sequence))<SUB>4647</SUB>> ]
+"13081" [label = <(&lt;operator&gt;.assignment,* layerProto =\012                offscreenLayer-&gt;writeToProto(layersProto, traceFlags, nullptr /*device*/))<SUB>4650</SUB>> ]
+"13090" [label = <(set_parent,layerProto-&gt;set_parent(offscreenRootLayerId))<SUB>4652</SUB>> ]
+"13046" [label = <(FIELD_IDENTIFIER,add_layers,add_layers)<SUB>4639</SUB>> ]
+"13074" [label = <(&lt;operator&gt;.indirectFieldAccess,rootProto-&gt;add_children)<SUB>4647</SUB>> ]
+"13077" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;sequence)<SUB>4647</SUB>> ]
+"13083" [label = <(writeToProto,offscreenLayer-&gt;writeToProto(layersProto, traceFlags, nullptr /*device*/))<SUB>4651</SUB>> ]
+"13091" [label = <(&lt;operator&gt;.indirectFieldAccess,layerProto-&gt;set_parent)<SUB>4652</SUB>> ]
+"13076" [label = <(FIELD_IDENTIFIER,add_children,add_children)<SUB>4647</SUB>> ]
+"13079" [label = <(FIELD_IDENTIFIER,sequence,sequence)<SUB>4647</SUB>> ]
+"13084" [label = <(&lt;operator&gt;.indirectFieldAccess,offscreenLayer-&gt;writeToProto)<SUB>4651</SUB>> ]
+"13093" [label = <(FIELD_IDENTIFIER,set_parent,set_parent)<SUB>4652</SUB>> ]
+"13086" [label = <(FIELD_IDENTIFIER,writeToProto,writeToProto)<SUB>4651</SUB>> ]
+"13036" [label = <(METHOD,dumpOffscreenLayersProto)<SUB>4636</SUB>> ]
+"13095" [label = <(METHOD_RETURN,void)<SUB>4636</SUB>> ]
+  "13041" -> "13050" 
+  "13048" -> "13056" 
+  "13053" -> "13061" 
+  "13058" -> "13066" 
+  "13063" -> "13076" 
+  "13043" -> "13041" 
   "13050" -> "13048" 
-  "13057" -> "13070" 
-  "13065" -> "13077" 
+  "13054" -> "13053" 
+  "13059" -> "13058" 
+  "13064" -> "13067" 
+  "13067" -> "13063" 
+  "13044" -> "13043" 
+  "13056" -> "13054" 
+  "13061" -> "13059" 
+  "13066" -> "13064" 
+  "13073" -> "13086" 
+  "13081" -> "13093" 
+  "13090" -> "13095" 
+  "13090" -> "13076" 
+  "13046" -> "13044" 
   "13074" -> "13079" 
-  "13074" -> "13060" 
-  "13030" -> "13028" 
-  "13058" -> "13063" 
-  "13061" -> "13057" 
-  "13067" -> "13065" 
-  "13075" -> "13074" 
-  "13060" -> "13058" 
-  "13063" -> "13061" 
-  "13068" -> "13067" 
-  "13077" -> "13075" 
-  "13070" -> "13068" 
-  "13020" -> "13030" 
+  "13077" -> "13073" 
+  "13083" -> "13081" 
+  "13091" -> "13090" 
+  "13076" -> "13074" 
+  "13079" -> "13077" 
+  "13084" -> "13083" 
+  "13093" -> "13091" 
+  "13086" -> "13084" 
+  "13036" -> "13046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/231-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/231-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/231-cfg.dot	2023-06-07 19:33:00.467398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/231-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,17 +1,17 @@
 digraph "dumpProtoFromMainThread" {  
-"13084" [label = <(RETURN,return schedule([=] { return dumpDrawingStateProto(traceFlags); }).get();,return schedule([=] { return dumpDrawingStateProto(traceFlags); }).get();)<SUB>4658</SUB>> ]
-"13085" [label = <(get,schedule([=] { return dumpDrawingStateProto(traceFlags); }).get())<SUB>4658</SUB>> ]
-"13086" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] { return dumpDrawingStateProto(traceFlags); }).get)<SUB>4658</SUB>> ]
-"13087" [label = <(schedule,schedule([=] { return dumpDrawingStateProto(traceFlags); }))<SUB>4658</SUB>> ]
-"13089" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4658</SUB>> ]
-"13088" [label = <(METHOD_REF,ANY anonymous_lambda_49 (),schedule([=] { return dumpDrawingStateProto(traceFlags); }))<SUB>4658</SUB>> ]
-"13081" [label = <(METHOD,dumpProtoFromMainThread)<SUB>4657</SUB>> ]
-"13090" [label = <(METHOD_RETURN,LayersProto)<SUB>4657</SUB>> ]
-  "13084" -> "13090" 
-  "13085" -> "13084" 
-  "13086" -> "13085" 
-  "13087" -> "13089" 
-  "13089" -> "13086" 
-  "13088" -> "13087" 
-  "13081" -> "13088" 
+"13100" [label = <(RETURN,return schedule([=] { return dumpDrawingStateProto(traceFlags); }).get();,return schedule([=] { return dumpDrawingStateProto(traceFlags); }).get();)<SUB>4657</SUB>> ]
+"13101" [label = <(get,schedule([=] { return dumpDrawingStateProto(traceFlags); }).get())<SUB>4657</SUB>> ]
+"13102" [label = <(&lt;operator&gt;.fieldAccess,schedule([=] { return dumpDrawingStateProto(traceFlags); }).get)<SUB>4657</SUB>> ]
+"13103" [label = <(schedule,schedule([=] { return dumpDrawingStateProto(traceFlags); }))<SUB>4657</SUB>> ]
+"13105" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4657</SUB>> ]
+"13104" [label = <(METHOD_REF,ANY anonymous_lambda_49 (),schedule([=] { return dumpDrawingStateProto(traceFlags); }))<SUB>4657</SUB>> ]
+"13097" [label = <(METHOD,dumpProtoFromMainThread)<SUB>4656</SUB>> ]
+"13106" [label = <(METHOD_RETURN,LayersProto)<SUB>4656</SUB>> ]
+  "13100" -> "13106" 
+  "13101" -> "13100" 
+  "13102" -> "13101" 
+  "13103" -> "13105" 
+  "13105" -> "13102" 
+  "13104" -> "13103" 
+  "13097" -> "13104" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/232-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/232-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/232-cfg.dot	2023-06-07 19:33:00.467398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/232-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,27 +1,27 @@
 digraph "dumpOffscreenLayers" {  
-"13095" [label = <(append,result.append(&quot;Offscreen Layers:\n&quot;))<SUB>4662</SUB>> ]
-"13100" [label = <(append,result.append(schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get()))<SUB>4663</SUB>> ]
-"13096" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4662</SUB>> ]
-"13101" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4663</SUB>> ]
-"13104" [label = <(get,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get())<SUB>4663</SUB>> ]
-"13098" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4662</SUB>> ]
-"13103" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4663</SUB>> ]
-"13105" [label = <(&lt;operator&gt;.fieldAccess,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get)<SUB>4663</SUB>> ]
-"13106" [label = <(schedule,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }))<SUB>4663</SUB>> ]
-"13108" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4663</SUB>> ]
-"13107" [label = <(METHOD_REF,ANY anonymous_lambda_50 (),schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }))<SUB>4663</SUB>> ]
-"13092" [label = <(METHOD,dumpOffscreenLayers)<SUB>4661</SUB>> ]
-"13109" [label = <(METHOD_RETURN,void)<SUB>4661</SUB>> ]
-  "13095" -> "13103" 
-  "13100" -> "13109" 
-  "13096" -> "13095" 
-  "13101" -> "13107" 
-  "13104" -> "13100" 
-  "13098" -> "13096" 
-  "13103" -> "13101" 
-  "13105" -> "13104" 
-  "13106" -> "13108" 
-  "13108" -> "13105" 
-  "13107" -> "13106" 
-  "13092" -> "13098" 
+"13111" [label = <(append,result.append(&quot;Offscreen Layers:\n&quot;))<SUB>4661</SUB>> ]
+"13116" [label = <(append,result.append(schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get()))<SUB>4662</SUB>> ]
+"13112" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4661</SUB>> ]
+"13117" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4662</SUB>> ]
+"13120" [label = <(get,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get())<SUB>4662</SUB>> ]
+"13114" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4661</SUB>> ]
+"13119" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4662</SUB>> ]
+"13121" [label = <(&lt;operator&gt;.fieldAccess,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }).get)<SUB>4662</SUB>> ]
+"13122" [label = <(schedule,schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }))<SUB>4662</SUB>> ]
+"13124" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4662</SUB>> ]
+"13123" [label = <(METHOD_REF,ANY anonymous_lambda_50 (),schedule([this] {\012                      std::string result;\012 for (Layer* offscreenLayer : mOffscreenLayers) {\012                          offscreenLayer-&gt;traverse(LayerVector::StateSet::Drawing,\012 [&amp;](Layer* layer) {\012                                                       layer-&gt;dumpCallingUidPid(result);\012 });\012 }\012 return result;\012 }))<SUB>4662</SUB>> ]
+"13108" [label = <(METHOD,dumpOffscreenLayers)<SUB>4660</SUB>> ]
+"13125" [label = <(METHOD_RETURN,void)<SUB>4660</SUB>> ]
+  "13111" -> "13119" 
+  "13116" -> "13125" 
+  "13112" -> "13111" 
+  "13117" -> "13123" 
+  "13120" -> "13116" 
+  "13114" -> "13112" 
+  "13119" -> "13117" 
+  "13121" -> "13120" 
+  "13122" -> "13124" 
+  "13124" -> "13121" 
+  "13123" -> "13122" 
+  "13108" -> "13114" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/233-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/233-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/233-cfg.dot	2023-06-07 19:33:00.467398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/233-cfg.dot	2023-06-07 19:33:06.697398402 +0330
@@ -1,587 +1,587 @@
 digraph "dumpAllLocked" {  
-"13116" [label = <(&lt;operator&gt;.assignment,colorize = !args.empty() &amp;&amp; args[0] == String16(&quot;--color&quot;))<SUB>4676</SUB>> ]
-"13131" [label = <(colorizer,colorizer(colorize))<SUB>4677</SUB>> ]
-"13134" [label = <(&lt;operator&gt;.assignment,now = systemTime())<SUB>4680</SUB>> ]
-"13138" [label = <(inTransaction,inTransaction(mDebugInTransaction))<SUB>4681</SUB>> ]
-"13141" [label = <(&lt;operator&gt;.assignment,inTransactionDuration = (inTransaction) ? now-inTransaction : 0)<SUB>4682</SUB>> ]
-"13149" [label = <(bold,colorizer.bold(result))<SUB>4688</SUB>> ]
-"13154" [label = <(append,result.append(&quot;Build configuration:&quot;))<SUB>4689</SUB>> ]
-"13159" [label = <(reset,colorizer.reset(result))<SUB>4690</SUB>> ]
-"13164" [label = <(appendSfConfigString,appendSfConfigString(result))<SUB>4691</SUB>> ]
-"13166" [label = <(appendUiConfigString,appendUiConfigString(result))<SUB>4692</SUB>> ]
-"13168" [label = <(appendGuiConfigString,appendGuiConfigString(result))<SUB>4693</SUB>> ]
-"13170" [label = <(append,result.append(&quot;\n&quot;))<SUB>4694</SUB>> ]
-"13175" [label = <(append,result.append(&quot;\nDisplay identification data:\n&quot;))<SUB>4696</SUB>> ]
-"13180" [label = <(dumpDisplayIdentificationData,dumpDisplayIdentificationData(result))<SUB>4697</SUB>> ]
-"13182" [label = <(append,result.append(&quot;\nWide-Color information:\n&quot;))<SUB>4699</SUB>> ]
-"13187" [label = <(dumpWideColorInfo,dumpWideColorInfo(result))<SUB>4700</SUB>> ]
-"13189" [label = <(bold,colorizer.bold(result))<SUB>4702</SUB>> ]
-"13194" [label = <(append,result.append(&quot;Sync configuration: &quot;))<SUB>4703</SUB>> ]
-"13199" [label = <(reset,colorizer.reset(result))<SUB>4704</SUB>> ]
-"13204" [label = <(append,result.append(SyncFeatures::getInstance().toString()))<SUB>4705</SUB>> ]
-"13215" [label = <(append,result.append(&quot;\n\n&quot;))<SUB>4706</SUB>> ]
-"13220" [label = <(bold,colorizer.bold(result))<SUB>4708</SUB>> ]
-"13225" [label = <(append,result.append(&quot;Scheduler:\n&quot;))<SUB>4709</SUB>> ]
-"13230" [label = <(reset,colorizer.reset(result))<SUB>4710</SUB>> ]
-"13235" [label = <(dumpVSync,dumpVSync(result))<SUB>4711</SUB>> ]
-"13237" [label = <(append,result.append(&quot;\n&quot;))<SUB>4712</SUB>> ]
-"13242" [label = <(dumpStaticScreenStats,dumpStaticScreenStats(result))<SUB>4714</SUB>> ]
-"13244" [label = <(append,result.append(&quot;\n&quot;))<SUB>4715</SUB>> ]
-"13249" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Total missed frame count: %u\n&quot;, mFrameMissedCount.load()))<SUB>4717</SUB>> ]
-"13257" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;HWC missed frame count: %u\n&quot;, mHwcFrameMissedCount.load()))<SUB>4718</SUB>> ]
-"13265" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;GPU missed frame count: %u\n\n&quot;, mGpuFrameMissedCount.load()))<SUB>4719</SUB>> ]
-"13273" [label = <(dumpBufferingStats,dumpBufferingStats(result))<SUB>4721</SUB>> ]
-"13275" [label = <(bold,colorizer.bold(result))<SUB>4726</SUB>> ]
-"13280" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Visible layers (count = %zu)\n&quot;, mNumLayers.load()))<SUB>4727</SUB>> ]
-"13288" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;GraphicBufferProducers: %zu, max %zu\n&quot;,\012                  mGraphicBufferProducerList.size(), mMaxGraphicBufferProducerListSize))<SUB>4728</SUB>> ]
-"13297" [label = <(reset,colorizer.reset(result))<SUB>4730</SUB>> ]
-"13312" [label = <(bold,colorizer.bold(result))<SUB>4749</SUB>> ]
-"13317" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Displays (%zu entries)\n&quot;, mDisplays.size()))<SUB>4750</SUB>> ]
-"13325" [label = <(reset,colorizer.reset(result))<SUB>4751</SUB>> ]
-"13341" [label = <(append,result.append(&quot;\n&quot;))<SUB>4755</SUB>> ]
-"13346" [label = <(dump,mCompositionEngine-&gt;dump(result))<SUB>4761</SUB>> ]
-"13351" [label = <(bold,colorizer.bold(result))<SUB>4767</SUB>> ]
-"13356" [label = <(append,result.append(&quot;SurfaceFlinger global state:\n&quot;))<SUB>4768</SUB>> ]
-"13361" [label = <(reset,colorizer.reset(result))<SUB>4769</SUB>> ]
-"13366" [label = <(dump,getRenderEngine().dump(result))<SUB>4771</SUB>> ]
-"13371" [label = <(dump,DebugEGLImageTracker::getInstance()-&gt;dump(result))<SUB>4773</SUB>> ]
-"13413" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;  transaction-flags         : %08x\n&quot;\012 &quot;  gpu_to_cpu_unsupported    : %d\n&quot;,\012                  mTransactionFlags.load(), !mGpuToCpuSupported))<SUB>4781</SUB>> ]
-"13462" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  transaction time: %f us\n&quot;, inTransactionDuration / 1000.0))<SUB>4797</SUB>> ]
-"13469" [label = <(dump,mTracing.dump(result))<SUB>4802</SUB>> ]
-"13474" [label = <(append,result.append(&quot;\n&quot;))<SUB>4803</SUB>> ]
-"13527" [label = <(bold,colorizer.bold(result))<SUB>4825</SUB>> ]
-"13532" [label = <(append,result.append(&quot;h/w composer state:\n&quot;))<SUB>4826</SUB>> ]
-"13537" [label = <(reset,colorizer.reset(result))<SUB>4827</SUB>> ]
-"13543" [label = <(&lt;operator&gt;.assignment,hwcDisabled = mDebugDisableHWC || mDebugRegion)<SUB>4828</SUB>> ]
-"13548" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  h/w composer %s\n&quot;, hwcDisabled ? &quot;disabled&quot; : &quot;enabled&quot;))<SUB>4829</SUB>> ]
-"13556" [label = <(dump,getHwComposer().dump(result))<SUB>4830</SUB>> ]
-"13562" [label = <(alloc,&amp; alloc(GraphicBufferAllocator::get()))<SUB>4835</SUB>> ]
-"13567" [label = <(dump,alloc.dump(result))<SUB>4836</SUB>> ]
-"13594" [label = <(append,result.append(mTimeStats-&gt;miniDump()))<SUB>4847</SUB>> ]
-"13602" [label = <(append,result.append(&quot;\n&quot;))<SUB>4848</SUB>> ]
-"13118" [label = <(&lt;operator&gt;.logicalAnd,!args.empty() &amp;&amp; args[0] == String16(&quot;--color&quot;))<SUB>4676</SUB>> ]
-"13136" [label = <(systemTime,systemTime())<SUB>4680</SUB>> ]
-"13143" [label = <(&lt;operator&gt;.conditional,(inTransaction) ? now-inTransaction : 0)<SUB>4682</SUB>> ]
-"13150" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4688</SUB>> ]
-"13155" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4689</SUB>> ]
-"13160" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4690</SUB>> ]
-"13171" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4694</SUB>> ]
-"13176" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4696</SUB>> ]
-"13183" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4699</SUB>> ]
-"13190" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4702</SUB>> ]
-"13195" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4703</SUB>> ]
-"13200" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4704</SUB>> ]
-"13205" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4705</SUB>> ]
-"13208" [label = <(toString,SyncFeatures::getInstance().toString())<SUB>4705</SUB>> ]
-"13216" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4706</SUB>> ]
-"13221" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4708</SUB>> ]
-"13226" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4709</SUB>> ]
-"13231" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4710</SUB>> ]
-"13238" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4712</SUB>> ]
-"13245" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4715</SUB>> ]
-"13250" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4717</SUB>> ]
-"13253" [label = <(load,mFrameMissedCount.load())<SUB>4717</SUB>> ]
-"13258" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4718</SUB>> ]
-"13261" [label = <(load,mHwcFrameMissedCount.load())<SUB>4718</SUB>> ]
-"13266" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4719</SUB>> ]
-"13269" [label = <(load,mGpuFrameMissedCount.load())<SUB>4719</SUB>> ]
-"13276" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4726</SUB>> ]
-"13281" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4727</SUB>> ]
-"13284" [label = <(load,mNumLayers.load())<SUB>4727</SUB>> ]
-"13289" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4728</SUB>> ]
-"13292" [label = <(size,mGraphicBufferProducerList.size())<SUB>4729</SUB>> ]
-"13298" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4730</SUB>> ]
-"13303" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Composition layers\n&quot;))<SUB>4733</SUB>> ]
-"13307" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 auto* compositionState = layer-&gt;getCompositionState();\012 if (!compositionState) return;\012\012            android::base::StringAppendF(&amp;result, &quot;* Layer %p (%s)\n&quot;, layer,\012                                         layer-&gt;getDebugName() ? layer-&gt;getDebugName()\012 : &quot;&lt;unknown&gt;&quot;);\012            compositionState-&gt;dump(result);\012 }))<SUB>4734</SUB>> ]
-"13313" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4749</SUB>> ]
-"13318" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4750</SUB>> ]
-"13321" [label = <(size,mDisplays.size())<SUB>4750</SUB>> ]
-"13326" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4751</SUB>> ]
-"13342" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4755</SUB>> ]
-"13347" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;dump)<SUB>4761</SUB>> ]
-"13352" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4767</SUB>> ]
-"13357" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4768</SUB>> ]
-"13362" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4769</SUB>> ]
-"13367" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().dump)<SUB>4771</SUB>> ]
-"13372" [label = <(&lt;operator&gt;.indirectFieldAccess,DebugEGLImageTracker::getInstance()-&gt;dump)<SUB>4773</SUB>> ]
-"13414" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4781</SUB>> ]
-"13417" [label = <(load,mTransactionFlags.load())<SUB>4784</SUB>> ]
-"13421" [label = <(&lt;operator&gt;.logicalNot,!mGpuToCpuSupported)<SUB>4784</SUB>> ]
-"13424" [label = <(&lt;operator&gt;.logicalAnd,displayId &amp;&amp; getHwComposer().isConnected(*displayId))<SUB>4787</SUB>> ]
-"13463" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4797</SUB>> ]
-"13466" [label = <(&lt;operator&gt;.division,inTransactionDuration / 1000.0)<SUB>4797</SUB>> ]
-"13470" [label = <(&lt;operator&gt;.fieldAccess,mTracing.dump)<SUB>4802</SUB>> ]
-"13475" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4803</SUB>> ]
-"13528" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4825</SUB>> ]
-"13533" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4826</SUB>> ]
-"13538" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4827</SUB>> ]
-"13545" [label = <(&lt;operator&gt;.logicalOr,mDebugDisableHWC || mDebugRegion)<SUB>4828</SUB>> ]
-"13549" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4829</SUB>> ]
-"13552" [label = <(&lt;operator&gt;.conditional,hwcDisabled ? &quot;disabled&quot; : &quot;enabled&quot;)<SUB>4829</SUB>> ]
-"13557" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().dump)<SUB>4830</SUB>> ]
-"13563" [label = <(GraphicBufferAllocator::get,GraphicBufferAllocator::get())<SUB>4835</SUB>> ]
-"13568" [label = <(&lt;operator&gt;.fieldAccess,alloc.dump)<SUB>4836</SUB>> ]
-"13595" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4847</SUB>> ]
-"13598" [label = <(miniDump,mTimeStats-&gt;miniDump())<SUB>4847</SUB>> ]
-"13603" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4848</SUB>> ]
-"13119" [label = <(&lt;operator&gt;.logicalNot,!args.empty())<SUB>4676</SUB>> ]
-"13124" [label = <(&lt;operator&gt;.equals,args[0] == String16(&quot;--color&quot;))<SUB>4676</SUB>> ]
-"13145" [label = <(&lt;operator&gt;.subtraction,now-inTransaction)<SUB>4682</SUB>> ]
-"13152" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4688</SUB>> ]
-"13157" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4689</SUB>> ]
-"13162" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4690</SUB>> ]
-"13173" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4694</SUB>> ]
-"13178" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4696</SUB>> ]
-"13185" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4699</SUB>> ]
-"13192" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4702</SUB>> ]
-"13197" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4703</SUB>> ]
-"13202" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4704</SUB>> ]
-"13207" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4705</SUB>> ]
-"13209" [label = <(&lt;operator&gt;.fieldAccess,SyncFeatures::getInstance().toString)<SUB>4705</SUB>> ]
-"13218" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4706</SUB>> ]
-"13223" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4708</SUB>> ]
-"13228" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4709</SUB>> ]
-"13233" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4710</SUB>> ]
-"13240" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4712</SUB>> ]
-"13247" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4715</SUB>> ]
-"13254" [label = <(&lt;operator&gt;.fieldAccess,mFrameMissedCount.load)<SUB>4717</SUB>> ]
-"13262" [label = <(&lt;operator&gt;.fieldAccess,mHwcFrameMissedCount.load)<SUB>4718</SUB>> ]
-"13270" [label = <(&lt;operator&gt;.fieldAccess,mGpuFrameMissedCount.load)<SUB>4719</SUB>> ]
-"13278" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4726</SUB>> ]
-"13285" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>4727</SUB>> ]
-"13293" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>4729</SUB>> ]
-"13300" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4730</SUB>> ]
-"13304" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4733</SUB>> ]
-"13308" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>4734</SUB>> ]
-"13311" [label = <(METHOD_REF,ANY anonymous_lambda_51 (Layer* layer),mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 auto* compositionState = layer-&gt;getCompositionState();\012 if (!compositionState) return;\012\012            android::base::StringAppendF(&amp;result, &quot;* Layer %p (%s)\n&quot;, layer,\012                                         layer-&gt;getDebugName() ? layer-&gt;getDebugName()\012 : &quot;&lt;unknown&gt;&quot;);\012            compositionState-&gt;dump(result);\012 }))<SUB>4734</SUB>> ]
-"13315" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4749</SUB>> ]
-"13322" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.size)<SUB>4750</SUB>> ]
-"13328" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4751</SUB>> ]
-"13336" [label = <(dump,display-&gt;dump(result))<SUB>4753</SUB>> ]
-"13344" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4755</SUB>> ]
-"13349" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4761</SUB>> ]
-"13354" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4767</SUB>> ]
-"13359" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4768</SUB>> ]
-"13364" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4769</SUB>> ]
-"13368" [label = <(getRenderEngine,getRenderEngine())<SUB>4771</SUB>> ]
-"13369" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4771</SUB>> ]
-"13373" [label = <(DebugEGLImageTracker::getInstance,DebugEGLImageTracker::getInstance())<SUB>4773</SUB>> ]
-"13377" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4773</SUB>> ]
-"13382" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>4775</SUB>> ]
-"13386" [label = <(dump,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion.dump(result,\012 &quot;undefinedRegion&quot;))<SUB>4776</SUB>> ]
-"13400" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  orientation=%s, isPoweredOn=%d\n&quot;,\012                      toCString(display-&gt;getOrientation()), display-&gt;isPoweredOn()))<SUB>4778</SUB>> ]
-"13418" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.load)<SUB>4784</SUB>> ]
-"13426" [label = <(isConnected,getHwComposer().isConnected(*displayId))<SUB>4787</SUB>> ]
-"13434" [label = <(&lt;operator&gt;.assignment,activeConfig = getHwComposer().getActiveConfig(*displayId))<SUB>4788</SUB>> ]
-"13442" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;  refresh-rate              : %f fps\n&quot;\012 &quot;  x-dpi                     : %f\n&quot;\012 &quot;  y-dpi                     : %f\n&quot;,\012 1e9 / getHwComposer().getDisplayVsyncPeriod(*displayId),\012                      activeConfig-&gt;getDpiX(), activeConfig-&gt;getDpiY()))<SUB>4789</SUB>> ]
-"13472" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4802</SUB>> ]
-"13477" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4803</SUB>> ]
-"13486" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4809</SUB>> ]
-"13497" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Display %s HWC layers:\n&quot;, to_string(*displayId).c_str()))<SUB>4814</SUB>> ]
-"13507" [label = <(Layer::miniDumpHeader,Layer::miniDumpHeader(result))<SUB>4815</SUB>> ]
-"13513" [label = <(&lt;operator&gt;.assignment,&amp; ref = *display)<SUB>4817</SUB>> ]
-"13517" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder([&amp;](Layer* layer) { layer-&gt;miniDump(result, ref); }))<SUB>4818</SUB>> ]
-"13522" [label = <(append,result.append(&quot;\n&quot;))<SUB>4819</SUB>> ]
-"13530" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4825</SUB>> ]
-"13535" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4826</SUB>> ]
-"13540" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4827</SUB>> ]
-"13558" [label = <(getHwComposer,getHwComposer())<SUB>4830</SUB>> ]
-"13559" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4830</SUB>> ]
-"13564" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get)<SUB>4835</SUB>> ]
-"13570" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4836</SUB>> ]
-"13576" [label = <(append,result.append(&quot;VrFlinger state:\n&quot;))<SUB>4842</SUB>> ]
-"13581" [label = <(append,result.append(mVrFlinger-&gt;Dump()))<SUB>4843</SUB>> ]
-"13589" [label = <(append,result.append(&quot;\n&quot;))<SUB>4844</SUB>> ]
-"13597" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4847</SUB>> ]
-"13599" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;miniDump)<SUB>4847</SUB>> ]
-"13605" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4848</SUB>> ]
-"13120" [label = <(empty,args.empty())<SUB>4676</SUB>> ]
-"13125" [label = <(&lt;operator&gt;.indirectIndexAccess,args[0])<SUB>4676</SUB>> ]
-"13128" [label = <(String16,String16(&quot;--color&quot;))<SUB>4676</SUB>> ]
-"13210" [label = <(SyncFeatures::getInstance,SyncFeatures::getInstance())<SUB>4705</SUB>> ]
-"13214" [label = <(FIELD_IDENTIFIER,toString,toString)<SUB>4705</SUB>> ]
-"13256" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4717</SUB>> ]
-"13264" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4718</SUB>> ]
-"13272" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4719</SUB>> ]
-"13287" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4727</SUB>> ]
-"13295" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4729</SUB>> ]
-"13310" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4734</SUB>> ]
-"13324" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4750</SUB>> ]
-"13337" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;dump)<SUB>4753</SUB>> ]
-"13374" [label = <(&lt;operator&gt;.fieldAccess,DebugEGLImageTracker::getInstance)<SUB>4773</SUB>> ]
-"13384" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>4775</SUB>> ]
-"13387" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion.dump)<SUB>4776</SUB>> ]
-"13401" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4778</SUB>> ]
-"13404" [label = <(toCString,toCString(display-&gt;getOrientation()))<SUB>4779</SUB>> ]
-"13409" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>4779</SUB>> ]
-"13420" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4784</SUB>> ]
-"13427" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>4787</SUB>> ]
-"13430" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4787</SUB>> ]
-"13436" [label = <(getActiveConfig,getHwComposer().getActiveConfig(*displayId))<SUB>4788</SUB>> ]
-"13443" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4789</SUB>> ]
-"13446" [label = <(&lt;operator&gt;.division,1e9 / getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>4793</SUB>> ]
-"13454" [label = <(getDpiX,activeConfig-&gt;getDpiX())<SUB>4794</SUB>> ]
-"13458" [label = <(getDpiY,activeConfig-&gt;getDpiY())<SUB>4794</SUB>> ]
-"13488" [label = <(getId,display-&gt;getId())<SUB>4809</SUB>> ]
-"13493" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4810</SUB>> ]
-"13498" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4814</SUB>> ]
-"13501" [label = <(c_str,to_string(*displayId).c_str())<SUB>4814</SUB>> ]
-"13508" [label = <(&lt;operator&gt;.fieldAccess,Layer::miniDumpHeader)<SUB>4815</SUB>> ]
-"13515" [label = <(&lt;operator&gt;.indirection,*display)<SUB>4817</SUB>> ]
-"13518" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4818</SUB>> ]
-"13521" [label = <(METHOD_REF,ANY anonymous_lambda_52 (Layer* layer),mCurrentState.traverseInZOrder([&amp;](Layer* layer) { layer-&gt;miniDump(result, ref); }))<SUB>4818</SUB>> ]
-"13523" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4819</SUB>> ]
-"13566" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4835</SUB>> ]
-"13577" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4842</SUB>> ]
-"13582" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4843</SUB>> ]
-"13585" [label = <(Dump,mVrFlinger-&gt;Dump())<SUB>4843</SUB>> ]
-"13590" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4844</SUB>> ]
-"13601" [label = <(FIELD_IDENTIFIER,miniDump,miniDump)<SUB>4847</SUB>> ]
-"13121" [label = <(&lt;operator&gt;.fieldAccess,args.empty)<SUB>4676</SUB>> ]
-"13211" [label = <(&lt;operator&gt;.fieldAccess,SyncFeatures::getInstance)<SUB>4705</SUB>> ]
-"13339" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4753</SUB>> ]
-"13376" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>4773</SUB>> ]
-"13388" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion)<SUB>4776</SUB>> ]
-"13397" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4776</SUB>> ]
-"13405" [label = <(getOrientation,display-&gt;getOrientation())<SUB>4779</SUB>> ]
-"13410" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>4779</SUB>> ]
-"13428" [label = <(getHwComposer,getHwComposer())<SUB>4787</SUB>> ]
-"13429" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>4787</SUB>> ]
-"13437" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfig)<SUB>4788</SUB>> ]
-"13440" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4788</SUB>> ]
-"13448" [label = <(getDisplayVsyncPeriod,getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>4793</SUB>> ]
-"13455" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getDpiX)<SUB>4794</SUB>> ]
-"13459" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getDpiY)<SUB>4794</SUB>> ]
-"13489" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4809</SUB>> ]
-"13502" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4814</SUB>> ]
-"13510" [label = <(FIELD_IDENTIFIER,miniDumpHeader,miniDumpHeader)<SUB>4815</SUB>> ]
-"13520" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4818</SUB>> ]
-"13525" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4819</SUB>> ]
-"13579" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4842</SUB>> ]
-"13584" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4843</SUB>> ]
-"13586" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;Dump)<SUB>4843</SUB>> ]
-"13592" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4844</SUB>> ]
-"13123" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>4676</SUB>> ]
-"13213" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>4705</SUB>> ]
-"13389" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>4776</SUB>> ]
-"13396" [label = <(FIELD_IDENTIFIER,undefinedRegion,undefinedRegion)<SUB>4776</SUB>> ]
-"13406" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>4779</SUB>> ]
-"13412" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>4779</SUB>> ]
-"13438" [label = <(getHwComposer,getHwComposer())<SUB>4788</SUB>> ]
-"13439" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>4788</SUB>> ]
-"13449" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayVsyncPeriod)<SUB>4793</SUB>> ]
-"13452" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4793</SUB>> ]
-"13457" [label = <(FIELD_IDENTIFIER,getDpiX,getDpiX)<SUB>4794</SUB>> ]
-"13461" [label = <(FIELD_IDENTIFIER,getDpiY,getDpiY)<SUB>4794</SUB>> ]
-"13491" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4809</SUB>> ]
-"13503" [label = <(to_string,to_string(*displayId))<SUB>4814</SUB>> ]
-"13506" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4814</SUB>> ]
-"13588" [label = <(FIELD_IDENTIFIER,Dump,Dump)<SUB>4843</SUB>> ]
-"13390" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>4776</SUB>> ]
-"13408" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>4779</SUB>> ]
-"13450" [label = <(getHwComposer,getHwComposer())<SUB>4793</SUB>> ]
-"13451" [label = <(FIELD_IDENTIFIER,getDisplayVsyncPeriod,getDisplayVsyncPeriod)<SUB>4793</SUB>> ]
-"13504" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4814</SUB>> ]
-"13391" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>4776</SUB>> ]
-"13395" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>4776</SUB>> ]
-"13392" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>4776</SUB>> ]
-"13394" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>4776</SUB>> ]
-"13111" [label = <(METHOD,dumpAllLocked)<SUB>4675</SUB>> ]
-"13607" [label = <(METHOD_RETURN,void)<SUB>4675</SUB>> ]
-  "13116" -> "13131" 
-  "13131" -> "13136" 
-  "13134" -> "13138" 
-  "13138" -> "13145" 
-  "13138" -> "13143" 
-  "13141" -> "13152" 
-  "13149" -> "13157" 
-  "13154" -> "13162" 
-  "13159" -> "13164" 
-  "13164" -> "13166" 
-  "13166" -> "13168" 
-  "13168" -> "13173" 
+"13132" [label = <(&lt;operator&gt;.assignment,colorize = !args.empty() &amp;&amp; args[0] == String16(&quot;--color&quot;))<SUB>4675</SUB>> ]
+"13147" [label = <(colorizer,colorizer(colorize))<SUB>4676</SUB>> ]
+"13150" [label = <(&lt;operator&gt;.assignment,now = systemTime())<SUB>4679</SUB>> ]
+"13154" [label = <(inTransaction,inTransaction(mDebugInTransaction))<SUB>4680</SUB>> ]
+"13157" [label = <(&lt;operator&gt;.assignment,inTransactionDuration = (inTransaction) ? now-inTransaction : 0)<SUB>4681</SUB>> ]
+"13165" [label = <(bold,colorizer.bold(result))<SUB>4687</SUB>> ]
+"13170" [label = <(append,result.append(&quot;Build configuration:&quot;))<SUB>4688</SUB>> ]
+"13175" [label = <(reset,colorizer.reset(result))<SUB>4689</SUB>> ]
+"13180" [label = <(appendSfConfigString,appendSfConfigString(result))<SUB>4690</SUB>> ]
+"13182" [label = <(appendUiConfigString,appendUiConfigString(result))<SUB>4691</SUB>> ]
+"13184" [label = <(appendGuiConfigString,appendGuiConfigString(result))<SUB>4692</SUB>> ]
+"13186" [label = <(append,result.append(&quot;\n&quot;))<SUB>4693</SUB>> ]
+"13191" [label = <(append,result.append(&quot;\nDisplay identification data:\n&quot;))<SUB>4695</SUB>> ]
+"13196" [label = <(dumpDisplayIdentificationData,dumpDisplayIdentificationData(result))<SUB>4696</SUB>> ]
+"13198" [label = <(append,result.append(&quot;\nWide-Color information:\n&quot;))<SUB>4698</SUB>> ]
+"13203" [label = <(dumpWideColorInfo,dumpWideColorInfo(result))<SUB>4699</SUB>> ]
+"13205" [label = <(bold,colorizer.bold(result))<SUB>4701</SUB>> ]
+"13210" [label = <(append,result.append(&quot;Sync configuration: &quot;))<SUB>4702</SUB>> ]
+"13215" [label = <(reset,colorizer.reset(result))<SUB>4703</SUB>> ]
+"13220" [label = <(append,result.append(SyncFeatures::getInstance().toString()))<SUB>4704</SUB>> ]
+"13231" [label = <(append,result.append(&quot;\n\n&quot;))<SUB>4705</SUB>> ]
+"13236" [label = <(bold,colorizer.bold(result))<SUB>4707</SUB>> ]
+"13241" [label = <(append,result.append(&quot;Scheduler:\n&quot;))<SUB>4708</SUB>> ]
+"13246" [label = <(reset,colorizer.reset(result))<SUB>4709</SUB>> ]
+"13251" [label = <(dumpVSync,dumpVSync(result))<SUB>4710</SUB>> ]
+"13253" [label = <(append,result.append(&quot;\n&quot;))<SUB>4711</SUB>> ]
+"13258" [label = <(dumpStaticScreenStats,dumpStaticScreenStats(result))<SUB>4713</SUB>> ]
+"13260" [label = <(append,result.append(&quot;\n&quot;))<SUB>4714</SUB>> ]
+"13265" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Total missed frame count: %u\n&quot;, mFrameMissedCount.load()))<SUB>4716</SUB>> ]
+"13273" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;HWC missed frame count: %u\n&quot;, mHwcFrameMissedCount.load()))<SUB>4717</SUB>> ]
+"13281" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;GPU missed frame count: %u\n\n&quot;, mGpuFrameMissedCount.load()))<SUB>4718</SUB>> ]
+"13289" [label = <(dumpBufferingStats,dumpBufferingStats(result))<SUB>4720</SUB>> ]
+"13291" [label = <(bold,colorizer.bold(result))<SUB>4725</SUB>> ]
+"13296" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Visible layers (count = %zu)\n&quot;, mNumLayers.load()))<SUB>4726</SUB>> ]
+"13304" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;GraphicBufferProducers: %zu, max %zu\n&quot;,\012                  mGraphicBufferProducerList.size(), mMaxGraphicBufferProducerListSize))<SUB>4727</SUB>> ]
+"13313" [label = <(reset,colorizer.reset(result))<SUB>4729</SUB>> ]
+"13328" [label = <(bold,colorizer.bold(result))<SUB>4748</SUB>> ]
+"13333" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Displays (%zu entries)\n&quot;, mDisplays.size()))<SUB>4749</SUB>> ]
+"13341" [label = <(reset,colorizer.reset(result))<SUB>4750</SUB>> ]
+"13357" [label = <(append,result.append(&quot;\n&quot;))<SUB>4754</SUB>> ]
+"13362" [label = <(dump,mCompositionEngine-&gt;dump(result))<SUB>4760</SUB>> ]
+"13367" [label = <(bold,colorizer.bold(result))<SUB>4766</SUB>> ]
+"13372" [label = <(append,result.append(&quot;SurfaceFlinger global state:\n&quot;))<SUB>4767</SUB>> ]
+"13377" [label = <(reset,colorizer.reset(result))<SUB>4768</SUB>> ]
+"13382" [label = <(dump,getRenderEngine().dump(result))<SUB>4770</SUB>> ]
+"13387" [label = <(dump,DebugEGLImageTracker::getInstance()-&gt;dump(result))<SUB>4772</SUB>> ]
+"13429" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;  transaction-flags         : %08x\n&quot;\012 &quot;  gpu_to_cpu_unsupported    : %d\n&quot;,\012                  mTransactionFlags.load(), !mGpuToCpuSupported))<SUB>4780</SUB>> ]
+"13478" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  transaction time: %f us\n&quot;, inTransactionDuration / 1000.0))<SUB>4796</SUB>> ]
+"13485" [label = <(dump,mTracing.dump(result))<SUB>4801</SUB>> ]
+"13490" [label = <(append,result.append(&quot;\n&quot;))<SUB>4802</SUB>> ]
+"13543" [label = <(bold,colorizer.bold(result))<SUB>4824</SUB>> ]
+"13548" [label = <(append,result.append(&quot;h/w composer state:\n&quot;))<SUB>4825</SUB>> ]
+"13553" [label = <(reset,colorizer.reset(result))<SUB>4826</SUB>> ]
+"13559" [label = <(&lt;operator&gt;.assignment,hwcDisabled = mDebugDisableHWC || mDebugRegion)<SUB>4827</SUB>> ]
+"13564" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  h/w composer %s\n&quot;, hwcDisabled ? &quot;disabled&quot; : &quot;enabled&quot;))<SUB>4828</SUB>> ]
+"13572" [label = <(dump,getHwComposer().dump(result))<SUB>4829</SUB>> ]
+"13578" [label = <(alloc,&amp; alloc(GraphicBufferAllocator::get()))<SUB>4834</SUB>> ]
+"13583" [label = <(dump,alloc.dump(result))<SUB>4835</SUB>> ]
+"13610" [label = <(append,result.append(mTimeStats-&gt;miniDump()))<SUB>4846</SUB>> ]
+"13618" [label = <(append,result.append(&quot;\n&quot;))<SUB>4847</SUB>> ]
+"13134" [label = <(&lt;operator&gt;.logicalAnd,!args.empty() &amp;&amp; args[0] == String16(&quot;--color&quot;))<SUB>4675</SUB>> ]
+"13152" [label = <(systemTime,systemTime())<SUB>4679</SUB>> ]
+"13159" [label = <(&lt;operator&gt;.conditional,(inTransaction) ? now-inTransaction : 0)<SUB>4681</SUB>> ]
+"13166" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4687</SUB>> ]
+"13171" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4688</SUB>> ]
+"13176" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4689</SUB>> ]
+"13187" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4693</SUB>> ]
+"13192" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4695</SUB>> ]
+"13199" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4698</SUB>> ]
+"13206" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4701</SUB>> ]
+"13211" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4702</SUB>> ]
+"13216" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4703</SUB>> ]
+"13221" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4704</SUB>> ]
+"13224" [label = <(toString,SyncFeatures::getInstance().toString())<SUB>4704</SUB>> ]
+"13232" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4705</SUB>> ]
+"13237" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4707</SUB>> ]
+"13242" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4708</SUB>> ]
+"13247" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4709</SUB>> ]
+"13254" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4711</SUB>> ]
+"13261" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4714</SUB>> ]
+"13266" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4716</SUB>> ]
+"13269" [label = <(load,mFrameMissedCount.load())<SUB>4716</SUB>> ]
+"13274" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4717</SUB>> ]
+"13277" [label = <(load,mHwcFrameMissedCount.load())<SUB>4717</SUB>> ]
+"13282" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4718</SUB>> ]
+"13285" [label = <(load,mGpuFrameMissedCount.load())<SUB>4718</SUB>> ]
+"13292" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4725</SUB>> ]
+"13297" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4726</SUB>> ]
+"13300" [label = <(load,mNumLayers.load())<SUB>4726</SUB>> ]
+"13305" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4727</SUB>> ]
+"13308" [label = <(size,mGraphicBufferProducerList.size())<SUB>4728</SUB>> ]
+"13314" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4729</SUB>> ]
+"13319" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Composition layers\n&quot;))<SUB>4732</SUB>> ]
+"13323" [label = <(traverseInZOrder,mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 auto* compositionState = layer-&gt;getCompositionState();\012 if (!compositionState) return;\012\012            android::base::StringAppendF(&amp;result, &quot;* Layer %p (%s)\n&quot;, layer,\012                                         layer-&gt;getDebugName() ? layer-&gt;getDebugName()\012 : &quot;&lt;unknown&gt;&quot;);\012            compositionState-&gt;dump(result);\012 }))<SUB>4733</SUB>> ]
+"13329" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4748</SUB>> ]
+"13334" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4749</SUB>> ]
+"13337" [label = <(size,mDisplays.size())<SUB>4749</SUB>> ]
+"13342" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4750</SUB>> ]
+"13358" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4754</SUB>> ]
+"13363" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;dump)<SUB>4760</SUB>> ]
+"13368" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4766</SUB>> ]
+"13373" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4767</SUB>> ]
+"13378" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4768</SUB>> ]
+"13383" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().dump)<SUB>4770</SUB>> ]
+"13388" [label = <(&lt;operator&gt;.indirectFieldAccess,DebugEGLImageTracker::getInstance()-&gt;dump)<SUB>4772</SUB>> ]
+"13430" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4780</SUB>> ]
+"13433" [label = <(load,mTransactionFlags.load())<SUB>4783</SUB>> ]
+"13437" [label = <(&lt;operator&gt;.logicalNot,!mGpuToCpuSupported)<SUB>4783</SUB>> ]
+"13440" [label = <(&lt;operator&gt;.logicalAnd,displayId &amp;&amp; getHwComposer().isConnected(*displayId))<SUB>4786</SUB>> ]
+"13479" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4796</SUB>> ]
+"13482" [label = <(&lt;operator&gt;.division,inTransactionDuration / 1000.0)<SUB>4796</SUB>> ]
+"13486" [label = <(&lt;operator&gt;.fieldAccess,mTracing.dump)<SUB>4801</SUB>> ]
+"13491" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4802</SUB>> ]
+"13544" [label = <(&lt;operator&gt;.fieldAccess,colorizer.bold)<SUB>4824</SUB>> ]
+"13549" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4825</SUB>> ]
+"13554" [label = <(&lt;operator&gt;.fieldAccess,colorizer.reset)<SUB>4826</SUB>> ]
+"13561" [label = <(&lt;operator&gt;.logicalOr,mDebugDisableHWC || mDebugRegion)<SUB>4827</SUB>> ]
+"13565" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4828</SUB>> ]
+"13568" [label = <(&lt;operator&gt;.conditional,hwcDisabled ? &quot;disabled&quot; : &quot;enabled&quot;)<SUB>4828</SUB>> ]
+"13573" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().dump)<SUB>4829</SUB>> ]
+"13579" [label = <(GraphicBufferAllocator::get,GraphicBufferAllocator::get())<SUB>4834</SUB>> ]
+"13584" [label = <(&lt;operator&gt;.fieldAccess,alloc.dump)<SUB>4835</SUB>> ]
+"13611" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4846</SUB>> ]
+"13614" [label = <(miniDump,mTimeStats-&gt;miniDump())<SUB>4846</SUB>> ]
+"13619" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4847</SUB>> ]
+"13135" [label = <(&lt;operator&gt;.logicalNot,!args.empty())<SUB>4675</SUB>> ]
+"13140" [label = <(&lt;operator&gt;.equals,args[0] == String16(&quot;--color&quot;))<SUB>4675</SUB>> ]
+"13161" [label = <(&lt;operator&gt;.subtraction,now-inTransaction)<SUB>4681</SUB>> ]
+"13168" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4687</SUB>> ]
+"13173" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4688</SUB>> ]
+"13178" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4689</SUB>> ]
+"13189" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4693</SUB>> ]
+"13194" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4695</SUB>> ]
+"13201" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4698</SUB>> ]
+"13208" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4701</SUB>> ]
+"13213" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4702</SUB>> ]
+"13218" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4703</SUB>> ]
+"13223" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4704</SUB>> ]
+"13225" [label = <(&lt;operator&gt;.fieldAccess,SyncFeatures::getInstance().toString)<SUB>4704</SUB>> ]
+"13234" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4705</SUB>> ]
+"13239" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4707</SUB>> ]
+"13244" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4708</SUB>> ]
+"13249" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4709</SUB>> ]
+"13256" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4711</SUB>> ]
+"13263" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4714</SUB>> ]
+"13270" [label = <(&lt;operator&gt;.fieldAccess,mFrameMissedCount.load)<SUB>4716</SUB>> ]
+"13278" [label = <(&lt;operator&gt;.fieldAccess,mHwcFrameMissedCount.load)<SUB>4717</SUB>> ]
+"13286" [label = <(&lt;operator&gt;.fieldAccess,mGpuFrameMissedCount.load)<SUB>4718</SUB>> ]
+"13294" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4725</SUB>> ]
+"13301" [label = <(&lt;operator&gt;.fieldAccess,mNumLayers.load)<SUB>4726</SUB>> ]
+"13309" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.size)<SUB>4728</SUB>> ]
+"13316" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4729</SUB>> ]
+"13320" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4732</SUB>> ]
+"13324" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.traverseInZOrder)<SUB>4733</SUB>> ]
+"13327" [label = <(METHOD_REF,ANY anonymous_lambda_51 (Layer* layer),mDrawingState.traverseInZOrder([&amp;](Layer* layer) {\012 auto* compositionState = layer-&gt;getCompositionState();\012 if (!compositionState) return;\012\012            android::base::StringAppendF(&amp;result, &quot;* Layer %p (%s)\n&quot;, layer,\012                                         layer-&gt;getDebugName() ? layer-&gt;getDebugName()\012 : &quot;&lt;unknown&gt;&quot;);\012            compositionState-&gt;dump(result);\012 }))<SUB>4733</SUB>> ]
+"13331" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4748</SUB>> ]
+"13338" [label = <(&lt;operator&gt;.fieldAccess,mDisplays.size)<SUB>4749</SUB>> ]
+"13344" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4750</SUB>> ]
+"13352" [label = <(dump,display-&gt;dump(result))<SUB>4752</SUB>> ]
+"13360" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4754</SUB>> ]
+"13365" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4760</SUB>> ]
+"13370" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4766</SUB>> ]
+"13375" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4767</SUB>> ]
+"13380" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4768</SUB>> ]
+"13384" [label = <(getRenderEngine,getRenderEngine())<SUB>4770</SUB>> ]
+"13385" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4770</SUB>> ]
+"13389" [label = <(DebugEGLImageTracker::getInstance,DebugEGLImageTracker::getInstance())<SUB>4772</SUB>> ]
+"13393" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4772</SUB>> ]
+"13398" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>4774</SUB>> ]
+"13402" [label = <(dump,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion.dump(result,\012 &quot;undefinedRegion&quot;))<SUB>4775</SUB>> ]
+"13416" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;  orientation=%s, isPoweredOn=%d\n&quot;,\012                      toCString(display-&gt;getOrientation()), display-&gt;isPoweredOn()))<SUB>4777</SUB>> ]
+"13434" [label = <(&lt;operator&gt;.fieldAccess,mTransactionFlags.load)<SUB>4783</SUB>> ]
+"13442" [label = <(isConnected,getHwComposer().isConnected(*displayId))<SUB>4786</SUB>> ]
+"13450" [label = <(&lt;operator&gt;.assignment,activeConfig = getHwComposer().getActiveConfig(*displayId))<SUB>4787</SUB>> ]
+"13458" [label = <(StringAppendF,StringAppendF(&amp;result,\012 &quot;  refresh-rate              : %f fps\n&quot;\012 &quot;  x-dpi                     : %f\n&quot;\012 &quot;  y-dpi                     : %f\n&quot;,\012 1e9 / getHwComposer().getDisplayVsyncPeriod(*displayId),\012                      activeConfig-&gt;getDpiX(), activeConfig-&gt;getDpiY()))<SUB>4788</SUB>> ]
+"13488" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4801</SUB>> ]
+"13493" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4802</SUB>> ]
+"13502" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>4808</SUB>> ]
+"13513" [label = <(StringAppendF,StringAppendF(&amp;result, &quot;Display %s HWC layers:\n&quot;, to_string(*displayId).c_str()))<SUB>4813</SUB>> ]
+"13523" [label = <(Layer::miniDumpHeader,Layer::miniDumpHeader(result))<SUB>4814</SUB>> ]
+"13529" [label = <(&lt;operator&gt;.assignment,&amp; ref = *display)<SUB>4816</SUB>> ]
+"13533" [label = <(traverseInZOrder,mCurrentState.traverseInZOrder([&amp;](Layer* layer) { layer-&gt;miniDump(result, ref); }))<SUB>4817</SUB>> ]
+"13538" [label = <(append,result.append(&quot;\n&quot;))<SUB>4818</SUB>> ]
+"13546" [label = <(FIELD_IDENTIFIER,bold,bold)<SUB>4824</SUB>> ]
+"13551" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4825</SUB>> ]
+"13556" [label = <(FIELD_IDENTIFIER,reset,reset)<SUB>4826</SUB>> ]
+"13574" [label = <(getHwComposer,getHwComposer())<SUB>4829</SUB>> ]
+"13575" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4829</SUB>> ]
+"13580" [label = <(&lt;operator&gt;.fieldAccess,GraphicBufferAllocator::get)<SUB>4834</SUB>> ]
+"13586" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4835</SUB>> ]
+"13592" [label = <(append,result.append(&quot;VrFlinger state:\n&quot;))<SUB>4841</SUB>> ]
+"13597" [label = <(append,result.append(mVrFlinger-&gt;Dump()))<SUB>4842</SUB>> ]
+"13605" [label = <(append,result.append(&quot;\n&quot;))<SUB>4843</SUB>> ]
+"13613" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4846</SUB>> ]
+"13615" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;miniDump)<SUB>4846</SUB>> ]
+"13621" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4847</SUB>> ]
+"13136" [label = <(empty,args.empty())<SUB>4675</SUB>> ]
+"13141" [label = <(&lt;operator&gt;.indirectIndexAccess,args[0])<SUB>4675</SUB>> ]
+"13144" [label = <(String16,String16(&quot;--color&quot;))<SUB>4675</SUB>> ]
+"13226" [label = <(SyncFeatures::getInstance,SyncFeatures::getInstance())<SUB>4704</SUB>> ]
+"13230" [label = <(FIELD_IDENTIFIER,toString,toString)<SUB>4704</SUB>> ]
+"13272" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4716</SUB>> ]
+"13280" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4717</SUB>> ]
+"13288" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4718</SUB>> ]
+"13303" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4726</SUB>> ]
+"13311" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4728</SUB>> ]
+"13326" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4733</SUB>> ]
+"13340" [label = <(FIELD_IDENTIFIER,size,size)<SUB>4749</SUB>> ]
+"13353" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;dump)<SUB>4752</SUB>> ]
+"13390" [label = <(&lt;operator&gt;.fieldAccess,DebugEGLImageTracker::getInstance)<SUB>4772</SUB>> ]
+"13400" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>4774</SUB>> ]
+"13403" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion.dump)<SUB>4775</SUB>> ]
+"13417" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4777</SUB>> ]
+"13420" [label = <(toCString,toCString(display-&gt;getOrientation()))<SUB>4778</SUB>> ]
+"13425" [label = <(isPoweredOn,display-&gt;isPoweredOn())<SUB>4778</SUB>> ]
+"13436" [label = <(FIELD_IDENTIFIER,load,load)<SUB>4783</SUB>> ]
+"13443" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>4786</SUB>> ]
+"13446" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4786</SUB>> ]
+"13452" [label = <(getActiveConfig,getHwComposer().getActiveConfig(*displayId))<SUB>4787</SUB>> ]
+"13459" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4788</SUB>> ]
+"13462" [label = <(&lt;operator&gt;.division,1e9 / getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>4792</SUB>> ]
+"13470" [label = <(getDpiX,activeConfig-&gt;getDpiX())<SUB>4793</SUB>> ]
+"13474" [label = <(getDpiY,activeConfig-&gt;getDpiY())<SUB>4793</SUB>> ]
+"13504" [label = <(getId,display-&gt;getId())<SUB>4808</SUB>> ]
+"13509" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>4809</SUB>> ]
+"13514" [label = <(&lt;operator&gt;.addressOf,&amp;result)<SUB>4813</SUB>> ]
+"13517" [label = <(c_str,to_string(*displayId).c_str())<SUB>4813</SUB>> ]
+"13524" [label = <(&lt;operator&gt;.fieldAccess,Layer::miniDumpHeader)<SUB>4814</SUB>> ]
+"13531" [label = <(&lt;operator&gt;.indirection,*display)<SUB>4816</SUB>> ]
+"13534" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.traverseInZOrder)<SUB>4817</SUB>> ]
+"13537" [label = <(METHOD_REF,ANY anonymous_lambda_52 (Layer* layer),mCurrentState.traverseInZOrder([&amp;](Layer* layer) { layer-&gt;miniDump(result, ref); }))<SUB>4817</SUB>> ]
+"13539" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4818</SUB>> ]
+"13582" [label = <(FIELD_IDENTIFIER,get,get)<SUB>4834</SUB>> ]
+"13593" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4841</SUB>> ]
+"13598" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4842</SUB>> ]
+"13601" [label = <(Dump,mVrFlinger-&gt;Dump())<SUB>4842</SUB>> ]
+"13606" [label = <(&lt;operator&gt;.fieldAccess,result.append)<SUB>4843</SUB>> ]
+"13617" [label = <(FIELD_IDENTIFIER,miniDump,miniDump)<SUB>4846</SUB>> ]
+"13137" [label = <(&lt;operator&gt;.fieldAccess,args.empty)<SUB>4675</SUB>> ]
+"13227" [label = <(&lt;operator&gt;.fieldAccess,SyncFeatures::getInstance)<SUB>4704</SUB>> ]
+"13355" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4752</SUB>> ]
+"13392" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>4772</SUB>> ]
+"13404" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().undefinedRegion)<SUB>4775</SUB>> ]
+"13413" [label = <(FIELD_IDENTIFIER,dump,dump)<SUB>4775</SUB>> ]
+"13421" [label = <(getOrientation,display-&gt;getOrientation())<SUB>4778</SUB>> ]
+"13426" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPoweredOn)<SUB>4778</SUB>> ]
+"13444" [label = <(getHwComposer,getHwComposer())<SUB>4786</SUB>> ]
+"13445" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>4786</SUB>> ]
+"13453" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfig)<SUB>4787</SUB>> ]
+"13456" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4787</SUB>> ]
+"13464" [label = <(getDisplayVsyncPeriod,getHwComposer().getDisplayVsyncPeriod(*displayId))<SUB>4792</SUB>> ]
+"13471" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getDpiX)<SUB>4793</SUB>> ]
+"13475" [label = <(&lt;operator&gt;.indirectFieldAccess,activeConfig-&gt;getDpiY)<SUB>4793</SUB>> ]
+"13505" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>4808</SUB>> ]
+"13518" [label = <(&lt;operator&gt;.fieldAccess,to_string(*displayId).c_str)<SUB>4813</SUB>> ]
+"13526" [label = <(FIELD_IDENTIFIER,miniDumpHeader,miniDumpHeader)<SUB>4814</SUB>> ]
+"13536" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>4817</SUB>> ]
+"13541" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4818</SUB>> ]
+"13595" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4841</SUB>> ]
+"13600" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4842</SUB>> ]
+"13602" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;Dump)<SUB>4842</SUB>> ]
+"13608" [label = <(FIELD_IDENTIFIER,append,append)<SUB>4843</SUB>> ]
+"13139" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>4675</SUB>> ]
+"13229" [label = <(FIELD_IDENTIFIER,getInstance,getInstance)<SUB>4704</SUB>> ]
+"13405" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>4775</SUB>> ]
+"13412" [label = <(FIELD_IDENTIFIER,undefinedRegion,undefinedRegion)<SUB>4775</SUB>> ]
+"13422" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>4778</SUB>> ]
+"13428" [label = <(FIELD_IDENTIFIER,isPoweredOn,isPoweredOn)<SUB>4778</SUB>> ]
+"13454" [label = <(getHwComposer,getHwComposer())<SUB>4787</SUB>> ]
+"13455" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>4787</SUB>> ]
+"13465" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getDisplayVsyncPeriod)<SUB>4792</SUB>> ]
+"13468" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4792</SUB>> ]
+"13473" [label = <(FIELD_IDENTIFIER,getDpiX,getDpiX)<SUB>4793</SUB>> ]
+"13477" [label = <(FIELD_IDENTIFIER,getDpiY,getDpiY)<SUB>4793</SUB>> ]
+"13507" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>4808</SUB>> ]
+"13519" [label = <(to_string,to_string(*displayId))<SUB>4813</SUB>> ]
+"13522" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>4813</SUB>> ]
+"13604" [label = <(FIELD_IDENTIFIER,Dump,Dump)<SUB>4842</SUB>> ]
+"13406" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>4775</SUB>> ]
+"13424" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>4778</SUB>> ]
+"13466" [label = <(getHwComposer,getHwComposer())<SUB>4792</SUB>> ]
+"13467" [label = <(FIELD_IDENTIFIER,getDisplayVsyncPeriod,getDisplayVsyncPeriod)<SUB>4792</SUB>> ]
+"13520" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>4813</SUB>> ]
+"13407" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>4775</SUB>> ]
+"13411" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>4775</SUB>> ]
+"13408" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>4775</SUB>> ]
+"13410" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>4775</SUB>> ]
+"13127" [label = <(METHOD,dumpAllLocked)<SUB>4674</SUB>> ]
+"13623" [label = <(METHOD_RETURN,void)<SUB>4674</SUB>> ]
+  "13132" -> "13147" 
+  "13147" -> "13152" 
+  "13150" -> "13154" 
+  "13154" -> "13161" 
+  "13154" -> "13159" 
+  "13157" -> "13168" 
+  "13165" -> "13173" 
   "13170" -> "13178" 
   "13175" -> "13180" 
-  "13180" -> "13185" 
-  "13182" -> "13187" 
-  "13187" -> "13192" 
-  "13189" -> "13197" 
-  "13194" -> "13202" 
-  "13199" -> "13207" 
-  "13204" -> "13218" 
+  "13180" -> "13182" 
+  "13182" -> "13184" 
+  "13184" -> "13189" 
+  "13186" -> "13194" 
+  "13191" -> "13196" 
+  "13196" -> "13201" 
+  "13198" -> "13203" 
+  "13203" -> "13208" 
+  "13205" -> "13213" 
+  "13210" -> "13218" 
   "13215" -> "13223" 
-  "13220" -> "13228" 
-  "13225" -> "13233" 
-  "13230" -> "13235" 
-  "13235" -> "13240" 
-  "13237" -> "13242" 
-  "13242" -> "13247" 
-  "13244" -> "13250" 
-  "13249" -> "13258" 
-  "13257" -> "13266" 
-  "13265" -> "13273" 
-  "13273" -> "13278" 
-  "13275" -> "13281" 
-  "13280" -> "13289" 
-  "13288" -> "13300" 
-  "13297" -> "13304" 
-  "13312" -> "13318" 
-  "13317" -> "13328" 
-  "13325" -> "13339" 
-  "13325" -> "13344" 
-  "13341" -> "13349" 
-  "13346" -> "13354" 
-  "13351" -> "13359" 
-  "13356" -> "13364" 
-  "13361" -> "13368" 
-  "13366" -> "13376" 
-  "13371" -> "13384" 
-  "13413" -> "13428" 
-  "13413" -> "13424" 
-  "13462" -> "13472" 
-  "13469" -> "13477" 
-  "13474" -> "13491" 
-  "13474" -> "13530" 
-  "13527" -> "13535" 
-  "13532" -> "13540" 
-  "13537" -> "13545" 
-  "13543" -> "13549" 
-  "13548" -> "13558" 
-  "13556" -> "13566" 
-  "13562" -> "13570" 
-  "13594" -> "13605" 
-  "13602" -> "13607" 
-  "13118" -> "13116" 
-  "13136" -> "13134" 
-  "13143" -> "13141" 
-  "13150" -> "13149" 
-  "13155" -> "13154" 
-  "13160" -> "13159" 
+  "13220" -> "13234" 
+  "13231" -> "13239" 
+  "13236" -> "13244" 
+  "13241" -> "13249" 
+  "13246" -> "13251" 
+  "13251" -> "13256" 
+  "13253" -> "13258" 
+  "13258" -> "13263" 
+  "13260" -> "13266" 
+  "13265" -> "13274" 
+  "13273" -> "13282" 
+  "13281" -> "13289" 
+  "13289" -> "13294" 
+  "13291" -> "13297" 
+  "13296" -> "13305" 
+  "13304" -> "13316" 
+  "13313" -> "13320" 
+  "13328" -> "13334" 
+  "13333" -> "13344" 
+  "13341" -> "13355" 
+  "13341" -> "13360" 
+  "13357" -> "13365" 
+  "13362" -> "13370" 
+  "13367" -> "13375" 
+  "13372" -> "13380" 
+  "13377" -> "13384" 
+  "13382" -> "13392" 
+  "13387" -> "13400" 
+  "13429" -> "13444" 
+  "13429" -> "13440" 
+  "13478" -> "13488" 
+  "13485" -> "13493" 
+  "13490" -> "13507" 
+  "13490" -> "13546" 
+  "13543" -> "13551" 
+  "13548" -> "13556" 
+  "13553" -> "13561" 
+  "13559" -> "13565" 
+  "13564" -> "13574" 
+  "13572" -> "13582" 
+  "13578" -> "13586" 
+  "13610" -> "13621" 
+  "13618" -> "13623" 
+  "13134" -> "13132" 
+  "13152" -> "13150" 
+  "13159" -> "13157" 
+  "13166" -> "13165" 
   "13171" -> "13170" 
   "13176" -> "13175" 
-  "13183" -> "13182" 
-  "13190" -> "13189" 
-  "13195" -> "13194" 
-  "13200" -> "13199" 
-  "13205" -> "13213" 
-  "13208" -> "13204" 
+  "13187" -> "13186" 
+  "13192" -> "13191" 
+  "13199" -> "13198" 
+  "13206" -> "13205" 
+  "13211" -> "13210" 
   "13216" -> "13215" 
-  "13221" -> "13220" 
-  "13226" -> "13225" 
-  "13231" -> "13230" 
-  "13238" -> "13237" 
-  "13245" -> "13244" 
-  "13250" -> "13256" 
-  "13253" -> "13249" 
-  "13258" -> "13264" 
-  "13261" -> "13257" 
+  "13221" -> "13229" 
+  "13224" -> "13220" 
+  "13232" -> "13231" 
+  "13237" -> "13236" 
+  "13242" -> "13241" 
+  "13247" -> "13246" 
+  "13254" -> "13253" 
+  "13261" -> "13260" 
   "13266" -> "13272" 
   "13269" -> "13265" 
-  "13276" -> "13275" 
-  "13281" -> "13287" 
-  "13284" -> "13280" 
-  "13289" -> "13295" 
-  "13292" -> "13288" 
-  "13298" -> "13297" 
-  "13303" -> "13310" 
-  "13307" -> "13315" 
-  "13313" -> "13312" 
-  "13318" -> "13324" 
-  "13321" -> "13317" 
-  "13326" -> "13325" 
+  "13274" -> "13280" 
+  "13277" -> "13273" 
+  "13282" -> "13288" 
+  "13285" -> "13281" 
+  "13292" -> "13291" 
+  "13297" -> "13303" 
+  "13300" -> "13296" 
+  "13305" -> "13311" 
+  "13308" -> "13304" 
+  "13314" -> "13313" 
+  "13319" -> "13326" 
+  "13323" -> "13331" 
+  "13329" -> "13328" 
+  "13334" -> "13340" 
+  "13337" -> "13333" 
   "13342" -> "13341" 
-  "13347" -> "13346" 
-  "13352" -> "13351" 
-  "13357" -> "13356" 
-  "13362" -> "13361" 
-  "13367" -> "13366" 
-  "13372" -> "13371" 
-  "13414" -> "13420" 
-  "13417" -> "13421" 
-  "13421" -> "13413" 
-  "13424" -> "13438" 
-  "13424" -> "13463" 
-  "13463" -> "13466" 
-  "13466" -> "13462" 
-  "13470" -> "13469" 
-  "13475" -> "13474" 
-  "13528" -> "13527" 
-  "13533" -> "13532" 
-  "13538" -> "13537" 
-  "13545" -> "13543" 
-  "13549" -> "13552" 
-  "13552" -> "13548" 
-  "13557" -> "13556" 
-  "13563" -> "13562" 
-  "13568" -> "13567" 
-  "13595" -> "13601" 
-  "13598" -> "13594" 
-  "13603" -> "13602" 
-  "13119" -> "13118" 
-  "13119" -> "13125" 
-  "13124" -> "13118" 
-  "13145" -> "13143" 
-  "13152" -> "13150" 
-  "13157" -> "13155" 
-  "13162" -> "13160" 
+  "13358" -> "13357" 
+  "13363" -> "13362" 
+  "13368" -> "13367" 
+  "13373" -> "13372" 
+  "13378" -> "13377" 
+  "13383" -> "13382" 
+  "13388" -> "13387" 
+  "13430" -> "13436" 
+  "13433" -> "13437" 
+  "13437" -> "13429" 
+  "13440" -> "13454" 
+  "13440" -> "13479" 
+  "13479" -> "13482" 
+  "13482" -> "13478" 
+  "13486" -> "13485" 
+  "13491" -> "13490" 
+  "13544" -> "13543" 
+  "13549" -> "13548" 
+  "13554" -> "13553" 
+  "13561" -> "13559" 
+  "13565" -> "13568" 
+  "13568" -> "13564" 
+  "13573" -> "13572" 
+  "13579" -> "13578" 
+  "13584" -> "13583" 
+  "13611" -> "13617" 
+  "13614" -> "13610" 
+  "13619" -> "13618" 
+  "13135" -> "13134" 
+  "13135" -> "13141" 
+  "13140" -> "13134" 
+  "13161" -> "13159" 
+  "13168" -> "13166" 
   "13173" -> "13171" 
   "13178" -> "13176" 
-  "13185" -> "13183" 
-  "13192" -> "13190" 
-  "13197" -> "13195" 
-  "13202" -> "13200" 
-  "13207" -> "13205" 
-  "13209" -> "13208" 
+  "13189" -> "13187" 
+  "13194" -> "13192" 
+  "13201" -> "13199" 
+  "13208" -> "13206" 
+  "13213" -> "13211" 
   "13218" -> "13216" 
   "13223" -> "13221" 
-  "13228" -> "13226" 
-  "13233" -> "13231" 
-  "13240" -> "13238" 
-  "13247" -> "13245" 
-  "13254" -> "13253" 
-  "13262" -> "13261" 
+  "13225" -> "13224" 
+  "13234" -> "13232" 
+  "13239" -> "13237" 
+  "13244" -> "13242" 
+  "13249" -> "13247" 
+  "13256" -> "13254" 
+  "13263" -> "13261" 
   "13270" -> "13269" 
-  "13278" -> "13276" 
-  "13285" -> "13284" 
-  "13293" -> "13292" 
-  "13300" -> "13298" 
-  "13304" -> "13303" 
-  "13308" -> "13311" 
-  "13311" -> "13307" 
-  "13315" -> "13313" 
-  "13322" -> "13321" 
-  "13328" -> "13326" 
-  "13336" -> "13339" 
-  "13336" -> "13344" 
+  "13278" -> "13277" 
+  "13286" -> "13285" 
+  "13294" -> "13292" 
+  "13301" -> "13300" 
+  "13309" -> "13308" 
+  "13316" -> "13314" 
+  "13320" -> "13319" 
+  "13324" -> "13327" 
+  "13327" -> "13323" 
+  "13331" -> "13329" 
+  "13338" -> "13337" 
   "13344" -> "13342" 
-  "13349" -> "13347" 
-  "13354" -> "13352" 
-  "13359" -> "13357" 
-  "13364" -> "13362" 
-  "13368" -> "13369" 
-  "13369" -> "13367" 
-  "13373" -> "13377" 
-  "13377" -> "13372" 
-  "13382" -> "13394" 
-  "13382" -> "13414" 
-  "13386" -> "13401" 
-  "13400" -> "13414" 
-  "13418" -> "13417" 
-  "13426" -> "13424" 
-  "13434" -> "13443" 
-  "13442" -> "13463" 
-  "13472" -> "13470" 
-  "13477" -> "13475" 
-  "13486" -> "13493" 
-  "13497" -> "13510" 
-  "13507" -> "13515" 
-  "13513" -> "13520" 
-  "13517" -> "13525" 
-  "13522" -> "13491" 
-  "13522" -> "13530" 
-  "13530" -> "13528" 
-  "13535" -> "13533" 
-  "13540" -> "13538" 
-  "13558" -> "13559" 
-  "13559" -> "13557" 
-  "13564" -> "13563" 
-  "13570" -> "13568" 
-  "13576" -> "13584" 
-  "13581" -> "13592" 
-  "13589" -> "13597" 
-  "13597" -> "13595" 
-  "13599" -> "13598" 
-  "13605" -> "13603" 
-  "13120" -> "13119" 
-  "13125" -> "13128" 
-  "13128" -> "13124" 
-  "13210" -> "13214" 
-  "13214" -> "13209" 
-  "13256" -> "13254" 
-  "13264" -> "13262" 
+  "13352" -> "13355" 
+  "13352" -> "13360" 
+  "13360" -> "13358" 
+  "13365" -> "13363" 
+  "13370" -> "13368" 
+  "13375" -> "13373" 
+  "13380" -> "13378" 
+  "13384" -> "13385" 
+  "13385" -> "13383" 
+  "13389" -> "13393" 
+  "13393" -> "13388" 
+  "13398" -> "13410" 
+  "13398" -> "13430" 
+  "13402" -> "13417" 
+  "13416" -> "13430" 
+  "13434" -> "13433" 
+  "13442" -> "13440" 
+  "13450" -> "13459" 
+  "13458" -> "13479" 
+  "13488" -> "13486" 
+  "13493" -> "13491" 
+  "13502" -> "13509" 
+  "13513" -> "13526" 
+  "13523" -> "13531" 
+  "13529" -> "13536" 
+  "13533" -> "13541" 
+  "13538" -> "13507" 
+  "13538" -> "13546" 
+  "13546" -> "13544" 
+  "13551" -> "13549" 
+  "13556" -> "13554" 
+  "13574" -> "13575" 
+  "13575" -> "13573" 
+  "13580" -> "13579" 
+  "13586" -> "13584" 
+  "13592" -> "13600" 
+  "13597" -> "13608" 
+  "13605" -> "13613" 
+  "13613" -> "13611" 
+  "13615" -> "13614" 
+  "13621" -> "13619" 
+  "13136" -> "13135" 
+  "13141" -> "13144" 
+  "13144" -> "13140" 
+  "13226" -> "13230" 
+  "13230" -> "13225" 
   "13272" -> "13270" 
-  "13287" -> "13285" 
-  "13295" -> "13293" 
-  "13310" -> "13308" 
-  "13324" -> "13322" 
-  "13337" -> "13336" 
-  "13374" -> "13373" 
-  "13384" -> "13382" 
-  "13387" -> "13386" 
-  "13401" -> "13408" 
-  "13404" -> "13412" 
-  "13409" -> "13400" 
-  "13420" -> "13418" 
-  "13427" -> "13430" 
-  "13430" -> "13426" 
+  "13280" -> "13278" 
+  "13288" -> "13286" 
+  "13303" -> "13301" 
+  "13311" -> "13309" 
+  "13326" -> "13324" 
+  "13340" -> "13338" 
+  "13353" -> "13352" 
+  "13390" -> "13389" 
+  "13400" -> "13398" 
+  "13403" -> "13402" 
+  "13417" -> "13424" 
+  "13420" -> "13428" 
+  "13425" -> "13416" 
   "13436" -> "13434" 
-  "13443" -> "13450" 
-  "13446" -> "13457" 
-  "13454" -> "13461" 
-  "13458" -> "13442" 
-  "13488" -> "13486" 
-  "13493" -> "13498" 
-  "13498" -> "13504" 
-  "13501" -> "13497" 
-  "13508" -> "13507" 
-  "13515" -> "13513" 
-  "13518" -> "13521" 
-  "13521" -> "13517" 
-  "13523" -> "13522" 
-  "13566" -> "13564" 
-  "13577" -> "13576" 
-  "13582" -> "13588" 
-  "13585" -> "13581" 
-  "13590" -> "13589" 
-  "13601" -> "13599" 
-  "13121" -> "13120" 
-  "13211" -> "13210" 
-  "13339" -> "13337" 
-  "13376" -> "13374" 
-  "13388" -> "13397" 
-  "13397" -> "13387" 
-  "13405" -> "13404" 
-  "13410" -> "13409" 
-  "13428" -> "13429" 
-  "13429" -> "13427" 
-  "13437" -> "13440" 
-  "13440" -> "13436" 
-  "13448" -> "13446" 
-  "13455" -> "13454" 
-  "13459" -> "13458" 
-  "13489" -> "13488" 
-  "13502" -> "13501" 
-  "13510" -> "13508" 
-  "13520" -> "13518" 
-  "13525" -> "13523" 
-  "13579" -> "13577" 
-  "13584" -> "13582" 
-  "13586" -> "13585" 
-  "13592" -> "13590" 
-  "13123" -> "13121" 
-  "13213" -> "13211" 
-  "13389" -> "13396" 
-  "13396" -> "13388" 
+  "13443" -> "13446" 
+  "13446" -> "13442" 
+  "13452" -> "13450" 
+  "13459" -> "13466" 
+  "13462" -> "13473" 
+  "13470" -> "13477" 
+  "13474" -> "13458" 
+  "13504" -> "13502" 
+  "13509" -> "13514" 
+  "13514" -> "13520" 
+  "13517" -> "13513" 
+  "13524" -> "13523" 
+  "13531" -> "13529" 
+  "13534" -> "13537" 
+  "13537" -> "13533" 
+  "13539" -> "13538" 
+  "13582" -> "13580" 
+  "13593" -> "13592" 
+  "13598" -> "13604" 
+  "13601" -> "13597" 
+  "13606" -> "13605" 
+  "13617" -> "13615" 
+  "13137" -> "13136" 
+  "13227" -> "13226" 
+  "13355" -> "13353" 
+  "13392" -> "13390" 
+  "13404" -> "13413" 
+  "13413" -> "13403" 
+  "13421" -> "13420" 
+  "13426" -> "13425" 
+  "13444" -> "13445" 
+  "13445" -> "13443" 
+  "13453" -> "13456" 
+  "13456" -> "13452" 
+  "13464" -> "13462" 
+  "13471" -> "13470" 
+  "13475" -> "13474" 
+  "13505" -> "13504" 
+  "13518" -> "13517" 
+  "13526" -> "13524" 
+  "13536" -> "13534" 
+  "13541" -> "13539" 
+  "13595" -> "13593" 
+  "13600" -> "13598" 
+  "13602" -> "13601" 
+  "13608" -> "13606" 
+  "13139" -> "13137" 
+  "13229" -> "13227" 
+  "13405" -> "13412" 
+  "13412" -> "13404" 
+  "13422" -> "13421" 
+  "13428" -> "13426" 
+  "13454" -> "13455" 
+  "13455" -> "13453" 
+  "13465" -> "13468" 
+  "13468" -> "13464" 
+  "13473" -> "13471" 
+  "13477" -> "13475" 
+  "13507" -> "13505" 
+  "13519" -> "13522" 
+  "13522" -> "13518" 
+  "13604" -> "13602" 
   "13406" -> "13405" 
-  "13412" -> "13410" 
-  "13438" -> "13439" 
-  "13439" -> "13437" 
-  "13449" -> "13452" 
-  "13452" -> "13448" 
-  "13457" -> "13455" 
-  "13461" -> "13459" 
-  "13491" -> "13489" 
-  "13503" -> "13506" 
-  "13506" -> "13502" 
-  "13588" -> "13586" 
-  "13390" -> "13389" 
-  "13408" -> "13406" 
-  "13450" -> "13451" 
-  "13451" -> "13449" 
-  "13504" -> "13503" 
-  "13391" -> "13395" 
-  "13395" -> "13390" 
-  "13392" -> "13391" 
-  "13394" -> "13392" 
-  "13111" -> "13123" 
+  "13424" -> "13422" 
+  "13466" -> "13467" 
+  "13467" -> "13465" 
+  "13520" -> "13519" 
+  "13407" -> "13411" 
+  "13411" -> "13406" 
+  "13408" -> "13407" 
+  "13410" -> "13408" 
+  "13127" -> "13139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/234-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/234-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/234-cfg.dot	2023-06-07 19:33:00.467398976 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/234-cfg.dot	2023-06-07 19:33:06.707398399 +0330
@@ -1,111 +1,111 @@
 digraph "updateColorMatrixLocked" {  
-"13613" [label = <(&lt;operator&gt;.notEquals,mGlobalSaturationFactor != 1.0f)<SUB>4853</SUB>> ]
-"13696" [label = <(&lt;operator&gt;.notEquals,mCurrentState.colorMatrix != colorMatrix)<SUB>4868</SUB>> ]
-"13618" [label = <(&lt;operator&gt;.assignment,luminance{0.213f, 0.715f, 0.072f})<SUB>4855</SUB>> ]
-"13624" [label = <(&lt;operator&gt;.assignmentMultiplication,luminance *= 1.0f - mGlobalSaturationFactor)<SUB>4856</SUB>> ]
-"13630" [label = <(&lt;operator&gt;.assignment,saturationMatrix = mat4(\012            vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f},\012            vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f},\012            vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f},\012            vec4{0.0f, 0.0f, 0.0f, 1.0f}\012 ))<SUB>4857</SUB>> ]
-"13681" [label = <(&lt;operator&gt;.assignment,colorMatrix = mClientColorMatrix * saturationMatrix * mDaltonizer())<SUB>4863</SUB>> ]
-"13697" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrix)<SUB>4868</SUB>> ]
-"13702" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrix = colorMatrix)<SUB>4869</SUB>> ]
-"13707" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrixChanged = true)<SUB>4870</SUB>> ]
-"13620" [label = <(&lt;operator&gt;.arrayInitializer,{0.213f, 0.715f, 0.072f})<SUB>4855</SUB>> ]
-"13626" [label = <(&lt;operator&gt;.subtraction,1.0f - mGlobalSaturationFactor)<SUB>4856</SUB>> ]
-"13632" [label = <(mat4,mat4(\012            vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f},\012            vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f},\012            vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f},\012            vec4{0.0f, 0.0f, 0.0f, 1.0f}\012 ))<SUB>4857</SUB>> ]
-"13683" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * saturationMatrix * mDaltonizer())<SUB>4863</SUB>> ]
-"13690" [label = <(&lt;operator&gt;.assignment,colorMatrix = mClientColorMatrix * mDaltonizer())<SUB>4865</SUB>> ]
-"13699" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>4868</SUB>> ]
-"13703" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrix)<SUB>4869</SUB>> ]
-"13708" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrixChanged)<SUB>4870</SUB>> ]
-"13633" [label = <(vec4,vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f})<SUB>4858</SUB>> ]
-"13647" [label = <(vec4,vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f})<SUB>4859</SUB>> ]
-"13661" [label = <(vec4,vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f})<SUB>4860</SUB>> ]
-"13675" [label = <(vec4,vec4{0.0f, 0.0f, 0.0f, 1.0f})<SUB>4861</SUB>> ]
-"13684" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * saturationMatrix)<SUB>4863</SUB>> ]
-"13687" [label = <(mDaltonizer,mDaltonizer())<SUB>4863</SUB>> ]
-"13692" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * mDaltonizer())<SUB>4865</SUB>> ]
-"13705" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>4869</SUB>> ]
-"13710" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>4870</SUB>> ]
-"13634" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f})<SUB>4858</SUB>> ]
-"13648" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f})<SUB>4859</SUB>> ]
-"13662" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f})<SUB>4860</SUB>> ]
-"13676" [label = <(&lt;operator&gt;.arrayInitializer,{0.0f, 0.0f, 0.0f, 1.0f})<SUB>4861</SUB>> ]
-"13694" [label = <(mDaltonizer,mDaltonizer())<SUB>4865</SUB>> ]
-"13635" [label = <(&lt;operator&gt;.addition,luminance.r + mGlobalSaturationFactor)<SUB>4858</SUB>> ]
-"13640" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4858</SUB>> ]
-"13643" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4858</SUB>> ]
-"13649" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4859</SUB>> ]
-"13652" [label = <(&lt;operator&gt;.addition,luminance.g + mGlobalSaturationFactor)<SUB>4859</SUB>> ]
-"13657" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4859</SUB>> ]
-"13663" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4860</SUB>> ]
-"13666" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4860</SUB>> ]
-"13669" [label = <(&lt;operator&gt;.addition,luminance.b + mGlobalSaturationFactor)<SUB>4860</SUB>> ]
-"13636" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4858</SUB>> ]
-"13642" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4858</SUB>> ]
-"13645" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4858</SUB>> ]
-"13651" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4859</SUB>> ]
-"13653" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4859</SUB>> ]
-"13659" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4859</SUB>> ]
-"13665" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4860</SUB>> ]
-"13668" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4860</SUB>> ]
-"13670" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4860</SUB>> ]
-"13638" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4858</SUB>> ]
-"13655" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4859</SUB>> ]
-"13672" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4860</SUB>> ]
-"13609" [label = <(METHOD,updateColorMatrixLocked)<SUB>4851</SUB>> ]
-"13713" [label = <(METHOD_RETURN,void)<SUB>4851</SUB>> ]
-  "13613" -> "13620" 
-  "13613" -> "13694" 
-  "13696" -> "13713" 
-  "13696" -> "13705" 
-  "13618" -> "13626" 
-  "13624" -> "13638" 
-  "13630" -> "13684" 
-  "13681" -> "13699" 
-  "13697" -> "13696" 
-  "13702" -> "13710" 
-  "13707" -> "13713" 
-  "13620" -> "13618" 
-  "13626" -> "13624" 
-  "13632" -> "13630" 
-  "13683" -> "13681" 
-  "13690" -> "13699" 
+"13629" [label = <(&lt;operator&gt;.notEquals,mGlobalSaturationFactor != 1.0f)<SUB>4852</SUB>> ]
+"13712" [label = <(&lt;operator&gt;.notEquals,mCurrentState.colorMatrix != colorMatrix)<SUB>4867</SUB>> ]
+"13634" [label = <(&lt;operator&gt;.assignment,luminance{0.213f, 0.715f, 0.072f})<SUB>4854</SUB>> ]
+"13640" [label = <(&lt;operator&gt;.assignmentMultiplication,luminance *= 1.0f - mGlobalSaturationFactor)<SUB>4855</SUB>> ]
+"13646" [label = <(&lt;operator&gt;.assignment,saturationMatrix = mat4(\012            vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f},\012            vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f},\012            vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f},\012            vec4{0.0f, 0.0f, 0.0f, 1.0f}\012 ))<SUB>4856</SUB>> ]
+"13697" [label = <(&lt;operator&gt;.assignment,colorMatrix = mClientColorMatrix * saturationMatrix * mDaltonizer())<SUB>4862</SUB>> ]
+"13713" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrix)<SUB>4867</SUB>> ]
+"13718" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrix = colorMatrix)<SUB>4868</SUB>> ]
+"13723" [label = <(&lt;operator&gt;.assignment,mCurrentState.colorMatrixChanged = true)<SUB>4869</SUB>> ]
+"13636" [label = <(&lt;operator&gt;.arrayInitializer,{0.213f, 0.715f, 0.072f})<SUB>4854</SUB>> ]
+"13642" [label = <(&lt;operator&gt;.subtraction,1.0f - mGlobalSaturationFactor)<SUB>4855</SUB>> ]
+"13648" [label = <(mat4,mat4(\012            vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f},\012            vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f},\012            vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f},\012            vec4{0.0f, 0.0f, 0.0f, 1.0f}\012 ))<SUB>4856</SUB>> ]
+"13699" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * saturationMatrix * mDaltonizer())<SUB>4862</SUB>> ]
+"13706" [label = <(&lt;operator&gt;.assignment,colorMatrix = mClientColorMatrix * mDaltonizer())<SUB>4864</SUB>> ]
+"13715" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>4867</SUB>> ]
+"13719" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrix)<SUB>4868</SUB>> ]
+"13724" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.colorMatrixChanged)<SUB>4869</SUB>> ]
+"13649" [label = <(vec4,vec4{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f})<SUB>4857</SUB>> ]
+"13663" [label = <(vec4,vec4{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f})<SUB>4858</SUB>> ]
+"13677" [label = <(vec4,vec4{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f})<SUB>4859</SUB>> ]
+"13691" [label = <(vec4,vec4{0.0f, 0.0f, 0.0f, 1.0f})<SUB>4860</SUB>> ]
+"13700" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * saturationMatrix)<SUB>4862</SUB>> ]
+"13703" [label = <(mDaltonizer,mDaltonizer())<SUB>4862</SUB>> ]
+"13708" [label = <(&lt;operator&gt;.multiplication,mClientColorMatrix * mDaltonizer())<SUB>4864</SUB>> ]
+"13721" [label = <(FIELD_IDENTIFIER,colorMatrix,colorMatrix)<SUB>4868</SUB>> ]
+"13726" [label = <(FIELD_IDENTIFIER,colorMatrixChanged,colorMatrixChanged)<SUB>4869</SUB>> ]
+"13650" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.r + mGlobalSaturationFactor, luminance.r, luminance.r, 0.0f})<SUB>4857</SUB>> ]
+"13664" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.g, luminance.g + mGlobalSaturationFactor, luminance.g, 0.0f})<SUB>4858</SUB>> ]
+"13678" [label = <(&lt;operator&gt;.arrayInitializer,{luminance.b, luminance.b, luminance.b + mGlobalSaturationFactor, 0.0f})<SUB>4859</SUB>> ]
+"13692" [label = <(&lt;operator&gt;.arrayInitializer,{0.0f, 0.0f, 0.0f, 1.0f})<SUB>4860</SUB>> ]
+"13710" [label = <(mDaltonizer,mDaltonizer())<SUB>4864</SUB>> ]
+"13651" [label = <(&lt;operator&gt;.addition,luminance.r + mGlobalSaturationFactor)<SUB>4857</SUB>> ]
+"13656" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4857</SUB>> ]
+"13659" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4857</SUB>> ]
+"13665" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4858</SUB>> ]
+"13668" [label = <(&lt;operator&gt;.addition,luminance.g + mGlobalSaturationFactor)<SUB>4858</SUB>> ]
+"13673" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4858</SUB>> ]
+"13679" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4859</SUB>> ]
+"13682" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4859</SUB>> ]
+"13685" [label = <(&lt;operator&gt;.addition,luminance.b + mGlobalSaturationFactor)<SUB>4859</SUB>> ]
+"13652" [label = <(&lt;operator&gt;.fieldAccess,luminance.r)<SUB>4857</SUB>> ]
+"13658" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4857</SUB>> ]
+"13661" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4857</SUB>> ]
+"13667" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4858</SUB>> ]
+"13669" [label = <(&lt;operator&gt;.fieldAccess,luminance.g)<SUB>4858</SUB>> ]
+"13675" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4858</SUB>> ]
+"13681" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4859</SUB>> ]
+"13684" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4859</SUB>> ]
+"13686" [label = <(&lt;operator&gt;.fieldAccess,luminance.b)<SUB>4859</SUB>> ]
+"13654" [label = <(FIELD_IDENTIFIER,r,r)<SUB>4857</SUB>> ]
+"13671" [label = <(FIELD_IDENTIFIER,g,g)<SUB>4858</SUB>> ]
+"13688" [label = <(FIELD_IDENTIFIER,b,b)<SUB>4859</SUB>> ]
+"13625" [label = <(METHOD,updateColorMatrixLocked)<SUB>4850</SUB>> ]
+"13729" [label = <(METHOD_RETURN,void)<SUB>4850</SUB>> ]
+  "13629" -> "13636" 
+  "13629" -> "13710" 
+  "13712" -> "13729" 
+  "13712" -> "13721" 
+  "13634" -> "13642" 
+  "13640" -> "13654" 
+  "13646" -> "13700" 
+  "13697" -> "13715" 
+  "13713" -> "13712" 
+  "13718" -> "13726" 
+  "13723" -> "13729" 
+  "13636" -> "13634" 
+  "13642" -> "13640" 
+  "13648" -> "13646" 
   "13699" -> "13697" 
-  "13703" -> "13702" 
-  "13708" -> "13707" 
-  "13633" -> "13651" 
-  "13647" -> "13665" 
-  "13661" -> "13676" 
-  "13675" -> "13632" 
-  "13684" -> "13687" 
-  "13687" -> "13683" 
-  "13692" -> "13690" 
-  "13705" -> "13703" 
+  "13706" -> "13715" 
+  "13715" -> "13713" 
+  "13719" -> "13718" 
+  "13724" -> "13723" 
+  "13649" -> "13667" 
+  "13663" -> "13681" 
+  "13677" -> "13692" 
+  "13691" -> "13648" 
+  "13700" -> "13703" 
+  "13703" -> "13699" 
+  "13708" -> "13706" 
+  "13721" -> "13719" 
+  "13726" -> "13724" 
+  "13650" -> "13649" 
+  "13664" -> "13663" 
+  "13678" -> "13677" 
+  "13692" -> "13691" 
   "13710" -> "13708" 
-  "13634" -> "13633" 
-  "13648" -> "13647" 
-  "13662" -> "13661" 
-  "13676" -> "13675" 
-  "13694" -> "13692" 
-  "13635" -> "13642" 
-  "13640" -> "13645" 
-  "13643" -> "13634" 
-  "13649" -> "13655" 
-  "13652" -> "13659" 
-  "13657" -> "13648" 
-  "13663" -> "13668" 
-  "13666" -> "13672" 
-  "13669" -> "13662" 
-  "13636" -> "13635" 
-  "13642" -> "13640" 
-  "13645" -> "13643" 
-  "13651" -> "13649" 
-  "13653" -> "13652" 
-  "13659" -> "13657" 
-  "13665" -> "13663" 
-  "13668" -> "13666" 
-  "13670" -> "13669" 
-  "13638" -> "13636" 
-  "13655" -> "13653" 
-  "13672" -> "13670" 
-  "13609" -> "13613" 
+  "13651" -> "13658" 
+  "13656" -> "13661" 
+  "13659" -> "13650" 
+  "13665" -> "13671" 
+  "13668" -> "13675" 
+  "13673" -> "13664" 
+  "13679" -> "13684" 
+  "13682" -> "13688" 
+  "13685" -> "13678" 
+  "13652" -> "13651" 
+  "13658" -> "13656" 
+  "13661" -> "13659" 
+  "13667" -> "13665" 
+  "13669" -> "13668" 
+  "13675" -> "13673" 
+  "13681" -> "13679" 
+  "13684" -> "13682" 
+  "13686" -> "13685" 
+  "13654" -> "13652" 
+  "13671" -> "13669" 
+  "13688" -> "13686" 
+  "13625" -> "13629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/235-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/235-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/235-cfg.dot	2023-06-07 19:33:00.477398974 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/235-cfg.dot	2023-06-07 19:33:06.707398399 +0330
@@ -1,238 +1,238 @@
 digraph "CheckTransactCodeCredentials" {  
-"14030" [label = <(ALOGE,ALOGE(&quot;Permission Denial: SurfaceFlinger did not recognize request code: %u&quot;, code))<SUB>4995</SUB>> ]
-"14033" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4996</SUB>> ]
-"13719" [label = <(&lt;operator&gt;.cast,static_cast&lt;ISurfaceComposerTag&gt;(code))<SUB>4878</SUB>> ]
-"13984" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION || code == IBinder::SHELL_COMMAND_TRANSACTION ||\012        code == IBinder::SYSPROPS_TRANSACTION)<SUB>4984</SUB>> ]
-"14017" [label = <(&lt;operator&gt;.logicalAnd,code &gt;= 1000 &amp;&amp; code &lt;= 1036)<SUB>4991</SUB>> ]
-"13720" [label = <(UNKNOWN,ISurfaceComposerTag,ISurfaceComposerTag)<SUB>4878</SUB>> ]
-"13985" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION || code == IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4984</SUB>> ]
-"14008" [label = <(&lt;operator&gt;.equals,code == IBinder::SYSPROPS_TRANSACTION)<SUB>4986</SUB>> ]
-"14014" [label = <(RETURN,return OK;,return OK;)<SUB>4987</SUB>> ]
-"14018" [label = <(&lt;operator&gt;.greaterEqualsThan,code &gt;= 1000)<SUB>4991</SUB>> ]
-"14021" [label = <(&lt;operator&gt;.lessEqualsThan,code &lt;= 1036)<SUB>4991</SUB>> ]
-"14025" [label = <(ALOGV,ALOGV(&quot;Accessing SurfaceFlinger through backdoor code: %u&quot;, code))<SUB>4992</SUB>> ]
-"14028" [label = <(RETURN,return OK;,return OK;)<SUB>4993</SUB>> ]
-"13769" [label = <(&lt;operator&gt;.assignment,usePermissionCache = code != ACQUIRE_FRAME_RATE_FLEXIBILITY_TOKEN)<SUB>4905</SUB>> ]
-"13798" [label = <(RETURN,return OK;,return OK;)<SUB>4912</SUB>> ]
-"13804" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4915</SUB>> ]
-"13811" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4916</SUB>> ]
-"13818" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4917</SUB>> ]
-"13844" [label = <(RETURN,return OK;,return OK;)<SUB>4922</SUB>> ]
-"13891" [label = <(RETURN,return OK;,return OK;)<SUB>4954</SUB>> ]
-"13903" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4961</SUB>> ]
-"13910" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4962</SUB>> ]
-"13917" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4963</SUB>> ]
-"13943" [label = <(RETURN,return OK;,return OK;)<SUB>4969</SUB>> ]
-"13949" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4972</SUB>> ]
-"13956" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4973</SUB>> ]
-"13981" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4977</SUB>> ]
-"13986" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION)<SUB>4984</SUB>> ]
-"14003" [label = <(&lt;operator&gt;.equals,code == IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4985</SUB>> ]
-"14010" [label = <(&lt;operator&gt;.fieldAccess,IBinder::SYSPROPS_TRANSACTION)<SUB>4986</SUB>> ]
-"13771" [label = <(&lt;operator&gt;.notEquals,code != ACQUIRE_FRAME_RATE_FLEXIBILITY_TOKEN)<SUB>4905</SUB>> ]
-"13775" [label = <(&lt;operator&gt;.logicalNot,!callingThreadHasUnscopedSurfaceFlingerAccess(usePermissionCache))<SUB>4906</SUB>> ]
-"13806" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4915</SUB>> ]
-"13813" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4916</SUB>> ]
-"13820" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4917</SUB>> ]
-"13825" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_SHELL) &amp;&amp; !PermissionCache::checkPermission(sDump, pid, uid))<SUB>4918</SUB>> ]
-"13905" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4961</SUB>> ]
-"13912" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4962</SUB>> ]
-"13919" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4963</SUB>> ]
-"13924" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_GRAPHICS) &amp;&amp;\012 !PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4964</SUB>> ]
-"13951" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4972</SUB>> ]
-"13958" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4973</SUB>> ]
-"13963" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS || uid == AID_SYSTEM || uid == AID_SHELL)<SUB>4974</SUB>> ]
-"13987" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION)<SUB>4984</SUB>> ]
-"13998" [label = <(&lt;operator&gt;.equals,code == IBinder::PING_TRANSACTION)<SUB>4985</SUB>> ]
-"14005" [label = <(&lt;operator&gt;.fieldAccess,IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4985</SUB>> ]
-"14012" [label = <(FIELD_IDENTIFIER,SYSPROPS_TRANSACTION,SYSPROPS_TRANSACTION)<SUB>4986</SUB>> ]
-"13776" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess(usePermissionCache))<SUB>4906</SUB>> ]
-"13780" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4907</SUB>> ]
-"13786" [label = <(ALOGE,ALOGE(&quot;Permission Denial: can't access SurfaceFlinger pid=%d, uid=%d&quot;,\012                        ipc-&gt;getCallingPid(), ipc-&gt;getCallingUid()))<SUB>4908</SUB>> ]
-"13796" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4910</SUB>> ]
-"13807" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4915</SUB>> ]
-"13814" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4916</SUB>> ]
-"13821" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4917</SUB>> ]
-"13826" [label = <(&lt;operator&gt;.notEquals,uid != AID_SHELL)<SUB>4918</SUB>> ]
-"13829" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sDump, pid, uid))<SUB>4918</SUB>> ]
-"13838" [label = <(ALOGE,ALOGE(&quot;Layer debug info permission denied for pid=%d, uid=%d&quot;, pid, uid))<SUB>4919</SUB>> ]
-"13842" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4920</SUB>> ]
-"13906" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4961</SUB>> ]
-"13913" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4962</SUB>> ]
-"13920" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4963</SUB>> ]
-"13925" [label = <(&lt;operator&gt;.notEquals,uid != AID_GRAPHICS)<SUB>4964</SUB>> ]
-"13928" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4965</SUB>> ]
-"13937" [label = <(ALOGE,ALOGE(&quot;Permission Denial: can't read framebuffer pid=%d, uid=%d&quot;, pid, uid))<SUB>4966</SUB>> ]
-"13941" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4967</SUB>> ]
-"13952" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4972</SUB>> ]
-"13959" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4973</SUB>> ]
-"13964" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>4974</SUB>> ]
-"13975" [label = <(&lt;operator&gt;.equals,uid == AID_SHELL)<SUB>4974</SUB>> ]
-"13979" [label = <(RETURN,return OK;,return OK;)<SUB>4975</SUB>> ]
-"13988" [label = <(&lt;operator&gt;.equals,code == IBinder::INTERFACE_TRANSACTION)<SUB>4984</SUB>> ]
-"13993" [label = <(&lt;operator&gt;.equals,code == IBinder::DUMP_TRANSACTION)<SUB>4984</SUB>> ]
-"14000" [label = <(&lt;operator&gt;.fieldAccess,IBinder::PING_TRANSACTION)<SUB>4985</SUB>> ]
-"14007" [label = <(FIELD_IDENTIFIER,SHELL_COMMAND_TRANSACTION,SHELL_COMMAND_TRANSACTION)<SUB>4985</SUB>> ]
-"13782" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4907</SUB>> ]
-"13788" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4909</SUB>> ]
-"13792" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4909</SUB>> ]
-"13809" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4915</SUB>> ]
-"13816" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4916</SUB>> ]
-"13823" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4917</SUB>> ]
-"13830" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sDump, pid, uid))<SUB>4918</SUB>> ]
-"13908" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4961</SUB>> ]
-"13915" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4962</SUB>> ]
-"13922" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4963</SUB>> ]
-"13929" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4965</SUB>> ]
-"13954" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4972</SUB>> ]
-"13961" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4973</SUB>> ]
-"13965" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS)<SUB>4974</SUB>> ]
-"13972" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>4974</SUB>> ]
-"13990" [label = <(&lt;operator&gt;.fieldAccess,IBinder::INTERFACE_TRANSACTION)<SUB>4984</SUB>> ]
-"13995" [label = <(&lt;operator&gt;.fieldAccess,IBinder::DUMP_TRANSACTION)<SUB>4984</SUB>> ]
-"14002" [label = <(FIELD_IDENTIFIER,PING_TRANSACTION,PING_TRANSACTION)<SUB>4985</SUB>> ]
-"13783" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4907</SUB>> ]
-"13789" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4909</SUB>> ]
-"13793" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4909</SUB>> ]
-"13831" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4918</SUB>> ]
-"13930" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4965</SUB>> ]
-"13966" [label = <(&lt;operator&gt;.equals,uid == AID_ROOT)<SUB>4974</SUB>> ]
-"13969" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>4974</SUB>> ]
-"13992" [label = <(FIELD_IDENTIFIER,INTERFACE_TRANSACTION,INTERFACE_TRANSACTION)<SUB>4984</SUB>> ]
-"13997" [label = <(FIELD_IDENTIFIER,DUMP_TRANSACTION,DUMP_TRANSACTION)<SUB>4984</SUB>> ]
-"13785" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4907</SUB>> ]
-"13791" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4909</SUB>> ]
-"13795" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4909</SUB>> ]
-"13833" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4918</SUB>> ]
-"13932" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4965</SUB>> ]
-"13715" [label = <(METHOD,CheckTransactCodeCredentials)<SUB>4875</SUB>> ]
-"14035" [label = <(METHOD_RETURN,status_t)<SUB>4875</SUB>> ]
-  "14030" -> "14033" 
-  "14033" -> "14035" 
-  "13719" -> "13771" 
-  "13719" -> "13809" 
-  "13719" -> "13891" 
-  "13719" -> "13908" 
-  "13719" -> "13954" 
-  "13719" -> "13992" 
-  "13984" -> "14014" 
-  "13984" -> "14018" 
-  "14017" -> "14025" 
-  "14017" -> "14030" 
-  "13720" -> "13719" 
-  "13985" -> "13984" 
-  "13985" -> "14012" 
-  "14008" -> "13984" 
-  "14014" -> "14035" 
-  "14018" -> "14017" 
-  "14018" -> "14021" 
-  "14021" -> "14017" 
-  "14025" -> "14028" 
-  "14028" -> "14035" 
-  "13769" -> "13776" 
-  "13798" -> "14035" 
-  "13804" -> "13816" 
-  "13811" -> "13823" 
-  "13818" -> "13826" 
-  "13844" -> "14035" 
-  "13891" -> "14035" 
-  "13903" -> "13915" 
-  "13910" -> "13922" 
-  "13917" -> "13925" 
-  "13943" -> "14035" 
-  "13949" -> "13961" 
-  "13956" -> "13966" 
-  "13981" -> "14035" 
-  "13986" -> "13985" 
-  "13986" -> "14007" 
-  "14003" -> "13985" 
-  "14010" -> "14008" 
-  "13771" -> "13769" 
-  "13775" -> "13785" 
-  "13775" -> "13798" 
-  "13806" -> "13804" 
-  "13813" -> "13811" 
-  "13820" -> "13818" 
-  "13825" -> "13838" 
-  "13825" -> "13844" 
-  "13905" -> "13903" 
-  "13912" -> "13910" 
-  "13919" -> "13917" 
-  "13924" -> "13937" 
-  "13924" -> "13943" 
-  "13951" -> "13949" 
-  "13958" -> "13956" 
-  "13963" -> "13979" 
-  "13963" -> "13981" 
-  "13987" -> "13986" 
-  "13987" -> "14002" 
-  "13998" -> "13986" 
-  "14005" -> "14003" 
-  "14012" -> "14010" 
-  "13776" -> "13775" 
-  "13780" -> "13791" 
-  "13786" -> "13796" 
-  "13796" -> "14035" 
-  "13807" -> "13806" 
-  "13814" -> "13813" 
-  "13821" -> "13820" 
-  "13826" -> "13825" 
-  "13826" -> "13833" 
-  "13829" -> "13825" 
-  "13838" -> "13842" 
-  "13842" -> "14035" 
-  "13906" -> "13905" 
-  "13913" -> "13912" 
-  "13920" -> "13919" 
-  "13925" -> "13924" 
-  "13925" -> "13932" 
-  "13928" -> "13924" 
-  "13937" -> "13941" 
-  "13941" -> "14035" 
-  "13952" -> "13951" 
-  "13959" -> "13958" 
-  "13964" -> "13963" 
-  "13964" -> "13975" 
-  "13975" -> "13963" 
-  "13979" -> "14035" 
-  "13988" -> "13987" 
-  "13988" -> "13997" 
-  "13993" -> "13987" 
-  "14000" -> "13998" 
-  "14007" -> "14005" 
-  "13782" -> "13780" 
-  "13788" -> "13795" 
-  "13792" -> "13786" 
-  "13809" -> "13807" 
-  "13816" -> "13814" 
-  "13823" -> "13821" 
+"14046" [label = <(ALOGE,ALOGE(&quot;Permission Denial: SurfaceFlinger did not recognize request code: %u&quot;, code))<SUB>4994</SUB>> ]
+"14049" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4995</SUB>> ]
+"13735" [label = <(&lt;operator&gt;.cast,static_cast&lt;ISurfaceComposerTag&gt;(code))<SUB>4877</SUB>> ]
+"14000" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION || code == IBinder::SHELL_COMMAND_TRANSACTION ||\012        code == IBinder::SYSPROPS_TRANSACTION)<SUB>4983</SUB>> ]
+"14033" [label = <(&lt;operator&gt;.logicalAnd,code &gt;= 1000 &amp;&amp; code &lt;= 1036)<SUB>4990</SUB>> ]
+"13736" [label = <(UNKNOWN,ISurfaceComposerTag,ISurfaceComposerTag)<SUB>4877</SUB>> ]
+"14001" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION || code == IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4983</SUB>> ]
+"14024" [label = <(&lt;operator&gt;.equals,code == IBinder::SYSPROPS_TRANSACTION)<SUB>4985</SUB>> ]
+"14030" [label = <(RETURN,return OK;,return OK;)<SUB>4986</SUB>> ]
+"14034" [label = <(&lt;operator&gt;.greaterEqualsThan,code &gt;= 1000)<SUB>4990</SUB>> ]
+"14037" [label = <(&lt;operator&gt;.lessEqualsThan,code &lt;= 1036)<SUB>4990</SUB>> ]
+"14041" [label = <(ALOGV,ALOGV(&quot;Accessing SurfaceFlinger through backdoor code: %u&quot;, code))<SUB>4991</SUB>> ]
+"14044" [label = <(RETURN,return OK;,return OK;)<SUB>4992</SUB>> ]
+"13785" [label = <(&lt;operator&gt;.assignment,usePermissionCache = code != ACQUIRE_FRAME_RATE_FLEXIBILITY_TOKEN)<SUB>4904</SUB>> ]
+"13814" [label = <(RETURN,return OK;,return OK;)<SUB>4911</SUB>> ]
+"13820" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4914</SUB>> ]
+"13827" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4915</SUB>> ]
+"13834" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4916</SUB>> ]
+"13860" [label = <(RETURN,return OK;,return OK;)<SUB>4921</SUB>> ]
+"13907" [label = <(RETURN,return OK;,return OK;)<SUB>4953</SUB>> ]
+"13919" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4960</SUB>> ]
+"13926" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>4961</SUB>> ]
+"13933" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4962</SUB>> ]
+"13959" [label = <(RETURN,return OK;,return OK;)<SUB>4968</SUB>> ]
+"13965" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4971</SUB>> ]
+"13972" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>4972</SUB>> ]
+"13997" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4976</SUB>> ]
+"14002" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION ||\012        code == IBinder::PING_TRANSACTION)<SUB>4983</SUB>> ]
+"14019" [label = <(&lt;operator&gt;.equals,code == IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4984</SUB>> ]
+"14026" [label = <(&lt;operator&gt;.fieldAccess,IBinder::SYSPROPS_TRANSACTION)<SUB>4985</SUB>> ]
+"13787" [label = <(&lt;operator&gt;.notEquals,code != ACQUIRE_FRAME_RATE_FLEXIBILITY_TOKEN)<SUB>4904</SUB>> ]
+"13791" [label = <(&lt;operator&gt;.logicalNot,!callingThreadHasUnscopedSurfaceFlingerAccess(usePermissionCache))<SUB>4905</SUB>> ]
+"13822" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4914</SUB>> ]
+"13829" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4915</SUB>> ]
+"13836" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4916</SUB>> ]
+"13841" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_SHELL) &amp;&amp; !PermissionCache::checkPermission(sDump, pid, uid))<SUB>4917</SUB>> ]
+"13921" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4960</SUB>> ]
+"13928" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4961</SUB>> ]
+"13935" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4962</SUB>> ]
+"13940" [label = <(&lt;operator&gt;.logicalAnd,(uid != AID_GRAPHICS) &amp;&amp;\012 !PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4963</SUB>> ]
+"13967" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4971</SUB>> ]
+"13974" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4972</SUB>> ]
+"13979" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS || uid == AID_SYSTEM || uid == AID_SHELL)<SUB>4973</SUB>> ]
+"14003" [label = <(&lt;operator&gt;.logicalOr,code == IBinder::INTERFACE_TRANSACTION || code == IBinder::DUMP_TRANSACTION)<SUB>4983</SUB>> ]
+"14014" [label = <(&lt;operator&gt;.equals,code == IBinder::PING_TRANSACTION)<SUB>4984</SUB>> ]
+"14021" [label = <(&lt;operator&gt;.fieldAccess,IBinder::SHELL_COMMAND_TRANSACTION)<SUB>4984</SUB>> ]
+"14028" [label = <(FIELD_IDENTIFIER,SYSPROPS_TRANSACTION,SYSPROPS_TRANSACTION)<SUB>4985</SUB>> ]
+"13792" [label = <(callingThreadHasUnscopedSurfaceFlingerAccess,callingThreadHasUnscopedSurfaceFlingerAccess(usePermissionCache))<SUB>4905</SUB>> ]
+"13796" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>4906</SUB>> ]
+"13802" [label = <(ALOGE,ALOGE(&quot;Permission Denial: can't access SurfaceFlinger pid=%d, uid=%d&quot;,\012                        ipc-&gt;getCallingPid(), ipc-&gt;getCallingUid()))<SUB>4907</SUB>> ]
+"13812" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4909</SUB>> ]
+"13823" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4914</SUB>> ]
+"13830" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4915</SUB>> ]
+"13837" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4916</SUB>> ]
+"13842" [label = <(&lt;operator&gt;.notEquals,uid != AID_SHELL)<SUB>4917</SUB>> ]
+"13845" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sDump, pid, uid))<SUB>4917</SUB>> ]
+"13854" [label = <(ALOGE,ALOGE(&quot;Layer debug info permission denied for pid=%d, uid=%d&quot;, pid, uid))<SUB>4918</SUB>> ]
+"13858" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4919</SUB>> ]
+"13922" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4960</SUB>> ]
+"13929" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4961</SUB>> ]
+"13936" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4962</SUB>> ]
+"13941" [label = <(&lt;operator&gt;.notEquals,uid != AID_GRAPHICS)<SUB>4963</SUB>> ]
+"13944" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4964</SUB>> ]
+"13953" [label = <(ALOGE,ALOGE(&quot;Permission Denial: can't read framebuffer pid=%d, uid=%d&quot;, pid, uid))<SUB>4965</SUB>> ]
+"13957" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>4966</SUB>> ]
+"13968" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4971</SUB>> ]
+"13975" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4972</SUB>> ]
+"13980" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>4973</SUB>> ]
+"13991" [label = <(&lt;operator&gt;.equals,uid == AID_SHELL)<SUB>4973</SUB>> ]
+"13995" [label = <(RETURN,return OK;,return OK;)<SUB>4974</SUB>> ]
+"14004" [label = <(&lt;operator&gt;.equals,code == IBinder::INTERFACE_TRANSACTION)<SUB>4983</SUB>> ]
+"14009" [label = <(&lt;operator&gt;.equals,code == IBinder::DUMP_TRANSACTION)<SUB>4983</SUB>> ]
+"14016" [label = <(&lt;operator&gt;.fieldAccess,IBinder::PING_TRANSACTION)<SUB>4984</SUB>> ]
+"14023" [label = <(FIELD_IDENTIFIER,SHELL_COMMAND_TRANSACTION,SHELL_COMMAND_TRANSACTION)<SUB>4984</SUB>> ]
+"13798" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>4906</SUB>> ]
+"13804" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>4908</SUB>> ]
+"13808" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>4908</SUB>> ]
+"13825" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4914</SUB>> ]
+"13832" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4915</SUB>> ]
+"13839" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4916</SUB>> ]
+"13846" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sDump, pid, uid))<SUB>4917</SUB>> ]
+"13924" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4960</SUB>> ]
+"13931" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4961</SUB>> ]
+"13938" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4962</SUB>> ]
+"13945" [label = <(PermissionCache::checkPermission,PermissionCache::checkPermission(sReadFramebuffer, pid, uid))<SUB>4964</SUB>> ]
+"13970" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4971</SUB>> ]
+"13977" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4972</SUB>> ]
+"13981" [label = <(&lt;operator&gt;.logicalOr,uid == AID_ROOT || uid == AID_GRAPHICS)<SUB>4973</SUB>> ]
+"13988" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>4973</SUB>> ]
+"14006" [label = <(&lt;operator&gt;.fieldAccess,IBinder::INTERFACE_TRANSACTION)<SUB>4983</SUB>> ]
+"14011" [label = <(&lt;operator&gt;.fieldAccess,IBinder::DUMP_TRANSACTION)<SUB>4983</SUB>> ]
+"14018" [label = <(FIELD_IDENTIFIER,PING_TRANSACTION,PING_TRANSACTION)<SUB>4984</SUB>> ]
+"13799" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>4906</SUB>> ]
+"13805" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>4908</SUB>> ]
+"13809" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>4908</SUB>> ]
+"13847" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4917</SUB>> ]
+"13946" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkPermission)<SUB>4964</SUB>> ]
+"13982" [label = <(&lt;operator&gt;.equals,uid == AID_ROOT)<SUB>4973</SUB>> ]
+"13985" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>4973</SUB>> ]
+"14008" [label = <(FIELD_IDENTIFIER,INTERFACE_TRANSACTION,INTERFACE_TRANSACTION)<SUB>4983</SUB>> ]
+"14013" [label = <(FIELD_IDENTIFIER,DUMP_TRANSACTION,DUMP_TRANSACTION)<SUB>4983</SUB>> ]
+"13801" [label = <(FIELD_IDENTIFIER,self,self)<SUB>4906</SUB>> ]
+"13807" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>4908</SUB>> ]
+"13811" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>4908</SUB>> ]
+"13849" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4917</SUB>> ]
+"13948" [label = <(FIELD_IDENTIFIER,checkPermission,checkPermission)<SUB>4964</SUB>> ]
+"13731" [label = <(METHOD,CheckTransactCodeCredentials)<SUB>4874</SUB>> ]
+"14051" [label = <(METHOD_RETURN,status_t)<SUB>4874</SUB>> ]
+  "14046" -> "14049" 
+  "14049" -> "14051" 
+  "13735" -> "13787" 
+  "13735" -> "13825" 
+  "13735" -> "13907" 
+  "13735" -> "13924" 
+  "13735" -> "13970" 
+  "13735" -> "14008" 
+  "14000" -> "14030" 
+  "14000" -> "14034" 
+  "14033" -> "14041" 
+  "14033" -> "14046" 
+  "13736" -> "13735" 
+  "14001" -> "14000" 
+  "14001" -> "14028" 
+  "14024" -> "14000" 
+  "14030" -> "14051" 
+  "14034" -> "14033" 
+  "14034" -> "14037" 
+  "14037" -> "14033" 
+  "14041" -> "14044" 
+  "14044" -> "14051" 
+  "13785" -> "13792" 
+  "13814" -> "14051" 
+  "13820" -> "13832" 
+  "13827" -> "13839" 
+  "13834" -> "13842" 
+  "13860" -> "14051" 
+  "13907" -> "14051" 
+  "13919" -> "13931" 
+  "13926" -> "13938" 
+  "13933" -> "13941" 
+  "13959" -> "14051" 
+  "13965" -> "13977" 
+  "13972" -> "13982" 
+  "13997" -> "14051" 
+  "14002" -> "14001" 
+  "14002" -> "14023" 
+  "14019" -> "14001" 
+  "14026" -> "14024" 
+  "13787" -> "13785" 
+  "13791" -> "13801" 
+  "13791" -> "13814" 
+  "13822" -> "13820" 
+  "13829" -> "13827" 
+  "13836" -> "13834" 
+  "13841" -> "13854" 
+  "13841" -> "13860" 
+  "13921" -> "13919" 
+  "13928" -> "13926" 
+  "13935" -> "13933" 
+  "13940" -> "13953" 
+  "13940" -> "13959" 
+  "13967" -> "13965" 
+  "13974" -> "13972" 
+  "13979" -> "13995" 
+  "13979" -> "13997" 
+  "14003" -> "14002" 
+  "14003" -> "14018" 
+  "14014" -> "14002" 
+  "14021" -> "14019" 
+  "14028" -> "14026" 
+  "13792" -> "13791" 
+  "13796" -> "13807" 
+  "13802" -> "13812" 
+  "13812" -> "14051" 
+  "13823" -> "13822" 
   "13830" -> "13829" 
-  "13908" -> "13906" 
-  "13915" -> "13913" 
-  "13922" -> "13920" 
+  "13837" -> "13836" 
+  "13842" -> "13841" 
+  "13842" -> "13849" 
+  "13845" -> "13841" 
+  "13854" -> "13858" 
+  "13858" -> "14051" 
+  "13922" -> "13921" 
   "13929" -> "13928" 
-  "13954" -> "13952" 
-  "13961" -> "13959" 
-  "13965" -> "13964" 
-  "13965" -> "13972" 
-  "13972" -> "13964" 
-  "13990" -> "13988" 
-  "13995" -> "13993" 
-  "14002" -> "14000" 
-  "13783" -> "13782" 
-  "13789" -> "13788" 
-  "13793" -> "13792" 
-  "13831" -> "13830" 
-  "13930" -> "13929" 
-  "13966" -> "13965" 
-  "13966" -> "13969" 
-  "13969" -> "13965" 
-  "13992" -> "13990" 
-  "13997" -> "13995" 
-  "13785" -> "13783" 
-  "13791" -> "13789" 
-  "13795" -> "13793" 
-  "13833" -> "13831" 
-  "13932" -> "13930" 
-  "13715" -> "13720" 
+  "13936" -> "13935" 
+  "13941" -> "13940" 
+  "13941" -> "13948" 
+  "13944" -> "13940" 
+  "13953" -> "13957" 
+  "13957" -> "14051" 
+  "13968" -> "13967" 
+  "13975" -> "13974" 
+  "13980" -> "13979" 
+  "13980" -> "13991" 
+  "13991" -> "13979" 
+  "13995" -> "14051" 
+  "14004" -> "14003" 
+  "14004" -> "14013" 
+  "14009" -> "14003" 
+  "14016" -> "14014" 
+  "14023" -> "14021" 
+  "13798" -> "13796" 
+  "13804" -> "13811" 
+  "13808" -> "13802" 
+  "13825" -> "13823" 
+  "13832" -> "13830" 
+  "13839" -> "13837" 
+  "13846" -> "13845" 
+  "13924" -> "13922" 
+  "13931" -> "13929" 
+  "13938" -> "13936" 
+  "13945" -> "13944" 
+  "13970" -> "13968" 
+  "13977" -> "13975" 
+  "13981" -> "13980" 
+  "13981" -> "13988" 
+  "13988" -> "13980" 
+  "14006" -> "14004" 
+  "14011" -> "14009" 
+  "14018" -> "14016" 
+  "13799" -> "13798" 
+  "13805" -> "13804" 
+  "13809" -> "13808" 
+  "13847" -> "13846" 
+  "13946" -> "13945" 
+  "13982" -> "13981" 
+  "13982" -> "13985" 
+  "13985" -> "13981" 
+  "14008" -> "14006" 
+  "14013" -> "14011" 
+  "13801" -> "13799" 
+  "13807" -> "13805" 
+  "13811" -> "13809" 
+  "13849" -> "13847" 
+  "13948" -> "13946" 
+  "13731" -> "13736" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/236-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/236-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/236-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/236-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,947 +1,947 @@
 digraph "onTransact" {  
-"14044" [label = <(&lt;operator&gt;.assignment,credentialCheck = CheckTransactCodeCredentials(code))<SUB>5002</SUB>> ]
-"14056" [label = <(&lt;operator&gt;.assignment,err = BnSurfaceComposer::onTransact(code, data, reply, flags))<SUB>5007</SUB>> ]
-"15009" [label = <(RETURN,return err;,return err;)<SUB>5334</SUB>> ]
-"14046" [label = <(CheckTransactCodeCredentials,CheckTransactCodeCredentials(code))<SUB>5002</SUB>> ]
-"14049" [label = <(&lt;operator&gt;.notEquals,credentialCheck != OK)<SUB>5003</SUB>> ]
-"14058" [label = <(BnSurfaceComposer::onTransact,BnSurfaceComposer::onTransact(code, data, reply, flags))<SUB>5007</SUB>> ]
-"14067" [label = <(&lt;operator&gt;.logicalOr,err == UNKNOWN_TRANSACTION || err == PERMISSION_DENIED)<SUB>5008</SUB>> ]
-"14053" [label = <(RETURN,return credentialCheck;,return credentialCheck;)<SUB>5004</SUB>> ]
-"14059" [label = <(&lt;operator&gt;.fieldAccess,BnSurfaceComposer::onTransact)<SUB>5007</SUB>> ]
-"14068" [label = <(&lt;operator&gt;.equals,err == UNKNOWN_TRANSACTION)<SUB>5008</SUB>> ]
-"14071" [label = <(&lt;operator&gt;.equals,err == PERMISSION_DENIED)<SUB>5008</SUB>> ]
-"14075" [label = <(CHECK_INTERFACE,CHECK_INTERFACE(ISurfaceComposer, data, reply))<SUB>5009</SUB>> ]
-"14080" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>5010</SUB>> ]
-"14087" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>5011</SUB>> ]
-"14061" [label = <(FIELD_IDENTIFIER,onTransact,onTransact)<SUB>5007</SUB>> ]
-"14082" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5010</SUB>> ]
-"14089" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>5011</SUB>> ]
-"14094" [label = <(CC_UNLIKELY,CC_UNLIKELY(uid != AID_SYSTEM\012 &amp;&amp; !PermissionCache::checkCallingPermission(sHardwareTest)))<SUB>5012</SUB>> ]
-"14083" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5010</SUB>> ]
-"14090" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>5011</SUB>> ]
-"14095" [label = <(&lt;operator&gt;.logicalAnd,uid != AID_SYSTEM\012 &amp;&amp; !PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5012</SUB>> ]
-"14107" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>5014</SUB>> ]
-"14113" [label = <(ALOGE,ALOGE(&quot;Permission Denial: &quot;\012 &quot;can't access SurfaceFlinger pid=%d, uid=%d&quot;, pid, uid))<SUB>5015</SUB>> ]
-"14117" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5017</SUB>> ]
-"14127" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5023</SUB>> ]
-"14131" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5025</SUB>> ]
-"14137" [label = <(&lt;operator&gt;.assignment,mDebugRegion = n ? n : (mDebugRegion ? 0 : 1))<SUB>5026</SUB>> ]
-"14146" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5027</SUB>> ]
-"14147" [label = <(repaintEverything,repaintEverything())<SUB>5028</SUB>> ]
-"14148" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5029</SUB>> ]
-"14178" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5047</SUB>> ]
-"14184" [label = <(&lt;operator&gt;.assignment,mDebugDisableHWC = n != 0)<SUB>5048</SUB>> ]
-"14189" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5049</SUB>> ]
-"14190" [label = <(repaintEverything,repaintEverything())<SUB>5050</SUB>> ]
-"14191" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5051</SUB>> ]
-"14195" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5053</SUB>> ]
-"14201" [label = <(&lt;operator&gt;.assignment,mDebugDisableTransformHint = n != 0)<SUB>5054</SUB>> ]
-"14206" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5055</SUB>> ]
-"14207" [label = <(repaintEverything,repaintEverything())<SUB>5056</SUB>> ]
-"14208" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5057</SUB>> ]
-"14212" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5059</SUB>> ]
-"14217" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5060</SUB>> ]
-"14222" [label = <(writeInt32,reply-&gt;writeInt32(mDebugRegion))<SUB>5061</SUB>> ]
-"14227" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5062</SUB>> ]
-"14232" [label = <(writeInt32,reply-&gt;writeInt32(mDebugDisableHWC))<SUB>5063</SUB>> ]
-"14237" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5064</SUB>> ]
-"14085" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5010</SUB>> ]
-"14092" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5011</SUB>> ]
-"14096" [label = <(&lt;operator&gt;.notEquals,uid != AID_SYSTEM)<SUB>5012</SUB>> ]
-"14099" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5013</SUB>> ]
-"14109" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>5014</SUB>> ]
-"14133" [label = <(readInt32,data.readInt32())<SUB>5025</SUB>> ]
-"14139" [label = <(&lt;operator&gt;.conditional,n ? n : (mDebugRegion ? 0 : 1))<SUB>5026</SUB>> ]
-"14153" [label = <(repaintEverything,repaintEverything())<SUB>5031</SUB>> ]
-"14154" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5032</SUB>> ]
-"14160" [label = <(_l,_l(mStateLock))<SUB>5035</SUB>> ]
-"14162" [label = <(setTransactionFlags,setTransactionFlags(\012                        eTransactionNeeded|\012                        eDisplayTransactionNeeded|\012                        eTraversalNeeded))<SUB>5036</SUB>> ]
-"14168" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5040</SUB>> ]
-"14173" [label = <(signalRefresh,signalRefresh())<SUB>5043</SUB>> ]
-"14174" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5044</SUB>> ]
-"14180" [label = <(readInt32,data.readInt32())<SUB>5047</SUB>> ]
-"14186" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5048</SUB>> ]
-"14197" [label = <(readInt32,data.readInt32())<SUB>5053</SUB>> ]
-"14203" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5054</SUB>> ]
-"14213" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5059</SUB>> ]
-"14218" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5060</SUB>> ]
-"14223" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5061</SUB>> ]
-"14228" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5062</SUB>> ]
-"14233" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5063</SUB>> ]
-"14243" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDevice())<SUB>5066</SUB>> ]
-"14252" [label = <(writeInt32,reply-&gt;writeInt32(display-&gt;getPageFlipCount()))<SUB>5071</SUB>> ]
-"14260" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5072</SUB>> ]
-"14266" [label = <(_l,_l(mStateLock))<SUB>5075</SUB>> ]
-"14268" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5077</SUB>> ]
-"14339" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5098</SUB>> ]
-"14340" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5099</SUB>> ]
-"14346" [label = <(_l,_l(mStateLock))<SUB>5102</SUB>> ]
-"14348" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5104</SUB>> ]
-"14419" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5123</SUB>> ]
-"14420" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5124</SUB>> ]
-"14425" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5127</SUB>> ]
-"14430" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5130</SUB>> ]
-"14436" [label = <(&lt;operator&gt;.assignment,mForceFullDamage = n != 0)<SUB>5131</SUB>> ]
-"14441" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5132</SUB>> ]
-"14446" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5135</SUB>> ]
-"14452" [label = <(setPhaseOffset,mScheduler-&gt;setPhaseOffset(mAppConnectionHandle, static_cast&lt;nsecs_t&gt;(n)))<SUB>5136</SUB>> ]
-"14460" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5137</SUB>> ]
-"14465" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5140</SUB>> ]
-"14471" [label = <(setPhaseOffset,mScheduler-&gt;setPhaseOffset(mSfConnectionHandle, static_cast&lt;nsecs_t&gt;(n)))<SUB>5141</SUB>> ]
-"14479" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5142</SUB>> ]
-"14484" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5145</SUB>> ]
-"14513" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5154</SUB>> ]
-"14518" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5157</SUB>> ]
-"14524" [label = <(&lt;operator&gt;.assignment,mUseHwcVirtualDisplays = !n)<SUB>5158</SUB>> ]
-"14528" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5159</SUB>> ]
-"14534" [label = <(_l,_l(mStateLock))<SUB>5162</SUB>> ]
-"14536" [label = <(&lt;operator&gt;.assignment,mGlobalSaturationFactor = std::max(0.0f, std::min(data.readFloat(), 2.0f)))<SUB>5163</SUB>> ]
-"14552" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5165</SUB>> ]
-"14553" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5166</SUB>> ]
-"14559" [label = <(&lt;operator&gt;.assignment,mDisplayColorSetting = static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5171</SUB>> ]
-"14582" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5175</SUB>> ]
-"14583" [label = <(repaintEverything,repaintEverything())<SUB>5176</SUB>> ]
-"14584" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5177</SUB>> ]
-"14589" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5181</SUB>> ]
-"14594" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5184</SUB>> ]
-"14644" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5198</SUB>> ]
-"14649" [label = <(writeBool,reply-&gt;writeBool(mTracing.isEnabled()))<SUB>5201</SUB>> ]
-"14657" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5202</SUB>> ]
-"14663" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDevice())<SUB>5206</SUB>> ]
-"14673" [label = <(&lt;operator&gt;.assignment,setting = static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5211</SUB>> ]
-"14733" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5227</SUB>> ]
-"14739" [label = <(_l,_l(mStateLock))<SUB>5231</SUB>> ]
-"14741" [label = <(writeBool,reply-&gt;writeBool(getHwComposer().isUsingVrComposer()))<SUB>5232</SUB>> ]
-"14749" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5233</SUB>> ]
-"14754" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5237</SUB>> ]
-"14779" [label = <(ALOGD,ALOGD(&quot;Updating trace buffer to %d KB&quot;, n))<SUB>5244</SUB>> ]
-"14782" [label = <(setBufferSize,mTracing.setBufferSize(n * 1024))<SUB>5245</SUB>> ]
-"14789" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5246</SUB>> ]
-"14794" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5247</SUB>> ]
-"14799" [label = <(writeBool,reply-&gt;writeBool(useColorManagement))<SUB>5251</SUB>> ]
-"14804" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5252</SUB>> ]
-"14810" [label = <(_l,_l(mStateLock))<SUB>5260</SUB>> ]
-"14812" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5261</SUB>> ]
-"14879" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5284</SUB>> ]
-"14884" [label = <(&lt;operator&gt;.assignment,n = data.readUint32())<SUB>5288</SUB>> ]
-"14890" [label = <(ALOGD,ALOGD(&quot;Updating trace flags to 0x%x&quot;, n))<SUB>5289</SUB>> ]
-"14893" [label = <(setTraceFlags,mTracing.setTraceFlags(n))<SUB>5290</SUB>> ]
-"14898" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5291</SUB>> ]
-"14903" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5292</SUB>> ]
-"14937" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5305</SUB>> ]
-"14942" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5308</SUB>> ]
-"14948" [label = <(&lt;operator&gt;.assignment,mDebugDisplayConfigSetByBackdoor = false)<SUB>5309</SUB>> ]
-"14976" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5318</SUB>> ]
-"15007" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5330</SUB>> ]
-"14100" [label = <(PermissionCache::checkCallingPermission,PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5013</SUB>> ]
-"14110" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>5014</SUB>> ]
-"14134" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5025</SUB>> ]
-"14142" [label = <(&lt;operator&gt;.conditional,mDebugRegion ? 0 : 1)<SUB>5026</SUB>> ]
-"14163" [label = <(&lt;operator&gt;.or,eTransactionNeeded|\012                        eDisplayTransactionNeeded|\012                        eTraversalNeeded)<SUB>5037</SUB>> ]
-"14181" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5047</SUB>> ]
-"14198" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5053</SUB>> ]
-"14215" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5059</SUB>> ]
-"14220" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5060</SUB>> ]
-"14225" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5061</SUB>> ]
-"14230" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5062</SUB>> ]
-"14235" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5063</SUB>> ]
-"14245" [label = <(getDefaultDisplayDevice,getDefaultDisplayDevice())<SUB>5066</SUB>> ]
-"14247" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5067</SUB>> ]
-"14253" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5071</SUB>> ]
-"14256" [label = <(getPageFlipCount,display-&gt;getPageFlipCount())<SUB>5071</SUB>> ]
-"14270" [label = <(readInt32,data.readInt32())<SUB>5077</SUB>> ]
-"14275" [label = <(&lt;operator&gt;.modulo,n % 10)<SUB>5078</SUB>> ]
-"14319" [label = <(&lt;operator&gt;.greaterEqualsThan,n &gt;= 10)<SUB>5092</SUB>> ]
-"14350" [label = <(readInt32,data.readInt32())<SUB>5104</SUB>> ]
-"14402" [label = <(any,any(greaterThan(abs(lastRow - float4{0, 0, 0, 1}), float4{1e-4f})))<SUB>5119</SUB>> ]
-"14432" [label = <(readInt32,data.readInt32())<SUB>5130</SUB>> ]
-"14438" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5131</SUB>> ]
-"14448" [label = <(readInt32,data.readInt32())<SUB>5135</SUB>> ]
-"14453" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setPhaseOffset)<SUB>5136</SUB>> ]
-"14457" [label = <(&lt;operator&gt;.cast,static_cast&lt;nsecs_t&gt;(n))<SUB>5136</SUB>> ]
-"14467" [label = <(readInt32,data.readInt32())<SUB>5140</SUB>> ]
-"14472" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setPhaseOffset)<SUB>5141</SUB>> ]
-"14476" [label = <(&lt;operator&gt;.cast,static_cast&lt;nsecs_t&gt;(n))<SUB>5141</SUB>> ]
-"14486" [label = <(readInt32,data.readInt32())<SUB>5145</SUB>> ]
-"14520" [label = <(readInt32,data.readInt32())<SUB>5157</SUB>> ]
-"14526" [label = <(&lt;operator&gt;.logicalNot,!n)<SUB>5158</SUB>> ]
-"14538" [label = <(std::max,std::max(0.0f, std::min(data.readFloat(), 2.0f)))<SUB>5163</SUB>> ]
-"14561" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5171</SUB>> ]
-"14568" [label = <(&lt;operator&gt;.equals,data.readInt32(&amp;colorMode) == NO_ERROR)<SUB>5172</SUB>> ]
-"14596" [label = <(readInt32,data.readInt32())<SUB>5184</SUB>> ]
-"14650" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5201</SUB>> ]
-"14653" [label = <(isEnabled,mTracing.isEnabled())<SUB>5201</SUB>> ]
-"14665" [label = <(getDefaultDisplayDevice,getDefaultDisplayDevice())<SUB>5206</SUB>> ]
-"14667" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5207</SUB>> ]
-"14675" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5211</SUB>> ]
-"14742" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5232</SUB>> ]
-"14745" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>5232</SUB>> ]
-"14756" [label = <(readInt32,data.readInt32())<SUB>5237</SUB>> ]
-"14761" [label = <(&lt;operator&gt;.logicalOr,n &lt;= 0 || n &gt; MAX_TRACING_MEMORY)<SUB>5238</SUB>> ]
-"14783" [label = <(&lt;operator&gt;.fieldAccess,mTracing.setBufferSize)<SUB>5245</SUB>> ]
-"14786" [label = <(&lt;operator&gt;.multiplication,n * 1024)<SUB>5245</SUB>> ]
-"14790" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5246</SUB>> ]
-"14800" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5251</SUB>> ]
-"14814" [label = <(readInt32,data.readInt32())<SUB>5261</SUB>> ]
-"14886" [label = <(readUint32,data.readUint32())<SUB>5288</SUB>> ]
-"14894" [label = <(&lt;operator&gt;.fieldAccess,mTracing.setTraceFlags)<SUB>5290</SUB>> ]
-"14899" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5291</SUB>> ]
-"14909" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5295</SUB>> ]
-"14944" [label = <(readInt32,data.readInt32())<SUB>5308</SUB>> ]
-"14952" [label = <(&lt;operator&gt;.greaterEqualsThan,n &gt;= 0)<SUB>5310</SUB>> ]
-"14982" [label = <(&lt;operator&gt;.greaterThan,data.readInt32() &gt; 0)<SUB>5321</SUB>> ]
-"14101" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkCallingPermission)<SUB>5013</SUB>> ]
-"14112" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>5014</SUB>> ]
-"14136" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5025</SUB>> ]
-"14164" [label = <(&lt;operator&gt;.or,eTransactionNeeded|\012                        eDisplayTransactionNeeded)<SUB>5037</SUB>> ]
-"14183" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5047</SUB>> ]
-"14200" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5053</SUB>> ]
-"14250" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5068</SUB>> ]
-"14255" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5071</SUB>> ]
-"14257" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPageFlipCount)<SUB>5071</SUB>> ]
-"14271" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5077</SUB>> ]
-"14281" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Protanomaly))<SUB>5080</SUB>> ]
-"14291" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Deuteranomaly))<SUB>5083</SUB>> ]
-"14301" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Tritanomaly))<SUB>5086</SUB>> ]
-"14310" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::None))<SUB>5089</SUB>> ]
-"14323" [label = <(setMode,mDaltonizer.setMode(ColorBlindnessMode::Correction))<SUB>5093</SUB>> ]
-"14351" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5104</SUB>> ]
-"14403" [label = <(greaterThan,greaterThan(abs(lastRow - float4{0, 0, 0, 1}), float4{1e-4f}))<SUB>5119</SUB>> ]
-"14417" [label = <(ALOGE,ALOGE(&quot;The color transform's last row must be (0, 0, 0, 1)&quot;))<SUB>5120</SUB>> ]
-"14433" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5130</SUB>> ]
-"14449" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5135</SUB>> ]
-"14455" [label = <(FIELD_IDENTIFIER,setPhaseOffset,setPhaseOffset)<SUB>5136</SUB>> ]
-"14458" [label = <(UNKNOWN,nsecs_t,nsecs_t)<SUB>5136</SUB>> ]
-"14468" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5140</SUB>> ]
-"14474" [label = <(FIELD_IDENTIFIER,setPhaseOffset,setPhaseOffset)<SUB>5141</SUB>> ]
-"14477" [label = <(UNKNOWN,nsecs_t,nsecs_t)<SUB>5141</SUB>> ]
-"14487" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5145</SUB>> ]
-"14493" [label = <(ALOGV,ALOGV(&quot;Interceptor enabled&quot;))<SUB>5147</SUB>> ]
-"14495" [label = <(enable,mInterceptor-&gt;enable(mDrawingState.layersSortedByZ, mDrawingState.displays))<SUB>5148</SUB>> ]
-"14521" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5157</SUB>> ]
-"14539" [label = <(&lt;operator&gt;.fieldAccess,std::max)<SUB>5163</SUB>> ]
-"14543" [label = <(std::min,std::min(data.readFloat(), 2.0f))<SUB>5163</SUB>> ]
-"14562" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>5171</SUB>> ]
-"14563" [label = <(readInt32,data.readInt32())<SUB>5171</SUB>> ]
-"14569" [label = <(readInt32,data.readInt32(&amp;colorMode))<SUB>5172</SUB>> ]
-"14577" [label = <(&lt;operator&gt;.assignment,mForceColorMode = static_cast&lt;ColorMode&gt;(colorMode))<SUB>5173</SUB>> ]
-"14597" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5184</SUB>> ]
-"14603" [label = <(ALOGD,ALOGD(&quot;LayerTracing enabled&quot;))<SUB>5186</SUB>> ]
-"14605" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = mTracing.enable())<SUB>5187</SUB>> ]
-"14611" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5188</SUB>> ]
-"14652" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5201</SUB>> ]
-"14654" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>5201</SUB>> ]
-"14670" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5208</SUB>> ]
-"14676" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>5211</SUB>> ]
-"14677" [label = <(readInt32,data.readInt32())<SUB>5211</SUB>> ]
-"14685" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kManaged)<SUB>5213</SUB>> ]
-"14688" [label = <(writeBool,reply-&gt;writeBool(useColorManagement))<SUB>5214</SUB>> ]
-"14695" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kUnmanaged)<SUB>5216</SUB>> ]
-"14698" [label = <(writeBool,reply-&gt;writeBool(true))<SUB>5217</SUB>> ]
-"14705" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kEnhanced)<SUB>5219</SUB>> ]
-"14708" [label = <(writeBool,reply-&gt;writeBool(display-&gt;hasRenderIntent(RenderIntent::ENHANCE)))<SUB>5220</SUB>> ]
-"14721" [label = <(writeBool,reply-&gt;writeBool(\012                                display-&gt;hasRenderIntent(static_cast&lt;RenderIntent&gt;(setting))))<SUB>5223</SUB>> ]
-"14744" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5232</SUB>> ]
-"14746" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>5232</SUB>> ]
-"14757" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5237</SUB>> ]
-"14762" [label = <(&lt;operator&gt;.lessEqualsThan,n &lt;= 0)<SUB>5238</SUB>> ]
-"14765" [label = <(&lt;operator&gt;.greaterThan,n &gt; MAX_TRACING_MEMORY)<SUB>5238</SUB>> ]
-"14769" [label = <(ALOGW,ALOGW(&quot;Invalid buffer size: %d KB&quot;, n))<SUB>5239</SUB>> ]
-"14772" [label = <(writeInt32,reply-&gt;writeInt32(BAD_VALUE))<SUB>5240</SUB>> ]
-"14777" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5241</SUB>> ]
-"14785" [label = <(FIELD_IDENTIFIER,setBufferSize,setBufferSize)<SUB>5245</SUB>> ]
-"14792" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5246</SUB>> ]
-"14802" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5251</SUB>> ]
-"14815" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5261</SUB>> ]
-"14821" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5263</SUB>> ]
-"14846" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5271</SUB>> ]
-"14887" [label = <(&lt;operator&gt;.fieldAccess,data.readUint32)<SUB>5288</SUB>> ]
-"14896" [label = <(FIELD_IDENTIFIER,setTraceFlags,setTraceFlags)<SUB>5290</SUB>> ]
-"14901" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5291</SUB>> ]
-"14911" [label = <(readInt32,data.readInt32())<SUB>5295</SUB>> ]
-"14920" [label = <(enableRefreshRateOverlay,enableRefreshRateOverlay(static_cast&lt;bool&gt;(n)))<SUB>5298</SUB>> ]
-"14945" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5308</SUB>> ]
-"14957" [label = <(&lt;operator&gt;.assignment,displayToken = getInternalDisplayToken())<SUB>5311</SUB>> ]
-"14961" [label = <(&lt;operator&gt;.assignment,result = setActiveConfig(displayToken, n))<SUB>5312</SUB>> ]
-"14973" [label = <(&lt;operator&gt;.assignment,mDebugDisplayConfigSetByBackdoor = true)<SUB>5316</SUB>> ]
-"14983" [label = <(readInt32,data.readInt32())<SUB>5321</SUB>> ]
-"14990" [label = <(&lt;operator&gt;.assignment,result =\012                            acquireFrameRateFlexibilityToken(&amp;mDebugFrameRateFlexibilityToken))<SUB>5322</SUB>> ]
-"14103" [label = <(FIELD_IDENTIFIER,checkCallingPermission,checkCallingPermission)<SUB>5013</SUB>> ]
-"14259" [label = <(FIELD_IDENTIFIER,getPageFlipCount,getPageFlipCount)<SUB>5071</SUB>> ]
-"14273" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5077</SUB>> ]
-"14282" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5080</SUB>> ]
-"14285" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Protanomaly)<SUB>5080</SUB>> ]
-"14292" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5083</SUB>> ]
-"14295" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Deuteranomaly)<SUB>5083</SUB>> ]
-"14302" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5086</SUB>> ]
-"14305" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Tritanomaly)<SUB>5086</SUB>> ]
-"14311" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5089</SUB>> ]
-"14314" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::None)<SUB>5089</SUB>> ]
-"14324" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setMode)<SUB>5093</SUB>> ]
-"14327" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessMode::Correction)<SUB>5093</SUB>> ]
-"14332" [label = <(setMode,mDaltonizer.setMode(ColorBlindnessMode::Simulation))<SUB>5095</SUB>> ]
-"14353" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5104</SUB>> ]
-"14363" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>5107</SUB>> ]
-"14366" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>5107</SUB>> ]
-"14393" [label = <(&lt;operator&gt;.assignment,mClientColorMatrix = mat4())<SUB>5113</SUB>> ]
-"14404" [label = <(abs,abs(lastRow - float4{0, 0, 0, 1}))<SUB>5119</SUB>> ]
-"14413" [label = <(float4,float4{1e-4f})<SUB>5119</SUB>> ]
-"14435" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5130</SUB>> ]
-"14451" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5135</SUB>> ]
-"14470" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5140</SUB>> ]
-"14489" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5145</SUB>> ]
-"14496" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;enable)<SUB>5148</SUB>> ]
-"14499" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.layersSortedByZ)<SUB>5148</SUB>> ]
-"14502" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>5148</SUB>> ]
-"14507" [label = <(ALOGV,ALOGV(&quot;Interceptor disabled&quot;))<SUB>5151</SUB>> ]
-"14509" [label = <(disable,mInterceptor-&gt;disable())<SUB>5152</SUB>> ]
-"14523" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5157</SUB>> ]
-"14541" [label = <(FIELD_IDENTIFIER,max,max)<SUB>5163</SUB>> ]
-"14544" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>5163</SUB>> ]
-"14547" [label = <(readFloat,data.readFloat())<SUB>5163</SUB>> ]
-"14564" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5171</SUB>> ]
-"14570" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5172</SUB>> ]
-"14573" [label = <(&lt;operator&gt;.addressOf,&amp;colorMode)<SUB>5172</SUB>> ]
-"14579" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(colorMode))<SUB>5173</SUB>> ]
-"14599" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5184</SUB>> ]
-"14607" [label = <(enable,mTracing.enable())<SUB>5187</SUB>> ]
-"14612" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5188</SUB>> ]
-"14618" [label = <(ALOGD,ALOGD(&quot;LayerTracing disabled&quot;))<SUB>5190</SUB>> ]
-"14620" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = mTracing.disable())<SUB>5191</SUB>> ]
-"14656" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>5201</SUB>> ]
-"14678" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5211</SUB>> ]
-"14687" [label = <(FIELD_IDENTIFIER,kManaged,kManaged)<SUB>5213</SUB>> ]
-"14689" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5214</SUB>> ]
-"14697" [label = <(FIELD_IDENTIFIER,kUnmanaged,kUnmanaged)<SUB>5216</SUB>> ]
-"14699" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5217</SUB>> ]
-"14707" [label = <(FIELD_IDENTIFIER,kEnhanced,kEnhanced)<SUB>5219</SUB>> ]
-"14709" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5220</SUB>> ]
-"14712" [label = <(hasRenderIntent,display-&gt;hasRenderIntent(RenderIntent::ENHANCE))<SUB>5220</SUB>> ]
-"14722" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5223</SUB>> ]
-"14725" [label = <(hasRenderIntent,display-&gt;hasRenderIntent(static_cast&lt;RenderIntent&gt;(setting)))<SUB>5224</SUB>> ]
-"14747" [label = <(getHwComposer,getHwComposer())<SUB>5232</SUB>> ]
-"14748" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>5232</SUB>> ]
-"14759" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5237</SUB>> ]
-"14773" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5240</SUB>> ]
-"14817" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5261</SUB>> ]
-"14823" [label = <(readInt32,data.readInt32())<SUB>5263</SUB>> ]
-"14848" [label = <(readInt32,data.readInt32())<SUB>5271</SUB>> ]
-"14873" [label = <(&lt;operator&gt;.assignment,mDefaultCompositionDataspace = defaultCompositionDataspace)<SUB>5281</SUB>> ]
-"14876" [label = <(&lt;operator&gt;.assignment,mWideColorGamutCompositionDataspace = wideColorGamutCompositionDataspace)<SUB>5282</SUB>> ]
-"14889" [label = <(FIELD_IDENTIFIER,readUint32,readUint32)<SUB>5288</SUB>> ]
-"14912" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5295</SUB>> ]
-"14921" [label = <(&lt;operator&gt;.cast,static_cast&lt;bool&gt;(n))<SUB>5298</SUB>> ]
-"14928" [label = <(lock,lock(mStateLock))<SUB>5301</SUB>> ]
-"14930" [label = <(writeBool,reply-&gt;writeBool(mRefreshRateOverlay != nullptr))<SUB>5302</SUB>> ]
-"14947" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5308</SUB>> ]
-"14959" [label = <(getInternalDisplayToken,getInternalDisplayToken())<SUB>5311</SUB>> ]
-"14963" [label = <(setActiveConfig,setActiveConfig(displayToken, n))<SUB>5312</SUB>> ]
-"14967" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>5313</SUB>> ]
-"14984" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5321</SUB>> ]
-"14992" [label = <(acquireFrameRateFlexibilityToken,acquireFrameRateFlexibilityToken(&amp;mDebugFrameRateFlexibilityToken))<SUB>5323</SUB>> ]
-"14996" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>5324</SUB>> ]
-"15004" [label = <(&lt;operator&gt;.assignment,mDebugFrameRateFlexibilityToken = nullptr)<SUB>5328</SUB>> ]
-"14284" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5080</SUB>> ]
-"14287" [label = <(FIELD_IDENTIFIER,Protanomaly,Protanomaly)<SUB>5080</SUB>> ]
-"14294" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5083</SUB>> ]
-"14297" [label = <(FIELD_IDENTIFIER,Deuteranomaly,Deuteranomaly)<SUB>5083</SUB>> ]
-"14304" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5086</SUB>> ]
-"14307" [label = <(FIELD_IDENTIFIER,Tritanomaly,Tritanomaly)<SUB>5086</SUB>> ]
-"14313" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5089</SUB>> ]
-"14316" [label = <(FIELD_IDENTIFIER,None,None)<SUB>5089</SUB>> ]
-"14326" [label = <(FIELD_IDENTIFIER,setMode,setMode)<SUB>5093</SUB>> ]
-"14329" [label = <(FIELD_IDENTIFIER,Correction,Correction)<SUB>5093</SUB>> ]
-"14333" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setMode)<SUB>5095</SUB>> ]
-"14336" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessMode::Simulation)<SUB>5095</SUB>> ]
-"14360" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>5107</SUB>> ]
-"14395" [label = <(mat4,mat4())<SUB>5113</SUB>> ]
-"14405" [label = <(&lt;operator&gt;.subtraction,lastRow - float4{0, 0, 0, 1})<SUB>5119</SUB>> ]
-"14414" [label = <(&lt;operator&gt;.arrayInitializer,{1e-4f})<SUB>5119</SUB>> ]
-"14498" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>5148</SUB>> ]
-"14501" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>5148</SUB>> ]
-"14504" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>5148</SUB>> ]
-"14510" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;disable)<SUB>5152</SUB>> ]
-"14546" [label = <(FIELD_IDENTIFIER,min,min)<SUB>5163</SUB>> ]
-"14548" [label = <(&lt;operator&gt;.fieldAccess,data.readFloat)<SUB>5163</SUB>> ]
-"14566" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5171</SUB>> ]
-"14572" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5172</SUB>> ]
-"14580" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>5173</SUB>> ]
-"14608" [label = <(&lt;operator&gt;.fieldAccess,mTracing.enable)<SUB>5187</SUB>> ]
-"14614" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5188</SUB>> ]
-"14622" [label = <(disable,mTracing.disable())<SUB>5191</SUB>> ]
-"14680" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5211</SUB>> ]
-"14691" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5214</SUB>> ]
-"14701" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5217</SUB>> ]
-"14711" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5220</SUB>> ]
-"14713" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasRenderIntent)<SUB>5220</SUB>> ]
-"14716" [label = <(&lt;operator&gt;.fieldAccess,RenderIntent::ENHANCE)<SUB>5220</SUB>> ]
-"14724" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5223</SUB>> ]
-"14726" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasRenderIntent)<SUB>5224</SUB>> ]
-"14729" [label = <(&lt;operator&gt;.cast,static_cast&lt;RenderIntent&gt;(setting))<SUB>5224</SUB>> ]
-"14775" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5240</SUB>> ]
-"14824" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5263</SUB>> ]
-"14831" [label = <(&lt;operator&gt;.assignment,dataspace = static_cast&lt;Dataspace&gt;(n))<SUB>5265</SUB>> ]
-"14843" [label = <(&lt;operator&gt;.assignment,mDefaultCompositionDataspace = dataspace)<SUB>5269</SUB>> ]
-"14849" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5271</SUB>> ]
-"14856" [label = <(&lt;operator&gt;.assignment,dataspace = static_cast&lt;Dataspace&gt;(n))<SUB>5273</SUB>> ]
-"14868" [label = <(&lt;operator&gt;.assignment,mWideColorGamutCompositionDataspace = dataspace)<SUB>5277</SUB>> ]
-"14914" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5295</SUB>> ]
-"14922" [label = <(UNKNOWN,bool,bool)<SUB>5298</SUB>> ]
-"14931" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5302</SUB>> ]
-"14934" [label = <(&lt;operator&gt;.notEquals,mRefreshRateOverlay != nullptr)<SUB>5302</SUB>> ]
-"14971" [label = <(RETURN,return result;,return result;)<SUB>5314</SUB>> ]
-"14986" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5321</SUB>> ]
-"14993" [label = <(&lt;operator&gt;.addressOf,&amp;mDebugFrameRateFlexibilityToken)<SUB>5323</SUB>> ]
-"15000" [label = <(RETURN,return result;,return result;)<SUB>5325</SUB>> ]
-"14335" [label = <(FIELD_IDENTIFIER,setMode,setMode)<SUB>5095</SUB>> ]
-"14338" [label = <(FIELD_IDENTIFIER,Simulation,Simulation)<SUB>5095</SUB>> ]
-"14375" [label = <(&lt;operator&gt;.lessThan,j &lt; 4)<SUB>5108</SUB>> ]
-"14378" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>5108</SUB>> ]
-"14407" [label = <(float4,float4{0, 0, 0, 1})<SUB>5119</SUB>> ]
-"14512" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>5152</SUB>> ]
-"14550" [label = <(FIELD_IDENTIFIER,readFloat,readFloat)<SUB>5163</SUB>> ]
-"14610" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>5187</SUB>> ]
-"14623" [label = <(&lt;operator&gt;.fieldAccess,mTracing.disable)<SUB>5191</SUB>> ]
-"14629" [label = <(writeInt32,reply-&gt;writeInt32(mTracing.writeToFile()))<SUB>5193</SUB>> ]
-"14715" [label = <(FIELD_IDENTIFIER,hasRenderIntent,hasRenderIntent)<SUB>5220</SUB>> ]
-"14718" [label = <(FIELD_IDENTIFIER,ENHANCE,ENHANCE)<SUB>5220</SUB>> ]
-"14728" [label = <(FIELD_IDENTIFIER,hasRenderIntent,hasRenderIntent)<SUB>5224</SUB>> ]
-"14730" [label = <(UNKNOWN,RenderIntent,RenderIntent)<SUB>5224</SUB>> ]
-"14826" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5263</SUB>> ]
-"14833" [label = <(&lt;operator&gt;.cast,static_cast&lt;Dataspace&gt;(n))<SUB>5265</SUB>> ]
-"14837" [label = <(&lt;operator&gt;.logicalNot,!validateCompositionDataspace(dataspace))<SUB>5266</SUB>> ]
-"14851" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5271</SUB>> ]
-"14858" [label = <(&lt;operator&gt;.cast,static_cast&lt;Dataspace&gt;(n))<SUB>5273</SUB>> ]
-"14862" [label = <(&lt;operator&gt;.logicalNot,!validateCompositionDataspace(dataspace))<SUB>5274</SUB>> ]
-"14933" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5302</SUB>> ]
-"14372" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>5108</SUB>> ]
-"14381" [label = <(&lt;operator&gt;.assignment,mClientColorMatrix[i][j] = data.readFloat())<SUB>5109</SUB>> ]
-"14408" [label = <(&lt;operator&gt;.arrayInitializer,{0, 0, 0, 1})<SUB>5119</SUB>> ]
-"14625" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>5191</SUB>> ]
-"14630" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5193</SUB>> ]
-"14633" [label = <(writeToFile,mTracing.writeToFile())<SUB>5193</SUB>> ]
-"14639" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5195</SUB>> ]
-"14834" [label = <(UNKNOWN,Dataspace,Dataspace)<SUB>5265</SUB>> ]
-"14838" [label = <(validateCompositionDataspace,validateCompositionDataspace(dataspace))<SUB>5266</SUB>> ]
-"14841" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5267</SUB>> ]
-"14859" [label = <(UNKNOWN,Dataspace,Dataspace)<SUB>5273</SUB>> ]
-"14863" [label = <(validateCompositionDataspace,validateCompositionDataspace(dataspace))<SUB>5274</SUB>> ]
-"14866" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5275</SUB>> ]
-"14382" [label = <(&lt;operator&gt;.indirectIndexAccess,mClientColorMatrix[i][j])<SUB>5109</SUB>> ]
-"14387" [label = <(readFloat,data.readFloat())<SUB>5109</SUB>> ]
-"14632" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5193</SUB>> ]
-"14634" [label = <(&lt;operator&gt;.fieldAccess,mTracing.writeToFile)<SUB>5193</SUB>> ]
-"14640" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5195</SUB>> ]
-"14383" [label = <(&lt;operator&gt;.indirectIndexAccess,mClientColorMatrix[i])<SUB>5109</SUB>> ]
-"14388" [label = <(&lt;operator&gt;.fieldAccess,data.readFloat)<SUB>5109</SUB>> ]
-"14636" [label = <(FIELD_IDENTIFIER,writeToFile,writeToFile)<SUB>5193</SUB>> ]
-"14642" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5195</SUB>> ]
-"14390" [label = <(FIELD_IDENTIFIER,readFloat,readFloat)<SUB>5109</SUB>> ]
-"14037" [label = <(METHOD,onTransact)<SUB>5000</SUB>> ]
-"15011" [label = <(METHOD_RETURN,status_t)<SUB>5000</SUB>> ]
-  "14044" -> "14049" 
-  "14056" -> "14068" 
-  "15009" -> "15011" 
-  "14046" -> "14044" 
-  "14049" -> "14053" 
-  "14049" -> "14061" 
-  "14058" -> "14056" 
-  "14067" -> "14075" 
-  "14067" -> "15009" 
-  "14053" -> "15011" 
-  "14059" -> "14058" 
-  "14068" -> "14067" 
-  "14068" -> "14071" 
-  "14071" -> "14067" 
-  "14075" -> "14085" 
-  "14080" -> "14092" 
-  "14087" -> "14096" 
-  "14061" -> "14059" 
-  "14082" -> "14080" 
-  "14089" -> "14087" 
-  "14094" -> "14112" 
-  "14094" -> "14127" 
-  "14094" -> "14136" 
-  "14094" -> "14153" 
-  "14094" -> "14160" 
-  "14094" -> "14173" 
-  "14094" -> "14183" 
-  "14094" -> "14200" 
-  "14094" -> "14215" 
-  "14094" -> "14245" 
-  "14094" -> "14266" 
-  "14094" -> "14346" 
-  "14094" -> "14425" 
-  "14094" -> "14435" 
-  "14094" -> "14451" 
-  "14094" -> "14470" 
-  "14094" -> "14489" 
-  "14094" -> "14523" 
-  "14094" -> "14534" 
-  "14094" -> "14562" 
-  "14094" -> "14589" 
-  "14094" -> "14599" 
-  "14094" -> "14652" 
-  "14094" -> "14665" 
-  "14094" -> "14739" 
-  "14094" -> "14759" 
-  "14094" -> "14802" 
-  "14094" -> "14810" 
-  "14094" -> "14889" 
-  "14094" -> "14914" 
-  "14094" -> "14947" 
-  "14094" -> "14986" 
-  "14094" -> "15009" 
-  "14083" -> "14082" 
-  "14090" -> "14089" 
-  "14095" -> "14094" 
-  "14107" -> "14113" 
-  "14113" -> "14117" 
-  "14117" -> "15011" 
-  "14127" -> "15011" 
-  "14131" -> "14139" 
-  "14131" -> "14142" 
-  "14137" -> "14146" 
-  "14146" -> "14147" 
-  "14147" -> "14148" 
-  "14148" -> "15011" 
-  "14178" -> "14186" 
-  "14184" -> "14189" 
-  "14189" -> "14190" 
-  "14190" -> "14191" 
-  "14191" -> "15011" 
-  "14195" -> "14203" 
-  "14201" -> "14206" 
+"14060" [label = <(&lt;operator&gt;.assignment,credentialCheck = CheckTransactCodeCredentials(code))<SUB>5001</SUB>> ]
+"14072" [label = <(&lt;operator&gt;.assignment,err = BnSurfaceComposer::onTransact(code, data, reply, flags))<SUB>5006</SUB>> ]
+"15025" [label = <(RETURN,return err;,return err;)<SUB>5333</SUB>> ]
+"14062" [label = <(CheckTransactCodeCredentials,CheckTransactCodeCredentials(code))<SUB>5001</SUB>> ]
+"14065" [label = <(&lt;operator&gt;.notEquals,credentialCheck != OK)<SUB>5002</SUB>> ]
+"14074" [label = <(BnSurfaceComposer::onTransact,BnSurfaceComposer::onTransact(code, data, reply, flags))<SUB>5006</SUB>> ]
+"14083" [label = <(&lt;operator&gt;.logicalOr,err == UNKNOWN_TRANSACTION || err == PERMISSION_DENIED)<SUB>5007</SUB>> ]
+"14069" [label = <(RETURN,return credentialCheck;,return credentialCheck;)<SUB>5003</SUB>> ]
+"14075" [label = <(&lt;operator&gt;.fieldAccess,BnSurfaceComposer::onTransact)<SUB>5006</SUB>> ]
+"14084" [label = <(&lt;operator&gt;.equals,err == UNKNOWN_TRANSACTION)<SUB>5007</SUB>> ]
+"14087" [label = <(&lt;operator&gt;.equals,err == PERMISSION_DENIED)<SUB>5007</SUB>> ]
+"14091" [label = <(CHECK_INTERFACE,CHECK_INTERFACE(ISurfaceComposer, data, reply))<SUB>5008</SUB>> ]
+"14096" [label = <(&lt;operator&gt;.assignment,* ipc = IPCThreadState::self())<SUB>5009</SUB>> ]
+"14103" [label = <(&lt;operator&gt;.assignment,uid = ipc-&gt;getCallingUid())<SUB>5010</SUB>> ]
+"14077" [label = <(FIELD_IDENTIFIER,onTransact,onTransact)<SUB>5006</SUB>> ]
+"14098" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5009</SUB>> ]
+"14105" [label = <(getCallingUid,ipc-&gt;getCallingUid())<SUB>5010</SUB>> ]
+"14110" [label = <(CC_UNLIKELY,CC_UNLIKELY(uid != AID_SYSTEM\012 &amp;&amp; !PermissionCache::checkCallingPermission(sHardwareTest)))<SUB>5011</SUB>> ]
+"14099" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5009</SUB>> ]
+"14106" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingUid)<SUB>5010</SUB>> ]
+"14111" [label = <(&lt;operator&gt;.logicalAnd,uid != AID_SYSTEM\012 &amp;&amp; !PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5011</SUB>> ]
+"14123" [label = <(&lt;operator&gt;.assignment,pid = ipc-&gt;getCallingPid())<SUB>5013</SUB>> ]
+"14129" [label = <(ALOGE,ALOGE(&quot;Permission Denial: &quot;\012 &quot;can't access SurfaceFlinger pid=%d, uid=%d&quot;, pid, uid))<SUB>5014</SUB>> ]
+"14133" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5016</SUB>> ]
+"14143" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5022</SUB>> ]
+"14147" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5024</SUB>> ]
+"14153" [label = <(&lt;operator&gt;.assignment,mDebugRegion = n ? n : (mDebugRegion ? 0 : 1))<SUB>5025</SUB>> ]
+"14162" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5026</SUB>> ]
+"14163" [label = <(repaintEverything,repaintEverything())<SUB>5027</SUB>> ]
+"14164" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5028</SUB>> ]
+"14194" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5046</SUB>> ]
+"14200" [label = <(&lt;operator&gt;.assignment,mDebugDisableHWC = n != 0)<SUB>5047</SUB>> ]
+"14205" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5048</SUB>> ]
+"14206" [label = <(repaintEverything,repaintEverything())<SUB>5049</SUB>> ]
+"14207" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5050</SUB>> ]
+"14211" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5052</SUB>> ]
+"14217" [label = <(&lt;operator&gt;.assignment,mDebugDisableTransformHint = n != 0)<SUB>5053</SUB>> ]
+"14222" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5054</SUB>> ]
+"14223" [label = <(repaintEverything,repaintEverything())<SUB>5055</SUB>> ]
+"14224" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5056</SUB>> ]
+"14228" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5058</SUB>> ]
+"14233" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5059</SUB>> ]
+"14238" [label = <(writeInt32,reply-&gt;writeInt32(mDebugRegion))<SUB>5060</SUB>> ]
+"14243" [label = <(writeInt32,reply-&gt;writeInt32(0))<SUB>5061</SUB>> ]
+"14248" [label = <(writeInt32,reply-&gt;writeInt32(mDebugDisableHWC))<SUB>5062</SUB>> ]
+"14253" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5063</SUB>> ]
+"14101" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5009</SUB>> ]
+"14108" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5010</SUB>> ]
+"14112" [label = <(&lt;operator&gt;.notEquals,uid != AID_SYSTEM)<SUB>5011</SUB>> ]
+"14115" [label = <(&lt;operator&gt;.logicalNot,!PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5012</SUB>> ]
+"14125" [label = <(getCallingPid,ipc-&gt;getCallingPid())<SUB>5013</SUB>> ]
+"14149" [label = <(readInt32,data.readInt32())<SUB>5024</SUB>> ]
+"14155" [label = <(&lt;operator&gt;.conditional,n ? n : (mDebugRegion ? 0 : 1))<SUB>5025</SUB>> ]
+"14169" [label = <(repaintEverything,repaintEverything())<SUB>5030</SUB>> ]
+"14170" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5031</SUB>> ]
+"14176" [label = <(_l,_l(mStateLock))<SUB>5034</SUB>> ]
+"14178" [label = <(setTransactionFlags,setTransactionFlags(\012                        eTransactionNeeded|\012                        eDisplayTransactionNeeded|\012                        eTraversalNeeded))<SUB>5035</SUB>> ]
+"14184" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5039</SUB>> ]
+"14189" [label = <(signalRefresh,signalRefresh())<SUB>5042</SUB>> ]
+"14190" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5043</SUB>> ]
+"14196" [label = <(readInt32,data.readInt32())<SUB>5046</SUB>> ]
+"14202" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5047</SUB>> ]
+"14213" [label = <(readInt32,data.readInt32())<SUB>5052</SUB>> ]
+"14219" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5053</SUB>> ]
+"14229" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5058</SUB>> ]
+"14234" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5059</SUB>> ]
+"14239" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5060</SUB>> ]
+"14244" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5061</SUB>> ]
+"14249" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5062</SUB>> ]
+"14259" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDevice())<SUB>5065</SUB>> ]
+"14268" [label = <(writeInt32,reply-&gt;writeInt32(display-&gt;getPageFlipCount()))<SUB>5070</SUB>> ]
+"14276" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5071</SUB>> ]
+"14282" [label = <(_l,_l(mStateLock))<SUB>5074</SUB>> ]
+"14284" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5076</SUB>> ]
+"14355" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5097</SUB>> ]
+"14356" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5098</SUB>> ]
+"14362" [label = <(_l,_l(mStateLock))<SUB>5101</SUB>> ]
+"14364" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5103</SUB>> ]
+"14435" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5122</SUB>> ]
+"14436" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5123</SUB>> ]
+"14441" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5126</SUB>> ]
+"14446" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5129</SUB>> ]
+"14452" [label = <(&lt;operator&gt;.assignment,mForceFullDamage = n != 0)<SUB>5130</SUB>> ]
+"14457" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5131</SUB>> ]
+"14462" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5134</SUB>> ]
+"14468" [label = <(setPhaseOffset,mScheduler-&gt;setPhaseOffset(mAppConnectionHandle, static_cast&lt;nsecs_t&gt;(n)))<SUB>5135</SUB>> ]
+"14476" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5136</SUB>> ]
+"14481" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5139</SUB>> ]
+"14487" [label = <(setPhaseOffset,mScheduler-&gt;setPhaseOffset(mSfConnectionHandle, static_cast&lt;nsecs_t&gt;(n)))<SUB>5140</SUB>> ]
+"14495" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5141</SUB>> ]
+"14500" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5144</SUB>> ]
+"14529" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5153</SUB>> ]
+"14534" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5156</SUB>> ]
+"14540" [label = <(&lt;operator&gt;.assignment,mUseHwcVirtualDisplays = !n)<SUB>5157</SUB>> ]
+"14544" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5158</SUB>> ]
+"14550" [label = <(_l,_l(mStateLock))<SUB>5161</SUB>> ]
+"14552" [label = <(&lt;operator&gt;.assignment,mGlobalSaturationFactor = std::max(0.0f, std::min(data.readFloat(), 2.0f)))<SUB>5162</SUB>> ]
+"14568" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>5164</SUB>> ]
+"14569" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5165</SUB>> ]
+"14575" [label = <(&lt;operator&gt;.assignment,mDisplayColorSetting = static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5170</SUB>> ]
+"14598" [label = <(invalidateHwcGeometry,invalidateHwcGeometry())<SUB>5174</SUB>> ]
+"14599" [label = <(repaintEverything,repaintEverything())<SUB>5175</SUB>> ]
+"14600" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5176</SUB>> ]
+"14605" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5180</SUB>> ]
+"14610" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5183</SUB>> ]
+"14660" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5197</SUB>> ]
+"14665" [label = <(writeBool,reply-&gt;writeBool(mTracing.isEnabled()))<SUB>5200</SUB>> ]
+"14673" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5201</SUB>> ]
+"14679" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDevice())<SUB>5205</SUB>> ]
+"14689" [label = <(&lt;operator&gt;.assignment,setting = static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5210</SUB>> ]
+"14749" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5226</SUB>> ]
+"14755" [label = <(_l,_l(mStateLock))<SUB>5230</SUB>> ]
+"14757" [label = <(writeBool,reply-&gt;writeBool(getHwComposer().isUsingVrComposer()))<SUB>5231</SUB>> ]
+"14765" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5232</SUB>> ]
+"14770" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5236</SUB>> ]
+"14795" [label = <(ALOGD,ALOGD(&quot;Updating trace buffer to %d KB&quot;, n))<SUB>5243</SUB>> ]
+"14798" [label = <(setBufferSize,mTracing.setBufferSize(n * 1024))<SUB>5244</SUB>> ]
+"14805" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5245</SUB>> ]
+"14810" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5246</SUB>> ]
+"14815" [label = <(writeBool,reply-&gt;writeBool(useColorManagement))<SUB>5250</SUB>> ]
+"14820" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5251</SUB>> ]
+"14826" [label = <(_l,_l(mStateLock))<SUB>5259</SUB>> ]
+"14828" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5260</SUB>> ]
+"14895" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5283</SUB>> ]
+"14900" [label = <(&lt;operator&gt;.assignment,n = data.readUint32())<SUB>5287</SUB>> ]
+"14906" [label = <(ALOGD,ALOGD(&quot;Updating trace flags to 0x%x&quot;, n))<SUB>5288</SUB>> ]
+"14909" [label = <(setTraceFlags,mTracing.setTraceFlags(n))<SUB>5289</SUB>> ]
+"14914" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5290</SUB>> ]
+"14919" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5291</SUB>> ]
+"14953" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5304</SUB>> ]
+"14958" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5307</SUB>> ]
+"14964" [label = <(&lt;operator&gt;.assignment,mDebugDisplayConfigSetByBackdoor = false)<SUB>5308</SUB>> ]
+"14992" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5317</SUB>> ]
+"15023" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5329</SUB>> ]
+"14116" [label = <(PermissionCache::checkCallingPermission,PermissionCache::checkCallingPermission(sHardwareTest))<SUB>5012</SUB>> ]
+"14126" [label = <(&lt;operator&gt;.indirectFieldAccess,ipc-&gt;getCallingPid)<SUB>5013</SUB>> ]
+"14150" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5024</SUB>> ]
+"14158" [label = <(&lt;operator&gt;.conditional,mDebugRegion ? 0 : 1)<SUB>5025</SUB>> ]
+"14179" [label = <(&lt;operator&gt;.or,eTransactionNeeded|\012                        eDisplayTransactionNeeded|\012                        eTraversalNeeded)<SUB>5036</SUB>> ]
+"14197" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5046</SUB>> ]
+"14214" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5052</SUB>> ]
+"14231" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5058</SUB>> ]
+"14236" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5059</SUB>> ]
+"14241" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5060</SUB>> ]
+"14246" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5061</SUB>> ]
+"14251" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5062</SUB>> ]
+"14261" [label = <(getDefaultDisplayDevice,getDefaultDisplayDevice())<SUB>5065</SUB>> ]
+"14263" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5066</SUB>> ]
+"14269" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5070</SUB>> ]
+"14272" [label = <(getPageFlipCount,display-&gt;getPageFlipCount())<SUB>5070</SUB>> ]
+"14286" [label = <(readInt32,data.readInt32())<SUB>5076</SUB>> ]
+"14291" [label = <(&lt;operator&gt;.modulo,n % 10)<SUB>5077</SUB>> ]
+"14335" [label = <(&lt;operator&gt;.greaterEqualsThan,n &gt;= 10)<SUB>5091</SUB>> ]
+"14366" [label = <(readInt32,data.readInt32())<SUB>5103</SUB>> ]
+"14418" [label = <(any,any(greaterThan(abs(lastRow - float4{0, 0, 0, 1}), float4{1e-4f})))<SUB>5118</SUB>> ]
+"14448" [label = <(readInt32,data.readInt32())<SUB>5129</SUB>> ]
+"14454" [label = <(&lt;operator&gt;.notEquals,n != 0)<SUB>5130</SUB>> ]
+"14464" [label = <(readInt32,data.readInt32())<SUB>5134</SUB>> ]
+"14469" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setPhaseOffset)<SUB>5135</SUB>> ]
+"14473" [label = <(&lt;operator&gt;.cast,static_cast&lt;nsecs_t&gt;(n))<SUB>5135</SUB>> ]
+"14483" [label = <(readInt32,data.readInt32())<SUB>5139</SUB>> ]
+"14488" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setPhaseOffset)<SUB>5140</SUB>> ]
+"14492" [label = <(&lt;operator&gt;.cast,static_cast&lt;nsecs_t&gt;(n))<SUB>5140</SUB>> ]
+"14502" [label = <(readInt32,data.readInt32())<SUB>5144</SUB>> ]
+"14536" [label = <(readInt32,data.readInt32())<SUB>5156</SUB>> ]
+"14542" [label = <(&lt;operator&gt;.logicalNot,!n)<SUB>5157</SUB>> ]
+"14554" [label = <(std::max,std::max(0.0f, std::min(data.readFloat(), 2.0f)))<SUB>5162</SUB>> ]
+"14577" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5170</SUB>> ]
+"14584" [label = <(&lt;operator&gt;.equals,data.readInt32(&amp;colorMode) == NO_ERROR)<SUB>5171</SUB>> ]
+"14612" [label = <(readInt32,data.readInt32())<SUB>5183</SUB>> ]
+"14666" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5200</SUB>> ]
+"14669" [label = <(isEnabled,mTracing.isEnabled())<SUB>5200</SUB>> ]
+"14681" [label = <(getDefaultDisplayDevice,getDefaultDisplayDevice())<SUB>5205</SUB>> ]
+"14683" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5206</SUB>> ]
+"14691" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(data.readInt32()))<SUB>5210</SUB>> ]
+"14758" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5231</SUB>> ]
+"14761" [label = <(isUsingVrComposer,getHwComposer().isUsingVrComposer())<SUB>5231</SUB>> ]
+"14772" [label = <(readInt32,data.readInt32())<SUB>5236</SUB>> ]
+"14777" [label = <(&lt;operator&gt;.logicalOr,n &lt;= 0 || n &gt; MAX_TRACING_MEMORY)<SUB>5237</SUB>> ]
+"14799" [label = <(&lt;operator&gt;.fieldAccess,mTracing.setBufferSize)<SUB>5244</SUB>> ]
+"14802" [label = <(&lt;operator&gt;.multiplication,n * 1024)<SUB>5244</SUB>> ]
+"14806" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5245</SUB>> ]
+"14816" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5250</SUB>> ]
+"14830" [label = <(readInt32,data.readInt32())<SUB>5260</SUB>> ]
+"14902" [label = <(readUint32,data.readUint32())<SUB>5287</SUB>> ]
+"14910" [label = <(&lt;operator&gt;.fieldAccess,mTracing.setTraceFlags)<SUB>5289</SUB>> ]
+"14915" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5290</SUB>> ]
+"14925" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5294</SUB>> ]
+"14960" [label = <(readInt32,data.readInt32())<SUB>5307</SUB>> ]
+"14968" [label = <(&lt;operator&gt;.greaterEqualsThan,n &gt;= 0)<SUB>5309</SUB>> ]
+"14998" [label = <(&lt;operator&gt;.greaterThan,data.readInt32() &gt; 0)<SUB>5320</SUB>> ]
+"14117" [label = <(&lt;operator&gt;.fieldAccess,PermissionCache::checkCallingPermission)<SUB>5012</SUB>> ]
+"14128" [label = <(FIELD_IDENTIFIER,getCallingPid,getCallingPid)<SUB>5013</SUB>> ]
+"14152" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5024</SUB>> ]
+"14180" [label = <(&lt;operator&gt;.or,eTransactionNeeded|\012                        eDisplayTransactionNeeded)<SUB>5036</SUB>> ]
+"14199" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5046</SUB>> ]
+"14216" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5052</SUB>> ]
+"14266" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5067</SUB>> ]
+"14271" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5070</SUB>> ]
+"14273" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getPageFlipCount)<SUB>5070</SUB>> ]
+"14287" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5076</SUB>> ]
+"14297" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Protanomaly))<SUB>5079</SUB>> ]
+"14307" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Deuteranomaly))<SUB>5082</SUB>> ]
+"14317" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::Tritanomaly))<SUB>5085</SUB>> ]
+"14326" [label = <(setType,mDaltonizer.setType(ColorBlindnessType::None))<SUB>5088</SUB>> ]
+"14339" [label = <(setMode,mDaltonizer.setMode(ColorBlindnessMode::Correction))<SUB>5092</SUB>> ]
+"14367" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5103</SUB>> ]
+"14419" [label = <(greaterThan,greaterThan(abs(lastRow - float4{0, 0, 0, 1}), float4{1e-4f}))<SUB>5118</SUB>> ]
+"14433" [label = <(ALOGE,ALOGE(&quot;The color transform's last row must be (0, 0, 0, 1)&quot;))<SUB>5119</SUB>> ]
+"14449" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5129</SUB>> ]
+"14465" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5134</SUB>> ]
+"14471" [label = <(FIELD_IDENTIFIER,setPhaseOffset,setPhaseOffset)<SUB>5135</SUB>> ]
+"14474" [label = <(UNKNOWN,nsecs_t,nsecs_t)<SUB>5135</SUB>> ]
+"14484" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5139</SUB>> ]
+"14490" [label = <(FIELD_IDENTIFIER,setPhaseOffset,setPhaseOffset)<SUB>5140</SUB>> ]
+"14493" [label = <(UNKNOWN,nsecs_t,nsecs_t)<SUB>5140</SUB>> ]
+"14503" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5144</SUB>> ]
+"14509" [label = <(ALOGV,ALOGV(&quot;Interceptor enabled&quot;))<SUB>5146</SUB>> ]
+"14511" [label = <(enable,mInterceptor-&gt;enable(mDrawingState.layersSortedByZ, mDrawingState.displays))<SUB>5147</SUB>> ]
+"14537" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5156</SUB>> ]
+"14555" [label = <(&lt;operator&gt;.fieldAccess,std::max)<SUB>5162</SUB>> ]
+"14559" [label = <(std::min,std::min(data.readFloat(), 2.0f))<SUB>5162</SUB>> ]
+"14578" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>5170</SUB>> ]
+"14579" [label = <(readInt32,data.readInt32())<SUB>5170</SUB>> ]
+"14585" [label = <(readInt32,data.readInt32(&amp;colorMode))<SUB>5171</SUB>> ]
+"14593" [label = <(&lt;operator&gt;.assignment,mForceColorMode = static_cast&lt;ColorMode&gt;(colorMode))<SUB>5172</SUB>> ]
+"14613" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5183</SUB>> ]
+"14619" [label = <(ALOGD,ALOGD(&quot;LayerTracing enabled&quot;))<SUB>5185</SUB>> ]
+"14621" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = mTracing.enable())<SUB>5186</SUB>> ]
+"14627" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5187</SUB>> ]
+"14668" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5200</SUB>> ]
+"14670" [label = <(&lt;operator&gt;.fieldAccess,mTracing.isEnabled)<SUB>5200</SUB>> ]
+"14686" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5207</SUB>> ]
+"14692" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>5210</SUB>> ]
+"14693" [label = <(readInt32,data.readInt32())<SUB>5210</SUB>> ]
+"14701" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kManaged)<SUB>5212</SUB>> ]
+"14704" [label = <(writeBool,reply-&gt;writeBool(useColorManagement))<SUB>5213</SUB>> ]
+"14711" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kUnmanaged)<SUB>5215</SUB>> ]
+"14714" [label = <(writeBool,reply-&gt;writeBool(true))<SUB>5216</SUB>> ]
+"14721" [label = <(&lt;operator&gt;.fieldAccess,DisplayColorSetting::kEnhanced)<SUB>5218</SUB>> ]
+"14724" [label = <(writeBool,reply-&gt;writeBool(display-&gt;hasRenderIntent(RenderIntent::ENHANCE)))<SUB>5219</SUB>> ]
+"14737" [label = <(writeBool,reply-&gt;writeBool(\012                                display-&gt;hasRenderIntent(static_cast&lt;RenderIntent&gt;(setting))))<SUB>5222</SUB>> ]
+"14760" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5231</SUB>> ]
+"14762" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isUsingVrComposer)<SUB>5231</SUB>> ]
+"14773" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5236</SUB>> ]
+"14778" [label = <(&lt;operator&gt;.lessEqualsThan,n &lt;= 0)<SUB>5237</SUB>> ]
+"14781" [label = <(&lt;operator&gt;.greaterThan,n &gt; MAX_TRACING_MEMORY)<SUB>5237</SUB>> ]
+"14785" [label = <(ALOGW,ALOGW(&quot;Invalid buffer size: %d KB&quot;, n))<SUB>5238</SUB>> ]
+"14788" [label = <(writeInt32,reply-&gt;writeInt32(BAD_VALUE))<SUB>5239</SUB>> ]
+"14793" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5240</SUB>> ]
+"14801" [label = <(FIELD_IDENTIFIER,setBufferSize,setBufferSize)<SUB>5244</SUB>> ]
+"14808" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5245</SUB>> ]
+"14818" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5250</SUB>> ]
+"14831" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5260</SUB>> ]
+"14837" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5262</SUB>> ]
+"14862" [label = <(&lt;operator&gt;.assignment,n = data.readInt32())<SUB>5270</SUB>> ]
+"14903" [label = <(&lt;operator&gt;.fieldAccess,data.readUint32)<SUB>5287</SUB>> ]
+"14912" [label = <(FIELD_IDENTIFIER,setTraceFlags,setTraceFlags)<SUB>5289</SUB>> ]
+"14917" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5290</SUB>> ]
+"14927" [label = <(readInt32,data.readInt32())<SUB>5294</SUB>> ]
+"14936" [label = <(enableRefreshRateOverlay,enableRefreshRateOverlay(static_cast&lt;bool&gt;(n)))<SUB>5297</SUB>> ]
+"14961" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5307</SUB>> ]
+"14973" [label = <(&lt;operator&gt;.assignment,displayToken = getInternalDisplayToken())<SUB>5310</SUB>> ]
+"14977" [label = <(&lt;operator&gt;.assignment,result = setActiveConfig(displayToken, n))<SUB>5311</SUB>> ]
+"14989" [label = <(&lt;operator&gt;.assignment,mDebugDisplayConfigSetByBackdoor = true)<SUB>5315</SUB>> ]
+"14999" [label = <(readInt32,data.readInt32())<SUB>5320</SUB>> ]
+"15006" [label = <(&lt;operator&gt;.assignment,result =\012                            acquireFrameRateFlexibilityToken(&amp;mDebugFrameRateFlexibilityToken))<SUB>5321</SUB>> ]
+"14119" [label = <(FIELD_IDENTIFIER,checkCallingPermission,checkCallingPermission)<SUB>5012</SUB>> ]
+"14275" [label = <(FIELD_IDENTIFIER,getPageFlipCount,getPageFlipCount)<SUB>5070</SUB>> ]
+"14289" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5076</SUB>> ]
+"14298" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5079</SUB>> ]
+"14301" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Protanomaly)<SUB>5079</SUB>> ]
+"14308" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5082</SUB>> ]
+"14311" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Deuteranomaly)<SUB>5082</SUB>> ]
+"14318" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5085</SUB>> ]
+"14321" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::Tritanomaly)<SUB>5085</SUB>> ]
+"14327" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setType)<SUB>5088</SUB>> ]
+"14330" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessType::None)<SUB>5088</SUB>> ]
+"14340" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setMode)<SUB>5092</SUB>> ]
+"14343" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessMode::Correction)<SUB>5092</SUB>> ]
+"14348" [label = <(setMode,mDaltonizer.setMode(ColorBlindnessMode::Simulation))<SUB>5094</SUB>> ]
+"14369" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5103</SUB>> ]
+"14379" [label = <(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>5106</SUB>> ]
+"14382" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>5106</SUB>> ]
+"14409" [label = <(&lt;operator&gt;.assignment,mClientColorMatrix = mat4())<SUB>5112</SUB>> ]
+"14420" [label = <(abs,abs(lastRow - float4{0, 0, 0, 1}))<SUB>5118</SUB>> ]
+"14429" [label = <(float4,float4{1e-4f})<SUB>5118</SUB>> ]
+"14451" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5129</SUB>> ]
+"14467" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5134</SUB>> ]
+"14486" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5139</SUB>> ]
+"14505" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5144</SUB>> ]
+"14512" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;enable)<SUB>5147</SUB>> ]
+"14515" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.layersSortedByZ)<SUB>5147</SUB>> ]
+"14518" [label = <(&lt;operator&gt;.fieldAccess,mDrawingState.displays)<SUB>5147</SUB>> ]
+"14523" [label = <(ALOGV,ALOGV(&quot;Interceptor disabled&quot;))<SUB>5150</SUB>> ]
+"14525" [label = <(disable,mInterceptor-&gt;disable())<SUB>5151</SUB>> ]
+"14539" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5156</SUB>> ]
+"14557" [label = <(FIELD_IDENTIFIER,max,max)<SUB>5162</SUB>> ]
+"14560" [label = <(&lt;operator&gt;.fieldAccess,std::min)<SUB>5162</SUB>> ]
+"14563" [label = <(readFloat,data.readFloat())<SUB>5162</SUB>> ]
+"14580" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5170</SUB>> ]
+"14586" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5171</SUB>> ]
+"14589" [label = <(&lt;operator&gt;.addressOf,&amp;colorMode)<SUB>5171</SUB>> ]
+"14595" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(colorMode))<SUB>5172</SUB>> ]
+"14615" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5183</SUB>> ]
+"14623" [label = <(enable,mTracing.enable())<SUB>5186</SUB>> ]
+"14628" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5187</SUB>> ]
+"14634" [label = <(ALOGD,ALOGD(&quot;LayerTracing disabled&quot;))<SUB>5189</SUB>> ]
+"14636" [label = <(&lt;operator&gt;.assignment,mTracingEnabledChanged = mTracing.disable())<SUB>5190</SUB>> ]
+"14672" [label = <(FIELD_IDENTIFIER,isEnabled,isEnabled)<SUB>5200</SUB>> ]
+"14694" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5210</SUB>> ]
+"14703" [label = <(FIELD_IDENTIFIER,kManaged,kManaged)<SUB>5212</SUB>> ]
+"14705" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5213</SUB>> ]
+"14713" [label = <(FIELD_IDENTIFIER,kUnmanaged,kUnmanaged)<SUB>5215</SUB>> ]
+"14715" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5216</SUB>> ]
+"14723" [label = <(FIELD_IDENTIFIER,kEnhanced,kEnhanced)<SUB>5218</SUB>> ]
+"14725" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5219</SUB>> ]
+"14728" [label = <(hasRenderIntent,display-&gt;hasRenderIntent(RenderIntent::ENHANCE))<SUB>5219</SUB>> ]
+"14738" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5222</SUB>> ]
+"14741" [label = <(hasRenderIntent,display-&gt;hasRenderIntent(static_cast&lt;RenderIntent&gt;(setting)))<SUB>5223</SUB>> ]
+"14763" [label = <(getHwComposer,getHwComposer())<SUB>5231</SUB>> ]
+"14764" [label = <(FIELD_IDENTIFIER,isUsingVrComposer,isUsingVrComposer)<SUB>5231</SUB>> ]
+"14775" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5236</SUB>> ]
+"14789" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5239</SUB>> ]
+"14833" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5260</SUB>> ]
+"14839" [label = <(readInt32,data.readInt32())<SUB>5262</SUB>> ]
+"14864" [label = <(readInt32,data.readInt32())<SUB>5270</SUB>> ]
+"14889" [label = <(&lt;operator&gt;.assignment,mDefaultCompositionDataspace = defaultCompositionDataspace)<SUB>5280</SUB>> ]
+"14892" [label = <(&lt;operator&gt;.assignment,mWideColorGamutCompositionDataspace = wideColorGamutCompositionDataspace)<SUB>5281</SUB>> ]
+"14905" [label = <(FIELD_IDENTIFIER,readUint32,readUint32)<SUB>5287</SUB>> ]
+"14928" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5294</SUB>> ]
+"14937" [label = <(&lt;operator&gt;.cast,static_cast&lt;bool&gt;(n))<SUB>5297</SUB>> ]
+"14944" [label = <(lock,lock(mStateLock))<SUB>5300</SUB>> ]
+"14946" [label = <(writeBool,reply-&gt;writeBool(mRefreshRateOverlay != nullptr))<SUB>5301</SUB>> ]
+"14963" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5307</SUB>> ]
+"14975" [label = <(getInternalDisplayToken,getInternalDisplayToken())<SUB>5310</SUB>> ]
+"14979" [label = <(setActiveConfig,setActiveConfig(displayToken, n))<SUB>5311</SUB>> ]
+"14983" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>5312</SUB>> ]
+"15000" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5320</SUB>> ]
+"15008" [label = <(acquireFrameRateFlexibilityToken,acquireFrameRateFlexibilityToken(&amp;mDebugFrameRateFlexibilityToken))<SUB>5322</SUB>> ]
+"15012" [label = <(&lt;operator&gt;.notEquals,result != NO_ERROR)<SUB>5323</SUB>> ]
+"15020" [label = <(&lt;operator&gt;.assignment,mDebugFrameRateFlexibilityToken = nullptr)<SUB>5327</SUB>> ]
+"14300" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5079</SUB>> ]
+"14303" [label = <(FIELD_IDENTIFIER,Protanomaly,Protanomaly)<SUB>5079</SUB>> ]
+"14310" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5082</SUB>> ]
+"14313" [label = <(FIELD_IDENTIFIER,Deuteranomaly,Deuteranomaly)<SUB>5082</SUB>> ]
+"14320" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5085</SUB>> ]
+"14323" [label = <(FIELD_IDENTIFIER,Tritanomaly,Tritanomaly)<SUB>5085</SUB>> ]
+"14329" [label = <(FIELD_IDENTIFIER,setType,setType)<SUB>5088</SUB>> ]
+"14332" [label = <(FIELD_IDENTIFIER,None,None)<SUB>5088</SUB>> ]
+"14342" [label = <(FIELD_IDENTIFIER,setMode,setMode)<SUB>5092</SUB>> ]
+"14345" [label = <(FIELD_IDENTIFIER,Correction,Correction)<SUB>5092</SUB>> ]
+"14349" [label = <(&lt;operator&gt;.fieldAccess,mDaltonizer.setMode)<SUB>5094</SUB>> ]
+"14352" [label = <(&lt;operator&gt;.fieldAccess,ColorBlindnessMode::Simulation)<SUB>5094</SUB>> ]
+"14376" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>5106</SUB>> ]
+"14411" [label = <(mat4,mat4())<SUB>5112</SUB>> ]
+"14421" [label = <(&lt;operator&gt;.subtraction,lastRow - float4{0, 0, 0, 1})<SUB>5118</SUB>> ]
+"14430" [label = <(&lt;operator&gt;.arrayInitializer,{1e-4f})<SUB>5118</SUB>> ]
+"14514" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>5147</SUB>> ]
+"14517" [label = <(FIELD_IDENTIFIER,layersSortedByZ,layersSortedByZ)<SUB>5147</SUB>> ]
+"14520" [label = <(FIELD_IDENTIFIER,displays,displays)<SUB>5147</SUB>> ]
+"14526" [label = <(&lt;operator&gt;.indirectFieldAccess,mInterceptor-&gt;disable)<SUB>5151</SUB>> ]
+"14562" [label = <(FIELD_IDENTIFIER,min,min)<SUB>5162</SUB>> ]
+"14564" [label = <(&lt;operator&gt;.fieldAccess,data.readFloat)<SUB>5162</SUB>> ]
+"14582" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5170</SUB>> ]
+"14588" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5171</SUB>> ]
+"14596" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>5172</SUB>> ]
+"14624" [label = <(&lt;operator&gt;.fieldAccess,mTracing.enable)<SUB>5186</SUB>> ]
+"14630" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5187</SUB>> ]
+"14638" [label = <(disable,mTracing.disable())<SUB>5190</SUB>> ]
+"14696" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5210</SUB>> ]
+"14707" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5213</SUB>> ]
+"14717" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5216</SUB>> ]
+"14727" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5219</SUB>> ]
+"14729" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasRenderIntent)<SUB>5219</SUB>> ]
+"14732" [label = <(&lt;operator&gt;.fieldAccess,RenderIntent::ENHANCE)<SUB>5219</SUB>> ]
+"14740" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5222</SUB>> ]
+"14742" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;hasRenderIntent)<SUB>5223</SUB>> ]
+"14745" [label = <(&lt;operator&gt;.cast,static_cast&lt;RenderIntent&gt;(setting))<SUB>5223</SUB>> ]
+"14791" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5239</SUB>> ]
+"14840" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5262</SUB>> ]
+"14847" [label = <(&lt;operator&gt;.assignment,dataspace = static_cast&lt;Dataspace&gt;(n))<SUB>5264</SUB>> ]
+"14859" [label = <(&lt;operator&gt;.assignment,mDefaultCompositionDataspace = dataspace)<SUB>5268</SUB>> ]
+"14865" [label = <(&lt;operator&gt;.fieldAccess,data.readInt32)<SUB>5270</SUB>> ]
+"14872" [label = <(&lt;operator&gt;.assignment,dataspace = static_cast&lt;Dataspace&gt;(n))<SUB>5272</SUB>> ]
+"14884" [label = <(&lt;operator&gt;.assignment,mWideColorGamutCompositionDataspace = dataspace)<SUB>5276</SUB>> ]
+"14930" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5294</SUB>> ]
+"14938" [label = <(UNKNOWN,bool,bool)<SUB>5297</SUB>> ]
+"14947" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeBool)<SUB>5301</SUB>> ]
+"14950" [label = <(&lt;operator&gt;.notEquals,mRefreshRateOverlay != nullptr)<SUB>5301</SUB>> ]
+"14987" [label = <(RETURN,return result;,return result;)<SUB>5313</SUB>> ]
+"15002" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5320</SUB>> ]
+"15009" [label = <(&lt;operator&gt;.addressOf,&amp;mDebugFrameRateFlexibilityToken)<SUB>5322</SUB>> ]
+"15016" [label = <(RETURN,return result;,return result;)<SUB>5324</SUB>> ]
+"14351" [label = <(FIELD_IDENTIFIER,setMode,setMode)<SUB>5094</SUB>> ]
+"14354" [label = <(FIELD_IDENTIFIER,Simulation,Simulation)<SUB>5094</SUB>> ]
+"14391" [label = <(&lt;operator&gt;.lessThan,j &lt; 4)<SUB>5107</SUB>> ]
+"14394" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>5107</SUB>> ]
+"14423" [label = <(float4,float4{0, 0, 0, 1})<SUB>5118</SUB>> ]
+"14528" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>5151</SUB>> ]
+"14566" [label = <(FIELD_IDENTIFIER,readFloat,readFloat)<SUB>5162</SUB>> ]
+"14626" [label = <(FIELD_IDENTIFIER,enable,enable)<SUB>5186</SUB>> ]
+"14639" [label = <(&lt;operator&gt;.fieldAccess,mTracing.disable)<SUB>5190</SUB>> ]
+"14645" [label = <(writeInt32,reply-&gt;writeInt32(mTracing.writeToFile()))<SUB>5192</SUB>> ]
+"14731" [label = <(FIELD_IDENTIFIER,hasRenderIntent,hasRenderIntent)<SUB>5219</SUB>> ]
+"14734" [label = <(FIELD_IDENTIFIER,ENHANCE,ENHANCE)<SUB>5219</SUB>> ]
+"14744" [label = <(FIELD_IDENTIFIER,hasRenderIntent,hasRenderIntent)<SUB>5223</SUB>> ]
+"14746" [label = <(UNKNOWN,RenderIntent,RenderIntent)<SUB>5223</SUB>> ]
+"14842" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5262</SUB>> ]
+"14849" [label = <(&lt;operator&gt;.cast,static_cast&lt;Dataspace&gt;(n))<SUB>5264</SUB>> ]
+"14853" [label = <(&lt;operator&gt;.logicalNot,!validateCompositionDataspace(dataspace))<SUB>5265</SUB>> ]
+"14867" [label = <(FIELD_IDENTIFIER,readInt32,readInt32)<SUB>5270</SUB>> ]
+"14874" [label = <(&lt;operator&gt;.cast,static_cast&lt;Dataspace&gt;(n))<SUB>5272</SUB>> ]
+"14878" [label = <(&lt;operator&gt;.logicalNot,!validateCompositionDataspace(dataspace))<SUB>5273</SUB>> ]
+"14949" [label = <(FIELD_IDENTIFIER,writeBool,writeBool)<SUB>5301</SUB>> ]
+"14388" [label = <(&lt;operator&gt;.assignment,j = 0)<SUB>5107</SUB>> ]
+"14397" [label = <(&lt;operator&gt;.assignment,mClientColorMatrix[i][j] = data.readFloat())<SUB>5108</SUB>> ]
+"14424" [label = <(&lt;operator&gt;.arrayInitializer,{0, 0, 0, 1})<SUB>5118</SUB>> ]
+"14641" [label = <(FIELD_IDENTIFIER,disable,disable)<SUB>5190</SUB>> ]
+"14646" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5192</SUB>> ]
+"14649" [label = <(writeToFile,mTracing.writeToFile())<SUB>5192</SUB>> ]
+"14655" [label = <(writeInt32,reply-&gt;writeInt32(NO_ERROR))<SUB>5194</SUB>> ]
+"14850" [label = <(UNKNOWN,Dataspace,Dataspace)<SUB>5264</SUB>> ]
+"14854" [label = <(validateCompositionDataspace,validateCompositionDataspace(dataspace))<SUB>5265</SUB>> ]
+"14857" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5266</SUB>> ]
+"14875" [label = <(UNKNOWN,Dataspace,Dataspace)<SUB>5272</SUB>> ]
+"14879" [label = <(validateCompositionDataspace,validateCompositionDataspace(dataspace))<SUB>5273</SUB>> ]
+"14882" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5274</SUB>> ]
+"14398" [label = <(&lt;operator&gt;.indirectIndexAccess,mClientColorMatrix[i][j])<SUB>5108</SUB>> ]
+"14403" [label = <(readFloat,data.readFloat())<SUB>5108</SUB>> ]
+"14648" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5192</SUB>> ]
+"14650" [label = <(&lt;operator&gt;.fieldAccess,mTracing.writeToFile)<SUB>5192</SUB>> ]
+"14656" [label = <(&lt;operator&gt;.indirectFieldAccess,reply-&gt;writeInt32)<SUB>5194</SUB>> ]
+"14399" [label = <(&lt;operator&gt;.indirectIndexAccess,mClientColorMatrix[i])<SUB>5108</SUB>> ]
+"14404" [label = <(&lt;operator&gt;.fieldAccess,data.readFloat)<SUB>5108</SUB>> ]
+"14652" [label = <(FIELD_IDENTIFIER,writeToFile,writeToFile)<SUB>5192</SUB>> ]
+"14658" [label = <(FIELD_IDENTIFIER,writeInt32,writeInt32)<SUB>5194</SUB>> ]
+"14406" [label = <(FIELD_IDENTIFIER,readFloat,readFloat)<SUB>5108</SUB>> ]
+"14053" [label = <(METHOD,onTransact)<SUB>4999</SUB>> ]
+"15027" [label = <(METHOD_RETURN,status_t)<SUB>4999</SUB>> ]
+  "14060" -> "14065" 
+  "14072" -> "14084" 
+  "15025" -> "15027" 
+  "14062" -> "14060" 
+  "14065" -> "14069" 
+  "14065" -> "14077" 
+  "14074" -> "14072" 
+  "14083" -> "14091" 
+  "14083" -> "15025" 
+  "14069" -> "15027" 
+  "14075" -> "14074" 
+  "14084" -> "14083" 
+  "14084" -> "14087" 
+  "14087" -> "14083" 
+  "14091" -> "14101" 
+  "14096" -> "14108" 
+  "14103" -> "14112" 
+  "14077" -> "14075" 
+  "14098" -> "14096" 
+  "14105" -> "14103" 
+  "14110" -> "14128" 
+  "14110" -> "14143" 
+  "14110" -> "14152" 
+  "14110" -> "14169" 
+  "14110" -> "14176" 
+  "14110" -> "14189" 
+  "14110" -> "14199" 
+  "14110" -> "14216" 
+  "14110" -> "14231" 
+  "14110" -> "14261" 
+  "14110" -> "14282" 
+  "14110" -> "14362" 
+  "14110" -> "14441" 
+  "14110" -> "14451" 
+  "14110" -> "14467" 
+  "14110" -> "14486" 
+  "14110" -> "14505" 
+  "14110" -> "14539" 
+  "14110" -> "14550" 
+  "14110" -> "14578" 
+  "14110" -> "14605" 
+  "14110" -> "14615" 
+  "14110" -> "14668" 
+  "14110" -> "14681" 
+  "14110" -> "14755" 
+  "14110" -> "14775" 
+  "14110" -> "14818" 
+  "14110" -> "14826" 
+  "14110" -> "14905" 
+  "14110" -> "14930" 
+  "14110" -> "14963" 
+  "14110" -> "15002" 
+  "14110" -> "15025" 
+  "14099" -> "14098" 
+  "14106" -> "14105" 
+  "14111" -> "14110" 
+  "14123" -> "14129" 
+  "14129" -> "14133" 
+  "14133" -> "15027" 
+  "14143" -> "15027" 
+  "14147" -> "14155" 
+  "14147" -> "14158" 
+  "14153" -> "14162" 
+  "14162" -> "14163" 
+  "14163" -> "14164" 
+  "14164" -> "15027" 
+  "14194" -> "14202" 
+  "14200" -> "14205" 
+  "14205" -> "14206" 
   "14206" -> "14207" 
-  "14207" -> "14208" 
-  "14208" -> "15011" 
-  "14212" -> "14220" 
-  "14217" -> "14225" 
-  "14222" -> "14230" 
-  "14227" -> "14235" 
-  "14232" -> "14237" 
-  "14237" -> "15011" 
-  "14085" -> "14083" 
-  "14092" -> "14090" 
-  "14096" -> "14095" 
-  "14096" -> "14103" 
-  "14099" -> "14095" 
-  "14109" -> "14107" 
-  "14133" -> "14131" 
-  "14139" -> "14137" 
-  "14153" -> "14154" 
-  "14154" -> "15011" 
-  "14160" -> "14164" 
-  "14162" -> "14168" 
-  "14168" -> "15011" 
-  "14173" -> "14174" 
-  "14174" -> "15011" 
-  "14180" -> "14178" 
-  "14186" -> "14184" 
-  "14197" -> "14195" 
-  "14203" -> "14201" 
-  "14213" -> "14212" 
-  "14218" -> "14217" 
-  "14223" -> "14222" 
-  "14228" -> "14227" 
-  "14233" -> "14232" 
-  "14243" -> "14247" 
-  "14252" -> "14260" 
-  "14260" -> "15011" 
-  "14266" -> "14273" 
-  "14268" -> "14275" 
-  "14339" -> "14340" 
-  "14340" -> "15011" 
-  "14346" -> "14353" 
-  "14348" -> "14360" 
-  "14348" -> "14395" 
-  "14419" -> "14420" 
-  "14420" -> "15011" 
-  "14425" -> "15011" 
-  "14430" -> "14438" 
-  "14436" -> "14441" 
-  "14441" -> "15011" 
-  "14446" -> "14455" 
-  "14452" -> "14460" 
-  "14460" -> "15011" 
-  "14465" -> "14474" 
-  "14471" -> "14479" 
-  "14479" -> "15011" 
-  "14484" -> "14493" 
-  "14484" -> "14507" 
-  "14513" -> "15011" 
-  "14518" -> "14526" 
-  "14524" -> "14528" 
-  "14528" -> "15011" 
-  "14534" -> "14541" 
-  "14536" -> "14552" 
-  "14552" -> "14553" 
-  "14553" -> "15011" 
-  "14559" -> "14572" 
-  "14582" -> "14583" 
-  "14583" -> "14584" 
-  "14584" -> "15011" 
-  "14589" -> "15011" 
-  "14594" -> "14603" 
-  "14594" -> "14618" 
-  "14644" -> "15011" 
-  "14649" -> "14657" 
-  "14657" -> "15011" 
-  "14663" -> "14667" 
-  "14673" -> "14687" 
-  "14673" -> "14697" 
-  "14673" -> "14707" 
-  "14673" -> "14724" 
-  "14733" -> "15011" 
-  "14739" -> "14744" 
-  "14741" -> "14749" 
-  "14749" -> "15011" 
-  "14754" -> "14762" 
-  "14779" -> "14785" 
-  "14782" -> "14792" 
-  "14789" -> "14794" 
-  "14794" -> "15011" 
-  "14799" -> "14804" 
-  "14804" -> "15011" 
-  "14810" -> "14817" 
-  "14812" -> "14826" 
-  "14812" -> "14873" 
-  "14879" -> "15011" 
-  "14884" -> "14890" 
-  "14890" -> "14896" 
-  "14893" -> "14901" 
-  "14898" -> "14903" 
-  "14903" -> "15011" 
-  "14937" -> "15011" 
-  "14942" -> "14948" 
-  "14948" -> "14952" 
-  "14976" -> "15011" 
-  "15007" -> "15011" 
-  "14100" -> "14099" 
-  "14110" -> "14109" 
-  "14134" -> "14133" 
-  "14142" -> "14139" 
-  "14163" -> "14162" 
-  "14181" -> "14180" 
-  "14198" -> "14197" 
-  "14215" -> "14213" 
-  "14220" -> "14218" 
-  "14225" -> "14223" 
-  "14230" -> "14228" 
-  "14235" -> "14233" 
-  "14245" -> "14243" 
-  "14247" -> "14250" 
-  "14247" -> "14255" 
-  "14253" -> "14259" 
-  "14256" -> "14252" 
-  "14270" -> "14268" 
-  "14275" -> "14284" 
-  "14275" -> "14294" 
-  "14275" -> "14304" 
-  "14275" -> "14313" 
-  "14319" -> "14326" 
-  "14319" -> "14335" 
-  "14350" -> "14348" 
-  "14402" -> "14419" 
-  "14402" -> "14417" 
-  "14432" -> "14430" 
-  "14438" -> "14436" 
+  "14207" -> "15027" 
+  "14211" -> "14219" 
+  "14217" -> "14222" 
+  "14222" -> "14223" 
+  "14223" -> "14224" 
+  "14224" -> "15027" 
+  "14228" -> "14236" 
+  "14233" -> "14241" 
+  "14238" -> "14246" 
+  "14243" -> "14251" 
+  "14248" -> "14253" 
+  "14253" -> "15027" 
+  "14101" -> "14099" 
+  "14108" -> "14106" 
+  "14112" -> "14111" 
+  "14112" -> "14119" 
+  "14115" -> "14111" 
+  "14125" -> "14123" 
+  "14149" -> "14147" 
+  "14155" -> "14153" 
+  "14169" -> "14170" 
+  "14170" -> "15027" 
+  "14176" -> "14180" 
+  "14178" -> "14184" 
+  "14184" -> "15027" 
+  "14189" -> "14190" 
+  "14190" -> "15027" 
+  "14196" -> "14194" 
+  "14202" -> "14200" 
+  "14213" -> "14211" 
+  "14219" -> "14217" 
+  "14229" -> "14228" 
+  "14234" -> "14233" 
+  "14239" -> "14238" 
+  "14244" -> "14243" 
+  "14249" -> "14248" 
+  "14259" -> "14263" 
+  "14268" -> "14276" 
+  "14276" -> "15027" 
+  "14282" -> "14289" 
+  "14284" -> "14291" 
+  "14355" -> "14356" 
+  "14356" -> "15027" 
+  "14362" -> "14369" 
+  "14364" -> "14376" 
+  "14364" -> "14411" 
+  "14435" -> "14436" 
+  "14436" -> "15027" 
+  "14441" -> "15027" 
+  "14446" -> "14454" 
+  "14452" -> "14457" 
+  "14457" -> "15027" 
+  "14462" -> "14471" 
+  "14468" -> "14476" 
+  "14476" -> "15027" 
+  "14481" -> "14490" 
+  "14487" -> "14495" 
+  "14495" -> "15027" 
+  "14500" -> "14509" 
+  "14500" -> "14523" 
+  "14529" -> "15027" 
+  "14534" -> "14542" 
+  "14540" -> "14544" 
+  "14544" -> "15027" 
+  "14550" -> "14557" 
+  "14552" -> "14568" 
+  "14568" -> "14569" 
+  "14569" -> "15027" 
+  "14575" -> "14588" 
+  "14598" -> "14599" 
+  "14599" -> "14600" 
+  "14600" -> "15027" 
+  "14605" -> "15027" 
+  "14610" -> "14619" 
+  "14610" -> "14634" 
+  "14660" -> "15027" 
+  "14665" -> "14673" 
+  "14673" -> "15027" 
+  "14679" -> "14683" 
+  "14689" -> "14703" 
+  "14689" -> "14713" 
+  "14689" -> "14723" 
+  "14689" -> "14740" 
+  "14749" -> "15027" 
+  "14755" -> "14760" 
+  "14757" -> "14765" 
+  "14765" -> "15027" 
+  "14770" -> "14778" 
+  "14795" -> "14801" 
+  "14798" -> "14808" 
+  "14805" -> "14810" 
+  "14810" -> "15027" 
+  "14815" -> "14820" 
+  "14820" -> "15027" 
+  "14826" -> "14833" 
+  "14828" -> "14842" 
+  "14828" -> "14889" 
+  "14895" -> "15027" 
+  "14900" -> "14906" 
+  "14906" -> "14912" 
+  "14909" -> "14917" 
+  "14914" -> "14919" 
+  "14919" -> "15027" 
+  "14953" -> "15027" 
+  "14958" -> "14964" 
+  "14964" -> "14968" 
+  "14992" -> "15027" 
+  "15023" -> "15027" 
+  "14116" -> "14115" 
+  "14126" -> "14125" 
+  "14150" -> "14149" 
+  "14158" -> "14155" 
+  "14179" -> "14178" 
+  "14197" -> "14196" 
+  "14214" -> "14213" 
+  "14231" -> "14229" 
+  "14236" -> "14234" 
+  "14241" -> "14239" 
+  "14246" -> "14244" 
+  "14251" -> "14249" 
+  "14261" -> "14259" 
+  "14263" -> "14266" 
+  "14263" -> "14271" 
+  "14269" -> "14275" 
+  "14272" -> "14268" 
+  "14286" -> "14284" 
+  "14291" -> "14300" 
+  "14291" -> "14310" 
+  "14291" -> "14320" 
+  "14291" -> "14329" 
+  "14335" -> "14342" 
+  "14335" -> "14351" 
+  "14366" -> "14364" 
+  "14418" -> "14435" 
+  "14418" -> "14433" 
   "14448" -> "14446" 
-  "14453" -> "14458" 
-  "14457" -> "14452" 
-  "14467" -> "14465" 
-  "14472" -> "14477" 
-  "14476" -> "14471" 
-  "14486" -> "14484" 
-  "14520" -> "14518" 
-  "14526" -> "14524" 
-  "14538" -> "14536" 
-  "14561" -> "14559" 
-  "14568" -> "14582" 
-  "14568" -> "14580" 
-  "14596" -> "14594" 
-  "14650" -> "14656" 
-  "14653" -> "14649" 
-  "14665" -> "14663" 
-  "14667" -> "14670" 
-  "14667" -> "14676" 
-  "14675" -> "14673" 
-  "14742" -> "14747" 
-  "14745" -> "14741" 
-  "14756" -> "14754" 
-  "14761" -> "14769" 
-  "14761" -> "14779" 
-  "14783" -> "14786" 
-  "14786" -> "14782" 
-  "14790" -> "14789" 
-  "14800" -> "14799" 
-  "14814" -> "14812" 
-  "14886" -> "14884" 
-  "14894" -> "14893" 
-  "14899" -> "14898" 
-  "14909" -> "14922" 
-  "14909" -> "14928" 
-  "14944" -> "14942" 
-  "14952" -> "14959" 
-  "14952" -> "14976" 
-  "14982" -> "14993" 
-  "14982" -> "15004" 
-  "14101" -> "14100" 
-  "14112" -> "14110" 
-  "14136" -> "14134" 
-  "14164" -> "14163" 
-  "14183" -> "14181" 
-  "14200" -> "14198" 
-  "14250" -> "15011" 
-  "14255" -> "14253" 
-  "14257" -> "14256" 
-  "14271" -> "14270" 
-  "14281" -> "14319" 
-  "14291" -> "14319" 
-  "14301" -> "14319" 
-  "14310" -> "14319" 
-  "14323" -> "14339" 
-  "14351" -> "14350" 
-  "14403" -> "14402" 
-  "14417" -> "14419" 
-  "14433" -> "14432" 
+  "14454" -> "14452" 
+  "14464" -> "14462" 
+  "14469" -> "14474" 
+  "14473" -> "14468" 
+  "14483" -> "14481" 
+  "14488" -> "14493" 
+  "14492" -> "14487" 
+  "14502" -> "14500" 
+  "14536" -> "14534" 
+  "14542" -> "14540" 
+  "14554" -> "14552" 
+  "14577" -> "14575" 
+  "14584" -> "14598" 
+  "14584" -> "14596" 
+  "14612" -> "14610" 
+  "14666" -> "14672" 
+  "14669" -> "14665" 
+  "14681" -> "14679" 
+  "14683" -> "14686" 
+  "14683" -> "14692" 
+  "14691" -> "14689" 
+  "14758" -> "14763" 
+  "14761" -> "14757" 
+  "14772" -> "14770" 
+  "14777" -> "14785" 
+  "14777" -> "14795" 
+  "14799" -> "14802" 
+  "14802" -> "14798" 
+  "14806" -> "14805" 
+  "14816" -> "14815" 
+  "14830" -> "14828" 
+  "14902" -> "14900" 
+  "14910" -> "14909" 
+  "14915" -> "14914" 
+  "14925" -> "14938" 
+  "14925" -> "14944" 
+  "14960" -> "14958" 
+  "14968" -> "14975" 
+  "14968" -> "14992" 
+  "14998" -> "15009" 
+  "14998" -> "15020" 
+  "14117" -> "14116" 
+  "14128" -> "14126" 
+  "14152" -> "14150" 
+  "14180" -> "14179" 
+  "14199" -> "14197" 
+  "14216" -> "14214" 
+  "14266" -> "15027" 
+  "14271" -> "14269" 
+  "14273" -> "14272" 
+  "14287" -> "14286" 
+  "14297" -> "14335" 
+  "14307" -> "14335" 
+  "14317" -> "14335" 
+  "14326" -> "14335" 
+  "14339" -> "14355" 
+  "14367" -> "14366" 
+  "14419" -> "14418" 
+  "14433" -> "14435" 
   "14449" -> "14448" 
-  "14455" -> "14453" 
-  "14458" -> "14457" 
-  "14468" -> "14467" 
-  "14474" -> "14472" 
-  "14477" -> "14476" 
-  "14487" -> "14486" 
-  "14493" -> "14498" 
-  "14495" -> "14513" 
-  "14521" -> "14520" 
-  "14539" -> "14546" 
-  "14543" -> "14538" 
-  "14562" -> "14566" 
-  "14563" -> "14561" 
-  "14569" -> "14568" 
-  "14577" -> "14582" 
-  "14597" -> "14596" 
-  "14603" -> "14610" 
-  "14605" -> "14614" 
-  "14611" -> "14644" 
-  "14652" -> "14650" 
-  "14654" -> "14653" 
-  "14670" -> "15011" 
-  "14676" -> "14680" 
-  "14677" -> "14675" 
-  "14685" -> "14691" 
-  "14688" -> "14733" 
-  "14695" -> "14701" 
-  "14698" -> "14733" 
-  "14705" -> "14711" 
-  "14708" -> "14733" 
-  "14721" -> "14733" 
-  "14744" -> "14742" 
-  "14746" -> "14745" 
-  "14757" -> "14756" 
-  "14762" -> "14761" 
-  "14762" -> "14765" 
-  "14765" -> "14761" 
-  "14769" -> "14775" 
-  "14772" -> "14777" 
-  "14777" -> "15011" 
-  "14785" -> "14783" 
-  "14792" -> "14790" 
-  "14802" -> "14800" 
-  "14815" -> "14814" 
-  "14821" -> "14834" 
-  "14821" -> "14851" 
-  "14846" -> "14859" 
-  "14846" -> "14879" 
-  "14887" -> "14886" 
-  "14896" -> "14894" 
-  "14901" -> "14899" 
-  "14911" -> "14909" 
-  "14920" -> "14937" 
-  "14945" -> "14944" 
-  "14957" -> "14963" 
-  "14961" -> "14967" 
-  "14973" -> "14976" 
-  "14983" -> "14982" 
-  "14990" -> "14996" 
-  "14103" -> "14101" 
-  "14259" -> "14257" 
-  "14273" -> "14271" 
-  "14282" -> "14287" 
-  "14285" -> "14281" 
-  "14292" -> "14297" 
-  "14295" -> "14291" 
-  "14302" -> "14307" 
-  "14305" -> "14301" 
-  "14311" -> "14316" 
-  "14314" -> "14310" 
-  "14324" -> "14329" 
-  "14327" -> "14323" 
-  "14332" -> "14339" 
-  "14353" -> "14351" 
-  "14363" -> "14372" 
-  "14363" -> "14408" 
-  "14366" -> "14363" 
-  "14393" -> "14408" 
-  "14404" -> "14414" 
-  "14413" -> "14403" 
-  "14435" -> "14433" 
-  "14451" -> "14449" 
-  "14470" -> "14468" 
-  "14489" -> "14487" 
-  "14496" -> "14501" 
-  "14499" -> "14504" 
-  "14502" -> "14495" 
-  "14507" -> "14512" 
-  "14509" -> "14513" 
-  "14523" -> "14521" 
-  "14541" -> "14539" 
-  "14544" -> "14550" 
-  "14547" -> "14543" 
-  "14564" -> "14563" 
-  "14570" -> "14573" 
-  "14573" -> "14569" 
+  "14465" -> "14464" 
+  "14471" -> "14469" 
+  "14474" -> "14473" 
+  "14484" -> "14483" 
+  "14490" -> "14488" 
+  "14493" -> "14492" 
+  "14503" -> "14502" 
+  "14509" -> "14514" 
+  "14511" -> "14529" 
+  "14537" -> "14536" 
+  "14555" -> "14562" 
+  "14559" -> "14554" 
+  "14578" -> "14582" 
   "14579" -> "14577" 
-  "14599" -> "14597" 
-  "14607" -> "14605" 
-  "14612" -> "14611" 
-  "14618" -> "14625" 
-  "14620" -> "14632" 
-  "14620" -> "14642" 
-  "14656" -> "14654" 
-  "14678" -> "14677" 
-  "14687" -> "14685" 
-  "14689" -> "14688" 
-  "14697" -> "14695" 
-  "14699" -> "14698" 
-  "14707" -> "14705" 
-  "14709" -> "14715" 
-  "14712" -> "14708" 
-  "14722" -> "14728" 
-  "14725" -> "14721" 
-  "14747" -> "14748" 
-  "14748" -> "14746" 
-  "14759" -> "14757" 
+  "14585" -> "14584" 
+  "14593" -> "14598" 
+  "14613" -> "14612" 
+  "14619" -> "14626" 
+  "14621" -> "14630" 
+  "14627" -> "14660" 
+  "14668" -> "14666" 
+  "14670" -> "14669" 
+  "14686" -> "15027" 
+  "14692" -> "14696" 
+  "14693" -> "14691" 
+  "14701" -> "14707" 
+  "14704" -> "14749" 
+  "14711" -> "14717" 
+  "14714" -> "14749" 
+  "14721" -> "14727" 
+  "14724" -> "14749" 
+  "14737" -> "14749" 
+  "14760" -> "14758" 
+  "14762" -> "14761" 
   "14773" -> "14772" 
-  "14817" -> "14815" 
-  "14823" -> "14821" 
-  "14848" -> "14846" 
-  "14873" -> "14876" 
-  "14876" -> "14879" 
-  "14889" -> "14887" 
-  "14912" -> "14911" 
-  "14921" -> "14920" 
-  "14928" -> "14933" 
-  "14930" -> "14937" 
-  "14947" -> "14945" 
-  "14959" -> "14957" 
+  "14778" -> "14777" 
+  "14778" -> "14781" 
+  "14781" -> "14777" 
+  "14785" -> "14791" 
+  "14788" -> "14793" 
+  "14793" -> "15027" 
+  "14801" -> "14799" 
+  "14808" -> "14806" 
+  "14818" -> "14816" 
+  "14831" -> "14830" 
+  "14837" -> "14850" 
+  "14837" -> "14867" 
+  "14862" -> "14875" 
+  "14862" -> "14895" 
+  "14903" -> "14902" 
+  "14912" -> "14910" 
+  "14917" -> "14915" 
+  "14927" -> "14925" 
+  "14936" -> "14953" 
+  "14961" -> "14960" 
+  "14973" -> "14979" 
+  "14977" -> "14983" 
+  "14989" -> "14992" 
+  "14999" -> "14998" 
+  "15006" -> "15012" 
+  "14119" -> "14117" 
+  "14275" -> "14273" 
+  "14289" -> "14287" 
+  "14298" -> "14303" 
+  "14301" -> "14297" 
+  "14308" -> "14313" 
+  "14311" -> "14307" 
+  "14318" -> "14323" 
+  "14321" -> "14317" 
+  "14327" -> "14332" 
+  "14330" -> "14326" 
+  "14340" -> "14345" 
+  "14343" -> "14339" 
+  "14348" -> "14355" 
+  "14369" -> "14367" 
+  "14379" -> "14388" 
+  "14379" -> "14424" 
+  "14382" -> "14379" 
+  "14409" -> "14424" 
+  "14420" -> "14430" 
+  "14429" -> "14419" 
+  "14451" -> "14449" 
+  "14467" -> "14465" 
+  "14486" -> "14484" 
+  "14505" -> "14503" 
+  "14512" -> "14517" 
+  "14515" -> "14520" 
+  "14518" -> "14511" 
+  "14523" -> "14528" 
+  "14525" -> "14529" 
+  "14539" -> "14537" 
+  "14557" -> "14555" 
+  "14560" -> "14566" 
+  "14563" -> "14559" 
+  "14580" -> "14579" 
+  "14586" -> "14589" 
+  "14589" -> "14585" 
+  "14595" -> "14593" 
+  "14615" -> "14613" 
+  "14623" -> "14621" 
+  "14628" -> "14627" 
+  "14634" -> "14641" 
+  "14636" -> "14648" 
+  "14636" -> "14658" 
+  "14672" -> "14670" 
+  "14694" -> "14693" 
+  "14703" -> "14701" 
+  "14705" -> "14704" 
+  "14713" -> "14711" 
+  "14715" -> "14714" 
+  "14723" -> "14721" 
+  "14725" -> "14731" 
+  "14728" -> "14724" 
+  "14738" -> "14744" 
+  "14741" -> "14737" 
+  "14763" -> "14764" 
+  "14764" -> "14762" 
+  "14775" -> "14773" 
+  "14789" -> "14788" 
+  "14833" -> "14831" 
+  "14839" -> "14837" 
+  "14864" -> "14862" 
+  "14889" -> "14892" 
+  "14892" -> "14895" 
+  "14905" -> "14903" 
+  "14928" -> "14927" 
+  "14937" -> "14936" 
+  "14944" -> "14949" 
+  "14946" -> "14953" 
   "14963" -> "14961" 
-  "14967" -> "14971" 
-  "14967" -> "14973" 
-  "14984" -> "14983" 
-  "14992" -> "14990" 
-  "14996" -> "15000" 
-  "14996" -> "15007" 
-  "15004" -> "15007" 
-  "14284" -> "14282" 
-  "14287" -> "14285" 
-  "14294" -> "14292" 
-  "14297" -> "14295" 
-  "14304" -> "14302" 
-  "14307" -> "14305" 
+  "14975" -> "14973" 
+  "14979" -> "14977" 
+  "14983" -> "14987" 
+  "14983" -> "14989" 
+  "15000" -> "14999" 
+  "15008" -> "15006" 
+  "15012" -> "15016" 
+  "15012" -> "15023" 
+  "15020" -> "15023" 
+  "14300" -> "14298" 
+  "14303" -> "14301" 
+  "14310" -> "14308" 
   "14313" -> "14311" 
-  "14316" -> "14314" 
-  "14326" -> "14324" 
+  "14320" -> "14318" 
+  "14323" -> "14321" 
   "14329" -> "14327" 
-  "14333" -> "14338" 
-  "14336" -> "14332" 
-  "14360" -> "14363" 
-  "14395" -> "14393" 
-  "14405" -> "14404" 
-  "14414" -> "14413" 
-  "14498" -> "14496" 
-  "14501" -> "14499" 
-  "14504" -> "14502" 
-  "14510" -> "14509" 
-  "14546" -> "14544" 
-  "14548" -> "14547" 
+  "14332" -> "14330" 
+  "14342" -> "14340" 
+  "14345" -> "14343" 
+  "14349" -> "14354" 
+  "14352" -> "14348" 
+  "14376" -> "14379" 
+  "14411" -> "14409" 
+  "14421" -> "14420" 
+  "14430" -> "14429" 
+  "14514" -> "14512" 
+  "14517" -> "14515" 
+  "14520" -> "14518" 
+  "14526" -> "14525" 
+  "14562" -> "14560" 
+  "14564" -> "14563" 
+  "14582" -> "14580" 
+  "14588" -> "14586" 
+  "14596" -> "14595" 
+  "14624" -> "14623" 
+  "14630" -> "14628" 
+  "14638" -> "14636" 
+  "14696" -> "14694" 
+  "14707" -> "14705" 
+  "14717" -> "14715" 
+  "14727" -> "14725" 
+  "14729" -> "14734" 
+  "14732" -> "14728" 
+  "14740" -> "14738" 
+  "14742" -> "14746" 
+  "14745" -> "14741" 
+  "14791" -> "14789" 
+  "14840" -> "14839" 
+  "14847" -> "14854" 
+  "14859" -> "14867" 
+  "14865" -> "14864" 
+  "14872" -> "14879" 
+  "14884" -> "14895" 
+  "14930" -> "14928" 
+  "14938" -> "14937" 
+  "14947" -> "14950" 
+  "14950" -> "14946" 
+  "14987" -> "15027" 
+  "15002" -> "15000" 
+  "15009" -> "15008" 
+  "15016" -> "15027" 
+  "14351" -> "14349" 
+  "14354" -> "14352" 
+  "14391" -> "14399" 
+  "14391" -> "14382" 
+  "14394" -> "14391" 
+  "14423" -> "14421" 
+  "14528" -> "14526" 
   "14566" -> "14564" 
-  "14572" -> "14570" 
-  "14580" -> "14579" 
-  "14608" -> "14607" 
-  "14614" -> "14612" 
-  "14622" -> "14620" 
-  "14680" -> "14678" 
-  "14691" -> "14689" 
-  "14701" -> "14699" 
-  "14711" -> "14709" 
-  "14713" -> "14718" 
-  "14716" -> "14712" 
-  "14724" -> "14722" 
-  "14726" -> "14730" 
-  "14729" -> "14725" 
-  "14775" -> "14773" 
-  "14824" -> "14823" 
-  "14831" -> "14838" 
-  "14843" -> "14851" 
-  "14849" -> "14848" 
-  "14856" -> "14863" 
-  "14868" -> "14879" 
-  "14914" -> "14912" 
-  "14922" -> "14921" 
-  "14931" -> "14934" 
-  "14934" -> "14930" 
-  "14971" -> "15011" 
-  "14986" -> "14984" 
-  "14993" -> "14992" 
-  "15000" -> "15011" 
-  "14335" -> "14333" 
-  "14338" -> "14336" 
-  "14375" -> "14383" 
-  "14375" -> "14366" 
-  "14378" -> "14375" 
-  "14407" -> "14405" 
-  "14512" -> "14510" 
-  "14550" -> "14548" 
-  "14610" -> "14608" 
-  "14623" -> "14622" 
-  "14629" -> "14644" 
-  "14715" -> "14713" 
-  "14718" -> "14716" 
-  "14728" -> "14726" 
-  "14730" -> "14729" 
-  "14826" -> "14824" 
-  "14833" -> "14831" 
-  "14837" -> "14841" 
-  "14837" -> "14843" 
-  "14851" -> "14849" 
-  "14858" -> "14856" 
-  "14862" -> "14866" 
-  "14862" -> "14868" 
-  "14933" -> "14931" 
-  "14372" -> "14375" 
-  "14381" -> "14378" 
-  "14408" -> "14407" 
-  "14625" -> "14623" 
-  "14630" -> "14636" 
-  "14633" -> "14629" 
-  "14639" -> "14644" 
-  "14834" -> "14833" 
-  "14838" -> "14837" 
-  "14841" -> "15011" 
-  "14859" -> "14858" 
-  "14863" -> "14862" 
-  "14866" -> "15011" 
-  "14382" -> "14390" 
-  "14387" -> "14381" 
-  "14632" -> "14630" 
-  "14634" -> "14633" 
-  "14640" -> "14639" 
-  "14383" -> "14382" 
-  "14388" -> "14387" 
-  "14636" -> "14634" 
-  "14642" -> "14640" 
-  "14390" -> "14388" 
-  "14037" -> "14046" 
+  "14626" -> "14624" 
+  "14639" -> "14638" 
+  "14645" -> "14660" 
+  "14731" -> "14729" 
+  "14734" -> "14732" 
+  "14744" -> "14742" 
+  "14746" -> "14745" 
+  "14842" -> "14840" 
+  "14849" -> "14847" 
+  "14853" -> "14857" 
+  "14853" -> "14859" 
+  "14867" -> "14865" 
+  "14874" -> "14872" 
+  "14878" -> "14882" 
+  "14878" -> "14884" 
+  "14949" -> "14947" 
+  "14388" -> "14391" 
+  "14397" -> "14394" 
+  "14424" -> "14423" 
+  "14641" -> "14639" 
+  "14646" -> "14652" 
+  "14649" -> "14645" 
+  "14655" -> "14660" 
+  "14850" -> "14849" 
+  "14854" -> "14853" 
+  "14857" -> "15027" 
+  "14875" -> "14874" 
+  "14879" -> "14878" 
+  "14882" -> "15027" 
+  "14398" -> "14406" 
+  "14403" -> "14397" 
+  "14648" -> "14646" 
+  "14650" -> "14649" 
+  "14656" -> "14655" 
+  "14399" -> "14398" 
+  "14404" -> "14403" 
+  "14652" -> "14650" 
+  "14658" -> "14656" 
+  "14406" -> "14404" 
+  "14053" -> "14062" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/237-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/237-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/237-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/237-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,5 +1,5 @@
 digraph "lastRow" {  
-"14396" [label = <(METHOD,lastRow)<SUB>5118</SUB>> ]
-"14399" [label = <(METHOD_RETURN,float4)<SUB>5118</SUB>> ]
-  "14396" -> "14399" 
+"14412" [label = <(METHOD,lastRow)<SUB>5117</SUB>> ]
+"14415" [label = <(METHOD_RETURN,float4)<SUB>5117</SUB>> ]
+  "14412" -> "14415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/238-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/238-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/238-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/238-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,9 +1,9 @@
 digraph "repaintEverything" {  
-"15015" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>5338</SUB>> ]
-"15018" [label = <(signalTransaction,signalTransaction())<SUB>5339</SUB>> ]
-"15013" [label = <(METHOD,repaintEverything)<SUB>5337</SUB>> ]
-"15019" [label = <(METHOD_RETURN,void)<SUB>5337</SUB>> ]
-  "15015" -> "15018" 
-  "15018" -> "15019" 
-  "15013" -> "15015" 
+"15031" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>5337</SUB>> ]
+"15034" [label = <(signalTransaction,signalTransaction())<SUB>5338</SUB>> ]
+"15029" [label = <(METHOD,repaintEverything)<SUB>5336</SUB>> ]
+"15035" [label = <(METHOD_RETURN,void)<SUB>5336</SUB>> ]
+  "15031" -> "15034" 
+  "15034" -> "15035" 
+  "15029" -> "15031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/239-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/239-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/239-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/239-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,19 +1,19 @@
 digraph "repaintEverythingForHWC" {  
-"15023" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>5343</SUB>> ]
-"15026" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>5344</SUB>> ]
-"15030" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>5345</SUB>> ]
-"15027" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>5344</SUB>> ]
-"15031" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>5345</SUB>> ]
-"15029" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>5344</SUB>> ]
-"15033" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>5345</SUB>> ]
-"15021" [label = <(METHOD,repaintEverythingForHWC)<SUB>5342</SUB>> ]
-"15034" [label = <(METHOD_RETURN,void)<SUB>5342</SUB>> ]
-  "15023" -> "15029" 
-  "15026" -> "15033" 
-  "15030" -> "15034" 
-  "15027" -> "15026" 
-  "15031" -> "15030" 
-  "15029" -> "15027" 
-  "15033" -> "15031" 
-  "15021" -> "15023" 
+"15039" [label = <(&lt;operator&gt;.assignment,mRepaintEverything = true)<SUB>5342</SUB>> ]
+"15042" [label = <(notifyDisplayUpdateImminent,mPowerAdvisor.notifyDisplayUpdateImminent())<SUB>5343</SUB>> ]
+"15046" [label = <(invalidate,mEventQueue-&gt;invalidate())<SUB>5344</SUB>> ]
+"15043" [label = <(&lt;operator&gt;.fieldAccess,mPowerAdvisor.notifyDisplayUpdateImminent)<SUB>5343</SUB>> ]
+"15047" [label = <(&lt;operator&gt;.indirectFieldAccess,mEventQueue-&gt;invalidate)<SUB>5344</SUB>> ]
+"15045" [label = <(FIELD_IDENTIFIER,notifyDisplayUpdateImminent,notifyDisplayUpdateImminent)<SUB>5343</SUB>> ]
+"15049" [label = <(FIELD_IDENTIFIER,invalidate,invalidate)<SUB>5344</SUB>> ]
+"15037" [label = <(METHOD,repaintEverythingForHWC)<SUB>5341</SUB>> ]
+"15050" [label = <(METHOD_RETURN,void)<SUB>5341</SUB>> ]
+  "15039" -> "15045" 
+  "15042" -> "15049" 
+  "15046" -> "15050" 
+  "15043" -> "15042" 
+  "15047" -> "15046" 
+  "15045" -> "15043" 
+  "15049" -> "15047" 
+  "15037" -> "15039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/24-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/24-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/24-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/24-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_31" {  
-"111" [label = <(METHOD,anonymous_lambda_31)<SUB>2979</SUB>> ]
-"114" [label = <(METHOD_RETURN,ANY)<SUB>2979</SUB>> ]
+"111" [label = <(METHOD,anonymous_lambda_31)<SUB>2978</SUB>> ]
+"114" [label = <(METHOD_RETURN,ANY)<SUB>2978</SUB>> ]
   "111" -> "114" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/240-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/240-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/240-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/240-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,27 +1,27 @@
 digraph "kernelTimerChanged" {  
-"15040" [label = <(&lt;operator&gt;.assignment,updateOverlay =\012            property_get_bool(&quot;debug.sf.kernel_idle_timer_update_overlay&quot;, true))<SUB>5349</SUB>> ]
-"15055" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 })))<SUB>5356</SUB>> ]
-"15042" [label = <(property_get_bool,property_get_bool(&quot;debug.sf.kernel_idle_timer_update_overlay&quot;, true))<SUB>5350</SUB>> ]
-"15046" [label = <(&lt;operator&gt;.logicalNot,!updateOverlay)<SUB>5351</SUB>> ]
-"15051" [label = <(&lt;operator&gt;.logicalNot,!mRefreshRateOverlay)<SUB>5352</SUB>> ]
-"15056" [label = <(UNKNOWN,void,void)<SUB>5356</SUB>> ]
-"15057" [label = <(schedule,schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 }))<SUB>5356</SUB>> ]
-"15049" [label = <(RETURN,return;,return;)<SUB>5351</SUB>> ]
-"15054" [label = <(RETURN,return;,return;)<SUB>5352</SUB>> ]
-"15058" [label = <(METHOD_REF,ANY anonymous_lambda_53 (),schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 }))<SUB>5356</SUB>> ]
-"15036" [label = <(METHOD,kernelTimerChanged)<SUB>5348</SUB>> ]
-"15059" [label = <(METHOD_RETURN,void)<SUB>5348</SUB>> ]
-  "15040" -> "15046" 
-  "15055" -> "15059" 
-  "15042" -> "15040" 
-  "15046" -> "15049" 
-  "15046" -> "15051" 
-  "15051" -> "15054" 
-  "15051" -> "15056" 
-  "15056" -> "15058" 
-  "15057" -> "15055" 
-  "15049" -> "15059" 
-  "15054" -> "15059" 
-  "15058" -> "15057" 
-  "15036" -> "15042" 
+"15056" [label = <(&lt;operator&gt;.assignment,updateOverlay =\012            property_get_bool(&quot;debug.sf.kernel_idle_timer_update_overlay&quot;, true))<SUB>5348</SUB>> ]
+"15071" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 })))<SUB>5355</SUB>> ]
+"15058" [label = <(property_get_bool,property_get_bool(&quot;debug.sf.kernel_idle_timer_update_overlay&quot;, true))<SUB>5349</SUB>> ]
+"15062" [label = <(&lt;operator&gt;.logicalNot,!updateOverlay)<SUB>5350</SUB>> ]
+"15067" [label = <(&lt;operator&gt;.logicalNot,!mRefreshRateOverlay)<SUB>5351</SUB>> ]
+"15072" [label = <(UNKNOWN,void,void)<SUB>5355</SUB>> ]
+"15073" [label = <(schedule,schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 }))<SUB>5355</SUB>> ]
+"15065" [label = <(RETURN,return;,return;)<SUB>5350</SUB>> ]
+"15070" [label = <(RETURN,return;,return;)<SUB>5351</SUB>> ]
+"15074" [label = <(METHOD_REF,ANY anonymous_lambda_53 (),schedule([=] {\012 const auto desiredActiveConfig = getDesiredActiveConfig();\012 const auto&amp; current = desiredActiveConfig\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(desiredActiveConfig-&gt;configId)\012 : mRefreshRateConfigs-&gt;getCurrentRefreshRate();\012 const auto&amp; min = mRefreshRateConfigs-&gt;getMinRefreshRate();\012\012 if (current != min) {\012 const bool timerExpired = mKernelIdleTimerEnabled &amp;&amp; expired;\012\012 if (Mutex::Autolock lock(mStateLock); mRefreshRateOverlay) {\012                mRefreshRateOverlay-&gt;changeRefreshRate(timerExpired ? min : current);\012 }\012            mEventQueue-&gt;invalidate();\012 }\012 }))<SUB>5355</SUB>> ]
+"15052" [label = <(METHOD,kernelTimerChanged)<SUB>5347</SUB>> ]
+"15075" [label = <(METHOD_RETURN,void)<SUB>5347</SUB>> ]
+  "15056" -> "15062" 
+  "15071" -> "15075" 
+  "15058" -> "15056" 
+  "15062" -> "15065" 
+  "15062" -> "15067" 
+  "15067" -> "15070" 
+  "15067" -> "15072" 
+  "15072" -> "15074" 
+  "15073" -> "15071" 
+  "15065" -> "15075" 
+  "15070" -> "15075" 
+  "15074" -> "15073" 
+  "15052" -> "15058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/241-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/241-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/241-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/241-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,57 +1,57 @@
 digraph "toggleKernelIdleTimer" {  
-"15070" [label = <(&lt;operator&gt;.assignment,action = mRefreshRateConfigs-&gt;getIdleTimerAction())<SUB>5381</SUB>> ]
-"15065" [label = <(&lt;operator&gt;.logicalNot,!mSupportKernelIdleTimer)<SUB>5378</SUB>> ]
-"15072" [label = <(getIdleTimerAction,mRefreshRateConfigs-&gt;getIdleTimerAction())<SUB>5381</SUB>> ]
-"15068" [label = <(RETURN,return;,return;)<SUB>5379</SUB>> ]
-"15073" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getIdleTimerAction)<SUB>5381</SUB>> ]
-"15080" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::TurnOff)<SUB>5384</SUB>> ]
-"15100" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::TurnOn)<SUB>5391</SUB>> ]
-"15121" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::NoChange)<SUB>5398</SUB>> ]
-"15075" [label = <(FIELD_IDENTIFIER,getIdleTimerAction,getIdleTimerAction)<SUB>5381</SUB>> ]
-"15082" [label = <(FIELD_IDENTIFIER,TurnOff,TurnOff)<SUB>5384</SUB>> ]
-"15102" [label = <(FIELD_IDENTIFIER,TurnOn,TurnOn)<SUB>5391</SUB>> ]
-"15104" [label = <(&lt;operator&gt;.logicalNot,!mKernelIdleTimerEnabled)<SUB>5392</SUB>> ]
-"15123" [label = <(FIELD_IDENTIFIER,NoChange,NoChange)<SUB>5398</SUB>> ]
-"15086" [label = <(ATRACE_INT,ATRACE_INT(&quot;KernelIdleTimer&quot;, 0))<SUB>5386</SUB>> ]
-"15089" [label = <(base::SetProperty,base::SetProperty(KERNEL_IDLE_TIMER_PROP, &quot;false&quot;))<SUB>5387</SUB>> ]
-"15095" [label = <(&lt;operator&gt;.assignment,mKernelIdleTimerEnabled = false)<SUB>5388</SUB>> ]
-"15107" [label = <(ATRACE_INT,ATRACE_INT(&quot;KernelIdleTimer&quot;, 1))<SUB>5393</SUB>> ]
-"15110" [label = <(base::SetProperty,base::SetProperty(KERNEL_IDLE_TIMER_PROP, &quot;true&quot;))<SUB>5394</SUB>> ]
-"15116" [label = <(&lt;operator&gt;.assignment,mKernelIdleTimerEnabled = true)<SUB>5395</SUB>> ]
-"15090" [label = <(&lt;operator&gt;.fieldAccess,base::SetProperty)<SUB>5387</SUB>> ]
-"15111" [label = <(&lt;operator&gt;.fieldAccess,base::SetProperty)<SUB>5394</SUB>> ]
-"15092" [label = <(FIELD_IDENTIFIER,SetProperty,SetProperty)<SUB>5387</SUB>> ]
-"15113" [label = <(FIELD_IDENTIFIER,SetProperty,SetProperty)<SUB>5394</SUB>> ]
-"15061" [label = <(METHOD,toggleKernelIdleTimer)<SUB>5374</SUB>> ]
-"15125" [label = <(METHOD_RETURN,void)<SUB>5374</SUB>> ]
-  "15070" -> "15125" 
-  "15070" -> "15082" 
-  "15070" -> "15102" 
-  "15070" -> "15123" 
-  "15065" -> "15068" 
-  "15065" -> "15075" 
-  "15072" -> "15070" 
-  "15068" -> "15125" 
-  "15073" -> "15072" 
-  "15080" -> "15086" 
-  "15080" -> "15125" 
-  "15100" -> "15104" 
-  "15121" -> "15125" 
-  "15075" -> "15073" 
-  "15082" -> "15080" 
-  "15102" -> "15100" 
-  "15104" -> "15107" 
-  "15104" -> "15125" 
-  "15123" -> "15121" 
-  "15086" -> "15092" 
-  "15089" -> "15095" 
-  "15095" -> "15125" 
-  "15107" -> "15113" 
-  "15110" -> "15116" 
-  "15116" -> "15125" 
-  "15090" -> "15089" 
-  "15111" -> "15110" 
-  "15092" -> "15090" 
-  "15113" -> "15111" 
-  "15061" -> "15065" 
+"15086" [label = <(&lt;operator&gt;.assignment,action = mRefreshRateConfigs-&gt;getIdleTimerAction())<SUB>5380</SUB>> ]
+"15081" [label = <(&lt;operator&gt;.logicalNot,!mSupportKernelIdleTimer)<SUB>5377</SUB>> ]
+"15088" [label = <(getIdleTimerAction,mRefreshRateConfigs-&gt;getIdleTimerAction())<SUB>5380</SUB>> ]
+"15084" [label = <(RETURN,return;,return;)<SUB>5378</SUB>> ]
+"15089" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getIdleTimerAction)<SUB>5380</SUB>> ]
+"15096" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::TurnOff)<SUB>5383</SUB>> ]
+"15116" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::TurnOn)<SUB>5390</SUB>> ]
+"15137" [label = <(&lt;operator&gt;.fieldAccess,KernelIdleTimerAction::NoChange)<SUB>5397</SUB>> ]
+"15091" [label = <(FIELD_IDENTIFIER,getIdleTimerAction,getIdleTimerAction)<SUB>5380</SUB>> ]
+"15098" [label = <(FIELD_IDENTIFIER,TurnOff,TurnOff)<SUB>5383</SUB>> ]
+"15118" [label = <(FIELD_IDENTIFIER,TurnOn,TurnOn)<SUB>5390</SUB>> ]
+"15120" [label = <(&lt;operator&gt;.logicalNot,!mKernelIdleTimerEnabled)<SUB>5391</SUB>> ]
+"15139" [label = <(FIELD_IDENTIFIER,NoChange,NoChange)<SUB>5397</SUB>> ]
+"15102" [label = <(ATRACE_INT,ATRACE_INT(&quot;KernelIdleTimer&quot;, 0))<SUB>5385</SUB>> ]
+"15105" [label = <(base::SetProperty,base::SetProperty(KERNEL_IDLE_TIMER_PROP, &quot;false&quot;))<SUB>5386</SUB>> ]
+"15111" [label = <(&lt;operator&gt;.assignment,mKernelIdleTimerEnabled = false)<SUB>5387</SUB>> ]
+"15123" [label = <(ATRACE_INT,ATRACE_INT(&quot;KernelIdleTimer&quot;, 1))<SUB>5392</SUB>> ]
+"15126" [label = <(base::SetProperty,base::SetProperty(KERNEL_IDLE_TIMER_PROP, &quot;true&quot;))<SUB>5393</SUB>> ]
+"15132" [label = <(&lt;operator&gt;.assignment,mKernelIdleTimerEnabled = true)<SUB>5394</SUB>> ]
+"15106" [label = <(&lt;operator&gt;.fieldAccess,base::SetProperty)<SUB>5386</SUB>> ]
+"15127" [label = <(&lt;operator&gt;.fieldAccess,base::SetProperty)<SUB>5393</SUB>> ]
+"15108" [label = <(FIELD_IDENTIFIER,SetProperty,SetProperty)<SUB>5386</SUB>> ]
+"15129" [label = <(FIELD_IDENTIFIER,SetProperty,SetProperty)<SUB>5393</SUB>> ]
+"15077" [label = <(METHOD,toggleKernelIdleTimer)<SUB>5373</SUB>> ]
+"15141" [label = <(METHOD_RETURN,void)<SUB>5373</SUB>> ]
+  "15086" -> "15141" 
+  "15086" -> "15098" 
+  "15086" -> "15118" 
+  "15086" -> "15139" 
+  "15081" -> "15084" 
+  "15081" -> "15091" 
+  "15088" -> "15086" 
+  "15084" -> "15141" 
+  "15089" -> "15088" 
+  "15096" -> "15102" 
+  "15096" -> "15141" 
+  "15116" -> "15120" 
+  "15137" -> "15141" 
+  "15091" -> "15089" 
+  "15098" -> "15096" 
+  "15118" -> "15116" 
+  "15120" -> "15123" 
+  "15120" -> "15141" 
+  "15139" -> "15137" 
+  "15102" -> "15108" 
+  "15105" -> "15111" 
+  "15111" -> "15141" 
+  "15123" -> "15129" 
+  "15126" -> "15132" 
+  "15132" -> "15141" 
+  "15106" -> "15105" 
+  "15127" -> "15126" 
+  "15108" -> "15106" 
+  "15129" -> "15127" 
+  "15077" -> "15081" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/242-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/242-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/242-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/242-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,5 +1,5 @@
 digraph "WindowDisconnector" {  
-"15128" [label = <(METHOD,WindowDisconnector)<SUB>5406</SUB>> ]
-"15132" [label = <(METHOD_RETURN,ANY)<SUB>5406</SUB>> ]
-  "15128" -> "15132" 
+"15144" [label = <(METHOD,WindowDisconnector)<SUB>5405</SUB>> ]
+"15148" [label = <(METHOD_RETURN,ANY)<SUB>5405</SUB>> ]
+  "15144" -> "15148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/243-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/243-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/243-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/243-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,7 +1,7 @@
 digraph "~WindowDisconnector" {  
-"15136" [label = <(native_window_api_disconnect,native_window_api_disconnect(mWindow, mApi))<SUB>5408</SUB>> ]
-"15134" [label = <(METHOD,~WindowDisconnector)<SUB>5407</SUB>> ]
-"15139" [label = <(METHOD_RETURN,ANY)<SUB>5407</SUB>> ]
-  "15136" -> "15139" 
-  "15134" -> "15136" 
+"15152" [label = <(native_window_api_disconnect,native_window_api_disconnect(mWindow, mApi))<SUB>5407</SUB>> ]
+"15150" [label = <(METHOD,~WindowDisconnector)<SUB>5406</SUB>> ]
+"15155" [label = <(METHOD_RETURN,ANY)<SUB>5406</SUB>> ]
+  "15152" -> "15155" 
+  "15150" -> "15152" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/244-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/244-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/244-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/244-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,124 +1,124 @@
 digraph "captureScreen" {  
-"15156" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5422</SUB>> ]
-"15164" [label = <(&lt;operator&gt;.assignment,renderAreaRotation = ui::Transform::toRotationFlags(rotation))<SUB>5426</SUB>> ]
-"15194" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>5432</SUB>> ]
-"15243" [label = <(renderArea,renderArea(display, sourceCrop, reqWidth, reqHeight, reqDataspace,\012                                 renderAreaRotation, captureSecureLayers))<SUB>5447</SUB>> ]
-"15252" [label = <(&lt;operator&gt;.assignment,traverseLayers = std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5449</SUB>> ]
-"15269" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers);)<SUB>5451</SUB>> ]
-"15158" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>5424</SUB>> ]
-"15166" [label = <(ui::Transform::toRotationFlags,ui::Transform::toRotationFlags(rotation))<SUB>5426</SUB>> ]
-"15174" [label = <(&lt;operator&gt;.equals,renderAreaRotation == ui::Transform::ROT_INVALID)<SUB>5427</SUB>> ]
-"15195" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>5432</SUB>> ]
-"15201" [label = <(lock,lock(mStateLock))<SUB>5434</SUB>> ]
-"15203" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>5436</SUB>> ]
-"15254" [label = <(std::bind,std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5449</SUB>> ]
-"15270" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers))<SUB>5451</SUB>> ]
-"15161" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5424</SUB>> ]
-"15167" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::toRotationFlags)<SUB>5426</SUB>> ]
-"15176" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_INVALID)<SUB>5427</SUB>> ]
-"15182" [label = <(ALOGE,ALOGE(&quot;%s: Invalid rotation: %s&quot;, __FUNCTION__, toCString(rotation)))<SUB>5428</SUB>> ]
-"15187" [label = <(&lt;operator&gt;.assignment,renderAreaRotation = ui::Transform::ROT_0)<SUB>5429</SUB>> ]
-"15205" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>5436</SUB>> ]
-"15208" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5437</SUB>> ]
-"15214" [label = <(&lt;operator&gt;.logicalOr,reqWidth == 0 || reqHeight == 0)<SUB>5441</SUB>> ]
-"15255" [label = <(&lt;operator&gt;.fieldAccess,std::bind)<SUB>5449</SUB>> ]
-"15258" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::traverseLayersInDisplay)<SUB>5449</SUB>> ]
-"15264" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders::_1)<SUB>5450</SUB>> ]
-"15168" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5426</SUB>> ]
-"15171" [label = <(FIELD_IDENTIFIER,toRotationFlags,toRotationFlags)<SUB>5426</SUB>> ]
-"15177" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5427</SUB>> ]
-"15180" [label = <(FIELD_IDENTIFIER,ROT_INVALID,ROT_INVALID)<SUB>5427</SUB>> ]
-"15185" [label = <(toCString,toCString(rotation))<SUB>5428</SUB>> ]
-"15189" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_0)<SUB>5429</SUB>> ]
-"15211" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5437</SUB>> ]
-"15215" [label = <(&lt;operator&gt;.equals,reqWidth == 0)<SUB>5441</SUB>> ]
-"15218" [label = <(&lt;operator&gt;.equals,reqHeight == 0)<SUB>5441</SUB>> ]
-"15222" [label = <(&lt;operator&gt;.assignment,reqWidth = uint32_t(display-&gt;getViewport().width()))<SUB>5442</SUB>> ]
-"15232" [label = <(&lt;operator&gt;.assignment,reqHeight = uint32_t(display-&gt;getViewport().height()))<SUB>5443</SUB>> ]
-"15257" [label = <(FIELD_IDENTIFIER,bind,bind)<SUB>5449</SUB>> ]
-"15259" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::traverseLayersInDisplay)<SUB>5449</SUB>> ]
-"15265" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders)<SUB>5450</SUB>> ]
-"15268" [label = <(FIELD_IDENTIFIER,_1,_1)<SUB>5450</SUB>> ]
-"15190" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5429</SUB>> ]
-"15193" [label = <(FIELD_IDENTIFIER,ROT_0,ROT_0)<SUB>5429</SUB>> ]
-"15224" [label = <(uint32_t,uint32_t(display-&gt;getViewport().width()))<SUB>5442</SUB>> ]
-"15234" [label = <(uint32_t,uint32_t(display-&gt;getViewport().height()))<SUB>5443</SUB>> ]
-"15261" [label = <(FIELD_IDENTIFIER,traverseLayersInDisplay,traverseLayersInDisplay)<SUB>5449</SUB>> ]
-"15225" [label = <(width,display-&gt;getViewport().width())<SUB>5442</SUB>> ]
-"15235" [label = <(height,display-&gt;getViewport().height())<SUB>5443</SUB>> ]
-"15226" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().width)<SUB>5442</SUB>> ]
-"15236" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().height)<SUB>5443</SUB>> ]
-"15227" [label = <(getViewport,display-&gt;getViewport())<SUB>5442</SUB>> ]
-"15231" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5442</SUB>> ]
-"15237" [label = <(getViewport,display-&gt;getViewport())<SUB>5443</SUB>> ]
-"15241" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5443</SUB>> ]
-"15228" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5442</SUB>> ]
-"15238" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5443</SUB>> ]
-"15230" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5442</SUB>> ]
-"15240" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5443</SUB>> ]
-"15143" [label = <(METHOD,captureScreen)<SUB>5416</SUB>> ]
-"15277" [label = <(METHOD_RETURN,status_t)<SUB>5416</SUB>> ]
-  "15156" -> "15158" 
-  "15164" -> "15177" 
-  "15194" -> "15201" 
-  "15243" -> "15257" 
-  "15252" -> "15270" 
-  "15269" -> "15277" 
-  "15158" -> "15161" 
-  "15158" -> "15168" 
-  "15166" -> "15164" 
-  "15174" -> "15185" 
-  "15174" -> "15195" 
-  "15195" -> "15194" 
-  "15201" -> "15205" 
-  "15203" -> "15208" 
-  "15254" -> "15252" 
-  "15270" -> "15269" 
-  "15161" -> "15277" 
-  "15167" -> "15166" 
-  "15176" -> "15174" 
-  "15182" -> "15190" 
-  "15187" -> "15195" 
+"15172" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5421</SUB>> ]
+"15180" [label = <(&lt;operator&gt;.assignment,renderAreaRotation = ui::Transform::toRotationFlags(rotation))<SUB>5425</SUB>> ]
+"15210" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>5431</SUB>> ]
+"15259" [label = <(renderArea,renderArea(display, sourceCrop, reqWidth, reqHeight, reqDataspace,\012                                 renderAreaRotation, captureSecureLayers))<SUB>5446</SUB>> ]
+"15268" [label = <(&lt;operator&gt;.assignment,traverseLayers = std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5448</SUB>> ]
+"15285" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers);)<SUB>5450</SUB>> ]
+"15174" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>5423</SUB>> ]
+"15182" [label = <(ui::Transform::toRotationFlags,ui::Transform::toRotationFlags(rotation))<SUB>5425</SUB>> ]
+"15190" [label = <(&lt;operator&gt;.equals,renderAreaRotation == ui::Transform::ROT_INVALID)<SUB>5426</SUB>> ]
+"15211" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>5431</SUB>> ]
+"15217" [label = <(lock,lock(mStateLock))<SUB>5433</SUB>> ]
+"15219" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>5435</SUB>> ]
+"15270" [label = <(std::bind,std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5448</SUB>> ]
+"15286" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat,\012                               useIdentityTransform, outCapturedSecureLayers))<SUB>5450</SUB>> ]
+"15177" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5423</SUB>> ]
+"15183" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::toRotationFlags)<SUB>5425</SUB>> ]
+"15192" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_INVALID)<SUB>5426</SUB>> ]
+"15198" [label = <(ALOGE,ALOGE(&quot;%s: Invalid rotation: %s&quot;, __FUNCTION__, toCString(rotation)))<SUB>5427</SUB>> ]
+"15203" [label = <(&lt;operator&gt;.assignment,renderAreaRotation = ui::Transform::ROT_0)<SUB>5428</SUB>> ]
+"15221" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>5435</SUB>> ]
+"15224" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5436</SUB>> ]
+"15230" [label = <(&lt;operator&gt;.logicalOr,reqWidth == 0 || reqHeight == 0)<SUB>5440</SUB>> ]
+"15271" [label = <(&lt;operator&gt;.fieldAccess,std::bind)<SUB>5448</SUB>> ]
+"15274" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::traverseLayersInDisplay)<SUB>5448</SUB>> ]
+"15280" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders::_1)<SUB>5449</SUB>> ]
+"15184" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5425</SUB>> ]
+"15187" [label = <(FIELD_IDENTIFIER,toRotationFlags,toRotationFlags)<SUB>5425</SUB>> ]
+"15193" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5426</SUB>> ]
+"15196" [label = <(FIELD_IDENTIFIER,ROT_INVALID,ROT_INVALID)<SUB>5426</SUB>> ]
+"15201" [label = <(toCString,toCString(rotation))<SUB>5427</SUB>> ]
+"15205" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_0)<SUB>5428</SUB>> ]
+"15227" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5436</SUB>> ]
+"15231" [label = <(&lt;operator&gt;.equals,reqWidth == 0)<SUB>5440</SUB>> ]
+"15234" [label = <(&lt;operator&gt;.equals,reqHeight == 0)<SUB>5440</SUB>> ]
+"15238" [label = <(&lt;operator&gt;.assignment,reqWidth = uint32_t(display-&gt;getViewport().width()))<SUB>5441</SUB>> ]
+"15248" [label = <(&lt;operator&gt;.assignment,reqHeight = uint32_t(display-&gt;getViewport().height()))<SUB>5442</SUB>> ]
+"15273" [label = <(FIELD_IDENTIFIER,bind,bind)<SUB>5448</SUB>> ]
+"15275" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::traverseLayersInDisplay)<SUB>5448</SUB>> ]
+"15281" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders)<SUB>5449</SUB>> ]
+"15284" [label = <(FIELD_IDENTIFIER,_1,_1)<SUB>5449</SUB>> ]
+"15206" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5428</SUB>> ]
+"15209" [label = <(FIELD_IDENTIFIER,ROT_0,ROT_0)<SUB>5428</SUB>> ]
+"15240" [label = <(uint32_t,uint32_t(display-&gt;getViewport().width()))<SUB>5441</SUB>> ]
+"15250" [label = <(uint32_t,uint32_t(display-&gt;getViewport().height()))<SUB>5442</SUB>> ]
+"15277" [label = <(FIELD_IDENTIFIER,traverseLayersInDisplay,traverseLayersInDisplay)<SUB>5448</SUB>> ]
+"15241" [label = <(width,display-&gt;getViewport().width())<SUB>5441</SUB>> ]
+"15251" [label = <(height,display-&gt;getViewport().height())<SUB>5442</SUB>> ]
+"15242" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().width)<SUB>5441</SUB>> ]
+"15252" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().height)<SUB>5442</SUB>> ]
+"15243" [label = <(getViewport,display-&gt;getViewport())<SUB>5441</SUB>> ]
+"15247" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5441</SUB>> ]
+"15253" [label = <(getViewport,display-&gt;getViewport())<SUB>5442</SUB>> ]
+"15257" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5442</SUB>> ]
+"15244" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5441</SUB>> ]
+"15254" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5442</SUB>> ]
+"15246" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5441</SUB>> ]
+"15256" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5442</SUB>> ]
+"15159" [label = <(METHOD,captureScreen)<SUB>5415</SUB>> ]
+"15293" [label = <(METHOD_RETURN,status_t)<SUB>5415</SUB>> ]
+  "15172" -> "15174" 
+  "15180" -> "15193" 
+  "15210" -> "15217" 
+  "15259" -> "15273" 
+  "15268" -> "15286" 
+  "15285" -> "15293" 
+  "15174" -> "15177" 
+  "15174" -> "15184" 
+  "15182" -> "15180" 
+  "15190" -> "15201" 
+  "15190" -> "15211" 
+  "15211" -> "15210" 
+  "15217" -> "15221" 
+  "15219" -> "15224" 
+  "15270" -> "15268" 
+  "15286" -> "15285" 
+  "15177" -> "15293" 
+  "15183" -> "15182" 
+  "15192" -> "15190" 
+  "15198" -> "15206" 
+  "15203" -> "15211" 
+  "15221" -> "15219" 
+  "15224" -> "15227" 
+  "15224" -> "15231" 
+  "15230" -> "15246" 
+  "15230" -> "15259" 
+  "15271" -> "15277" 
+  "15274" -> "15281" 
+  "15280" -> "15270" 
+  "15184" -> "15187" 
+  "15187" -> "15183" 
+  "15193" -> "15196" 
+  "15196" -> "15192" 
+  "15201" -> "15198" 
   "15205" -> "15203" 
-  "15208" -> "15211" 
-  "15208" -> "15215" 
-  "15214" -> "15230" 
-  "15214" -> "15243" 
-  "15255" -> "15261" 
-  "15258" -> "15265" 
-  "15264" -> "15254" 
-  "15168" -> "15171" 
-  "15171" -> "15167" 
-  "15177" -> "15180" 
-  "15180" -> "15176" 
-  "15185" -> "15182" 
-  "15189" -> "15187" 
-  "15211" -> "15277" 
-  "15215" -> "15214" 
-  "15215" -> "15218" 
-  "15218" -> "15214" 
-  "15222" -> "15240" 
-  "15232" -> "15243" 
-  "15257" -> "15255" 
-  "15259" -> "15258" 
-  "15265" -> "15268" 
-  "15268" -> "15264" 
-  "15190" -> "15193" 
-  "15193" -> "15189" 
-  "15224" -> "15222" 
-  "15234" -> "15232" 
-  "15261" -> "15259" 
-  "15225" -> "15224" 
-  "15235" -> "15234" 
-  "15226" -> "15225" 
-  "15236" -> "15235" 
-  "15227" -> "15231" 
-  "15231" -> "15226" 
-  "15237" -> "15241" 
-  "15241" -> "15236" 
-  "15228" -> "15227" 
-  "15238" -> "15237" 
-  "15230" -> "15228" 
+  "15227" -> "15293" 
+  "15231" -> "15230" 
+  "15231" -> "15234" 
+  "15234" -> "15230" 
+  "15238" -> "15256" 
+  "15248" -> "15259" 
+  "15273" -> "15271" 
+  "15275" -> "15274" 
+  "15281" -> "15284" 
+  "15284" -> "15280" 
+  "15206" -> "15209" 
+  "15209" -> "15205" 
   "15240" -> "15238" 
-  "15143" -> "15156" 
+  "15250" -> "15248" 
+  "15277" -> "15275" 
+  "15241" -> "15240" 
+  "15251" -> "15250" 
+  "15242" -> "15241" 
+  "15252" -> "15251" 
+  "15243" -> "15247" 
+  "15247" -> "15242" 
+  "15253" -> "15257" 
+  "15257" -> "15252" 
+  "15244" -> "15243" 
+  "15254" -> "15253" 
+  "15246" -> "15244" 
+  "15256" -> "15254" 
+  "15159" -> "15172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/245-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/245-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/245-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/245-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,37 +1,37 @@
 digraph "pickDataspaceFromColorMode" {  
-"15286" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::DISPLAY_P3)<SUB>5457</SUB>> ]
-"15290" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::BT2100_PQ)<SUB>5458</SUB>> ]
-"15294" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::BT2100_HLG)<SUB>5459</SUB>> ]
-"15298" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::DISPLAY_BT2020)<SUB>5460</SUB>> ]
-"15301" [label = <(RETURN,return Dataspace::DISPLAY_P3;,return Dataspace::DISPLAY_P3;)<SUB>5461</SUB>> ]
-"15306" [label = <(RETURN,return Dataspace::V0_SRGB;,return Dataspace::V0_SRGB;)<SUB>5463</SUB>> ]
-"15288" [label = <(FIELD_IDENTIFIER,DISPLAY_P3,DISPLAY_P3)<SUB>5457</SUB>> ]
-"15292" [label = <(FIELD_IDENTIFIER,BT2100_PQ,BT2100_PQ)<SUB>5458</SUB>> ]
-"15296" [label = <(FIELD_IDENTIFIER,BT2100_HLG,BT2100_HLG)<SUB>5459</SUB>> ]
-"15300" [label = <(FIELD_IDENTIFIER,DISPLAY_BT2020,DISPLAY_BT2020)<SUB>5460</SUB>> ]
-"15302" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::DISPLAY_P3)<SUB>5461</SUB>> ]
-"15307" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::V0_SRGB)<SUB>5463</SUB>> ]
-"15304" [label = <(FIELD_IDENTIFIER,DISPLAY_P3,DISPLAY_P3)<SUB>5461</SUB>> ]
-"15309" [label = <(FIELD_IDENTIFIER,V0_SRGB,V0_SRGB)<SUB>5463</SUB>> ]
-"15279" [label = <(METHOD,pickDataspaceFromColorMode)<SUB>5455</SUB>> ]
-"15310" [label = <(METHOD_RETURN,Dataspace)<SUB>5455</SUB>> ]
-  "15286" -> "15292" 
-  "15290" -> "15296" 
-  "15294" -> "15300" 
-  "15298" -> "15304" 
-  "15301" -> "15310" 
-  "15306" -> "15310" 
-  "15288" -> "15286" 
-  "15292" -> "15290" 
-  "15296" -> "15294" 
-  "15300" -> "15298" 
-  "15302" -> "15301" 
-  "15307" -> "15306" 
+"15302" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::DISPLAY_P3)<SUB>5456</SUB>> ]
+"15306" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::BT2100_PQ)<SUB>5457</SUB>> ]
+"15310" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::BT2100_HLG)<SUB>5458</SUB>> ]
+"15314" [label = <(&lt;operator&gt;.fieldAccess,ColorMode::DISPLAY_BT2020)<SUB>5459</SUB>> ]
+"15317" [label = <(RETURN,return Dataspace::DISPLAY_P3;,return Dataspace::DISPLAY_P3;)<SUB>5460</SUB>> ]
+"15322" [label = <(RETURN,return Dataspace::V0_SRGB;,return Dataspace::V0_SRGB;)<SUB>5462</SUB>> ]
+"15304" [label = <(FIELD_IDENTIFIER,DISPLAY_P3,DISPLAY_P3)<SUB>5456</SUB>> ]
+"15308" [label = <(FIELD_IDENTIFIER,BT2100_PQ,BT2100_PQ)<SUB>5457</SUB>> ]
+"15312" [label = <(FIELD_IDENTIFIER,BT2100_HLG,BT2100_HLG)<SUB>5458</SUB>> ]
+"15316" [label = <(FIELD_IDENTIFIER,DISPLAY_BT2020,DISPLAY_BT2020)<SUB>5459</SUB>> ]
+"15318" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::DISPLAY_P3)<SUB>5460</SUB>> ]
+"15323" [label = <(&lt;operator&gt;.fieldAccess,Dataspace::V0_SRGB)<SUB>5462</SUB>> ]
+"15320" [label = <(FIELD_IDENTIFIER,DISPLAY_P3,DISPLAY_P3)<SUB>5460</SUB>> ]
+"15325" [label = <(FIELD_IDENTIFIER,V0_SRGB,V0_SRGB)<SUB>5462</SUB>> ]
+"15295" [label = <(METHOD,pickDataspaceFromColorMode)<SUB>5454</SUB>> ]
+"15326" [label = <(METHOD_RETURN,Dataspace)<SUB>5454</SUB>> ]
+  "15302" -> "15308" 
+  "15306" -> "15312" 
+  "15310" -> "15316" 
+  "15314" -> "15320" 
+  "15317" -> "15326" 
+  "15322" -> "15326" 
   "15304" -> "15302" 
-  "15309" -> "15307" 
-  "15279" -> "15288" 
-  "15279" -> "15292" 
-  "15279" -> "15296" 
-  "15279" -> "15300" 
-  "15279" -> "15309" 
+  "15308" -> "15306" 
+  "15312" -> "15310" 
+  "15316" -> "15314" 
+  "15318" -> "15317" 
+  "15323" -> "15322" 
+  "15320" -> "15318" 
+  "15325" -> "15323" 
+  "15295" -> "15304" 
+  "15295" -> "15308" 
+  "15295" -> "15312" 
+  "15295" -> "15316" 
+  "15295" -> "15325" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/246-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/246-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/246-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/246-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,43 +1,43 @@
 digraph "setSchedFifo" {  
-"15316" [label = <(&lt;operator&gt;.assignment,kFifoPriority = 2)<SUB>5468</SUB>> ]
-"15320" [label = <(&lt;operator&gt;.assignment,kOtherPriority = 0)<SUB>5469</SUB>> ]
-"15324" [label = <(&lt;operator&gt;.assignment,param = {0})<SUB>5471</SUB>> ]
-"15362" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5484</SUB>> ]
-"15326" [label = <(&lt;operator&gt;.arrayInitializer,{0})<SUB>5471</SUB>> ]
-"15351" [label = <(&lt;operator&gt;.notEquals,sched_setscheduler(0, sched_policy, &amp;param) != 0)<SUB>5481</SUB>> ]
-"15332" [label = <(&lt;operator&gt;.assignment,sched_policy = SCHED_FIFO)<SUB>5474</SUB>> ]
-"15335" [label = <(&lt;operator&gt;.assignment,param.sched_priority = kFifoPriority)<SUB>5475</SUB>> ]
-"15352" [label = <(sched_setscheduler,sched_setscheduler(0, sched_policy, &amp;param))<SUB>5481</SUB>> ]
-"15359" [label = <(RETURN,return -errno;,return -errno;)<SUB>5482</SUB>> ]
-"15336" [label = <(&lt;operator&gt;.fieldAccess,param.sched_priority)<SUB>5475</SUB>> ]
-"15342" [label = <(&lt;operator&gt;.assignment,sched_policy = SCHED_OTHER)<SUB>5477</SUB>> ]
-"15345" [label = <(&lt;operator&gt;.assignment,param.sched_priority = kOtherPriority)<SUB>5478</SUB>> ]
-"15355" [label = <(&lt;operator&gt;.addressOf,&amp;param)<SUB>5481</SUB>> ]
-"15360" [label = <(&lt;operator&gt;.minus,-errno)<SUB>5482</SUB>> ]
-"15338" [label = <(FIELD_IDENTIFIER,sched_priority,sched_priority)<SUB>5475</SUB>> ]
-"15346" [label = <(&lt;operator&gt;.fieldAccess,param.sched_priority)<SUB>5478</SUB>> ]
-"15348" [label = <(FIELD_IDENTIFIER,sched_priority,sched_priority)<SUB>5478</SUB>> ]
-"15312" [label = <(METHOD,setSchedFifo)<SUB>5467</SUB>> ]
-"15364" [label = <(METHOD_RETURN,status_t)<SUB>5467</SUB>> ]
-  "15316" -> "15320" 
-  "15320" -> "15326" 
-  "15324" -> "15332" 
-  "15324" -> "15342" 
-  "15362" -> "15364" 
-  "15326" -> "15324" 
-  "15351" -> "15360" 
-  "15351" -> "15362" 
-  "15332" -> "15338" 
-  "15335" -> "15355" 
+"15332" [label = <(&lt;operator&gt;.assignment,kFifoPriority = 2)<SUB>5467</SUB>> ]
+"15336" [label = <(&lt;operator&gt;.assignment,kOtherPriority = 0)<SUB>5468</SUB>> ]
+"15340" [label = <(&lt;operator&gt;.assignment,param = {0})<SUB>5470</SUB>> ]
+"15378" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5483</SUB>> ]
+"15342" [label = <(&lt;operator&gt;.arrayInitializer,{0})<SUB>5470</SUB>> ]
+"15367" [label = <(&lt;operator&gt;.notEquals,sched_setscheduler(0, sched_policy, &amp;param) != 0)<SUB>5480</SUB>> ]
+"15348" [label = <(&lt;operator&gt;.assignment,sched_policy = SCHED_FIFO)<SUB>5473</SUB>> ]
+"15351" [label = <(&lt;operator&gt;.assignment,param.sched_priority = kFifoPriority)<SUB>5474</SUB>> ]
+"15368" [label = <(sched_setscheduler,sched_setscheduler(0, sched_policy, &amp;param))<SUB>5480</SUB>> ]
+"15375" [label = <(RETURN,return -errno;,return -errno;)<SUB>5481</SUB>> ]
+"15352" [label = <(&lt;operator&gt;.fieldAccess,param.sched_priority)<SUB>5474</SUB>> ]
+"15358" [label = <(&lt;operator&gt;.assignment,sched_policy = SCHED_OTHER)<SUB>5476</SUB>> ]
+"15361" [label = <(&lt;operator&gt;.assignment,param.sched_priority = kOtherPriority)<SUB>5477</SUB>> ]
+"15371" [label = <(&lt;operator&gt;.addressOf,&amp;param)<SUB>5480</SUB>> ]
+"15376" [label = <(&lt;operator&gt;.minus,-errno)<SUB>5481</SUB>> ]
+"15354" [label = <(FIELD_IDENTIFIER,sched_priority,sched_priority)<SUB>5474</SUB>> ]
+"15362" [label = <(&lt;operator&gt;.fieldAccess,param.sched_priority)<SUB>5477</SUB>> ]
+"15364" [label = <(FIELD_IDENTIFIER,sched_priority,sched_priority)<SUB>5477</SUB>> ]
+"15328" [label = <(METHOD,setSchedFifo)<SUB>5466</SUB>> ]
+"15380" [label = <(METHOD_RETURN,status_t)<SUB>5466</SUB>> ]
+  "15332" -> "15336" 
+  "15336" -> "15342" 
+  "15340" -> "15348" 
+  "15340" -> "15358" 
+  "15378" -> "15380" 
+  "15342" -> "15340" 
+  "15367" -> "15376" 
+  "15367" -> "15378" 
+  "15348" -> "15354" 
+  "15351" -> "15371" 
+  "15368" -> "15367" 
+  "15375" -> "15380" 
   "15352" -> "15351" 
-  "15359" -> "15364" 
-  "15336" -> "15335" 
-  "15342" -> "15348" 
-  "15345" -> "15355" 
-  "15355" -> "15352" 
-  "15360" -> "15359" 
-  "15338" -> "15336" 
-  "15346" -> "15345" 
-  "15348" -> "15346" 
-  "15312" -> "15316" 
+  "15358" -> "15364" 
+  "15361" -> "15371" 
+  "15371" -> "15368" 
+  "15376" -> "15375" 
+  "15354" -> "15352" 
+  "15362" -> "15361" 
+  "15364" -> "15362" 
+  "15328" -> "15332" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/247-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/247-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/247-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/247-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,22 +1,22 @@
 digraph "getDisplayByIdOrLayerStack" {  
-"15370" [label = <(&lt;operator&gt;.assignment,displayToken = getPhysicalDisplayTokenLocked(DisplayId{displayOrLayerStack}))<SUB>5488</SUB>> ]
-"15382" [label = <(RETURN,return getDisplayByLayerStack(displayOrLayerStack);,return getDisplayByLayerStack(displayOrLayerStack);)<SUB>5494</SUB>> ]
-"15372" [label = <(getPhysicalDisplayTokenLocked,getPhysicalDisplayTokenLocked(DisplayId{displayOrLayerStack}))<SUB>5488</SUB>> ]
-"15383" [label = <(getDisplayByLayerStack,getDisplayByLayerStack(displayOrLayerStack))<SUB>5494</SUB>> ]
-"15373" [label = <(DisplayId,DisplayId{displayOrLayerStack})<SUB>5488</SUB>> ]
-"15379" [label = <(RETURN,return getDisplayDeviceLocked(displayToken);,return getDisplayDeviceLocked(displayToken);)<SUB>5490</SUB>> ]
-"15374" [label = <(&lt;operator&gt;.arrayInitializer,{displayOrLayerStack})<SUB>5488</SUB>> ]
-"15380" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>5490</SUB>> ]
-"15366" [label = <(METHOD,getDisplayByIdOrLayerStack)<SUB>5487</SUB>> ]
-"15385" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>5487</SUB>> ]
-  "15370" -> "15380" 
-  "15370" -> "15383" 
-  "15382" -> "15385" 
-  "15372" -> "15370" 
-  "15383" -> "15382" 
-  "15373" -> "15372" 
-  "15379" -> "15385" 
-  "15374" -> "15373" 
-  "15380" -> "15379" 
-  "15366" -> "15374" 
+"15386" [label = <(&lt;operator&gt;.assignment,displayToken = getPhysicalDisplayTokenLocked(DisplayId{displayOrLayerStack}))<SUB>5487</SUB>> ]
+"15398" [label = <(RETURN,return getDisplayByLayerStack(displayOrLayerStack);,return getDisplayByLayerStack(displayOrLayerStack);)<SUB>5493</SUB>> ]
+"15388" [label = <(getPhysicalDisplayTokenLocked,getPhysicalDisplayTokenLocked(DisplayId{displayOrLayerStack}))<SUB>5487</SUB>> ]
+"15399" [label = <(getDisplayByLayerStack,getDisplayByLayerStack(displayOrLayerStack))<SUB>5493</SUB>> ]
+"15389" [label = <(DisplayId,DisplayId{displayOrLayerStack})<SUB>5487</SUB>> ]
+"15395" [label = <(RETURN,return getDisplayDeviceLocked(displayToken);,return getDisplayDeviceLocked(displayToken);)<SUB>5489</SUB>> ]
+"15390" [label = <(&lt;operator&gt;.arrayInitializer,{displayOrLayerStack})<SUB>5487</SUB>> ]
+"15396" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>5489</SUB>> ]
+"15382" [label = <(METHOD,getDisplayByIdOrLayerStack)<SUB>5486</SUB>> ]
+"15401" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>5486</SUB>> ]
+  "15386" -> "15396" 
+  "15386" -> "15399" 
+  "15398" -> "15401" 
+  "15388" -> "15386" 
+  "15399" -> "15398" 
+  "15389" -> "15388" 
+  "15395" -> "15401" 
+  "15390" -> "15389" 
+  "15396" -> "15395" 
+  "15382" -> "15390" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/248-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/248-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/248-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/248-cfg.dot	2023-06-07 19:33:06.717398401 +0330
@@ -1,20 +1,20 @@
 digraph "getDisplayByLayerStack" {  
-"15406" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>5503</SUB>> ]
-"15397" [label = <(&lt;operator&gt;.equals,display-&gt;getLayerStack() == layerStack)<SUB>5499</SUB>> ]
-"15398" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>5499</SUB>> ]
-"15404" [label = <(RETURN,return display;,return display;)<SUB>5500</SUB>> ]
-"15399" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>5499</SUB>> ]
-"15401" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5499</SUB>> ]
-"15387" [label = <(METHOD,getDisplayByLayerStack)<SUB>5497</SUB>> ]
-"15408" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>5497</SUB>> ]
-  "15406" -> "15408" 
-  "15397" -> "15401" 
-  "15397" -> "15406" 
-  "15397" -> "15404" 
-  "15398" -> "15397" 
-  "15404" -> "15408" 
-  "15399" -> "15398" 
-  "15401" -> "15399" 
-  "15387" -> "15401" 
-  "15387" -> "15406" 
+"15422" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>5502</SUB>> ]
+"15413" [label = <(&lt;operator&gt;.equals,display-&gt;getLayerStack() == layerStack)<SUB>5498</SUB>> ]
+"15414" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>5498</SUB>> ]
+"15420" [label = <(RETURN,return display;,return display;)<SUB>5499</SUB>> ]
+"15415" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>5498</SUB>> ]
+"15417" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5498</SUB>> ]
+"15403" [label = <(METHOD,getDisplayByLayerStack)<SUB>5496</SUB>> ]
+"15424" [label = <(METHOD_RETURN,sp&lt;DisplayDevice&gt;)<SUB>5496</SUB>> ]
+  "15422" -> "15424" 
+  "15413" -> "15417" 
+  "15413" -> "15422" 
+  "15413" -> "15420" 
+  "15414" -> "15413" 
+  "15420" -> "15424" 
+  "15415" -> "15414" 
+  "15417" -> "15415" 
+  "15403" -> "15417" 
+  "15403" -> "15422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/249-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/249-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/249-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/249-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,179 +1,179 @@
 digraph "captureScreen" {  
-"15415" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>5508</SUB>> ]
-"15539" [label = <(renderArea,renderArea(display, Rect(), width, height, *outDataspace, captureOrientation,\012 false /* captureSecureLayers */))<SUB>5546</SUB>> ]
-"15549" [label = <(&lt;operator&gt;.assignment,traverseLayers = std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5549</SUB>> ]
-"15567" [label = <(&lt;operator&gt;.assignment,ignored = false)<SUB>5551</SUB>> ]
-"15570" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */);)<SUB>5552</SUB>> ]
-"15416" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>5508</SUB>> ]
-"15425" [label = <(lock,lock(mStateLock))<SUB>5513</SUB>> ]
-"15427" [label = <(&lt;operator&gt;.assignment,display = getDisplayByIdOrLayerStack(displayOrLayerStack))<SUB>5514</SUB>> ]
-"15437" [label = <(&lt;operator&gt;.assignment,width = uint32_t(display-&gt;getViewport().width()))<SUB>5519</SUB>> ]
-"15447" [label = <(&lt;operator&gt;.assignment,height = uint32_t(display-&gt;getViewport().height()))<SUB>5520</SUB>> ]
-"15458" [label = <(&lt;operator&gt;.assignment,orientation = display-&gt;getOrientation())<SUB>5522</SUB>> ]
-"15464" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::toRotationFlags(orientation))<SUB>5523</SUB>> ]
-"15525" [label = <(&lt;operator&gt;.assignment,*outDataspace =\012                pickDataspaceFromColorMode(display-&gt;getCompositionDisplay()-&gt;getState().colorMode))<SUB>5542</SUB>> ]
-"15541" [label = <(Rect,Rect())<SUB>5546</SUB>> ]
-"15544" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>5546</SUB>> ]
-"15551" [label = <(std::bind,std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5549</SUB>> ]
-"15571" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */))<SUB>5552</SUB>> ]
-"15429" [label = <(getDisplayByIdOrLayerStack,getDisplayByIdOrLayerStack(displayOrLayerStack))<SUB>5514</SUB>> ]
-"15432" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5515</SUB>> ]
-"15439" [label = <(uint32_t,uint32_t(display-&gt;getViewport().width()))<SUB>5519</SUB>> ]
-"15449" [label = <(uint32_t,uint32_t(display-&gt;getViewport().height()))<SUB>5520</SUB>> ]
-"15460" [label = <(getOrientation,display-&gt;getOrientation())<SUB>5522</SUB>> ]
-"15466" [label = <(ui::Transform::toRotationFlags,ui::Transform::toRotationFlags(orientation))<SUB>5523</SUB>> ]
-"15526" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>5542</SUB>> ]
-"15528" [label = <(pickDataspaceFromColorMode,pickDataspaceFromColorMode(display-&gt;getCompositionDisplay()-&gt;getState().colorMode))<SUB>5543</SUB>> ]
-"15552" [label = <(&lt;operator&gt;.fieldAccess,std::bind)<SUB>5549</SUB>> ]
-"15555" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::traverseLayersInDisplay)<SUB>5549</SUB>> ]
-"15561" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders::_1)<SUB>5550</SUB>> ]
-"15575" [label = <(&lt;operator&gt;.fieldAccess,ui::PixelFormat::RGBA_8888)<SUB>5552</SUB>> ]
-"15435" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5516</SUB>> ]
-"15440" [label = <(width,display-&gt;getViewport().width())<SUB>5519</SUB>> ]
-"15450" [label = <(height,display-&gt;getViewport().height())<SUB>5520</SUB>> ]
-"15461" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>5522</SUB>> ]
-"15467" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::toRotationFlags)<SUB>5523</SUB>> ]
-"15477" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_90)<SUB>5526</SUB>> ]
-"15482" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_270)<SUB>5527</SUB>> ]
-"15491" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_270)<SUB>5530</SUB>> ]
-"15496" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_90)<SUB>5531</SUB>> ]
-"15505" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_INVALID)<SUB>5534</SUB>> ]
-"15510" [label = <(ALOGE,ALOGE(&quot;%s: Invalid orientation: %s&quot;, __FUNCTION__, toCString(orientation)))<SUB>5535</SUB>> ]
-"15515" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_0)<SUB>5536</SUB>> ]
-"15529" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>5543</SUB>> ]
-"15554" [label = <(FIELD_IDENTIFIER,bind,bind)<SUB>5549</SUB>> ]
-"15556" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::traverseLayersInDisplay)<SUB>5549</SUB>> ]
-"15562" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders)<SUB>5550</SUB>> ]
-"15565" [label = <(FIELD_IDENTIFIER,_1,_1)<SUB>5550</SUB>> ]
-"15576" [label = <(&lt;operator&gt;.fieldAccess,ui::PixelFormat)<SUB>5552</SUB>> ]
-"15579" [label = <(FIELD_IDENTIFIER,RGBA_8888,RGBA_8888)<SUB>5552</SUB>> ]
-"15441" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().width)<SUB>5519</SUB>> ]
-"15451" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().height)<SUB>5520</SUB>> ]
-"15463" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>5522</SUB>> ]
-"15468" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5523</SUB>> ]
-"15471" [label = <(FIELD_IDENTIFIER,toRotationFlags,toRotationFlags)<SUB>5523</SUB>> ]
-"15478" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5526</SUB>> ]
-"15481" [label = <(FIELD_IDENTIFIER,ROT_90,ROT_90)<SUB>5526</SUB>> ]
-"15484" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_270)<SUB>5527</SUB>> ]
-"15492" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5530</SUB>> ]
-"15495" [label = <(FIELD_IDENTIFIER,ROT_270,ROT_270)<SUB>5530</SUB>> ]
-"15498" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_90)<SUB>5531</SUB>> ]
-"15506" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5534</SUB>> ]
-"15509" [label = <(FIELD_IDENTIFIER,ROT_INVALID,ROT_INVALID)<SUB>5534</SUB>> ]
-"15513" [label = <(toCString,toCString(orientation))<SUB>5535</SUB>> ]
-"15517" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_0)<SUB>5536</SUB>> ]
-"15530" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>5543</SUB>> ]
-"15537" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>5543</SUB>> ]
-"15558" [label = <(FIELD_IDENTIFIER,traverseLayersInDisplay,traverseLayersInDisplay)<SUB>5549</SUB>> ]
-"15442" [label = <(getViewport,display-&gt;getViewport())<SUB>5519</SUB>> ]
-"15446" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5519</SUB>> ]
-"15452" [label = <(getViewport,display-&gt;getViewport())<SUB>5520</SUB>> ]
-"15456" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5520</SUB>> ]
-"15485" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5527</SUB>> ]
-"15488" [label = <(FIELD_IDENTIFIER,ROT_270,ROT_270)<SUB>5527</SUB>> ]
-"15499" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5531</SUB>> ]
-"15502" [label = <(FIELD_IDENTIFIER,ROT_90,ROT_90)<SUB>5531</SUB>> ]
-"15518" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5536</SUB>> ]
-"15521" [label = <(FIELD_IDENTIFIER,ROT_0,ROT_0)<SUB>5536</SUB>> ]
-"15531" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>5543</SUB>> ]
-"15443" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5519</SUB>> ]
-"15453" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5520</SUB>> ]
-"15532" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>5543</SUB>> ]
-"15536" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>5543</SUB>> ]
-"15445" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5519</SUB>> ]
-"15455" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5520</SUB>> ]
-"15533" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>5543</SUB>> ]
-"15535" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>5543</SUB>> ]
-"15410" [label = <(METHOD,captureScreen)<SUB>5506</SUB>> ]
-"15582" [label = <(METHOD_RETURN,status_t)<SUB>5506</SUB>> ]
-  "15415" -> "15425" 
-  "15539" -> "15554" 
-  "15549" -> "15567" 
-  "15567" -> "15576" 
-  "15570" -> "15582" 
-  "15416" -> "15415" 
-  "15425" -> "15429" 
-  "15427" -> "15432" 
-  "15437" -> "15455" 
-  "15447" -> "15463" 
-  "15458" -> "15468" 
-  "15464" -> "15478" 
-  "15464" -> "15492" 
-  "15464" -> "15506" 
-  "15464" -> "15526" 
-  "15525" -> "15541" 
-  "15541" -> "15544" 
-  "15544" -> "15539" 
-  "15551" -> "15549" 
-  "15571" -> "15570" 
-  "15429" -> "15427" 
-  "15432" -> "15435" 
-  "15432" -> "15445" 
-  "15439" -> "15437" 
-  "15449" -> "15447" 
-  "15460" -> "15458" 
-  "15466" -> "15464" 
-  "15526" -> "15535" 
-  "15528" -> "15525" 
-  "15552" -> "15558" 
-  "15555" -> "15562" 
-  "15561" -> "15551" 
-  "15575" -> "15571" 
-  "15435" -> "15582" 
-  "15440" -> "15439" 
-  "15450" -> "15449" 
-  "15461" -> "15460" 
-  "15467" -> "15466" 
-  "15477" -> "15485" 
-  "15482" -> "15526" 
-  "15491" -> "15499" 
-  "15496" -> "15526" 
-  "15505" -> "15513" 
-  "15510" -> "15518" 
-  "15515" -> "15526" 
-  "15529" -> "15528" 
-  "15554" -> "15552" 
-  "15556" -> "15555" 
-  "15562" -> "15565" 
-  "15565" -> "15561" 
-  "15576" -> "15579" 
-  "15579" -> "15575" 
-  "15441" -> "15440" 
-  "15451" -> "15450" 
-  "15463" -> "15461" 
-  "15468" -> "15471" 
-  "15471" -> "15467" 
-  "15478" -> "15481" 
-  "15481" -> "15477" 
-  "15484" -> "15482" 
-  "15492" -> "15495" 
-  "15495" -> "15491" 
-  "15498" -> "15496" 
-  "15506" -> "15509" 
-  "15509" -> "15505" 
-  "15513" -> "15510" 
-  "15517" -> "15515" 
-  "15530" -> "15537" 
-  "15537" -> "15529" 
-  "15558" -> "15556" 
-  "15442" -> "15446" 
-  "15446" -> "15441" 
-  "15452" -> "15456" 
-  "15456" -> "15451" 
-  "15485" -> "15488" 
-  "15488" -> "15484" 
-  "15499" -> "15502" 
-  "15502" -> "15498" 
-  "15518" -> "15521" 
-  "15521" -> "15517" 
-  "15531" -> "15530" 
-  "15443" -> "15442" 
-  "15453" -> "15452" 
-  "15532" -> "15536" 
-  "15536" -> "15531" 
+"15431" [label = <(&lt;operator&gt;.greaterThan,sp&lt;DisplayDevice&gt; display)<SUB>5507</SUB>> ]
+"15555" [label = <(renderArea,renderArea(display, Rect(), width, height, *outDataspace, captureOrientation,\012 false /* captureSecureLayers */))<SUB>5545</SUB>> ]
+"15565" [label = <(&lt;operator&gt;.assignment,traverseLayers = std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5548</SUB>> ]
+"15583" [label = <(&lt;operator&gt;.assignment,ignored = false)<SUB>5550</SUB>> ]
+"15586" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */);)<SUB>5551</SUB>> ]
+"15432" [label = <(&lt;operator&gt;.lessThan,sp&lt;DisplayDevice)<SUB>5507</SUB>> ]
+"15441" [label = <(lock,lock(mStateLock))<SUB>5512</SUB>> ]
+"15443" [label = <(&lt;operator&gt;.assignment,display = getDisplayByIdOrLayerStack(displayOrLayerStack))<SUB>5513</SUB>> ]
+"15453" [label = <(&lt;operator&gt;.assignment,width = uint32_t(display-&gt;getViewport().width()))<SUB>5518</SUB>> ]
+"15463" [label = <(&lt;operator&gt;.assignment,height = uint32_t(display-&gt;getViewport().height()))<SUB>5519</SUB>> ]
+"15474" [label = <(&lt;operator&gt;.assignment,orientation = display-&gt;getOrientation())<SUB>5521</SUB>> ]
+"15480" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::toRotationFlags(orientation))<SUB>5522</SUB>> ]
+"15541" [label = <(&lt;operator&gt;.assignment,*outDataspace =\012                pickDataspaceFromColorMode(display-&gt;getCompositionDisplay()-&gt;getState().colorMode))<SUB>5541</SUB>> ]
+"15557" [label = <(Rect,Rect())<SUB>5545</SUB>> ]
+"15560" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>5545</SUB>> ]
+"15567" [label = <(std::bind,std::bind(&amp;SurfaceFlinger::traverseLayersInDisplay, this, display,\012                                    std::placeholders::_1))<SUB>5548</SUB>> ]
+"15587" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, ui::PixelFormat::RGBA_8888,\012 false /* useIdentityTransform */,\012                               ignored /* outCapturedSecureLayers */))<SUB>5551</SUB>> ]
+"15445" [label = <(getDisplayByIdOrLayerStack,getDisplayByIdOrLayerStack(displayOrLayerStack))<SUB>5513</SUB>> ]
+"15448" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5514</SUB>> ]
+"15455" [label = <(uint32_t,uint32_t(display-&gt;getViewport().width()))<SUB>5518</SUB>> ]
+"15465" [label = <(uint32_t,uint32_t(display-&gt;getViewport().height()))<SUB>5519</SUB>> ]
+"15476" [label = <(getOrientation,display-&gt;getOrientation())<SUB>5521</SUB>> ]
+"15482" [label = <(ui::Transform::toRotationFlags,ui::Transform::toRotationFlags(orientation))<SUB>5522</SUB>> ]
+"15542" [label = <(&lt;operator&gt;.indirection,*outDataspace)<SUB>5541</SUB>> ]
+"15544" [label = <(pickDataspaceFromColorMode,pickDataspaceFromColorMode(display-&gt;getCompositionDisplay()-&gt;getState().colorMode))<SUB>5542</SUB>> ]
+"15568" [label = <(&lt;operator&gt;.fieldAccess,std::bind)<SUB>5548</SUB>> ]
+"15571" [label = <(&lt;operator&gt;.addressOf,&amp;SurfaceFlinger::traverseLayersInDisplay)<SUB>5548</SUB>> ]
+"15577" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders::_1)<SUB>5549</SUB>> ]
+"15591" [label = <(&lt;operator&gt;.fieldAccess,ui::PixelFormat::RGBA_8888)<SUB>5551</SUB>> ]
+"15451" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5515</SUB>> ]
+"15456" [label = <(width,display-&gt;getViewport().width())<SUB>5518</SUB>> ]
+"15466" [label = <(height,display-&gt;getViewport().height())<SUB>5519</SUB>> ]
+"15477" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>5521</SUB>> ]
+"15483" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::toRotationFlags)<SUB>5522</SUB>> ]
+"15493" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_90)<SUB>5525</SUB>> ]
+"15498" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_270)<SUB>5526</SUB>> ]
+"15507" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_270)<SUB>5529</SUB>> ]
+"15512" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_90)<SUB>5530</SUB>> ]
+"15521" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_INVALID)<SUB>5533</SUB>> ]
+"15526" [label = <(ALOGE,ALOGE(&quot;%s: Invalid orientation: %s&quot;, __FUNCTION__, toCString(orientation)))<SUB>5534</SUB>> ]
+"15531" [label = <(&lt;operator&gt;.assignment,captureOrientation = ui::Transform::ROT_0)<SUB>5535</SUB>> ]
+"15545" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getCompositionDisplay()-&gt;getState().colorMode)<SUB>5542</SUB>> ]
+"15570" [label = <(FIELD_IDENTIFIER,bind,bind)<SUB>5548</SUB>> ]
+"15572" [label = <(&lt;operator&gt;.fieldAccess,SurfaceFlinger::traverseLayersInDisplay)<SUB>5548</SUB>> ]
+"15578" [label = <(&lt;operator&gt;.fieldAccess,std::placeholders)<SUB>5549</SUB>> ]
+"15581" [label = <(FIELD_IDENTIFIER,_1,_1)<SUB>5549</SUB>> ]
+"15592" [label = <(&lt;operator&gt;.fieldAccess,ui::PixelFormat)<SUB>5551</SUB>> ]
+"15595" [label = <(FIELD_IDENTIFIER,RGBA_8888,RGBA_8888)<SUB>5551</SUB>> ]
+"15457" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().width)<SUB>5518</SUB>> ]
+"15467" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getViewport().height)<SUB>5519</SUB>> ]
+"15479" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>5521</SUB>> ]
+"15484" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5522</SUB>> ]
+"15487" [label = <(FIELD_IDENTIFIER,toRotationFlags,toRotationFlags)<SUB>5522</SUB>> ]
+"15494" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5525</SUB>> ]
+"15497" [label = <(FIELD_IDENTIFIER,ROT_90,ROT_90)<SUB>5525</SUB>> ]
+"15500" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_270)<SUB>5526</SUB>> ]
+"15508" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5529</SUB>> ]
+"15511" [label = <(FIELD_IDENTIFIER,ROT_270,ROT_270)<SUB>5529</SUB>> ]
+"15514" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_90)<SUB>5530</SUB>> ]
+"15522" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5533</SUB>> ]
+"15525" [label = <(FIELD_IDENTIFIER,ROT_INVALID,ROT_INVALID)<SUB>5533</SUB>> ]
+"15529" [label = <(toCString,toCString(orientation))<SUB>5534</SUB>> ]
+"15533" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform::ROT_0)<SUB>5535</SUB>> ]
+"15546" [label = <(getState,display-&gt;getCompositionDisplay()-&gt;getState())<SUB>5542</SUB>> ]
+"15553" [label = <(FIELD_IDENTIFIER,colorMode,colorMode)<SUB>5542</SUB>> ]
+"15574" [label = <(FIELD_IDENTIFIER,traverseLayersInDisplay,traverseLayersInDisplay)<SUB>5548</SUB>> ]
+"15458" [label = <(getViewport,display-&gt;getViewport())<SUB>5518</SUB>> ]
+"15462" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5518</SUB>> ]
+"15468" [label = <(getViewport,display-&gt;getViewport())<SUB>5519</SUB>> ]
+"15472" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5519</SUB>> ]
+"15501" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5526</SUB>> ]
+"15504" [label = <(FIELD_IDENTIFIER,ROT_270,ROT_270)<SUB>5526</SUB>> ]
+"15515" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5530</SUB>> ]
+"15518" [label = <(FIELD_IDENTIFIER,ROT_90,ROT_90)<SUB>5530</SUB>> ]
+"15534" [label = <(&lt;operator&gt;.fieldAccess,ui::Transform)<SUB>5535</SUB>> ]
+"15537" [label = <(FIELD_IDENTIFIER,ROT_0,ROT_0)<SUB>5535</SUB>> ]
+"15547" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay()-&gt;getState)<SUB>5542</SUB>> ]
+"15459" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5518</SUB>> ]
+"15469" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5519</SUB>> ]
+"15548" [label = <(getCompositionDisplay,display-&gt;getCompositionDisplay())<SUB>5542</SUB>> ]
+"15552" [label = <(FIELD_IDENTIFIER,getState,getState)<SUB>5542</SUB>> ]
+"15461" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5518</SUB>> ]
+"15471" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5519</SUB>> ]
+"15549" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getCompositionDisplay)<SUB>5542</SUB>> ]
+"15551" [label = <(FIELD_IDENTIFIER,getCompositionDisplay,getCompositionDisplay)<SUB>5542</SUB>> ]
+"15426" [label = <(METHOD,captureScreen)<SUB>5505</SUB>> ]
+"15598" [label = <(METHOD_RETURN,status_t)<SUB>5505</SUB>> ]
+  "15431" -> "15441" 
+  "15555" -> "15570" 
+  "15565" -> "15583" 
+  "15583" -> "15592" 
+  "15586" -> "15598" 
+  "15432" -> "15431" 
+  "15441" -> "15445" 
+  "15443" -> "15448" 
+  "15453" -> "15471" 
+  "15463" -> "15479" 
+  "15474" -> "15484" 
+  "15480" -> "15494" 
+  "15480" -> "15508" 
+  "15480" -> "15522" 
+  "15480" -> "15542" 
+  "15541" -> "15557" 
+  "15557" -> "15560" 
+  "15560" -> "15555" 
+  "15567" -> "15565" 
+  "15587" -> "15586" 
   "15445" -> "15443" 
+  "15448" -> "15451" 
+  "15448" -> "15461" 
   "15455" -> "15453" 
-  "15533" -> "15532" 
-  "15535" -> "15533" 
-  "15410" -> "15416" 
+  "15465" -> "15463" 
+  "15476" -> "15474" 
+  "15482" -> "15480" 
+  "15542" -> "15551" 
+  "15544" -> "15541" 
+  "15568" -> "15574" 
+  "15571" -> "15578" 
+  "15577" -> "15567" 
+  "15591" -> "15587" 
+  "15451" -> "15598" 
+  "15456" -> "15455" 
+  "15466" -> "15465" 
+  "15477" -> "15476" 
+  "15483" -> "15482" 
+  "15493" -> "15501" 
+  "15498" -> "15542" 
+  "15507" -> "15515" 
+  "15512" -> "15542" 
+  "15521" -> "15529" 
+  "15526" -> "15534" 
+  "15531" -> "15542" 
+  "15545" -> "15544" 
+  "15570" -> "15568" 
+  "15572" -> "15571" 
+  "15578" -> "15581" 
+  "15581" -> "15577" 
+  "15592" -> "15595" 
+  "15595" -> "15591" 
+  "15457" -> "15456" 
+  "15467" -> "15466" 
+  "15479" -> "15477" 
+  "15484" -> "15487" 
+  "15487" -> "15483" 
+  "15494" -> "15497" 
+  "15497" -> "15493" 
+  "15500" -> "15498" 
+  "15508" -> "15511" 
+  "15511" -> "15507" 
+  "15514" -> "15512" 
+  "15522" -> "15525" 
+  "15525" -> "15521" 
+  "15529" -> "15526" 
+  "15533" -> "15531" 
+  "15546" -> "15553" 
+  "15553" -> "15545" 
+  "15574" -> "15572" 
+  "15458" -> "15462" 
+  "15462" -> "15457" 
+  "15468" -> "15472" 
+  "15472" -> "15467" 
+  "15501" -> "15504" 
+  "15504" -> "15500" 
+  "15515" -> "15518" 
+  "15518" -> "15514" 
+  "15534" -> "15537" 
+  "15537" -> "15533" 
+  "15547" -> "15546" 
+  "15459" -> "15458" 
+  "15469" -> "15468" 
+  "15548" -> "15552" 
+  "15552" -> "15547" 
+  "15461" -> "15459" 
+  "15471" -> "15469" 
+  "15549" -> "15548" 
+  "15551" -> "15549" 
+  "15426" -> "15432" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/25-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/25-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/25-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/25-cfg.dot	2023-06-07 19:33:06.447398425 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_32" {  
-"116" [label = <(METHOD,anonymous_lambda_32)<SUB>2986</SUB>> ]
-"119" [label = <(METHOD_RETURN,ANY)<SUB>2986</SUB>> ]
+"116" [label = <(METHOD,anonymous_lambda_32)<SUB>2985</SUB>> ]
+"119" [label = <(METHOD_RETURN,ANY)<SUB>2985</SUB>> ]
   "116" -> "119" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/250-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/250-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/250-cfg.dot	2023-06-07 19:33:00.487398975 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/250-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,269 +1,269 @@
 digraph "captureLayers" {  
-"15594" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5562</SUB>> ]
-"15596" [label = <(&lt;operator&gt;.assignment,reqWidth = 0)<SUB>5644</SUB>> ]
-"15600" [label = <(&lt;operator&gt;.assignment,reqHeight = 0)<SUB>5645</SUB>> ]
-"15603" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; parent)<SUB>5646</SUB>> ]
-"15609" [label = <(crop,crop(sourceCrop))<SUB>5647</SUB>> ]
-"15826" [label = <(renderArea,renderArea(this, parent, crop, reqWidth, reqHeight, reqDataspace, childrenOnly,\012                               displayViewport))<SUB>5711</SUB>> ]
-"15836" [label = <(&lt;operator&gt;.assignment,traverseLayers = [parent, childrenOnly,\012 &amp;excludeLayers](const LayerVector::Visitor&amp; visitor) {\012        parent-&gt;traverseChildrenInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;isVisible()) {\012 return;\012 } else if (childrenOnly &amp;&amp; layer == parent.get()) {\012 return;\012 }\012\012            sp&lt;Layer&gt; p = layer;\012 while (p != nullptr) {\012 if (excludeLayers.count(p) != 0) {\012 return;\012 }\012                p = p-&gt;getParent();\012 }\012\012            visitor(layer);\012 });\012 })<SUB>5713</SUB>> ]
-"15840" [label = <(&lt;operator&gt;.assignment,outCapturedSecureLayers = false)<SUB>5734</SUB>> ]
-"15843" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers);)<SUB>5735</SUB>> ]
-"15604" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>5646</SUB>> ]
-"15615" [label = <(lock,lock(mStateLock))<SUB>5651</SUB>> ]
-"15617" [label = <(&lt;operator&gt;.assignment,parent = fromHandleLocked(layerHandleBinder).promote())<SUB>5653</SUB>> ]
-"15639" [label = <(&lt;operator&gt;.assignment,uid = IPCThreadState::self()-&gt;getCallingUid())<SUB>5659</SUB>> ]
-"15649" [label = <(&lt;operator&gt;.assignment,forSystem = uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5660</SUB>> ]
-"15678" [label = <(&lt;operator&gt;.assignment,parentSourceBounds = parent-&gt;getCroppedBufferSize(parent-&gt;getCurrentState()))<SUB>5666</SUB>> ]
-"15742" [label = <(&lt;operator&gt;.assignment,reqWidth = crop.width() * frameScale)<SUB>5682</SUB>> ]
-"15750" [label = <(&lt;operator&gt;.assignment,reqHeight = crop.height() * frameScale)<SUB>5683</SUB>> ]
-"15790" [label = <(&lt;operator&gt;.assignment,display = getDisplayByLayerStack(parent-&gt;getLayerStack()))<SUB>5695</SUB>> ]
-"15803" [label = <(&lt;operator&gt;.assignment,displayViewport = display-&gt;getViewport())<SUB>5700</SUB>> ]
-"15810" [label = <(&lt;operator&gt;.lessEqualsThan,reqWidth &lt;= 0)<SUB>5704</SUB>> ]
-"15818" [label = <(&lt;operator&gt;.lessEqualsThan,reqHeight &lt;= 0)<SUB>5707</SUB>> ]
-"15838" [label = <(METHOD_REF,ANY anonymous_lambda_54 (const LayerVector::Visitor&amp; visitor),traverseLayers = [parent, childrenOnly,\012 &amp;excludeLayers](const LayerVector::Visitor&amp; visitor) {\012        parent-&gt;traverseChildrenInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;isVisible()) {\012 return;\012 } else if (childrenOnly &amp;&amp; layer == parent.get()) {\012 return;\012 }\012\012            sp&lt;Layer&gt; p = layer;\012 while (p != nullptr) {\012 if (excludeLayers.count(p) != 0) {\012 return;\012 }\012                p = p-&gt;getParent();\012 }\012\012            visitor(layer);\012 });\012 })<SUB>5713</SUB>> ]
-"15844" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers))<SUB>5735</SUB>> ]
-"15619" [label = <(promote,fromHandleLocked(layerHandleBinder).promote())<SUB>5653</SUB>> ]
-"15625" [label = <(&lt;operator&gt;.logicalOr,parent == nullptr || parent-&gt;isRemovedFromCurrentState())<SUB>5654</SUB>> ]
-"15641" [label = <(getCallingUid,IPCThreadState::self()-&gt;getCallingUid())<SUB>5659</SUB>> ]
-"15651" [label = <(&lt;operator&gt;.logicalOr,uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5660</SUB>> ]
-"15659" [label = <(&lt;operator&gt;.logicalAnd,!forSystem &amp;&amp; parent-&gt;getCurrentState().flags &amp; layer_state_t::eLayerSecure)<SUB>5661</SUB>> ]
-"15680" [label = <(getCroppedBufferSize,parent-&gt;getCroppedBufferSize(parent-&gt;getCurrentState()))<SUB>5666</SUB>> ]
-"15689" [label = <(&lt;operator&gt;.lessEqualsThan,sourceCrop.width() &lt;= 0)<SUB>5667</SUB>> ]
-"15710" [label = <(&lt;operator&gt;.lessEqualsThan,sourceCrop.height() &lt;= 0)<SUB>5672</SUB>> ]
-"15731" [label = <(&lt;operator&gt;.logicalOr,crop.isEmpty() || frameScale &lt;= 0.0f)<SUB>5677</SUB>> ]
-"15744" [label = <(&lt;operator&gt;.multiplication,crop.width() * frameScale)<SUB>5682</SUB>> ]
-"15752" [label = <(&lt;operator&gt;.multiplication,crop.height() * frameScale)<SUB>5683</SUB>> ]
-"15792" [label = <(getDisplayByLayerStack,getDisplayByLayerStack(parent-&gt;getLayerStack()))<SUB>5695</SUB>> ]
-"15798" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5696</SUB>> ]
-"15805" [label = <(getViewport,display-&gt;getViewport())<SUB>5700</SUB>> ]
-"15814" [label = <(&lt;operator&gt;.assignment,reqWidth = 1)<SUB>5705</SUB>> ]
-"15822" [label = <(&lt;operator&gt;.assignment,reqHeight = 1)<SUB>5708</SUB>> ]
-"15620" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(layerHandleBinder).promote)<SUB>5653</SUB>> ]
-"15626" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>5654</SUB>> ]
-"15629" [label = <(isRemovedFromCurrentState,parent-&gt;isRemovedFromCurrentState())<SUB>5654</SUB>> ]
-"15634" [label = <(ALOGE,ALOGE(&quot;captureLayers called with an invalid or removed parent&quot;))<SUB>5655</SUB>> ]
-"15636" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5656</SUB>> ]
-"15642" [label = <(&lt;operator&gt;.indirectFieldAccess,IPCThreadState::self()-&gt;getCallingUid)<SUB>5659</SUB>> ]
-"15652" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>5660</SUB>> ]
-"15655" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>5660</SUB>> ]
-"15660" [label = <(&lt;operator&gt;.logicalNot,!forSystem)<SUB>5661</SUB>> ]
-"15662" [label = <(&lt;operator&gt;.and,parent-&gt;getCurrentState().flags &amp; layer_state_t::eLayerSecure)<SUB>5661</SUB>> ]
-"15673" [label = <(ALOGW,ALOGW(&quot;Attempting to capture secure layer: PERMISSION_DENIED&quot;))<SUB>5662</SUB>> ]
-"15675" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5663</SUB>> ]
-"15681" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCroppedBufferSize)<SUB>5666</SUB>> ]
-"15684" [label = <(getCurrentState,parent-&gt;getCurrentState())<SUB>5666</SUB>> ]
-"15690" [label = <(width,sourceCrop.width())<SUB>5667</SUB>> ]
-"15696" [label = <(&lt;operator&gt;.assignment,crop.left = 0)<SUB>5668</SUB>> ]
-"15701" [label = <(&lt;operator&gt;.assignment,crop.right = parentSourceBounds.getWidth())<SUB>5669</SUB>> ]
-"15711" [label = <(height,sourceCrop.height())<SUB>5672</SUB>> ]
-"15717" [label = <(&lt;operator&gt;.assignment,crop.top = 0)<SUB>5673</SUB>> ]
-"15722" [label = <(&lt;operator&gt;.assignment,crop.bottom = parentSourceBounds.getHeight())<SUB>5674</SUB>> ]
-"15732" [label = <(isEmpty,crop.isEmpty())<SUB>5677</SUB>> ]
-"15736" [label = <(&lt;operator&gt;.lessEqualsThan,frameScale &lt;= 0.0f)<SUB>5677</SUB>> ]
-"15740" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5680</SUB>> ]
-"15745" [label = <(width,crop.width())<SUB>5682</SUB>> ]
-"15753" [label = <(height,crop.height())<SUB>5683</SUB>> ]
-"15762" [label = <(&lt;operator&gt;.assignment,sp&lt;Layer&gt; excludeLayer = fromHandleLocked(handle).promote())<SUB>5686</SUB>> ]
-"15793" [label = <(getLayerStack,parent-&gt;getLayerStack())<SUB>5695</SUB>> ]
-"15801" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5697</SUB>> ]
-"15806" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5700</SUB>> ]
-"15621" [label = <(fromHandleLocked,fromHandleLocked(layerHandleBinder))<SUB>5653</SUB>> ]
-"15623" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>5653</SUB>> ]
-"15630" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;isRemovedFromCurrentState)<SUB>5654</SUB>> ]
-"15643" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5659</SUB>> ]
-"15647" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5659</SUB>> ]
-"15663" [label = <(&lt;operator&gt;.fieldAccess,parent-&gt;getCurrentState().flags)<SUB>5661</SUB>> ]
-"15669" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerSecure)<SUB>5661</SUB>> ]
-"15683" [label = <(FIELD_IDENTIFIER,getCroppedBufferSize,getCroppedBufferSize)<SUB>5666</SUB>> ]
-"15685" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCurrentState)<SUB>5666</SUB>> ]
-"15691" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.width)<SUB>5667</SUB>> ]
-"15697" [label = <(&lt;operator&gt;.fieldAccess,crop.left)<SUB>5668</SUB>> ]
-"15702" [label = <(&lt;operator&gt;.fieldAccess,crop.right)<SUB>5669</SUB>> ]
-"15705" [label = <(getWidth,parentSourceBounds.getWidth())<SUB>5669</SUB>> ]
-"15712" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.height)<SUB>5672</SUB>> ]
-"15718" [label = <(&lt;operator&gt;.fieldAccess,crop.top)<SUB>5673</SUB>> ]
-"15723" [label = <(&lt;operator&gt;.fieldAccess,crop.bottom)<SUB>5674</SUB>> ]
-"15726" [label = <(getHeight,parentSourceBounds.getHeight())<SUB>5674</SUB>> ]
-"15733" [label = <(&lt;operator&gt;.fieldAccess,crop.isEmpty)<SUB>5677</SUB>> ]
-"15746" [label = <(&lt;operator&gt;.fieldAccess,crop.width)<SUB>5682</SUB>> ]
-"15754" [label = <(&lt;operator&gt;.fieldAccess,crop.height)<SUB>5683</SUB>> ]
-"15763" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; excludeLayer)<SUB>5686</SUB>> ]
-"15768" [label = <(promote,fromHandleLocked(handle).promote())<SUB>5686</SUB>> ]
-"15774" [label = <(&lt;operator&gt;.notEquals,excludeLayer != nullptr)<SUB>5687</SUB>> ]
-"15794" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getLayerStack)<SUB>5695</SUB>> ]
-"15808" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5700</SUB>> ]
-"15632" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>5654</SUB>> ]
-"15644" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5659</SUB>> ]
-"15664" [label = <(getCurrentState,parent-&gt;getCurrentState())<SUB>5661</SUB>> ]
-"15668" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>5661</SUB>> ]
-"15671" [label = <(FIELD_IDENTIFIER,eLayerSecure,eLayerSecure)<SUB>5661</SUB>> ]
-"15687" [label = <(FIELD_IDENTIFIER,getCurrentState,getCurrentState)<SUB>5666</SUB>> ]
-"15693" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5667</SUB>> ]
-"15699" [label = <(FIELD_IDENTIFIER,left,left)<SUB>5668</SUB>> ]
-"15704" [label = <(FIELD_IDENTIFIER,right,right)<SUB>5669</SUB>> ]
-"15706" [label = <(&lt;operator&gt;.fieldAccess,parentSourceBounds.getWidth)<SUB>5669</SUB>> ]
-"15714" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5672</SUB>> ]
-"15720" [label = <(FIELD_IDENTIFIER,top,top)<SUB>5673</SUB>> ]
-"15725" [label = <(FIELD_IDENTIFIER,bottom,bottom)<SUB>5674</SUB>> ]
-"15727" [label = <(&lt;operator&gt;.fieldAccess,parentSourceBounds.getHeight)<SUB>5674</SUB>> ]
-"15735" [label = <(FIELD_IDENTIFIER,isEmpty,isEmpty)<SUB>5677</SUB>> ]
-"15748" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5682</SUB>> ]
-"15756" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5683</SUB>> ]
-"15764" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>5686</SUB>> ]
-"15769" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(handle).promote)<SUB>5686</SUB>> ]
-"15778" [label = <(emplace,excludeLayers.emplace(excludeLayer))<SUB>5688</SUB>> ]
-"15796" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5695</SUB>> ]
-"15646" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5659</SUB>> ]
-"15665" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCurrentState)<SUB>5661</SUB>> ]
-"15708" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>5669</SUB>> ]
-"15729" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>5674</SUB>> ]
-"15770" [label = <(fromHandleLocked,fromHandleLocked(handle))<SUB>5686</SUB>> ]
-"15772" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>5686</SUB>> ]
-"15779" [label = <(&lt;operator&gt;.fieldAccess,excludeLayers.emplace)<SUB>5688</SUB>> ]
-"15785" [label = <(ALOGW,ALOGW(&quot;Invalid layer handle passed as excludeLayer to captureLayers&quot;))<SUB>5690</SUB>> ]
-"15787" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5691</SUB>> ]
-"15667" [label = <(FIELD_IDENTIFIER,getCurrentState,getCurrentState)<SUB>5661</SUB>> ]
-"15781" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>5688</SUB>> ]
-"15584" [label = <(METHOD,captureLayers)<SUB>5557</SUB>> ]
-"15851" [label = <(METHOD_RETURN,status_t)<SUB>5557</SUB>> ]
-  "15594" -> "15596" 
-  "15596" -> "15600" 
-  "15600" -> "15604" 
-  "15603" -> "15609" 
-  "15609" -> "15615" 
-  "15826" -> "15838" 
-  "15836" -> "15840" 
-  "15840" -> "15844" 
-  "15843" -> "15851" 
-  "15604" -> "15603" 
-  "15615" -> "15621" 
-  "15617" -> "15626" 
-  "15639" -> "15652" 
-  "15649" -> "15660" 
-  "15678" -> "15693" 
-  "15742" -> "15756" 
-  "15750" -> "15764" 
-  "15790" -> "15798" 
-  "15803" -> "15810" 
-  "15810" -> "15814" 
-  "15810" -> "15818" 
-  "15818" -> "15822" 
-  "15818" -> "15826" 
-  "15838" -> "15836" 
-  "15844" -> "15843" 
-  "15619" -> "15617" 
-  "15625" -> "15634" 
-  "15625" -> "15646" 
-  "15641" -> "15639" 
-  "15651" -> "15649" 
-  "15659" -> "15673" 
-  "15659" -> "15683" 
-  "15680" -> "15678" 
-  "15689" -> "15699" 
-  "15689" -> "15714" 
-  "15710" -> "15720" 
-  "15710" -> "15735" 
-  "15731" -> "15740" 
-  "15731" -> "15748" 
-  "15744" -> "15742" 
-  "15752" -> "15750" 
-  "15792" -> "15790" 
-  "15798" -> "15801" 
-  "15798" -> "15808" 
-  "15805" -> "15803" 
-  "15814" -> "15818" 
-  "15822" -> "15826" 
+"15610" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5561</SUB>> ]
+"15612" [label = <(&lt;operator&gt;.assignment,reqWidth = 0)<SUB>5643</SUB>> ]
+"15616" [label = <(&lt;operator&gt;.assignment,reqHeight = 0)<SUB>5644</SUB>> ]
+"15619" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; parent)<SUB>5645</SUB>> ]
+"15625" [label = <(crop,crop(sourceCrop))<SUB>5646</SUB>> ]
+"15842" [label = <(renderArea,renderArea(this, parent, crop, reqWidth, reqHeight, reqDataspace, childrenOnly,\012                               displayViewport))<SUB>5710</SUB>> ]
+"15852" [label = <(&lt;operator&gt;.assignment,traverseLayers = [parent, childrenOnly,\012 &amp;excludeLayers](const LayerVector::Visitor&amp; visitor) {\012        parent-&gt;traverseChildrenInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;isVisible()) {\012 return;\012 } else if (childrenOnly &amp;&amp; layer == parent.get()) {\012 return;\012 }\012\012            sp&lt;Layer&gt; p = layer;\012 while (p != nullptr) {\012 if (excludeLayers.count(p) != 0) {\012 return;\012 }\012                p = p-&gt;getParent();\012 }\012\012            visitor(layer);\012 });\012 })<SUB>5712</SUB>> ]
+"15856" [label = <(&lt;operator&gt;.assignment,outCapturedSecureLayers = false)<SUB>5733</SUB>> ]
+"15859" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers);)<SUB>5734</SUB>> ]
+"15620" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>5645</SUB>> ]
+"15631" [label = <(lock,lock(mStateLock))<SUB>5650</SUB>> ]
+"15633" [label = <(&lt;operator&gt;.assignment,parent = fromHandleLocked(layerHandleBinder).promote())<SUB>5652</SUB>> ]
+"15655" [label = <(&lt;operator&gt;.assignment,uid = IPCThreadState::self()-&gt;getCallingUid())<SUB>5658</SUB>> ]
+"15665" [label = <(&lt;operator&gt;.assignment,forSystem = uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5659</SUB>> ]
+"15694" [label = <(&lt;operator&gt;.assignment,parentSourceBounds = parent-&gt;getCroppedBufferSize(parent-&gt;getCurrentState()))<SUB>5665</SUB>> ]
+"15758" [label = <(&lt;operator&gt;.assignment,reqWidth = crop.width() * frameScale)<SUB>5681</SUB>> ]
+"15766" [label = <(&lt;operator&gt;.assignment,reqHeight = crop.height() * frameScale)<SUB>5682</SUB>> ]
+"15806" [label = <(&lt;operator&gt;.assignment,display = getDisplayByLayerStack(parent-&gt;getLayerStack()))<SUB>5694</SUB>> ]
+"15819" [label = <(&lt;operator&gt;.assignment,displayViewport = display-&gt;getViewport())<SUB>5699</SUB>> ]
+"15826" [label = <(&lt;operator&gt;.lessEqualsThan,reqWidth &lt;= 0)<SUB>5703</SUB>> ]
+"15834" [label = <(&lt;operator&gt;.lessEqualsThan,reqHeight &lt;= 0)<SUB>5706</SUB>> ]
+"15854" [label = <(METHOD_REF,ANY anonymous_lambda_54 (const LayerVector::Visitor&amp; visitor),traverseLayers = [parent, childrenOnly,\012 &amp;excludeLayers](const LayerVector::Visitor&amp; visitor) {\012        parent-&gt;traverseChildrenInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;isVisible()) {\012 return;\012 } else if (childrenOnly &amp;&amp; layer == parent.get()) {\012 return;\012 }\012\012            sp&lt;Layer&gt; p = layer;\012 while (p != nullptr) {\012 if (excludeLayers.count(p) != 0) {\012 return;\012 }\012                p = p-&gt;getParent();\012 }\012\012            visitor(layer);\012 });\012 })<SUB>5712</SUB>> ]
+"15860" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, outBuffer, reqPixelFormat, false,\012                               outCapturedSecureLayers))<SUB>5734</SUB>> ]
+"15635" [label = <(promote,fromHandleLocked(layerHandleBinder).promote())<SUB>5652</SUB>> ]
+"15641" [label = <(&lt;operator&gt;.logicalOr,parent == nullptr || parent-&gt;isRemovedFromCurrentState())<SUB>5653</SUB>> ]
+"15657" [label = <(getCallingUid,IPCThreadState::self()-&gt;getCallingUid())<SUB>5658</SUB>> ]
+"15667" [label = <(&lt;operator&gt;.logicalOr,uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5659</SUB>> ]
+"15675" [label = <(&lt;operator&gt;.logicalAnd,!forSystem &amp;&amp; parent-&gt;getCurrentState().flags &amp; layer_state_t::eLayerSecure)<SUB>5660</SUB>> ]
+"15696" [label = <(getCroppedBufferSize,parent-&gt;getCroppedBufferSize(parent-&gt;getCurrentState()))<SUB>5665</SUB>> ]
+"15705" [label = <(&lt;operator&gt;.lessEqualsThan,sourceCrop.width() &lt;= 0)<SUB>5666</SUB>> ]
+"15726" [label = <(&lt;operator&gt;.lessEqualsThan,sourceCrop.height() &lt;= 0)<SUB>5671</SUB>> ]
+"15747" [label = <(&lt;operator&gt;.logicalOr,crop.isEmpty() || frameScale &lt;= 0.0f)<SUB>5676</SUB>> ]
+"15760" [label = <(&lt;operator&gt;.multiplication,crop.width() * frameScale)<SUB>5681</SUB>> ]
+"15768" [label = <(&lt;operator&gt;.multiplication,crop.height() * frameScale)<SUB>5682</SUB>> ]
+"15808" [label = <(getDisplayByLayerStack,getDisplayByLayerStack(parent-&gt;getLayerStack()))<SUB>5694</SUB>> ]
+"15814" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>5695</SUB>> ]
+"15821" [label = <(getViewport,display-&gt;getViewport())<SUB>5699</SUB>> ]
+"15830" [label = <(&lt;operator&gt;.assignment,reqWidth = 1)<SUB>5704</SUB>> ]
+"15838" [label = <(&lt;operator&gt;.assignment,reqHeight = 1)<SUB>5707</SUB>> ]
+"15636" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(layerHandleBinder).promote)<SUB>5652</SUB>> ]
+"15642" [label = <(&lt;operator&gt;.equals,parent == nullptr)<SUB>5653</SUB>> ]
+"15645" [label = <(isRemovedFromCurrentState,parent-&gt;isRemovedFromCurrentState())<SUB>5653</SUB>> ]
+"15650" [label = <(ALOGE,ALOGE(&quot;captureLayers called with an invalid or removed parent&quot;))<SUB>5654</SUB>> ]
+"15652" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5655</SUB>> ]
+"15658" [label = <(&lt;operator&gt;.indirectFieldAccess,IPCThreadState::self()-&gt;getCallingUid)<SUB>5658</SUB>> ]
+"15668" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>5659</SUB>> ]
+"15671" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>5659</SUB>> ]
+"15676" [label = <(&lt;operator&gt;.logicalNot,!forSystem)<SUB>5660</SUB>> ]
+"15678" [label = <(&lt;operator&gt;.and,parent-&gt;getCurrentState().flags &amp; layer_state_t::eLayerSecure)<SUB>5660</SUB>> ]
+"15689" [label = <(ALOGW,ALOGW(&quot;Attempting to capture secure layer: PERMISSION_DENIED&quot;))<SUB>5661</SUB>> ]
+"15691" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5662</SUB>> ]
+"15697" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCroppedBufferSize)<SUB>5665</SUB>> ]
+"15700" [label = <(getCurrentState,parent-&gt;getCurrentState())<SUB>5665</SUB>> ]
+"15706" [label = <(width,sourceCrop.width())<SUB>5666</SUB>> ]
+"15712" [label = <(&lt;operator&gt;.assignment,crop.left = 0)<SUB>5667</SUB>> ]
+"15717" [label = <(&lt;operator&gt;.assignment,crop.right = parentSourceBounds.getWidth())<SUB>5668</SUB>> ]
+"15727" [label = <(height,sourceCrop.height())<SUB>5671</SUB>> ]
+"15733" [label = <(&lt;operator&gt;.assignment,crop.top = 0)<SUB>5672</SUB>> ]
+"15738" [label = <(&lt;operator&gt;.assignment,crop.bottom = parentSourceBounds.getHeight())<SUB>5673</SUB>> ]
+"15748" [label = <(isEmpty,crop.isEmpty())<SUB>5676</SUB>> ]
+"15752" [label = <(&lt;operator&gt;.lessEqualsThan,frameScale &lt;= 0.0f)<SUB>5676</SUB>> ]
+"15756" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5679</SUB>> ]
+"15761" [label = <(width,crop.width())<SUB>5681</SUB>> ]
+"15769" [label = <(height,crop.height())<SUB>5682</SUB>> ]
+"15778" [label = <(&lt;operator&gt;.assignment,sp&lt;Layer&gt; excludeLayer = fromHandleLocked(handle).promote())<SUB>5685</SUB>> ]
+"15809" [label = <(getLayerStack,parent-&gt;getLayerStack())<SUB>5694</SUB>> ]
+"15817" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5696</SUB>> ]
+"15822" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>5699</SUB>> ]
+"15637" [label = <(fromHandleLocked,fromHandleLocked(layerHandleBinder))<SUB>5652</SUB>> ]
+"15639" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>5652</SUB>> ]
+"15646" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;isRemovedFromCurrentState)<SUB>5653</SUB>> ]
+"15659" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5658</SUB>> ]
+"15663" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5658</SUB>> ]
+"15679" [label = <(&lt;operator&gt;.fieldAccess,parent-&gt;getCurrentState().flags)<SUB>5660</SUB>> ]
+"15685" [label = <(&lt;operator&gt;.fieldAccess,layer_state_t::eLayerSecure)<SUB>5660</SUB>> ]
+"15699" [label = <(FIELD_IDENTIFIER,getCroppedBufferSize,getCroppedBufferSize)<SUB>5665</SUB>> ]
+"15701" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCurrentState)<SUB>5665</SUB>> ]
+"15707" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.width)<SUB>5666</SUB>> ]
+"15713" [label = <(&lt;operator&gt;.fieldAccess,crop.left)<SUB>5667</SUB>> ]
+"15718" [label = <(&lt;operator&gt;.fieldAccess,crop.right)<SUB>5668</SUB>> ]
+"15721" [label = <(getWidth,parentSourceBounds.getWidth())<SUB>5668</SUB>> ]
+"15728" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.height)<SUB>5671</SUB>> ]
+"15734" [label = <(&lt;operator&gt;.fieldAccess,crop.top)<SUB>5672</SUB>> ]
+"15739" [label = <(&lt;operator&gt;.fieldAccess,crop.bottom)<SUB>5673</SUB>> ]
+"15742" [label = <(getHeight,parentSourceBounds.getHeight())<SUB>5673</SUB>> ]
+"15749" [label = <(&lt;operator&gt;.fieldAccess,crop.isEmpty)<SUB>5676</SUB>> ]
+"15762" [label = <(&lt;operator&gt;.fieldAccess,crop.width)<SUB>5681</SUB>> ]
+"15770" [label = <(&lt;operator&gt;.fieldAccess,crop.height)<SUB>5682</SUB>> ]
+"15779" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Layer&gt; excludeLayer)<SUB>5685</SUB>> ]
+"15784" [label = <(promote,fromHandleLocked(handle).promote())<SUB>5685</SUB>> ]
+"15790" [label = <(&lt;operator&gt;.notEquals,excludeLayer != nullptr)<SUB>5686</SUB>> ]
+"15810" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getLayerStack)<SUB>5694</SUB>> ]
+"15824" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>5699</SUB>> ]
+"15648" [label = <(FIELD_IDENTIFIER,isRemovedFromCurrentState,isRemovedFromCurrentState)<SUB>5653</SUB>> ]
+"15660" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5658</SUB>> ]
+"15680" [label = <(getCurrentState,parent-&gt;getCurrentState())<SUB>5660</SUB>> ]
+"15684" [label = <(FIELD_IDENTIFIER,flags,flags)<SUB>5660</SUB>> ]
+"15687" [label = <(FIELD_IDENTIFIER,eLayerSecure,eLayerSecure)<SUB>5660</SUB>> ]
+"15703" [label = <(FIELD_IDENTIFIER,getCurrentState,getCurrentState)<SUB>5665</SUB>> ]
+"15709" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5666</SUB>> ]
+"15715" [label = <(FIELD_IDENTIFIER,left,left)<SUB>5667</SUB>> ]
+"15720" [label = <(FIELD_IDENTIFIER,right,right)<SUB>5668</SUB>> ]
+"15722" [label = <(&lt;operator&gt;.fieldAccess,parentSourceBounds.getWidth)<SUB>5668</SUB>> ]
+"15730" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5671</SUB>> ]
+"15736" [label = <(FIELD_IDENTIFIER,top,top)<SUB>5672</SUB>> ]
+"15741" [label = <(FIELD_IDENTIFIER,bottom,bottom)<SUB>5673</SUB>> ]
+"15743" [label = <(&lt;operator&gt;.fieldAccess,parentSourceBounds.getHeight)<SUB>5673</SUB>> ]
+"15751" [label = <(FIELD_IDENTIFIER,isEmpty,isEmpty)<SUB>5676</SUB>> ]
+"15764" [label = <(FIELD_IDENTIFIER,width,width)<SUB>5681</SUB>> ]
+"15772" [label = <(FIELD_IDENTIFIER,height,height)<SUB>5682</SUB>> ]
+"15780" [label = <(&lt;operator&gt;.lessThan,sp&lt;Layer)<SUB>5685</SUB>> ]
+"15785" [label = <(&lt;operator&gt;.fieldAccess,fromHandleLocked(handle).promote)<SUB>5685</SUB>> ]
+"15794" [label = <(emplace,excludeLayers.emplace(excludeLayer))<SUB>5687</SUB>> ]
+"15812" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5694</SUB>> ]
+"15662" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5658</SUB>> ]
+"15681" [label = <(&lt;operator&gt;.indirectFieldAccess,parent-&gt;getCurrentState)<SUB>5660</SUB>> ]
+"15724" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>5668</SUB>> ]
+"15745" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>5673</SUB>> ]
+"15786" [label = <(fromHandleLocked,fromHandleLocked(handle))<SUB>5685</SUB>> ]
+"15788" [label = <(FIELD_IDENTIFIER,promote,promote)<SUB>5685</SUB>> ]
+"15795" [label = <(&lt;operator&gt;.fieldAccess,excludeLayers.emplace)<SUB>5687</SUB>> ]
+"15801" [label = <(ALOGW,ALOGW(&quot;Invalid layer handle passed as excludeLayer to captureLayers&quot;))<SUB>5689</SUB>> ]
+"15803" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>5690</SUB>> ]
+"15683" [label = <(FIELD_IDENTIFIER,getCurrentState,getCurrentState)<SUB>5660</SUB>> ]
+"15797" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>5687</SUB>> ]
+"15600" [label = <(METHOD,captureLayers)<SUB>5556</SUB>> ]
+"15867" [label = <(METHOD_RETURN,status_t)<SUB>5556</SUB>> ]
+  "15610" -> "15612" 
+  "15612" -> "15616" 
+  "15616" -> "15620" 
+  "15619" -> "15625" 
+  "15625" -> "15631" 
+  "15842" -> "15854" 
+  "15852" -> "15856" 
+  "15856" -> "15860" 
+  "15859" -> "15867" 
   "15620" -> "15619" 
-  "15626" -> "15625" 
-  "15626" -> "15632" 
-  "15629" -> "15625" 
-  "15634" -> "15636" 
-  "15636" -> "15851" 
-  "15642" -> "15641" 
-  "15652" -> "15651" 
-  "15652" -> "15655" 
-  "15655" -> "15651" 
-  "15660" -> "15659" 
-  "15660" -> "15667" 
-  "15662" -> "15659" 
-  "15673" -> "15675" 
-  "15675" -> "15851" 
-  "15681" -> "15687" 
-  "15684" -> "15680" 
-  "15690" -> "15689" 
-  "15696" -> "15704" 
-  "15701" -> "15714" 
-  "15711" -> "15710" 
-  "15717" -> "15725" 
-  "15722" -> "15735" 
-  "15732" -> "15731" 
-  "15732" -> "15736" 
-  "15736" -> "15731" 
-  "15740" -> "15851" 
-  "15745" -> "15744" 
-  "15753" -> "15752" 
-  "15762" -> "15774" 
-  "15793" -> "15792" 
-  "15801" -> "15851" 
-  "15806" -> "15805" 
-  "15621" -> "15623" 
-  "15623" -> "15620" 
-  "15630" -> "15629" 
-  "15643" -> "15647" 
-  "15647" -> "15642" 
-  "15663" -> "15671" 
-  "15669" -> "15662" 
-  "15683" -> "15681" 
-  "15685" -> "15684" 
-  "15691" -> "15690" 
-  "15697" -> "15696" 
-  "15702" -> "15708" 
-  "15705" -> "15701" 
-  "15712" -> "15711" 
-  "15718" -> "15717" 
-  "15723" -> "15729" 
-  "15726" -> "15722" 
-  "15733" -> "15732" 
-  "15746" -> "15745" 
-  "15754" -> "15753" 
-  "15763" -> "15770" 
-  "15768" -> "15762" 
-  "15774" -> "15781" 
-  "15774" -> "15785" 
-  "15794" -> "15793" 
+  "15631" -> "15637" 
+  "15633" -> "15642" 
+  "15655" -> "15668" 
+  "15665" -> "15676" 
+  "15694" -> "15709" 
+  "15758" -> "15772" 
+  "15766" -> "15780" 
+  "15806" -> "15814" 
+  "15819" -> "15826" 
+  "15826" -> "15830" 
+  "15826" -> "15834" 
+  "15834" -> "15838" 
+  "15834" -> "15842" 
+  "15854" -> "15852" 
+  "15860" -> "15859" 
+  "15635" -> "15633" 
+  "15641" -> "15650" 
+  "15641" -> "15662" 
+  "15657" -> "15655" 
+  "15667" -> "15665" 
+  "15675" -> "15689" 
+  "15675" -> "15699" 
+  "15696" -> "15694" 
+  "15705" -> "15715" 
+  "15705" -> "15730" 
+  "15726" -> "15736" 
+  "15726" -> "15751" 
+  "15747" -> "15756" 
+  "15747" -> "15764" 
+  "15760" -> "15758" 
+  "15768" -> "15766" 
   "15808" -> "15806" 
-  "15632" -> "15630" 
-  "15644" -> "15643" 
-  "15664" -> "15668" 
-  "15668" -> "15663" 
-  "15671" -> "15669" 
-  "15687" -> "15685" 
-  "15693" -> "15691" 
-  "15699" -> "15697" 
-  "15704" -> "15702" 
+  "15814" -> "15817" 
+  "15814" -> "15824" 
+  "15821" -> "15819" 
+  "15830" -> "15834" 
+  "15838" -> "15842" 
+  "15636" -> "15635" 
+  "15642" -> "15641" 
+  "15642" -> "15648" 
+  "15645" -> "15641" 
+  "15650" -> "15652" 
+  "15652" -> "15867" 
+  "15658" -> "15657" 
+  "15668" -> "15667" 
+  "15668" -> "15671" 
+  "15671" -> "15667" 
+  "15676" -> "15675" 
+  "15676" -> "15683" 
+  "15678" -> "15675" 
+  "15689" -> "15691" 
+  "15691" -> "15867" 
+  "15697" -> "15703" 
+  "15700" -> "15696" 
   "15706" -> "15705" 
-  "15714" -> "15712" 
-  "15720" -> "15718" 
-  "15725" -> "15723" 
+  "15712" -> "15720" 
+  "15717" -> "15730" 
   "15727" -> "15726" 
-  "15735" -> "15733" 
-  "15748" -> "15746" 
-  "15756" -> "15754" 
-  "15764" -> "15763" 
+  "15733" -> "15741" 
+  "15738" -> "15751" 
+  "15748" -> "15747" 
+  "15748" -> "15752" 
+  "15752" -> "15747" 
+  "15756" -> "15867" 
+  "15761" -> "15760" 
   "15769" -> "15768" 
-  "15778" -> "15764" 
-  "15778" -> "15796" 
-  "15796" -> "15794" 
-  "15646" -> "15644" 
-  "15665" -> "15664" 
-  "15708" -> "15706" 
-  "15729" -> "15727" 
-  "15770" -> "15772" 
-  "15772" -> "15769" 
-  "15779" -> "15778" 
-  "15785" -> "15787" 
-  "15787" -> "15851" 
-  "15667" -> "15665" 
-  "15781" -> "15779" 
-  "15584" -> "15594" 
+  "15778" -> "15790" 
+  "15809" -> "15808" 
+  "15817" -> "15867" 
+  "15822" -> "15821" 
+  "15637" -> "15639" 
+  "15639" -> "15636" 
+  "15646" -> "15645" 
+  "15659" -> "15663" 
+  "15663" -> "15658" 
+  "15679" -> "15687" 
+  "15685" -> "15678" 
+  "15699" -> "15697" 
+  "15701" -> "15700" 
+  "15707" -> "15706" 
+  "15713" -> "15712" 
+  "15718" -> "15724" 
+  "15721" -> "15717" 
+  "15728" -> "15727" 
+  "15734" -> "15733" 
+  "15739" -> "15745" 
+  "15742" -> "15738" 
+  "15749" -> "15748" 
+  "15762" -> "15761" 
+  "15770" -> "15769" 
+  "15779" -> "15786" 
+  "15784" -> "15778" 
+  "15790" -> "15797" 
+  "15790" -> "15801" 
+  "15810" -> "15809" 
+  "15824" -> "15822" 
+  "15648" -> "15646" 
+  "15660" -> "15659" 
+  "15680" -> "15684" 
+  "15684" -> "15679" 
+  "15687" -> "15685" 
+  "15703" -> "15701" 
+  "15709" -> "15707" 
+  "15715" -> "15713" 
+  "15720" -> "15718" 
+  "15722" -> "15721" 
+  "15730" -> "15728" 
+  "15736" -> "15734" 
+  "15741" -> "15739" 
+  "15743" -> "15742" 
+  "15751" -> "15749" 
+  "15764" -> "15762" 
+  "15772" -> "15770" 
+  "15780" -> "15779" 
+  "15785" -> "15784" 
+  "15794" -> "15780" 
+  "15794" -> "15812" 
+  "15812" -> "15810" 
+  "15662" -> "15660" 
+  "15681" -> "15680" 
+  "15724" -> "15722" 
+  "15745" -> "15743" 
+  "15786" -> "15788" 
+  "15788" -> "15785" 
+  "15795" -> "15794" 
+  "15801" -> "15803" 
+  "15803" -> "15867" 
+  "15683" -> "15681" 
+  "15797" -> "15795" 
+  "15600" -> "15610" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/251-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/251-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/251-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/251-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,49 +1,49 @@
 digraph "captureScreenCommon" {  
-"15861" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5745</SUB>> ]
-"15863" [label = <(&lt;operator&gt;.assignment,usage = GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER | GRALLOC_USAGE_HW_TEXTURE)<SUB>5748</SUB>> ]
-"15872" [label = <(&lt;operator&gt;.assignment,*outBuffer =\012            getFactory().createGraphicBuffer(renderArea.getReqWidth(), renderArea.getReqHeight(),\012 static_cast&lt;android_pixel_format&gt;(reqPixelFormat), 1,\012                                             usage, &quot;screenshot&quot;))<SUB>5750</SUB>> ]
-"15893" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers);)<SUB>5755</SUB>> ]
-"15865" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER | GRALLOC_USAGE_HW_TEXTURE)<SUB>5748</SUB>> ]
-"15873" [label = <(&lt;operator&gt;.indirection,*outBuffer)<SUB>5750</SUB>> ]
-"15875" [label = <(createGraphicBuffer,getFactory().createGraphicBuffer(renderArea.getReqWidth(), renderArea.getReqHeight(),\012 static_cast&lt;android_pixel_format&gt;(reqPixelFormat), 1,\012                                             usage, &quot;screenshot&quot;))<SUB>5751</SUB>> ]
-"15894" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers))<SUB>5755</SUB>> ]
-"15866" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER)<SUB>5748</SUB>> ]
-"15876" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createGraphicBuffer)<SUB>5751</SUB>> ]
-"15879" [label = <(getReqWidth,renderArea.getReqWidth())<SUB>5751</SUB>> ]
-"15883" [label = <(getReqHeight,renderArea.getReqHeight())<SUB>5751</SUB>> ]
-"15887" [label = <(&lt;operator&gt;.cast,static_cast&lt;android_pixel_format&gt;(reqPixelFormat))<SUB>5752</SUB>> ]
-"15897" [label = <(&lt;operator&gt;.indirection,*outBuffer)<SUB>5755</SUB>> ]
-"15867" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN)<SUB>5748</SUB>> ]
-"15877" [label = <(getFactory,getFactory())<SUB>5751</SUB>> ]
-"15878" [label = <(FIELD_IDENTIFIER,createGraphicBuffer,createGraphicBuffer)<SUB>5751</SUB>> ]
-"15880" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqWidth)<SUB>5751</SUB>> ]
-"15884" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqHeight)<SUB>5751</SUB>> ]
-"15888" [label = <(UNKNOWN,android_pixel_format,android_pixel_format)<SUB>5752</SUB>> ]
-"15882" [label = <(FIELD_IDENTIFIER,getReqWidth,getReqWidth)<SUB>5751</SUB>> ]
-"15886" [label = <(FIELD_IDENTIFIER,getReqHeight,getReqHeight)<SUB>5751</SUB>> ]
-"15853" [label = <(METHOD,captureScreenCommon)<SUB>5739</SUB>> ]
-"15902" [label = <(METHOD_RETURN,status_t)<SUB>5739</SUB>> ]
-  "15861" -> "15867" 
-  "15863" -> "15873" 
-  "15872" -> "15897" 
-  "15893" -> "15902" 
-  "15865" -> "15863" 
-  "15873" -> "15877" 
-  "15875" -> "15872" 
-  "15894" -> "15893" 
-  "15866" -> "15865" 
-  "15876" -> "15882" 
-  "15879" -> "15886" 
-  "15883" -> "15888" 
-  "15887" -> "15875" 
-  "15897" -> "15894" 
-  "15867" -> "15866" 
-  "15877" -> "15878" 
-  "15878" -> "15876" 
-  "15880" -> "15879" 
-  "15884" -> "15883" 
-  "15888" -> "15887" 
-  "15882" -> "15880" 
-  "15886" -> "15884" 
-  "15853" -> "15861" 
+"15877" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5744</SUB>> ]
+"15879" [label = <(&lt;operator&gt;.assignment,usage = GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER | GRALLOC_USAGE_HW_TEXTURE)<SUB>5747</SUB>> ]
+"15888" [label = <(&lt;operator&gt;.assignment,*outBuffer =\012            getFactory().createGraphicBuffer(renderArea.getReqWidth(), renderArea.getReqHeight(),\012 static_cast&lt;android_pixel_format&gt;(reqPixelFormat), 1,\012                                             usage, &quot;screenshot&quot;))<SUB>5749</SUB>> ]
+"15909" [label = <(RETURN,return captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers);,return captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers);)<SUB>5754</SUB>> ]
+"15881" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER | GRALLOC_USAGE_HW_TEXTURE)<SUB>5747</SUB>> ]
+"15889" [label = <(&lt;operator&gt;.indirection,*outBuffer)<SUB>5749</SUB>> ]
+"15891" [label = <(createGraphicBuffer,getFactory().createGraphicBuffer(renderArea.getReqWidth(), renderArea.getReqHeight(),\012 static_cast&lt;android_pixel_format&gt;(reqPixelFormat), 1,\012                                             usage, &quot;screenshot&quot;))<SUB>5750</SUB>> ]
+"15910" [label = <(captureScreenCommon,captureScreenCommon(renderArea, traverseLayers, *outBuffer, useIdentityTransform,\012 false /* regionSampling */, outCapturedSecureLayers))<SUB>5754</SUB>> ]
+"15882" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN |\012            GRALLOC_USAGE_HW_RENDER)<SUB>5747</SUB>> ]
+"15892" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createGraphicBuffer)<SUB>5750</SUB>> ]
+"15895" [label = <(getReqWidth,renderArea.getReqWidth())<SUB>5750</SUB>> ]
+"15899" [label = <(getReqHeight,renderArea.getReqHeight())<SUB>5750</SUB>> ]
+"15903" [label = <(&lt;operator&gt;.cast,static_cast&lt;android_pixel_format&gt;(reqPixelFormat))<SUB>5751</SUB>> ]
+"15913" [label = <(&lt;operator&gt;.indirection,*outBuffer)<SUB>5754</SUB>> ]
+"15883" [label = <(&lt;operator&gt;.or,GRALLOC_USAGE_SW_READ_OFTEN | GRALLOC_USAGE_SW_WRITE_OFTEN)<SUB>5747</SUB>> ]
+"15893" [label = <(getFactory,getFactory())<SUB>5750</SUB>> ]
+"15894" [label = <(FIELD_IDENTIFIER,createGraphicBuffer,createGraphicBuffer)<SUB>5750</SUB>> ]
+"15896" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqWidth)<SUB>5750</SUB>> ]
+"15900" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqHeight)<SUB>5750</SUB>> ]
+"15904" [label = <(UNKNOWN,android_pixel_format,android_pixel_format)<SUB>5751</SUB>> ]
+"15898" [label = <(FIELD_IDENTIFIER,getReqWidth,getReqWidth)<SUB>5750</SUB>> ]
+"15902" [label = <(FIELD_IDENTIFIER,getReqHeight,getReqHeight)<SUB>5750</SUB>> ]
+"15869" [label = <(METHOD,captureScreenCommon)<SUB>5738</SUB>> ]
+"15918" [label = <(METHOD_RETURN,status_t)<SUB>5738</SUB>> ]
+  "15877" -> "15883" 
+  "15879" -> "15889" 
+  "15888" -> "15913" 
+  "15909" -> "15918" 
+  "15881" -> "15879" 
+  "15889" -> "15893" 
+  "15891" -> "15888" 
+  "15910" -> "15909" 
+  "15882" -> "15881" 
+  "15892" -> "15898" 
+  "15895" -> "15902" 
+  "15899" -> "15904" 
+  "15903" -> "15891" 
+  "15913" -> "15910" 
+  "15883" -> "15882" 
+  "15893" -> "15894" 
+  "15894" -> "15892" 
+  "15896" -> "15895" 
+  "15900" -> "15899" 
+  "15904" -> "15903" 
+  "15898" -> "15896" 
+  "15902" -> "15900" 
+  "15869" -> "15877" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/252-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/252-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/252-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/252-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,60 +1,60 @@
 digraph "captureScreenCommon" {  
-"15913" [label = <(&lt;operator&gt;.assignment,uid = IPCThreadState::self()-&gt;getCallingUid())<SUB>5764</SUB>> ]
-"15923" [label = <(&lt;operator&gt;.assignment,forSystem = uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5765</SUB>> ]
-"15962" [label = <(RETURN,return result;,return result;)<SUB>5797</SUB>> ]
-"15915" [label = <(getCallingUid,IPCThreadState::self()-&gt;getCallingUid())<SUB>5764</SUB>> ]
-"15925" [label = <(&lt;operator&gt;.logicalOr,uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5765</SUB>> ]
-"15948" [label = <(&lt;operator&gt;.equals,result == EAGAIN)<SUB>5790</SUB>> ]
-"15952" [label = <(&lt;operator&gt;.equals,result == NO_ERROR)<SUB>5792</SUB>> ]
-"15916" [label = <(&lt;operator&gt;.indirectFieldAccess,IPCThreadState::self()-&gt;getCallingUid)<SUB>5764</SUB>> ]
-"15926" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>5765</SUB>> ]
-"15929" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>5765</SUB>> ]
-"15936" [label = <(&lt;operator&gt;.assignment,std::tie(result, syncFd) =\012                schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get())<SUB>5771</SUB>> ]
-"15956" [label = <(sync_wait,sync_wait(syncFd, -1))<SUB>5793</SUB>> ]
-"15960" [label = <(close,close(syncFd))<SUB>5794</SUB>> ]
-"15917" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5764</SUB>> ]
-"15921" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5764</SUB>> ]
-"15937" [label = <(std::tie,std::tie(result, syncFd))<SUB>5771</SUB>> ]
-"15943" [label = <(get,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get())<SUB>5772</SUB>> ]
-"15958" [label = <(&lt;operator&gt;.minus,-1)<SUB>5793</SUB>> ]
-"15918" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5764</SUB>> ]
-"15938" [label = <(&lt;operator&gt;.fieldAccess,std::tie)<SUB>5771</SUB>> ]
-"15944" [label = <(&lt;operator&gt;.fieldAccess,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get)<SUB>5772</SUB>> ]
-"15920" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5764</SUB>> ]
-"15940" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>5771</SUB>> ]
-"15945" [label = <(schedule,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }))<SUB>5772</SUB>> ]
-"15947" [label = <(FIELD_IDENTIFIER,get,get)<SUB>5772</SUB>> ]
-"15946" [label = <(METHOD_REF,ANY anonymous_lambda_55 (),schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }))<SUB>5772</SUB>> ]
-"15904" [label = <(METHOD,captureScreenCommon)<SUB>5759</SUB>> ]
-"15964" [label = <(METHOD_RETURN,status_t)<SUB>5759</SUB>> ]
-  "15913" -> "15926" 
-  "15923" -> "15940" 
-  "15962" -> "15964" 
-  "15915" -> "15913" 
-  "15925" -> "15923" 
-  "15948" -> "15940" 
-  "15948" -> "15952" 
-  "15952" -> "15958" 
-  "15952" -> "15962" 
-  "15916" -> "15915" 
-  "15926" -> "15925" 
-  "15926" -> "15929" 
-  "15929" -> "15925" 
-  "15936" -> "15948" 
-  "15956" -> "15960" 
-  "15960" -> "15962" 
-  "15917" -> "15921" 
-  "15921" -> "15916" 
-  "15937" -> "15946" 
-  "15943" -> "15936" 
-  "15958" -> "15956" 
-  "15918" -> "15917" 
-  "15938" -> "15937" 
-  "15944" -> "15943" 
-  "15920" -> "15918" 
-  "15940" -> "15938" 
-  "15945" -> "15947" 
-  "15947" -> "15944" 
-  "15946" -> "15945" 
-  "15904" -> "15920" 
+"15929" [label = <(&lt;operator&gt;.assignment,uid = IPCThreadState::self()-&gt;getCallingUid())<SUB>5763</SUB>> ]
+"15939" [label = <(&lt;operator&gt;.assignment,forSystem = uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5764</SUB>> ]
+"15978" [label = <(RETURN,return result;,return result;)<SUB>5796</SUB>> ]
+"15931" [label = <(getCallingUid,IPCThreadState::self()-&gt;getCallingUid())<SUB>5763</SUB>> ]
+"15941" [label = <(&lt;operator&gt;.logicalOr,uid == AID_GRAPHICS || uid == AID_SYSTEM)<SUB>5764</SUB>> ]
+"15964" [label = <(&lt;operator&gt;.equals,result == EAGAIN)<SUB>5789</SUB>> ]
+"15968" [label = <(&lt;operator&gt;.equals,result == NO_ERROR)<SUB>5791</SUB>> ]
+"15932" [label = <(&lt;operator&gt;.indirectFieldAccess,IPCThreadState::self()-&gt;getCallingUid)<SUB>5763</SUB>> ]
+"15942" [label = <(&lt;operator&gt;.equals,uid == AID_GRAPHICS)<SUB>5764</SUB>> ]
+"15945" [label = <(&lt;operator&gt;.equals,uid == AID_SYSTEM)<SUB>5764</SUB>> ]
+"15952" [label = <(&lt;operator&gt;.assignment,std::tie(result, syncFd) =\012                schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get())<SUB>5770</SUB>> ]
+"15972" [label = <(sync_wait,sync_wait(syncFd, -1))<SUB>5792</SUB>> ]
+"15976" [label = <(close,close(syncFd))<SUB>5793</SUB>> ]
+"15933" [label = <(IPCThreadState::self,IPCThreadState::self())<SUB>5763</SUB>> ]
+"15937" [label = <(FIELD_IDENTIFIER,getCallingUid,getCallingUid)<SUB>5763</SUB>> ]
+"15953" [label = <(std::tie,std::tie(result, syncFd))<SUB>5770</SUB>> ]
+"15959" [label = <(get,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get())<SUB>5771</SUB>> ]
+"15974" [label = <(&lt;operator&gt;.minus,-1)<SUB>5792</SUB>> ]
+"15934" [label = <(&lt;operator&gt;.fieldAccess,IPCThreadState::self)<SUB>5763</SUB>> ]
+"15954" [label = <(&lt;operator&gt;.fieldAccess,std::tie)<SUB>5770</SUB>> ]
+"15960" [label = <(&lt;operator&gt;.fieldAccess,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }).get)<SUB>5771</SUB>> ]
+"15936" [label = <(FIELD_IDENTIFIER,self,self)<SUB>5763</SUB>> ]
+"15956" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>5770</SUB>> ]
+"15961" [label = <(schedule,schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }))<SUB>5771</SUB>> ]
+"15963" [label = <(FIELD_IDENTIFIER,get,get)<SUB>5771</SUB>> ]
+"15962" [label = <(METHOD_REF,ANY anonymous_lambda_55 (),schedule([&amp;] {\012 if (mRefreshPending) {\012                        ATRACE_NAME(&quot;Skipping screenshot for now&quot;);\012 return std::make_pair(EAGAIN, -1);\012 }\012\012 status_t result = NO_ERROR;\012 int fd = -1;\012\012 Mutex::Autolock lock(mStateLock);\012                    renderArea.render([&amp;] {\012                        result = captureScreenImplLocked(renderArea, traverseLayers, buffer.get(),\012                                                         useIdentityTransform, forSystem, &amp;fd,\012                                                         regionSampling, outCapturedSecureLayers);\012 });\012\012 return std::make_pair(result, fd);\012 }))<SUB>5771</SUB>> ]
+"15920" [label = <(METHOD,captureScreenCommon)<SUB>5758</SUB>> ]
+"15980" [label = <(METHOD_RETURN,status_t)<SUB>5758</SUB>> ]
+  "15929" -> "15942" 
+  "15939" -> "15956" 
+  "15978" -> "15980" 
+  "15931" -> "15929" 
+  "15941" -> "15939" 
+  "15964" -> "15956" 
+  "15964" -> "15968" 
+  "15968" -> "15974" 
+  "15968" -> "15978" 
+  "15932" -> "15931" 
+  "15942" -> "15941" 
+  "15942" -> "15945" 
+  "15945" -> "15941" 
+  "15952" -> "15964" 
+  "15972" -> "15976" 
+  "15976" -> "15978" 
+  "15933" -> "15937" 
+  "15937" -> "15932" 
+  "15953" -> "15962" 
+  "15959" -> "15952" 
+  "15974" -> "15972" 
+  "15934" -> "15933" 
+  "15954" -> "15953" 
+  "15960" -> "15959" 
+  "15936" -> "15934" 
+  "15956" -> "15954" 
+  "15961" -> "15963" 
+  "15963" -> "15960" 
+  "15962" -> "15961" 
+  "15920" -> "15936" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/253-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/253-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/253-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/253-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,313 +1,313 @@
 digraph "renderScreenImplLocked" {  
-"15974" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5804</SUB>> ]
-"15976" [label = <(&lt;operator&gt;.assignment,reqWidth = renderArea.getReqWidth())<SUB>5806</SUB>> ]
-"15983" [label = <(&lt;operator&gt;.assignment,reqHeight = renderArea.getReqHeight())<SUB>5807</SUB>> ]
-"15990" [label = <(&lt;operator&gt;.assignment,sourceCrop = renderArea.getSourceCrop())<SUB>5808</SUB>> ]
-"15997" [label = <(&lt;operator&gt;.assignment,transform = renderArea.getTransform())<SUB>5809</SUB>> ]
-"16004" [label = <(&lt;operator&gt;.assignment,rotation = renderArea.getRotationFlags())<SUB>5810</SUB>> ]
-"16011" [label = <(&lt;operator&gt;.assignment,&amp; displayViewport = renderArea.getDisplayViewport())<SUB>5811</SUB>> ]
-"16018" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; clientCompositionLayers)<SUB>5814</SUB>> ]
-"16029" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.physicalDisplay = Rect(reqWidth, reqHeight))<SUB>5818</SUB>> ]
-"16036" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.clip = sourceCrop)<SUB>5819</SUB>> ]
-"16041" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.orientation = rotation)<SUB>5820</SUB>> ]
-"16046" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.outputDataspace = renderArea.getReqDataSpace())<SUB>5822</SUB>> ]
-"16054" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.maxLuminance = DisplayDevice::sDefaultMaxLumiance)<SUB>5823</SUB>> ]
-"16062" [label = <(&lt;operator&gt;.assignment,alpha = RenderArea::getCaptureFillValue(renderArea.getCaptureFill()))<SUB>5825</SUB>> ]
-"16073" [label = <(&lt;operator&gt;.assignment,fillLayer.source.buffer.buffer = nullptr)<SUB>5828</SUB>> ]
-"16082" [label = <(&lt;operator&gt;.assignment,fillLayer.source.solidColor = half3(0.0, 0.0, 0.0))<SUB>5829</SUB>> ]
-"16092" [label = <(&lt;operator&gt;.assignment,fillLayer.geometry.boundaries =\012 FloatRect(sourceCrop.left, sourceCrop.top, sourceCrop.right, sourceCrop.bottom))<SUB>5830</SUB>> ]
-"16111" [label = <(&lt;operator&gt;.assignment,fillLayer.alpha = half(alpha))<SUB>5832</SUB>> ]
-"16117" [label = <(push_back,clientCompositionLayers.push_back(fillLayer))<SUB>5833</SUB>> ]
-"16123" [label = <(&lt;operator&gt;.assignment,display = renderArea.getDisplayDevice())<SUB>5835</SUB>> ]
-"16131" [label = <(&lt;operator&gt;.assignment,clearRegion = Region::INVALID_REGION)<SUB>5837</SUB>> ]
-"16136" [label = <(traverseLayers,traverseLayers([&amp;](Layer* layer) {\012 const bool supportProtectedContent = false;\012 Region clip(renderArea.getBounds());\012        compositionengine::LayerFE::ClientCompositionTargetSettings targetSettings{\012                clip,\012                useIdentityTransform,\012                layer-&gt;needsFilteringForScreenshots(display.get(), transform) ||\012                        renderArea.needsFiltering(),\012                renderArea.isSecure(),\012                supportProtectedContent,\012                clearRegion,\012                displayViewport,\012                clientCompositionDisplay.outputDataspace,\012 true, /* realContentIsVisible */\012 false, /* clearContent */\012 };\012        std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; results =\012                layer-&gt;prepareClientCompositionList(targetSettings);\012 if (results.size() &gt; 0) {\012 for (auto&amp; settings : results) {\012                settings.geometry.positionTransform =\012                        transform.asMatrix4() * settings.geometry.positionTransform;\012 // There's no need to process blurs when we're executing region sampling,\012 // we're just trying to understand what we're drawing, and doing so without\012 // blurs is already a pretty good approximation.\012 if (regionSampling) {\012                    settings.backgroundBlurRadius = 0;\012 }\012 }\012            clientCompositionLayers.insert(clientCompositionLayers.end(),\012                                           std::make_move_iterator(results.begin()),\012                                           std::make_move_iterator(results.end()));\012            renderedLayers.push_back(layer);\012 }\012 }))<SUB>5838</SUB>> ]
-"16139" [label = <(clientCompositionLayerPointers,clientCompositionLayerPointers(\012            clientCompositionLayers.size()))<SUB>5874</SUB>> ]
-"16144" [label = <(std::transform,std::transform(clientCompositionLayers.begin(), clientCompositionLayers.end(),\012                   clientCompositionLayerPointers.begin(),\012                   std::pointer_traits&lt;renderengine::LayerSettings*&gt;::pointer_to))<SUB>5876</SUB>> ]
-"16165" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.clearRegion = clearRegion)<SUB>5880</SUB>> ]
-"16172" [label = <(useProtectedContext,getRenderEngine().useProtectedContext(false))<SUB>5885</SUB>> ]
-"16177" [label = <(drawLayers,getRenderEngine().drawLayers(clientCompositionDisplay, clientCompositionLayerPointers, buffer,\012 /*useFramebufferCache=*/false, std::move(bufferFence), &amp;drawFence))<SUB>5886</SUB>> ]
-"16192" [label = <(&lt;operator&gt;.assignment,*outSyncFd = drawFence.release())<SUB>5889</SUB>> ]
-"15978" [label = <(getReqWidth,renderArea.getReqWidth())<SUB>5806</SUB>> ]
-"15985" [label = <(getReqHeight,renderArea.getReqHeight())<SUB>5807</SUB>> ]
-"15992" [label = <(getSourceCrop,renderArea.getSourceCrop())<SUB>5808</SUB>> ]
-"15999" [label = <(getTransform,renderArea.getTransform())<SUB>5809</SUB>> ]
-"16006" [label = <(getRotationFlags,renderArea.getRotationFlags())<SUB>5810</SUB>> ]
-"16013" [label = <(getDisplayViewport,renderArea.getDisplayViewport())<SUB>5811</SUB>> ]
-"16019" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;compositionengine::LayerFE::LayerSettings)<SUB>5814</SUB>> ]
-"16030" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.physicalDisplay)<SUB>5818</SUB>> ]
-"16033" [label = <(Rect,Rect(reqWidth, reqHeight))<SUB>5818</SUB>> ]
-"16037" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.clip)<SUB>5819</SUB>> ]
-"16042" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.orientation)<SUB>5820</SUB>> ]
-"16047" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.outputDataspace)<SUB>5822</SUB>> ]
-"16050" [label = <(getReqDataSpace,renderArea.getReqDataSpace())<SUB>5822</SUB>> ]
-"16055" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.maxLuminance)<SUB>5823</SUB>> ]
-"16058" [label = <(&lt;operator&gt;.fieldAccess,DisplayDevice::sDefaultMaxLumiance)<SUB>5823</SUB>> ]
-"16064" [label = <(RenderArea::getCaptureFillValue,RenderArea::getCaptureFillValue(renderArea.getCaptureFill()))<SUB>5825</SUB>> ]
-"16074" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.buffer.buffer)<SUB>5828</SUB>> ]
-"16083" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.solidColor)<SUB>5829</SUB>> ]
-"16088" [label = <(half3,half3(0.0, 0.0, 0.0))<SUB>5829</SUB>> ]
-"16093" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.geometry.boundaries)<SUB>5830</SUB>> ]
-"16098" [label = <(FloatRect,FloatRect(sourceCrop.left, sourceCrop.top, sourceCrop.right, sourceCrop.bottom))<SUB>5831</SUB>> ]
-"16112" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.alpha)<SUB>5832</SUB>> ]
-"16115" [label = <(half,half(alpha))<SUB>5832</SUB>> ]
-"16118" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.push_back)<SUB>5833</SUB>> ]
-"16125" [label = <(getDisplayDevice,renderArea.getDisplayDevice())<SUB>5835</SUB>> ]
-"16133" [label = <(&lt;operator&gt;.fieldAccess,Region::INVALID_REGION)<SUB>5837</SUB>> ]
-"16137" [label = <(METHOD_REF,ANY anonymous_lambda_56 (Layer* layer),traverseLayers([&amp;](Layer* layer) {\012 const bool supportProtectedContent = false;\012 Region clip(renderArea.getBounds());\012        compositionengine::LayerFE::ClientCompositionTargetSettings targetSettings{\012                clip,\012                useIdentityTransform,\012                layer-&gt;needsFilteringForScreenshots(display.get(), transform) ||\012                        renderArea.needsFiltering(),\012                renderArea.isSecure(),\012                supportProtectedContent,\012                clearRegion,\012                displayViewport,\012                clientCompositionDisplay.outputDataspace,\012 true, /* realContentIsVisible */\012 false, /* clearContent */\012 };\012        std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; results =\012                layer-&gt;prepareClientCompositionList(targetSettings);\012 if (results.size() &gt; 0) {\012 for (auto&amp; settings : results) {\012                settings.geometry.positionTransform =\012                        transform.asMatrix4() * settings.geometry.positionTransform;\012 // There's no need to process blurs when we're executing region sampling,\012 // we're just trying to understand what we're drawing, and doing so without\012 // blurs is already a pretty good approximation.\012 if (regionSampling) {\012                    settings.backgroundBlurRadius = 0;\012 }\012 }\012            clientCompositionLayers.insert(clientCompositionLayers.end(),\012                                           std::make_move_iterator(results.begin()),\012                                           std::make_move_iterator(results.end()));\012            renderedLayers.push_back(layer);\012 }\012 }))<SUB>5838</SUB>> ]
-"16140" [label = <(size,clientCompositionLayers.size())<SUB>5875</SUB>> ]
-"16145" [label = <(&lt;operator&gt;.fieldAccess,std::transform)<SUB>5876</SUB>> ]
-"16148" [label = <(begin,clientCompositionLayers.begin())<SUB>5876</SUB>> ]
-"16152" [label = <(end,clientCompositionLayers.end())<SUB>5876</SUB>> ]
-"16156" [label = <(begin,clientCompositionLayerPointers.begin())<SUB>5877</SUB>> ]
-"16160" [label = <(&lt;operator&gt;.fieldAccess,std::pointer_traits&lt;renderengine::LayerSettings*&gt;::pointer_to)<SUB>5878</SUB>> ]
-"16166" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.clearRegion)<SUB>5880</SUB>> ]
-"16173" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().useProtectedContext)<SUB>5885</SUB>> ]
-"16178" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().drawLayers)<SUB>5886</SUB>> ]
-"16185" [label = <(std::move,std::move(bufferFence))<SUB>5887</SUB>> ]
-"16190" [label = <(&lt;operator&gt;.addressOf,&amp;drawFence)<SUB>5887</SUB>> ]
-"16193" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5889</SUB>> ]
-"16195" [label = <(release,drawFence.release())<SUB>5889</SUB>> ]
-"16200" [label = <(&lt;operator&gt;.greaterEqualsThan,*outSyncFd &gt;= 0)<SUB>5891</SUB>> ]
-"15979" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqWidth)<SUB>5806</SUB>> ]
-"15986" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqHeight)<SUB>5807</SUB>> ]
-"15993" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getSourceCrop)<SUB>5808</SUB>> ]
-"16000" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getTransform)<SUB>5809</SUB>> ]
-"16007" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getRotationFlags)<SUB>5810</SUB>> ]
-"16014" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getDisplayViewport)<SUB>5811</SUB>> ]
-"16020" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>5814</SUB>> ]
-"16023" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::LayerFE::LayerSettings)<SUB>5814</SUB>> ]
-"16032" [label = <(FIELD_IDENTIFIER,physicalDisplay,physicalDisplay)<SUB>5818</SUB>> ]
-"16039" [label = <(FIELD_IDENTIFIER,clip,clip)<SUB>5819</SUB>> ]
-"16044" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>5820</SUB>> ]
-"16049" [label = <(FIELD_IDENTIFIER,outputDataspace,outputDataspace)<SUB>5822</SUB>> ]
-"16051" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqDataSpace)<SUB>5822</SUB>> ]
-"16057" [label = <(FIELD_IDENTIFIER,maxLuminance,maxLuminance)<SUB>5823</SUB>> ]
-"16060" [label = <(FIELD_IDENTIFIER,sDefaultMaxLumiance,sDefaultMaxLumiance)<SUB>5823</SUB>> ]
-"16065" [label = <(&lt;operator&gt;.fieldAccess,RenderArea::getCaptureFillValue)<SUB>5825</SUB>> ]
-"16068" [label = <(getCaptureFill,renderArea.getCaptureFill())<SUB>5825</SUB>> ]
-"16075" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.buffer)<SUB>5828</SUB>> ]
-"16080" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>5828</SUB>> ]
-"16084" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source)<SUB>5829</SUB>> ]
-"16087" [label = <(FIELD_IDENTIFIER,solidColor,solidColor)<SUB>5829</SUB>> ]
-"16094" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.geometry)<SUB>5830</SUB>> ]
-"16097" [label = <(FIELD_IDENTIFIER,boundaries,boundaries)<SUB>5830</SUB>> ]
-"16099" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.left)<SUB>5831</SUB>> ]
-"16102" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.top)<SUB>5831</SUB>> ]
-"16105" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.right)<SUB>5831</SUB>> ]
-"16108" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.bottom)<SUB>5831</SUB>> ]
-"16114" [label = <(FIELD_IDENTIFIER,alpha,alpha)<SUB>5832</SUB>> ]
-"16120" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>5833</SUB>> ]
-"16126" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getDisplayDevice)<SUB>5835</SUB>> ]
-"16135" [label = <(FIELD_IDENTIFIER,INVALID_REGION,INVALID_REGION)<SUB>5837</SUB>> ]
-"16141" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.size)<SUB>5875</SUB>> ]
-"16147" [label = <(FIELD_IDENTIFIER,transform,transform)<SUB>5876</SUB>> ]
-"16149" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.begin)<SUB>5876</SUB>> ]
-"16153" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.end)<SUB>5876</SUB>> ]
-"16157" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayerPointers.begin)<SUB>5877</SUB>> ]
-"16161" [label = <(&lt;operator&gt;.fieldAccess,std::pointer_traits&lt;renderengine::LayerSettings*&gt;)<SUB>5878</SUB>> ]
-"16164" [label = <(FIELD_IDENTIFIER,pointer_to,pointer_to)<SUB>5878</SUB>> ]
-"16168" [label = <(FIELD_IDENTIFIER,clearRegion,clearRegion)<SUB>5880</SUB>> ]
-"16174" [label = <(getRenderEngine,getRenderEngine())<SUB>5885</SUB>> ]
-"16175" [label = <(FIELD_IDENTIFIER,useProtectedContext,useProtectedContext)<SUB>5885</SUB>> ]
-"16179" [label = <(getRenderEngine,getRenderEngine())<SUB>5886</SUB>> ]
-"16180" [label = <(FIELD_IDENTIFIER,drawLayers,drawLayers)<SUB>5886</SUB>> ]
-"16186" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>5887</SUB>> ]
-"16196" [label = <(&lt;operator&gt;.fieldAccess,drawFence.release)<SUB>5889</SUB>> ]
-"16201" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5891</SUB>> ]
-"16205" [label = <(&lt;operator&gt;.assignment,sp&lt;Fence&gt; releaseFence = new Fence(dup(*outSyncFd)))<SUB>5892</SUB>> ]
-"15981" [label = <(FIELD_IDENTIFIER,getReqWidth,getReqWidth)<SUB>5806</SUB>> ]
-"15988" [label = <(FIELD_IDENTIFIER,getReqHeight,getReqHeight)<SUB>5807</SUB>> ]
-"15995" [label = <(FIELD_IDENTIFIER,getSourceCrop,getSourceCrop)<SUB>5808</SUB>> ]
-"16002" [label = <(FIELD_IDENTIFIER,getTransform,getTransform)<SUB>5809</SUB>> ]
-"16009" [label = <(FIELD_IDENTIFIER,getRotationFlags,getRotationFlags)<SUB>5810</SUB>> ]
-"16016" [label = <(FIELD_IDENTIFIER,getDisplayViewport,getDisplayViewport)<SUB>5811</SUB>> ]
-"16022" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>5814</SUB>> ]
-"16024" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::LayerFE)<SUB>5814</SUB>> ]
-"16027" [label = <(FIELD_IDENTIFIER,LayerSettings,LayerSettings)<SUB>5814</SUB>> ]
-"16053" [label = <(FIELD_IDENTIFIER,getReqDataSpace,getReqDataSpace)<SUB>5822</SUB>> ]
-"16067" [label = <(FIELD_IDENTIFIER,getCaptureFillValue,getCaptureFillValue)<SUB>5825</SUB>> ]
-"16069" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getCaptureFill)<SUB>5825</SUB>> ]
-"16076" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source)<SUB>5828</SUB>> ]
-"16079" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>5828</SUB>> ]
-"16086" [label = <(FIELD_IDENTIFIER,source,source)<SUB>5829</SUB>> ]
-"16096" [label = <(FIELD_IDENTIFIER,geometry,geometry)<SUB>5830</SUB>> ]
-"16101" [label = <(FIELD_IDENTIFIER,left,left)<SUB>5831</SUB>> ]
-"16104" [label = <(FIELD_IDENTIFIER,top,top)<SUB>5831</SUB>> ]
-"16107" [label = <(FIELD_IDENTIFIER,right,right)<SUB>5831</SUB>> ]
-"16110" [label = <(FIELD_IDENTIFIER,bottom,bottom)<SUB>5831</SUB>> ]
-"16128" [label = <(FIELD_IDENTIFIER,getDisplayDevice,getDisplayDevice)<SUB>5835</SUB>> ]
-"16143" [label = <(FIELD_IDENTIFIER,size,size)<SUB>5875</SUB>> ]
-"16151" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>5876</SUB>> ]
-"16155" [label = <(FIELD_IDENTIFIER,end,end)<SUB>5876</SUB>> ]
-"16159" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>5877</SUB>> ]
-"16188" [label = <(FIELD_IDENTIFIER,move,move)<SUB>5887</SUB>> ]
-"16198" [label = <(FIELD_IDENTIFIER,release,release)<SUB>5889</SUB>> ]
-"16206" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Fence&gt; releaseFence)<SUB>5892</SUB>> ]
-"16211" [label = <(&lt;operator&gt;.new,new Fence(dup(*outSyncFd)))<SUB>5892</SUB>> ]
-"16071" [label = <(FIELD_IDENTIFIER,getCaptureFill,getCaptureFill)<SUB>5825</SUB>> ]
-"16078" [label = <(FIELD_IDENTIFIER,source,source)<SUB>5828</SUB>> ]
-"16207" [label = <(&lt;operator&gt;.lessThan,sp&lt;Fence)<SUB>5892</SUB>> ]
-"16213" [label = <(dup,dup(*outSyncFd))<SUB>5892</SUB>> ]
-"16220" [label = <(onLayerDisplayed,layer-&gt;onLayerDisplayed(releaseFence))<SUB>5894</SUB>> ]
-"16214" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5892</SUB>> ]
-"16221" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;onLayerDisplayed)<SUB>5894</SUB>> ]
-"16223" [label = <(FIELD_IDENTIFIER,onLayerDisplayed,onLayerDisplayed)<SUB>5894</SUB>> ]
-"15966" [label = <(METHOD,renderScreenImplLocked)<SUB>5800</SUB>> ]
-"16225" [label = <(METHOD_RETURN,void)<SUB>5800</SUB>> ]
-  "15974" -> "15981" 
-  "15976" -> "15988" 
-  "15983" -> "15995" 
-  "15990" -> "16002" 
-  "15997" -> "16009" 
-  "16004" -> "16016" 
-  "16011" -> "16022" 
-  "16018" -> "16032" 
-  "16029" -> "16039" 
-  "16036" -> "16044" 
-  "16041" -> "16049" 
-  "16046" -> "16057" 
-  "16054" -> "16067" 
-  "16062" -> "16078" 
-  "16073" -> "16086" 
-  "16082" -> "16096" 
-  "16092" -> "16114" 
-  "16111" -> "16120" 
-  "16117" -> "16128" 
-  "16123" -> "16135" 
-  "16131" -> "16137" 
-  "16136" -> "16143" 
-  "16139" -> "16147" 
-  "16144" -> "16168" 
-  "16165" -> "16174" 
-  "16172" -> "16179" 
-  "16177" -> "16193" 
-  "16192" -> "16201" 
-  "15978" -> "15976" 
-  "15985" -> "15983" 
-  "15992" -> "15990" 
-  "15999" -> "15997" 
-  "16006" -> "16004" 
-  "16013" -> "16011" 
-  "16019" -> "16018" 
-  "16030" -> "16033" 
-  "16033" -> "16029" 
-  "16037" -> "16036" 
-  "16042" -> "16041" 
-  "16047" -> "16053" 
-  "16050" -> "16046" 
-  "16055" -> "16060" 
-  "16058" -> "16054" 
-  "16064" -> "16062" 
-  "16074" -> "16073" 
-  "16083" -> "16088" 
-  "16088" -> "16082" 
-  "16093" -> "16101" 
-  "16098" -> "16092" 
-  "16112" -> "16115" 
-  "16115" -> "16111" 
-  "16118" -> "16117" 
-  "16125" -> "16123" 
-  "16133" -> "16131" 
-  "16137" -> "16136" 
-  "16140" -> "16139" 
-  "16145" -> "16151" 
-  "16148" -> "16155" 
+"15990" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5803</SUB>> ]
+"15992" [label = <(&lt;operator&gt;.assignment,reqWidth = renderArea.getReqWidth())<SUB>5805</SUB>> ]
+"15999" [label = <(&lt;operator&gt;.assignment,reqHeight = renderArea.getReqHeight())<SUB>5806</SUB>> ]
+"16006" [label = <(&lt;operator&gt;.assignment,sourceCrop = renderArea.getSourceCrop())<SUB>5807</SUB>> ]
+"16013" [label = <(&lt;operator&gt;.assignment,transform = renderArea.getTransform())<SUB>5808</SUB>> ]
+"16020" [label = <(&lt;operator&gt;.assignment,rotation = renderArea.getRotationFlags())<SUB>5809</SUB>> ]
+"16027" [label = <(&lt;operator&gt;.assignment,&amp; displayViewport = renderArea.getDisplayViewport())<SUB>5810</SUB>> ]
+"16034" [label = <(&lt;operator&gt;.greaterThan,std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; clientCompositionLayers)<SUB>5813</SUB>> ]
+"16045" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.physicalDisplay = Rect(reqWidth, reqHeight))<SUB>5817</SUB>> ]
+"16052" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.clip = sourceCrop)<SUB>5818</SUB>> ]
+"16057" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.orientation = rotation)<SUB>5819</SUB>> ]
+"16062" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.outputDataspace = renderArea.getReqDataSpace())<SUB>5821</SUB>> ]
+"16070" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.maxLuminance = DisplayDevice::sDefaultMaxLumiance)<SUB>5822</SUB>> ]
+"16078" [label = <(&lt;operator&gt;.assignment,alpha = RenderArea::getCaptureFillValue(renderArea.getCaptureFill()))<SUB>5824</SUB>> ]
+"16089" [label = <(&lt;operator&gt;.assignment,fillLayer.source.buffer.buffer = nullptr)<SUB>5827</SUB>> ]
+"16098" [label = <(&lt;operator&gt;.assignment,fillLayer.source.solidColor = half3(0.0, 0.0, 0.0))<SUB>5828</SUB>> ]
+"16108" [label = <(&lt;operator&gt;.assignment,fillLayer.geometry.boundaries =\012 FloatRect(sourceCrop.left, sourceCrop.top, sourceCrop.right, sourceCrop.bottom))<SUB>5829</SUB>> ]
+"16127" [label = <(&lt;operator&gt;.assignment,fillLayer.alpha = half(alpha))<SUB>5831</SUB>> ]
+"16133" [label = <(push_back,clientCompositionLayers.push_back(fillLayer))<SUB>5832</SUB>> ]
+"16139" [label = <(&lt;operator&gt;.assignment,display = renderArea.getDisplayDevice())<SUB>5834</SUB>> ]
+"16147" [label = <(&lt;operator&gt;.assignment,clearRegion = Region::INVALID_REGION)<SUB>5836</SUB>> ]
+"16152" [label = <(traverseLayers,traverseLayers([&amp;](Layer* layer) {\012 const bool supportProtectedContent = false;\012 Region clip(renderArea.getBounds());\012        compositionengine::LayerFE::ClientCompositionTargetSettings targetSettings{\012                clip,\012                useIdentityTransform,\012                layer-&gt;needsFilteringForScreenshots(display.get(), transform) ||\012                        renderArea.needsFiltering(),\012                renderArea.isSecure(),\012                supportProtectedContent,\012                clearRegion,\012                displayViewport,\012                clientCompositionDisplay.outputDataspace,\012 true, /* realContentIsVisible */\012 false, /* clearContent */\012 };\012        std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; results =\012                layer-&gt;prepareClientCompositionList(targetSettings);\012 if (results.size() &gt; 0) {\012 for (auto&amp; settings : results) {\012                settings.geometry.positionTransform =\012                        transform.asMatrix4() * settings.geometry.positionTransform;\012 // There's no need to process blurs when we're executing region sampling,\012 // we're just trying to understand what we're drawing, and doing so without\012 // blurs is already a pretty good approximation.\012 if (regionSampling) {\012                    settings.backgroundBlurRadius = 0;\012 }\012 }\012            clientCompositionLayers.insert(clientCompositionLayers.end(),\012                                           std::make_move_iterator(results.begin()),\012                                           std::make_move_iterator(results.end()));\012            renderedLayers.push_back(layer);\012 }\012 }))<SUB>5837</SUB>> ]
+"16155" [label = <(clientCompositionLayerPointers,clientCompositionLayerPointers(\012            clientCompositionLayers.size()))<SUB>5873</SUB>> ]
+"16160" [label = <(std::transform,std::transform(clientCompositionLayers.begin(), clientCompositionLayers.end(),\012                   clientCompositionLayerPointers.begin(),\012                   std::pointer_traits&lt;renderengine::LayerSettings*&gt;::pointer_to))<SUB>5875</SUB>> ]
+"16181" [label = <(&lt;operator&gt;.assignment,clientCompositionDisplay.clearRegion = clearRegion)<SUB>5879</SUB>> ]
+"16188" [label = <(useProtectedContext,getRenderEngine().useProtectedContext(false))<SUB>5884</SUB>> ]
+"16193" [label = <(drawLayers,getRenderEngine().drawLayers(clientCompositionDisplay, clientCompositionLayerPointers, buffer,\012 /*useFramebufferCache=*/false, std::move(bufferFence), &amp;drawFence))<SUB>5885</SUB>> ]
+"16208" [label = <(&lt;operator&gt;.assignment,*outSyncFd = drawFence.release())<SUB>5888</SUB>> ]
+"15994" [label = <(getReqWidth,renderArea.getReqWidth())<SUB>5805</SUB>> ]
+"16001" [label = <(getReqHeight,renderArea.getReqHeight())<SUB>5806</SUB>> ]
+"16008" [label = <(getSourceCrop,renderArea.getSourceCrop())<SUB>5807</SUB>> ]
+"16015" [label = <(getTransform,renderArea.getTransform())<SUB>5808</SUB>> ]
+"16022" [label = <(getRotationFlags,renderArea.getRotationFlags())<SUB>5809</SUB>> ]
+"16029" [label = <(getDisplayViewport,renderArea.getDisplayViewport())<SUB>5810</SUB>> ]
+"16035" [label = <(&lt;operator&gt;.lessThan,std::vector&lt;compositionengine::LayerFE::LayerSettings)<SUB>5813</SUB>> ]
+"16046" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.physicalDisplay)<SUB>5817</SUB>> ]
+"16049" [label = <(Rect,Rect(reqWidth, reqHeight))<SUB>5817</SUB>> ]
+"16053" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.clip)<SUB>5818</SUB>> ]
+"16058" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.orientation)<SUB>5819</SUB>> ]
+"16063" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.outputDataspace)<SUB>5821</SUB>> ]
+"16066" [label = <(getReqDataSpace,renderArea.getReqDataSpace())<SUB>5821</SUB>> ]
+"16071" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.maxLuminance)<SUB>5822</SUB>> ]
+"16074" [label = <(&lt;operator&gt;.fieldAccess,DisplayDevice::sDefaultMaxLumiance)<SUB>5822</SUB>> ]
+"16080" [label = <(RenderArea::getCaptureFillValue,RenderArea::getCaptureFillValue(renderArea.getCaptureFill()))<SUB>5824</SUB>> ]
+"16090" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.buffer.buffer)<SUB>5827</SUB>> ]
+"16099" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.solidColor)<SUB>5828</SUB>> ]
+"16104" [label = <(half3,half3(0.0, 0.0, 0.0))<SUB>5828</SUB>> ]
+"16109" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.geometry.boundaries)<SUB>5829</SUB>> ]
+"16114" [label = <(FloatRect,FloatRect(sourceCrop.left, sourceCrop.top, sourceCrop.right, sourceCrop.bottom))<SUB>5830</SUB>> ]
+"16128" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.alpha)<SUB>5831</SUB>> ]
+"16131" [label = <(half,half(alpha))<SUB>5831</SUB>> ]
+"16134" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.push_back)<SUB>5832</SUB>> ]
+"16141" [label = <(getDisplayDevice,renderArea.getDisplayDevice())<SUB>5834</SUB>> ]
+"16149" [label = <(&lt;operator&gt;.fieldAccess,Region::INVALID_REGION)<SUB>5836</SUB>> ]
+"16153" [label = <(METHOD_REF,ANY anonymous_lambda_56 (Layer* layer),traverseLayers([&amp;](Layer* layer) {\012 const bool supportProtectedContent = false;\012 Region clip(renderArea.getBounds());\012        compositionengine::LayerFE::ClientCompositionTargetSettings targetSettings{\012                clip,\012                useIdentityTransform,\012                layer-&gt;needsFilteringForScreenshots(display.get(), transform) ||\012                        renderArea.needsFiltering(),\012                renderArea.isSecure(),\012                supportProtectedContent,\012                clearRegion,\012                displayViewport,\012                clientCompositionDisplay.outputDataspace,\012 true, /* realContentIsVisible */\012 false, /* clearContent */\012 };\012        std::vector&lt;compositionengine::LayerFE::LayerSettings&gt; results =\012                layer-&gt;prepareClientCompositionList(targetSettings);\012 if (results.size() &gt; 0) {\012 for (auto&amp; settings : results) {\012                settings.geometry.positionTransform =\012                        transform.asMatrix4() * settings.geometry.positionTransform;\012 // There's no need to process blurs when we're executing region sampling,\012 // we're just trying to understand what we're drawing, and doing so without\012 // blurs is already a pretty good approximation.\012 if (regionSampling) {\012                    settings.backgroundBlurRadius = 0;\012 }\012 }\012            clientCompositionLayers.insert(clientCompositionLayers.end(),\012                                           std::make_move_iterator(results.begin()),\012                                           std::make_move_iterator(results.end()));\012            renderedLayers.push_back(layer);\012 }\012 }))<SUB>5837</SUB>> ]
+"16156" [label = <(size,clientCompositionLayers.size())<SUB>5874</SUB>> ]
+"16161" [label = <(&lt;operator&gt;.fieldAccess,std::transform)<SUB>5875</SUB>> ]
+"16164" [label = <(begin,clientCompositionLayers.begin())<SUB>5875</SUB>> ]
+"16168" [label = <(end,clientCompositionLayers.end())<SUB>5875</SUB>> ]
+"16172" [label = <(begin,clientCompositionLayerPointers.begin())<SUB>5876</SUB>> ]
+"16176" [label = <(&lt;operator&gt;.fieldAccess,std::pointer_traits&lt;renderengine::LayerSettings*&gt;::pointer_to)<SUB>5877</SUB>> ]
+"16182" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionDisplay.clearRegion)<SUB>5879</SUB>> ]
+"16189" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().useProtectedContext)<SUB>5884</SUB>> ]
+"16194" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().drawLayers)<SUB>5885</SUB>> ]
+"16201" [label = <(std::move,std::move(bufferFence))<SUB>5886</SUB>> ]
+"16206" [label = <(&lt;operator&gt;.addressOf,&amp;drawFence)<SUB>5886</SUB>> ]
+"16209" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5888</SUB>> ]
+"16211" [label = <(release,drawFence.release())<SUB>5888</SUB>> ]
+"16216" [label = <(&lt;operator&gt;.greaterEqualsThan,*outSyncFd &gt;= 0)<SUB>5890</SUB>> ]
+"15995" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqWidth)<SUB>5805</SUB>> ]
+"16002" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqHeight)<SUB>5806</SUB>> ]
+"16009" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getSourceCrop)<SUB>5807</SUB>> ]
+"16016" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getTransform)<SUB>5808</SUB>> ]
+"16023" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getRotationFlags)<SUB>5809</SUB>> ]
+"16030" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getDisplayViewport)<SUB>5810</SUB>> ]
+"16036" [label = <(&lt;operator&gt;.fieldAccess,std::vector)<SUB>5813</SUB>> ]
+"16039" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::LayerFE::LayerSettings)<SUB>5813</SUB>> ]
+"16048" [label = <(FIELD_IDENTIFIER,physicalDisplay,physicalDisplay)<SUB>5817</SUB>> ]
+"16055" [label = <(FIELD_IDENTIFIER,clip,clip)<SUB>5818</SUB>> ]
+"16060" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>5819</SUB>> ]
+"16065" [label = <(FIELD_IDENTIFIER,outputDataspace,outputDataspace)<SUB>5821</SUB>> ]
+"16067" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getReqDataSpace)<SUB>5821</SUB>> ]
+"16073" [label = <(FIELD_IDENTIFIER,maxLuminance,maxLuminance)<SUB>5822</SUB>> ]
+"16076" [label = <(FIELD_IDENTIFIER,sDefaultMaxLumiance,sDefaultMaxLumiance)<SUB>5822</SUB>> ]
+"16081" [label = <(&lt;operator&gt;.fieldAccess,RenderArea::getCaptureFillValue)<SUB>5824</SUB>> ]
+"16084" [label = <(getCaptureFill,renderArea.getCaptureFill())<SUB>5824</SUB>> ]
+"16091" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source.buffer)<SUB>5827</SUB>> ]
+"16096" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>5827</SUB>> ]
+"16100" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source)<SUB>5828</SUB>> ]
+"16103" [label = <(FIELD_IDENTIFIER,solidColor,solidColor)<SUB>5828</SUB>> ]
+"16110" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.geometry)<SUB>5829</SUB>> ]
+"16113" [label = <(FIELD_IDENTIFIER,boundaries,boundaries)<SUB>5829</SUB>> ]
+"16115" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.left)<SUB>5830</SUB>> ]
+"16118" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.top)<SUB>5830</SUB>> ]
+"16121" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.right)<SUB>5830</SUB>> ]
+"16124" [label = <(&lt;operator&gt;.fieldAccess,sourceCrop.bottom)<SUB>5830</SUB>> ]
+"16130" [label = <(FIELD_IDENTIFIER,alpha,alpha)<SUB>5831</SUB>> ]
+"16136" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>5832</SUB>> ]
+"16142" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getDisplayDevice)<SUB>5834</SUB>> ]
+"16151" [label = <(FIELD_IDENTIFIER,INVALID_REGION,INVALID_REGION)<SUB>5836</SUB>> ]
+"16157" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.size)<SUB>5874</SUB>> ]
+"16163" [label = <(FIELD_IDENTIFIER,transform,transform)<SUB>5875</SUB>> ]
+"16165" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.begin)<SUB>5875</SUB>> ]
+"16169" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayers.end)<SUB>5875</SUB>> ]
+"16173" [label = <(&lt;operator&gt;.fieldAccess,clientCompositionLayerPointers.begin)<SUB>5876</SUB>> ]
+"16177" [label = <(&lt;operator&gt;.fieldAccess,std::pointer_traits&lt;renderengine::LayerSettings*&gt;)<SUB>5877</SUB>> ]
+"16180" [label = <(FIELD_IDENTIFIER,pointer_to,pointer_to)<SUB>5877</SUB>> ]
+"16184" [label = <(FIELD_IDENTIFIER,clearRegion,clearRegion)<SUB>5879</SUB>> ]
+"16190" [label = <(getRenderEngine,getRenderEngine())<SUB>5884</SUB>> ]
+"16191" [label = <(FIELD_IDENTIFIER,useProtectedContext,useProtectedContext)<SUB>5884</SUB>> ]
+"16195" [label = <(getRenderEngine,getRenderEngine())<SUB>5885</SUB>> ]
+"16196" [label = <(FIELD_IDENTIFIER,drawLayers,drawLayers)<SUB>5885</SUB>> ]
+"16202" [label = <(&lt;operator&gt;.fieldAccess,std::move)<SUB>5886</SUB>> ]
+"16212" [label = <(&lt;operator&gt;.fieldAccess,drawFence.release)<SUB>5888</SUB>> ]
+"16217" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5890</SUB>> ]
+"16221" [label = <(&lt;operator&gt;.assignment,sp&lt;Fence&gt; releaseFence = new Fence(dup(*outSyncFd)))<SUB>5891</SUB>> ]
+"15997" [label = <(FIELD_IDENTIFIER,getReqWidth,getReqWidth)<SUB>5805</SUB>> ]
+"16004" [label = <(FIELD_IDENTIFIER,getReqHeight,getReqHeight)<SUB>5806</SUB>> ]
+"16011" [label = <(FIELD_IDENTIFIER,getSourceCrop,getSourceCrop)<SUB>5807</SUB>> ]
+"16018" [label = <(FIELD_IDENTIFIER,getTransform,getTransform)<SUB>5808</SUB>> ]
+"16025" [label = <(FIELD_IDENTIFIER,getRotationFlags,getRotationFlags)<SUB>5809</SUB>> ]
+"16032" [label = <(FIELD_IDENTIFIER,getDisplayViewport,getDisplayViewport)<SUB>5810</SUB>> ]
+"16038" [label = <(FIELD_IDENTIFIER,vector,vector)<SUB>5813</SUB>> ]
+"16040" [label = <(&lt;operator&gt;.fieldAccess,compositionengine::LayerFE)<SUB>5813</SUB>> ]
+"16043" [label = <(FIELD_IDENTIFIER,LayerSettings,LayerSettings)<SUB>5813</SUB>> ]
+"16069" [label = <(FIELD_IDENTIFIER,getReqDataSpace,getReqDataSpace)<SUB>5821</SUB>> ]
+"16083" [label = <(FIELD_IDENTIFIER,getCaptureFillValue,getCaptureFillValue)<SUB>5824</SUB>> ]
+"16085" [label = <(&lt;operator&gt;.fieldAccess,renderArea.getCaptureFill)<SUB>5824</SUB>> ]
+"16092" [label = <(&lt;operator&gt;.fieldAccess,fillLayer.source)<SUB>5827</SUB>> ]
+"16095" [label = <(FIELD_IDENTIFIER,buffer,buffer)<SUB>5827</SUB>> ]
+"16102" [label = <(FIELD_IDENTIFIER,source,source)<SUB>5828</SUB>> ]
+"16112" [label = <(FIELD_IDENTIFIER,geometry,geometry)<SUB>5829</SUB>> ]
+"16117" [label = <(FIELD_IDENTIFIER,left,left)<SUB>5830</SUB>> ]
+"16120" [label = <(FIELD_IDENTIFIER,top,top)<SUB>5830</SUB>> ]
+"16123" [label = <(FIELD_IDENTIFIER,right,right)<SUB>5830</SUB>> ]
+"16126" [label = <(FIELD_IDENTIFIER,bottom,bottom)<SUB>5830</SUB>> ]
+"16144" [label = <(FIELD_IDENTIFIER,getDisplayDevice,getDisplayDevice)<SUB>5834</SUB>> ]
+"16159" [label = <(FIELD_IDENTIFIER,size,size)<SUB>5874</SUB>> ]
+"16167" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>5875</SUB>> ]
+"16171" [label = <(FIELD_IDENTIFIER,end,end)<SUB>5875</SUB>> ]
+"16175" [label = <(FIELD_IDENTIFIER,begin,begin)<SUB>5876</SUB>> ]
+"16204" [label = <(FIELD_IDENTIFIER,move,move)<SUB>5886</SUB>> ]
+"16214" [label = <(FIELD_IDENTIFIER,release,release)<SUB>5888</SUB>> ]
+"16222" [label = <(&lt;operator&gt;.greaterThan,sp&lt;Fence&gt; releaseFence)<SUB>5891</SUB>> ]
+"16227" [label = <(&lt;operator&gt;.new,new Fence(dup(*outSyncFd)))<SUB>5891</SUB>> ]
+"16087" [label = <(FIELD_IDENTIFIER,getCaptureFill,getCaptureFill)<SUB>5824</SUB>> ]
+"16094" [label = <(FIELD_IDENTIFIER,source,source)<SUB>5827</SUB>> ]
+"16223" [label = <(&lt;operator&gt;.lessThan,sp&lt;Fence)<SUB>5891</SUB>> ]
+"16229" [label = <(dup,dup(*outSyncFd))<SUB>5891</SUB>> ]
+"16236" [label = <(onLayerDisplayed,layer-&gt;onLayerDisplayed(releaseFence))<SUB>5893</SUB>> ]
+"16230" [label = <(&lt;operator&gt;.indirection,*outSyncFd)<SUB>5891</SUB>> ]
+"16237" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;onLayerDisplayed)<SUB>5893</SUB>> ]
+"16239" [label = <(FIELD_IDENTIFIER,onLayerDisplayed,onLayerDisplayed)<SUB>5893</SUB>> ]
+"15982" [label = <(METHOD,renderScreenImplLocked)<SUB>5799</SUB>> ]
+"16241" [label = <(METHOD_RETURN,void)<SUB>5799</SUB>> ]
+  "15990" -> "15997" 
+  "15992" -> "16004" 
+  "15999" -> "16011" 
+  "16006" -> "16018" 
+  "16013" -> "16025" 
+  "16020" -> "16032" 
+  "16027" -> "16038" 
+  "16034" -> "16048" 
+  "16045" -> "16055" 
+  "16052" -> "16060" 
+  "16057" -> "16065" 
+  "16062" -> "16073" 
+  "16070" -> "16083" 
+  "16078" -> "16094" 
+  "16089" -> "16102" 
+  "16098" -> "16112" 
+  "16108" -> "16130" 
+  "16127" -> "16136" 
+  "16133" -> "16144" 
+  "16139" -> "16151" 
+  "16147" -> "16153" 
   "16152" -> "16159" 
-  "16156" -> "16161" 
-  "16160" -> "16144" 
-  "16166" -> "16165" 
-  "16173" -> "16172" 
-  "16178" -> "16188" 
-  "16185" -> "16190" 
-  "16190" -> "16177" 
-  "16193" -> "16198" 
-  "16195" -> "16192" 
-  "16200" -> "16225" 
-  "16200" -> "16207" 
-  "15979" -> "15978" 
-  "15986" -> "15985" 
-  "15993" -> "15992" 
-  "16000" -> "15999" 
-  "16007" -> "16006" 
-  "16014" -> "16013" 
-  "16020" -> "16024" 
-  "16023" -> "16019" 
-  "16032" -> "16030" 
-  "16039" -> "16037" 
-  "16044" -> "16042" 
-  "16049" -> "16047" 
-  "16051" -> "16050" 
-  "16057" -> "16055" 
-  "16060" -> "16058" 
-  "16065" -> "16071" 
-  "16068" -> "16064" 
-  "16075" -> "16080" 
-  "16080" -> "16074" 
-  "16084" -> "16087" 
-  "16087" -> "16083" 
-  "16094" -> "16097" 
-  "16097" -> "16093" 
+  "16155" -> "16163" 
+  "16160" -> "16184" 
+  "16181" -> "16190" 
+  "16188" -> "16195" 
+  "16193" -> "16209" 
+  "16208" -> "16217" 
+  "15994" -> "15992" 
+  "16001" -> "15999" 
+  "16008" -> "16006" 
+  "16015" -> "16013" 
+  "16022" -> "16020" 
+  "16029" -> "16027" 
+  "16035" -> "16034" 
+  "16046" -> "16049" 
+  "16049" -> "16045" 
+  "16053" -> "16052" 
+  "16058" -> "16057" 
+  "16063" -> "16069" 
+  "16066" -> "16062" 
+  "16071" -> "16076" 
+  "16074" -> "16070" 
+  "16080" -> "16078" 
+  "16090" -> "16089" 
   "16099" -> "16104" 
-  "16102" -> "16107" 
-  "16105" -> "16110" 
-  "16108" -> "16098" 
-  "16114" -> "16112" 
-  "16120" -> "16118" 
-  "16126" -> "16125" 
-  "16135" -> "16133" 
-  "16141" -> "16140" 
-  "16147" -> "16145" 
-  "16149" -> "16148" 
+  "16104" -> "16098" 
+  "16109" -> "16117" 
+  "16114" -> "16108" 
+  "16128" -> "16131" 
+  "16131" -> "16127" 
+  "16134" -> "16133" 
+  "16141" -> "16139" 
+  "16149" -> "16147" 
   "16153" -> "16152" 
-  "16157" -> "16156" 
-  "16161" -> "16164" 
-  "16164" -> "16160" 
-  "16168" -> "16166" 
-  "16174" -> "16175" 
-  "16175" -> "16173" 
-  "16179" -> "16180" 
-  "16180" -> "16178" 
-  "16186" -> "16185" 
-  "16196" -> "16195" 
-  "16201" -> "16200" 
-  "16205" -> "16223" 
-  "15981" -> "15979" 
-  "15988" -> "15986" 
-  "15995" -> "15993" 
-  "16002" -> "16000" 
-  "16009" -> "16007" 
-  "16016" -> "16014" 
-  "16022" -> "16020" 
-  "16024" -> "16027" 
-  "16027" -> "16023" 
-  "16053" -> "16051" 
-  "16067" -> "16065" 
-  "16069" -> "16068" 
-  "16076" -> "16079" 
-  "16079" -> "16075" 
-  "16086" -> "16084" 
-  "16096" -> "16094" 
-  "16101" -> "16099" 
-  "16104" -> "16102" 
-  "16107" -> "16105" 
-  "16110" -> "16108" 
-  "16128" -> "16126" 
-  "16143" -> "16141" 
+  "16156" -> "16155" 
+  "16161" -> "16167" 
+  "16164" -> "16171" 
+  "16168" -> "16175" 
+  "16172" -> "16177" 
+  "16176" -> "16160" 
+  "16182" -> "16181" 
+  "16189" -> "16188" 
+  "16194" -> "16204" 
+  "16201" -> "16206" 
+  "16206" -> "16193" 
+  "16209" -> "16214" 
+  "16211" -> "16208" 
+  "16216" -> "16241" 
+  "16216" -> "16223" 
+  "15995" -> "15994" 
+  "16002" -> "16001" 
+  "16009" -> "16008" 
+  "16016" -> "16015" 
+  "16023" -> "16022" 
+  "16030" -> "16029" 
+  "16036" -> "16040" 
+  "16039" -> "16035" 
+  "16048" -> "16046" 
+  "16055" -> "16053" 
+  "16060" -> "16058" 
+  "16065" -> "16063" 
+  "16067" -> "16066" 
+  "16073" -> "16071" 
+  "16076" -> "16074" 
+  "16081" -> "16087" 
+  "16084" -> "16080" 
+  "16091" -> "16096" 
+  "16096" -> "16090" 
+  "16100" -> "16103" 
+  "16103" -> "16099" 
+  "16110" -> "16113" 
+  "16113" -> "16109" 
+  "16115" -> "16120" 
+  "16118" -> "16123" 
+  "16121" -> "16126" 
+  "16124" -> "16114" 
+  "16130" -> "16128" 
+  "16136" -> "16134" 
+  "16142" -> "16141" 
   "16151" -> "16149" 
-  "16155" -> "16153" 
+  "16157" -> "16156" 
+  "16163" -> "16161" 
+  "16165" -> "16164" 
+  "16169" -> "16168" 
+  "16173" -> "16172" 
+  "16177" -> "16180" 
+  "16180" -> "16176" 
+  "16184" -> "16182" 
+  "16190" -> "16191" 
+  "16191" -> "16189" 
+  "16195" -> "16196" 
+  "16196" -> "16194" 
+  "16202" -> "16201" 
+  "16212" -> "16211" 
+  "16217" -> "16216" 
+  "16221" -> "16239" 
+  "15997" -> "15995" 
+  "16004" -> "16002" 
+  "16011" -> "16009" 
+  "16018" -> "16016" 
+  "16025" -> "16023" 
+  "16032" -> "16030" 
+  "16038" -> "16036" 
+  "16040" -> "16043" 
+  "16043" -> "16039" 
+  "16069" -> "16067" 
+  "16083" -> "16081" 
+  "16085" -> "16084" 
+  "16092" -> "16095" 
+  "16095" -> "16091" 
+  "16102" -> "16100" 
+  "16112" -> "16110" 
+  "16117" -> "16115" 
+  "16120" -> "16118" 
+  "16123" -> "16121" 
+  "16126" -> "16124" 
+  "16144" -> "16142" 
   "16159" -> "16157" 
-  "16188" -> "16186" 
-  "16198" -> "16196" 
-  "16206" -> "16214" 
-  "16211" -> "16205" 
-  "16071" -> "16069" 
-  "16078" -> "16076" 
-  "16207" -> "16206" 
-  "16213" -> "16211" 
-  "16220" -> "16225" 
-  "16220" -> "16223" 
-  "16214" -> "16213" 
-  "16221" -> "16220" 
-  "16223" -> "16221" 
-  "15966" -> "15974" 
+  "16167" -> "16165" 
+  "16171" -> "16169" 
+  "16175" -> "16173" 
+  "16204" -> "16202" 
+  "16214" -> "16212" 
+  "16222" -> "16230" 
+  "16227" -> "16221" 
+  "16087" -> "16085" 
+  "16094" -> "16092" 
+  "16223" -> "16222" 
+  "16229" -> "16227" 
+  "16236" -> "16241" 
+  "16236" -> "16239" 
+  "16230" -> "16229" 
+  "16237" -> "16236" 
+  "16239" -> "16237" 
+  "15982" -> "15990" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/254-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/254-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/254-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/254-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,25 +1,25 @@
 digraph "captureScreenImplLocked" {  
-"16237" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5905</SUB>> ]
-"16238" [label = <(traverseLayers,traverseLayers([&amp;](Layer* layer) {\012        outCapturedSecureLayers =\012                outCapturedSecureLayers || (layer-&gt;isVisible() &amp;&amp; layer-&gt;isSecure());\012 }))<SUB>5907</SUB>> ]
-"16250" [label = <(renderScreenImplLocked,renderScreenImplLocked(renderArea, traverseLayers, buffer, useIdentityTransform, regionSampling,\012                           outSyncFd))<SUB>5919</SUB>> ]
-"16257" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5921</SUB>> ]
-"16239" [label = <(METHOD_REF,ANY anonymous_lambda_57 (Layer* layer),traverseLayers([&amp;](Layer* layer) {\012        outCapturedSecureLayers =\012                outCapturedSecureLayers || (layer-&gt;isVisible() &amp;&amp; layer-&gt;isSecure());\012 }))<SUB>5907</SUB>> ]
-"16241" [label = <(&lt;operator&gt;.logicalAnd,outCapturedSecureLayers &amp;&amp; !forSystem)<SUB>5915</SUB>> ]
-"16243" [label = <(&lt;operator&gt;.logicalNot,!forSystem)<SUB>5915</SUB>> ]
-"16246" [label = <(ALOGW,ALOGW(&quot;FB is protected: PERMISSION_DENIED&quot;))<SUB>5916</SUB>> ]
-"16248" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5917</SUB>> ]
-"16227" [label = <(METHOD,captureScreenImplLocked)<SUB>5899</SUB>> ]
-"16259" [label = <(METHOD_RETURN,status_t)<SUB>5899</SUB>> ]
-  "16237" -> "16239" 
-  "16238" -> "16241" 
-  "16238" -> "16243" 
-  "16250" -> "16257" 
-  "16257" -> "16259" 
-  "16239" -> "16238" 
-  "16241" -> "16246" 
-  "16241" -> "16250" 
-  "16243" -> "16241" 
-  "16246" -> "16248" 
-  "16248" -> "16259" 
-  "16227" -> "16237" 
+"16253" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>5904</SUB>> ]
+"16254" [label = <(traverseLayers,traverseLayers([&amp;](Layer* layer) {\012        outCapturedSecureLayers =\012                outCapturedSecureLayers || (layer-&gt;isVisible() &amp;&amp; layer-&gt;isSecure());\012 }))<SUB>5906</SUB>> ]
+"16266" [label = <(renderScreenImplLocked,renderScreenImplLocked(renderArea, traverseLayers, buffer, useIdentityTransform, regionSampling,\012                           outSyncFd))<SUB>5918</SUB>> ]
+"16273" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>5920</SUB>> ]
+"16255" [label = <(METHOD_REF,ANY anonymous_lambda_57 (Layer* layer),traverseLayers([&amp;](Layer* layer) {\012        outCapturedSecureLayers =\012                outCapturedSecureLayers || (layer-&gt;isVisible() &amp;&amp; layer-&gt;isSecure());\012 }))<SUB>5906</SUB>> ]
+"16257" [label = <(&lt;operator&gt;.logicalAnd,outCapturedSecureLayers &amp;&amp; !forSystem)<SUB>5914</SUB>> ]
+"16259" [label = <(&lt;operator&gt;.logicalNot,!forSystem)<SUB>5914</SUB>> ]
+"16262" [label = <(ALOGW,ALOGW(&quot;FB is protected: PERMISSION_DENIED&quot;))<SUB>5915</SUB>> ]
+"16264" [label = <(RETURN,return PERMISSION_DENIED;,return PERMISSION_DENIED;)<SUB>5916</SUB>> ]
+"16243" [label = <(METHOD,captureScreenImplLocked)<SUB>5898</SUB>> ]
+"16275" [label = <(METHOD_RETURN,status_t)<SUB>5898</SUB>> ]
+  "16253" -> "16255" 
+  "16254" -> "16257" 
+  "16254" -> "16259" 
+  "16266" -> "16273" 
+  "16273" -> "16275" 
+  "16255" -> "16254" 
+  "16257" -> "16262" 
+  "16257" -> "16266" 
+  "16259" -> "16257" 
+  "16262" -> "16264" 
+  "16264" -> "16275" 
+  "16243" -> "16253" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/255-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/255-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/255-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/255-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,15 +1,15 @@
 digraph "setInputWindowsFinished" {  
-"16264" [label = <(_l,_l(mStateLock))<SUB>5925</SUB>> ]
-"16266" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = false)<SUB>5927</SUB>> ]
-"16269" [label = <(broadcast,mTransactionCV.broadcast())<SUB>5929</SUB>> ]
-"16270" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>5929</SUB>> ]
-"16272" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>5929</SUB>> ]
-"16261" [label = <(METHOD,setInputWindowsFinished)<SUB>5924</SUB>> ]
-"16273" [label = <(METHOD_RETURN,void)<SUB>5924</SUB>> ]
-  "16264" -> "16266" 
-  "16266" -> "16272" 
-  "16269" -> "16273" 
-  "16270" -> "16269" 
-  "16272" -> "16270" 
-  "16261" -> "16264" 
+"16280" [label = <(_l,_l(mStateLock))<SUB>5924</SUB>> ]
+"16282" [label = <(&lt;operator&gt;.assignment,mPendingSyncInputWindows = false)<SUB>5926</SUB>> ]
+"16285" [label = <(broadcast,mTransactionCV.broadcast())<SUB>5928</SUB>> ]
+"16286" [label = <(&lt;operator&gt;.fieldAccess,mTransactionCV.broadcast)<SUB>5928</SUB>> ]
+"16288" [label = <(FIELD_IDENTIFIER,broadcast,broadcast)<SUB>5928</SUB>> ]
+"16277" [label = <(METHOD,setInputWindowsFinished)<SUB>5923</SUB>> ]
+"16289" [label = <(METHOD_RETURN,void)<SUB>5923</SUB>> ]
+  "16280" -> "16282" 
+  "16282" -> "16288" 
+  "16285" -> "16289" 
+  "16286" -> "16285" 
+  "16288" -> "16286" 
+  "16277" -> "16280" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/256-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/256-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/256-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/256-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,11 +1,11 @@
 digraph "traverse" {  
-"16278" [label = <(traverse,layersSortedByZ.traverse(visitor))<SUB>5935</SUB>> ]
-"16279" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverse)<SUB>5935</SUB>> ]
-"16281" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>5935</SUB>> ]
-"16275" [label = <(METHOD,traverse)<SUB>5934</SUB>> ]
-"16283" [label = <(METHOD_RETURN,void)<SUB>5934</SUB>> ]
-  "16278" -> "16283" 
-  "16279" -> "16278" 
-  "16281" -> "16279" 
-  "16275" -> "16281" 
+"16294" [label = <(traverse,layersSortedByZ.traverse(visitor))<SUB>5934</SUB>> ]
+"16295" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverse)<SUB>5934</SUB>> ]
+"16297" [label = <(FIELD_IDENTIFIER,traverse,traverse)<SUB>5934</SUB>> ]
+"16291" [label = <(METHOD,traverse)<SUB>5933</SUB>> ]
+"16299" [label = <(METHOD_RETURN,void)<SUB>5933</SUB>> ]
+  "16294" -> "16299" 
+  "16295" -> "16294" 
+  "16297" -> "16295" 
+  "16291" -> "16297" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/257-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/257-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/257-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/257-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,11 +1,11 @@
 digraph "traverseInZOrder" {  
-"16288" [label = <(traverseInZOrder,layersSortedByZ.traverseInZOrder(stateSet, visitor))<SUB>5939</SUB>> ]
-"16289" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverseInZOrder)<SUB>5939</SUB>> ]
-"16291" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>5939</SUB>> ]
-"16285" [label = <(METHOD,traverseInZOrder)<SUB>5938</SUB>> ]
-"16294" [label = <(METHOD_RETURN,void)<SUB>5938</SUB>> ]
-  "16288" -> "16294" 
-  "16289" -> "16288" 
-  "16291" -> "16289" 
-  "16285" -> "16291" 
+"16304" [label = <(traverseInZOrder,layersSortedByZ.traverseInZOrder(stateSet, visitor))<SUB>5938</SUB>> ]
+"16305" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverseInZOrder)<SUB>5938</SUB>> ]
+"16307" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>5938</SUB>> ]
+"16301" [label = <(METHOD,traverseInZOrder)<SUB>5937</SUB>> ]
+"16310" [label = <(METHOD_RETURN,void)<SUB>5937</SUB>> ]
+  "16304" -> "16310" 
+  "16305" -> "16304" 
+  "16307" -> "16305" 
+  "16301" -> "16307" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/258-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/258-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/258-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/258-cfg.dot	2023-06-07 19:33:06.727398399 +0330
@@ -1,11 +1,11 @@
 digraph "traverseInReverseZOrder" {  
-"16299" [label = <(traverseInReverseZOrder,layersSortedByZ.traverseInReverseZOrder(stateSet, visitor))<SUB>5943</SUB>> ]
-"16300" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverseInReverseZOrder)<SUB>5943</SUB>> ]
-"16302" [label = <(FIELD_IDENTIFIER,traverseInReverseZOrder,traverseInReverseZOrder)<SUB>5943</SUB>> ]
-"16296" [label = <(METHOD,traverseInReverseZOrder)<SUB>5942</SUB>> ]
-"16305" [label = <(METHOD_RETURN,void)<SUB>5942</SUB>> ]
-  "16299" -> "16305" 
-  "16300" -> "16299" 
-  "16302" -> "16300" 
-  "16296" -> "16302" 
+"16315" [label = <(traverseInReverseZOrder,layersSortedByZ.traverseInReverseZOrder(stateSet, visitor))<SUB>5942</SUB>> ]
+"16316" [label = <(&lt;operator&gt;.fieldAccess,layersSortedByZ.traverseInReverseZOrder)<SUB>5942</SUB>> ]
+"16318" [label = <(FIELD_IDENTIFIER,traverseInReverseZOrder,traverseInReverseZOrder)<SUB>5942</SUB>> ]
+"16312" [label = <(METHOD,traverseInReverseZOrder)<SUB>5941</SUB>> ]
+"16321" [label = <(METHOD_RETURN,void)<SUB>5941</SUB>> ]
+  "16315" -> "16321" 
+  "16316" -> "16315" 
+  "16318" -> "16316" 
+  "16312" -> "16318" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/259-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/259-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/259-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/259-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,34 +1,34 @@
 digraph "traverseLayersInDisplay" {  
-"16330" [label = <(traverseInZOrder,layer-&gt;traverseInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false)) {\012 return;\012 }\012 if (!layer-&gt;isVisible()) {\012 return;\012 }\012            visitor(layer);\012 }))<SUB>5955</SUB>> ]
-"16318" [label = <(&lt;operator&gt;.logicalNot,!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false))<SUB>5951</SUB>> ]
-"16331" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;traverseInZOrder)<SUB>5955</SUB>> ]
-"16334" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>5955</SUB>> ]
-"16339" [label = <(METHOD_REF,ANY anonymous_lambda_58 (Layer* layer),layer-&gt;traverseInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false)) {\012 return;\012 }\012 if (!layer-&gt;isVisible()) {\012 return;\012 }\012            visitor(layer);\012 }))<SUB>5955</SUB>> ]
-"16319" [label = <(belongsToDisplay,layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false))<SUB>5951</SUB>> ]
-"16333" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>5955</SUB>> ]
-"16335" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>5955</SUB>> ]
-"16338" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>5955</SUB>> ]
-"16320" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;belongsToDisplay)<SUB>5951</SUB>> ]
-"16323" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>5951</SUB>> ]
-"16322" [label = <(FIELD_IDENTIFIER,belongsToDisplay,belongsToDisplay)<SUB>5951</SUB>> ]
-"16324" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>5951</SUB>> ]
-"16326" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5951</SUB>> ]
-"16307" [label = <(METHOD,traverseLayersInDisplay)<SUB>5946</SUB>> ]
-"16340" [label = <(METHOD_RETURN,void)<SUB>5946</SUB>> ]
-  "16330" -> "16340" 
-  "16330" -> "16322" 
-  "16318" -> "16333" 
-  "16331" -> "16335" 
-  "16334" -> "16339" 
-  "16339" -> "16330" 
-  "16319" -> "16318" 
-  "16333" -> "16331" 
-  "16335" -> "16338" 
-  "16338" -> "16334" 
-  "16320" -> "16326" 
-  "16323" -> "16319" 
-  "16322" -> "16320" 
-  "16324" -> "16323" 
-  "16326" -> "16324" 
-  "16307" -> "16322" 
+"16346" [label = <(traverseInZOrder,layer-&gt;traverseInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false)) {\012 return;\012 }\012 if (!layer-&gt;isVisible()) {\012 return;\012 }\012            visitor(layer);\012 }))<SUB>5954</SUB>> ]
+"16334" [label = <(&lt;operator&gt;.logicalNot,!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false))<SUB>5950</SUB>> ]
+"16347" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;traverseInZOrder)<SUB>5954</SUB>> ]
+"16350" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet::Drawing)<SUB>5954</SUB>> ]
+"16355" [label = <(METHOD_REF,ANY anonymous_lambda_58 (Layer* layer),layer-&gt;traverseInZOrder(LayerVector::StateSet::Drawing, [&amp;](Layer* layer) {\012 if (!layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false)) {\012 return;\012 }\012 if (!layer-&gt;isVisible()) {\012 return;\012 }\012            visitor(layer);\012 }))<SUB>5954</SUB>> ]
+"16335" [label = <(belongsToDisplay,layer-&gt;belongsToDisplay(display-&gt;getLayerStack(), false))<SUB>5950</SUB>> ]
+"16349" [label = <(FIELD_IDENTIFIER,traverseInZOrder,traverseInZOrder)<SUB>5954</SUB>> ]
+"16351" [label = <(&lt;operator&gt;.fieldAccess,LayerVector::StateSet)<SUB>5954</SUB>> ]
+"16354" [label = <(FIELD_IDENTIFIER,Drawing,Drawing)<SUB>5954</SUB>> ]
+"16336" [label = <(&lt;operator&gt;.indirectFieldAccess,layer-&gt;belongsToDisplay)<SUB>5950</SUB>> ]
+"16339" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>5950</SUB>> ]
+"16338" [label = <(FIELD_IDENTIFIER,belongsToDisplay,belongsToDisplay)<SUB>5950</SUB>> ]
+"16340" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>5950</SUB>> ]
+"16342" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>5950</SUB>> ]
+"16323" [label = <(METHOD,traverseLayersInDisplay)<SUB>5945</SUB>> ]
+"16356" [label = <(METHOD_RETURN,void)<SUB>5945</SUB>> ]
+  "16346" -> "16356" 
+  "16346" -> "16338" 
+  "16334" -> "16349" 
+  "16347" -> "16351" 
+  "16350" -> "16355" 
+  "16355" -> "16346" 
+  "16335" -> "16334" 
+  "16349" -> "16347" 
+  "16351" -> "16354" 
+  "16354" -> "16350" 
+  "16336" -> "16342" 
+  "16339" -> "16335" 
+  "16338" -> "16336" 
+  "16340" -> "16339" 
+  "16342" -> "16340" 
+  "16323" -> "16338" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/26-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/26-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/26-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/26-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_33" {  
-"121" [label = <(METHOD,anonymous_lambda_33)<SUB>3047</SUB>> ]
-"124" [label = <(METHOD_RETURN,ANY)<SUB>3047</SUB>> ]
+"121" [label = <(METHOD,anonymous_lambda_33)<SUB>3046</SUB>> ]
+"124" [label = <(METHOD_RETURN,ANY)<SUB>3046</SUB>> ]
   "121" -> "124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/260-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/260-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/260-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/260-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,411 +1,411 @@
 digraph "setDesiredDisplayConfigSpecsInternal" {  
-"16348" [label = <(lock,lock(mStateLock))<SUB>5970</SUB>> ]
-"16350" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display-&gt;isPrimary() &amp;&amp; overridePolicy,\012 &quot;Can only set override policy on the primary display&quot;))<SUB>5972</SUB>> ]
-"16359" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!policy &amp;&amp; !overridePolicy, &quot;Can only clear the override policy&quot;))<SUB>5974</SUB>> ]
-"16479" [label = <(&lt;operator&gt;.assignment,setPolicyResult = overridePolicy\012 ? mRefreshRateConfigs-&gt;setOverridePolicy(policy)\012 : mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6012</SUB>> ]
-"16513" [label = <(&lt;operator&gt;.assignment,currentPolicy = mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>6021</SUB>> ]
-"16519" [label = <(ALOGV,ALOGV(&quot;Setting desired display config specs: defaultConfig: %d primaryRange: [%.0f %.0f]&quot;\012 &quot; expandedRange: [%.0f %.0f]&quot;,\012          currentPolicy.defaultConfig.value(), currentPolicy.primaryRange.min,\012          currentPolicy.primaryRange.max, currentPolicy.appRequestRange.min,\012          currentPolicy.appRequestRange.max))<SUB>6023</SUB>> ]
-"16548" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod())<SUB>6031</SUB>> ]
-"16561" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                              display-&gt;getActiveConfig(), vsyncPeriod))<SUB>6034</SUB>> ]
-"16577" [label = <(toggleKernelIdleTimer,toggleKernelIdleTimer())<SUB>6036</SUB>> ]
-"16579" [label = <(&lt;operator&gt;.assignment,configId = mScheduler-&gt;getPreferredConfigId())<SUB>6038</SUB>> ]
-"16586" [label = <(&lt;operator&gt;.assignment,&amp; preferredRefreshRate = configId\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId)\012 // NOTE: Choose the default config ID, if Scheduler doesn't have one in mind.\012 : mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6039</SUB>> ]
-"16603" [label = <(ALOGV,ALOGV(&quot;trying to switch to Scheduler preferred config %d (%s)&quot;,\012          preferredRefreshRate.getConfigId().value(), preferredRefreshRate.getName().c_str()))<SUB>6043</SUB>> ]
-"16657" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6056</SUB>> ]
-"16351" [label = <(&lt;operator&gt;.logicalAnd,!display-&gt;isPrimary() &amp;&amp; overridePolicy)<SUB>5972</SUB>> ]
-"16360" [label = <(&lt;operator&gt;.logicalAnd,!policy &amp;&amp; !overridePolicy)<SUB>5974</SUB>> ]
-"16367" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPrimary())<SUB>5976</SUB>> ]
-"16481" [label = <(&lt;operator&gt;.conditional,overridePolicy\012 ? mRefreshRateConfigs-&gt;setOverridePolicy(policy)\012 : mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6012</SUB>> ]
-"16495" [label = <(&lt;operator&gt;.lessThan,setPolicyResult &lt; 0)<SUB>6015</SUB>> ]
-"16502" [label = <(&lt;operator&gt;.equals,setPolicyResult == scheduler::RefreshRateConfigs::CURRENT_POLICY_UNCHANGED)<SUB>6018</SUB>> ]
-"16515" [label = <(getCurrentPolicy,mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>6021</SUB>> ]
-"16521" [label = <(value,currentPolicy.defaultConfig.value())<SUB>6025</SUB>> ]
-"16527" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.min)<SUB>6025</SUB>> ]
-"16532" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.max)<SUB>6026</SUB>> ]
-"16537" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.min)<SUB>6026</SUB>> ]
-"16542" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.max)<SUB>6027</SUB>> ]
-"16550" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod())<SUB>6032</SUB>> ]
-"16562" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>6034</SUB>> ]
-"16566" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>6034</SUB>> ]
-"16572" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>6035</SUB>> ]
-"16581" [label = <(getPreferredConfigId,mScheduler-&gt;getPreferredConfigId())<SUB>6038</SUB>> ]
-"16588" [label = <(&lt;operator&gt;.conditional,configId\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId)\012 // NOTE: Choose the default config ID, if Scheduler doesn't have one in mind.\012 : mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6039</SUB>> ]
-"16605" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6044</SUB>> ]
-"16612" [label = <(c_str,preferredRefreshRate.getName().c_str())<SUB>6044</SUB>> ]
-"16620" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(preferredRefreshRate.getConfigId()))<SUB>6046</SUB>> ]
-"16352" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPrimary())<SUB>5972</SUB>> ]
-"16361" [label = <(&lt;operator&gt;.logicalNot,!policy)<SUB>5974</SUB>> ]
-"16363" [label = <(&lt;operator&gt;.logicalNot,!overridePolicy)<SUB>5974</SUB>> ]
-"16368" [label = <(isPrimary,display-&gt;isPrimary())<SUB>5976</SUB>> ]
-"16373" [label = <(ALOGV,ALOGV(&quot;setAllowedDisplayConfigsInternal for non-primary display&quot;))<SUB>5980</SUB>> ]
-"16376" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>5981</SUB>> ]
-"16382" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>5982</SUB>> ]
-"16386" [label = <(&lt;operator&gt;.assignment,constraints.desiredTimeNanos = systemTime())<SUB>5985</SUB>> ]
-"16391" [label = <(&lt;operator&gt;.assignment,constraints.seamlessRequired = false)<SUB>5986</SUB>> ]
-"16397" [label = <(&lt;operator&gt;.assignment,timeline = {0, 0, 0})<SUB>5988</SUB>> ]
-"16430" [label = <(setActiveConfig,display-&gt;setActiveConfig(policy-&gt;defaultConfig))<SUB>5998</SUB>> ]
-"16438" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod())<SUB>5999</SUB>> ]
-"16456" [label = <(onNonPrimaryDisplayConfigChanged,mScheduler-&gt;onNonPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                                     policy-&gt;defaultConfig, vsyncPeriod))<SUB>6002</SUB>> ]
-"16471" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6004</SUB>> ]
-"16476" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6009</SUB>> ]
-"16483" [label = <(setOverridePolicy,mRefreshRateConfigs-&gt;setOverridePolicy(policy))<SUB>6013</SUB>> ]
-"16488" [label = <(setDisplayManagerPolicy,mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6014</SUB>> ]
-"16499" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6016</SUB>> ]
-"16504" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs::CURRENT_POLICY_UNCHANGED)<SUB>6018</SUB>> ]
-"16510" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6019</SUB>> ]
-"16516" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentPolicy)<SUB>6021</SUB>> ]
-"16522" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig.value)<SUB>6025</SUB>> ]
-"16528" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>6025</SUB>> ]
-"16531" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6025</SUB>> ]
-"16533" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>6026</SUB>> ]
-"16536" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6026</SUB>> ]
-"16538" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>6026</SUB>> ]
-"16541" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6026</SUB>> ]
-"16543" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>6027</SUB>> ]
-"16546" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6027</SUB>> ]
-"16551" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod)<SUB>6032</SUB>> ]
-"16564" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>6034</SUB>> ]
-"16567" [label = <(getId,display-&gt;getId())<SUB>6034</SUB>> ]
-"16571" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6034</SUB>> ]
-"16573" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>6035</SUB>> ]
-"16582" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getPreferredConfigId)<SUB>6038</SUB>> ]
-"16590" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId))<SUB>6040</SUB>> ]
-"16596" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6042</SUB>> ]
-"16606" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6044</SUB>> ]
-"16613" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getName().c_str)<SUB>6044</SUB>> ]
-"16621" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6046</SUB>> ]
-"16626" [label = <(ALOGV,ALOGV(&quot;switching to Scheduler preferred config %d&quot;,\012              preferredRefreshRate.getConfigId().value()))<SUB>6047</SUB>> ]
-"16635" [label = <(setDesiredActiveConfig,setDesiredActiveConfig(\012 {preferredRefreshRate.getConfigId(), Scheduler::ConfigEvent::Changed}))<SUB>6049</SUB>> ]
-"16353" [label = <(isPrimary,display-&gt;isPrimary())<SUB>5972</SUB>> ]
-"16369" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>5976</SUB>> ]
-"16378" [label = <(getId,display-&gt;getId())<SUB>5981</SUB>> ]
-"16383" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>5982</SUB>> ]
-"16387" [label = <(&lt;operator&gt;.fieldAccess,constraints.desiredTimeNanos)<SUB>5985</SUB>> ]
-"16390" [label = <(systemTime,systemTime())<SUB>5985</SUB>> ]
-"16392" [label = <(&lt;operator&gt;.fieldAccess,constraints.seamlessRequired)<SUB>5986</SUB>> ]
-"16399" [label = <(&lt;operator&gt;.arrayInitializer,{0, 0, 0})<SUB>5988</SUB>> ]
-"16404" [label = <(&lt;operator&gt;.lessThan,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           policy-&gt;defaultConfig.value(),\012                                                           constraints, &amp;timeline) &lt; 0)<SUB>5989</SUB>> ]
-"16425" [label = <(&lt;operator&gt;.fieldAccess,timeline.refreshRequired)<SUB>5994</SUB>> ]
-"16431" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>5998</SUB>> ]
-"16434" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>5998</SUB>> ]
-"16440" [label = <(getVsyncPeriod,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod())<SUB>5999</SUB>> ]
-"16457" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNonPrimaryDisplayConfigChanged)<SUB>6002</SUB>> ]
-"16461" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>6002</SUB>> ]
-"16467" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>6003</SUB>> ]
-"16484" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setOverridePolicy)<SUB>6013</SUB>> ]
-"16489" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setDisplayManagerPolicy)<SUB>6014</SUB>> ]
-"16492" [label = <(&lt;operator&gt;.indirection,*policy)<SUB>6014</SUB>> ]
-"16505" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs)<SUB>6018</SUB>> ]
-"16508" [label = <(FIELD_IDENTIFIER,CURRENT_POLICY_UNCHANGED,CURRENT_POLICY_UNCHANGED)<SUB>6018</SUB>> ]
-"16518" [label = <(FIELD_IDENTIFIER,getCurrentPolicy,getCurrentPolicy)<SUB>6021</SUB>> ]
-"16523" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>6025</SUB>> ]
-"16526" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6025</SUB>> ]
-"16530" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6025</SUB>> ]
-"16535" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6026</SUB>> ]
-"16540" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6026</SUB>> ]
-"16545" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6027</SUB>> ]
-"16552" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>6032</SUB>> ]
-"16560" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>6032</SUB>> ]
-"16568" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6034</SUB>> ]
-"16575" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6035</SUB>> ]
-"16584" [label = <(FIELD_IDENTIFIER,getPreferredConfigId,getPreferredConfigId)<SUB>6038</SUB>> ]
-"16591" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6040</SUB>> ]
-"16594" [label = <(&lt;operator&gt;.indirection,*configId)<SUB>6040</SUB>> ]
-"16597" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6042</SUB>> ]
-"16600" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>6042</SUB>> ]
-"16607" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6044</SUB>> ]
-"16611" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6044</SUB>> ]
-"16614" [label = <(getName,preferredRefreshRate.getName())<SUB>6044</SUB>> ]
-"16618" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>6044</SUB>> ]
-"16622" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6046</SUB>> ]
-"16628" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6048</SUB>> ]
-"16636" [label = <(&lt;operator&gt;.arrayInitializer,{preferredRefreshRate.getConfigId(), Scheduler::ConfigEvent::Changed})<SUB>6050</SUB>> ]
-"16648" [label = <(LOG_ALWAYS_FATAL,LOG_ALWAYS_FATAL(&quot;Desired config not allowed: %d&quot;,\012                         preferredRefreshRate.getConfigId().value()))<SUB>6052</SUB>> ]
-"16354" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>5972</SUB>> ]
-"16371" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>5976</SUB>> ]
-"16379" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>5981</SUB>> ]
-"16389" [label = <(FIELD_IDENTIFIER,desiredTimeNanos,desiredTimeNanos)<SUB>5985</SUB>> ]
-"16394" [label = <(FIELD_IDENTIFIER,seamlessRequired,seamlessRequired)<SUB>5986</SUB>> ]
-"16405" [label = <(setActiveConfigWithConstraints,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           policy-&gt;defaultConfig.value(),\012                                                           constraints, &amp;timeline))<SUB>5989</SUB>> ]
-"16422" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5992</SUB>> ]
-"16427" [label = <(FIELD_IDENTIFIER,refreshRequired,refreshRequired)<SUB>5994</SUB>> ]
-"16429" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>5995</SUB>> ]
-"16433" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>5998</SUB>> ]
-"16436" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>5998</SUB>> ]
-"16441" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod)<SUB>5999</SUB>> ]
-"16459" [label = <(FIELD_IDENTIFIER,onNonPrimaryDisplayConfigChanged,onNonPrimaryDisplayConfigChanged)<SUB>6002</SUB>> ]
-"16462" [label = <(getId,display-&gt;getId())<SUB>6002</SUB>> ]
-"16466" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6002</SUB>> ]
-"16469" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6003</SUB>> ]
-"16486" [label = <(FIELD_IDENTIFIER,setOverridePolicy,setOverridePolicy)<SUB>6013</SUB>> ]
-"16491" [label = <(FIELD_IDENTIFIER,setDisplayManagerPolicy,setDisplayManagerPolicy)<SUB>6014</SUB>> ]
-"16525" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6025</SUB>> ]
-"16553" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6032</SUB>> ]
-"16556" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>6032</SUB>> ]
-"16570" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6034</SUB>> ]
-"16593" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6040</SUB>> ]
-"16599" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6042</SUB>> ]
-"16602" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6042</SUB>> ]
-"16608" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6044</SUB>> ]
-"16615" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getName)<SUB>6044</SUB>> ]
-"16624" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6046</SUB>> ]
-"16629" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6048</SUB>> ]
-"16637" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6050</SUB>> ]
-"16641" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::Changed)<SUB>6050</SUB>> ]
-"16650" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6053</SUB>> ]
-"16356" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>5972</SUB>> ]
-"16381" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>5981</SUB>> ]
-"16406" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setActiveConfigWithConstraints)<SUB>5989</SUB>> ]
-"16409" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>5989</SUB>> ]
-"16411" [label = <(value,policy-&gt;defaultConfig.value())<SUB>5990</SUB>> ]
-"16418" [label = <(&lt;operator&gt;.addressOf,&amp;timeline)<SUB>5991</SUB>> ]
-"16442" [label = <(&lt;operator&gt;.indirectIndexAccess,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()])<SUB>5999</SUB>> ]
-"16455" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>5999</SUB>> ]
-"16463" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6002</SUB>> ]
-"16555" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6032</SUB>> ]
-"16557" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>6032</SUB>> ]
-"16610" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6044</SUB>> ]
-"16617" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>6044</SUB>> ]
-"16630" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6048</SUB>> ]
-"16634" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6048</SUB>> ]
-"16638" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6050</SUB>> ]
-"16642" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>6050</SUB>> ]
-"16645" [label = <(FIELD_IDENTIFIER,Changed,Changed)<SUB>6050</SUB>> ]
-"16651" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6053</SUB>> ]
-"16407" [label = <(getHwComposer,getHwComposer())<SUB>5989</SUB>> ]
-"16408" [label = <(FIELD_IDENTIFIER,setActiveConfigWithConstraints,setActiveConfigWithConstraints)<SUB>5989</SUB>> ]
-"16412" [label = <(&lt;operator&gt;.fieldAccess,policy-&gt;defaultConfig.value)<SUB>5990</SUB>> ]
-"16443" [label = <(getConfigs,getHwComposer()\012 .getConfigs(*displayId))<SUB>5999</SUB>> ]
-"16449" [label = <(value,policy-&gt;defaultConfig.value())<SUB>6000</SUB>> ]
-"16465" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6002</SUB>> ]
-"16559" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6032</SUB>> ]
-"16631" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6048</SUB>> ]
-"16640" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6050</SUB>> ]
-"16652" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6053</SUB>> ]
-"16656" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6053</SUB>> ]
-"16413" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>5990</SUB>> ]
-"16416" [label = <(FIELD_IDENTIFIER,value,value)<SUB>5990</SUB>> ]
-"16444" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .getConfigs)<SUB>5999</SUB>> ]
-"16447" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>6000</SUB>> ]
-"16450" [label = <(&lt;operator&gt;.fieldAccess,policy-&gt;defaultConfig.value)<SUB>6000</SUB>> ]
-"16633" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6048</SUB>> ]
-"16653" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6053</SUB>> ]
-"16415" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>5990</SUB>> ]
-"16445" [label = <(getHwComposer,getHwComposer())<SUB>5999</SUB>> ]
-"16446" [label = <(FIELD_IDENTIFIER,getConfigs,getConfigs)<SUB>5999</SUB>> ]
-"16451" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>6000</SUB>> ]
-"16454" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6000</SUB>> ]
-"16655" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6053</SUB>> ]
-"16453" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6000</SUB>> ]
-"16342" [label = <(METHOD,setDesiredDisplayConfigSpecsInternal)<SUB>5967</SUB>> ]
-"16659" [label = <(METHOD_RETURN,status_t)<SUB>5967</SUB>> ]
-  "16348" -> "16356" 
-  "16350" -> "16361" 
-  "16359" -> "16371" 
-  "16479" -> "16495" 
-  "16513" -> "16525" 
-  "16519" -> "16555" 
-  "16548" -> "16564" 
-  "16561" -> "16577" 
-  "16577" -> "16584" 
-  "16579" -> "16593" 
-  "16579" -> "16599" 
-  "16586" -> "16610" 
-  "16603" -> "16624" 
-  "16657" -> "16659" 
-  "16351" -> "16350" 
-  "16360" -> "16359" 
-  "16367" -> "16373" 
-  "16367" -> "16476" 
-  "16367" -> "16486" 
-  "16367" -> "16491" 
-  "16481" -> "16479" 
-  "16495" -> "16499" 
-  "16495" -> "16505" 
-  "16502" -> "16510" 
-  "16502" -> "16518" 
-  "16515" -> "16513" 
-  "16521" -> "16530" 
-  "16527" -> "16535" 
-  "16532" -> "16540" 
-  "16537" -> "16545" 
-  "16542" -> "16519" 
-  "16550" -> "16548" 
-  "16562" -> "16570" 
-  "16566" -> "16575" 
-  "16572" -> "16561" 
-  "16581" -> "16579" 
-  "16588" -> "16586" 
-  "16605" -> "16617" 
-  "16612" -> "16603" 
-  "16620" -> "16633" 
-  "16620" -> "16655" 
-  "16352" -> "16351" 
-  "16361" -> "16360" 
-  "16361" -> "16363" 
-  "16363" -> "16360" 
+"16364" [label = <(lock,lock(mStateLock))<SUB>5969</SUB>> ]
+"16366" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display-&gt;isPrimary() &amp;&amp; overridePolicy,\012 &quot;Can only set override policy on the primary display&quot;))<SUB>5971</SUB>> ]
+"16375" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!policy &amp;&amp; !overridePolicy, &quot;Can only clear the override policy&quot;))<SUB>5973</SUB>> ]
+"16495" [label = <(&lt;operator&gt;.assignment,setPolicyResult = overridePolicy\012 ? mRefreshRateConfigs-&gt;setOverridePolicy(policy)\012 : mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6011</SUB>> ]
+"16529" [label = <(&lt;operator&gt;.assignment,currentPolicy = mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>6020</SUB>> ]
+"16535" [label = <(ALOGV,ALOGV(&quot;Setting desired display config specs: defaultConfig: %d primaryRange: [%.0f %.0f]&quot;\012 &quot; expandedRange: [%.0f %.0f]&quot;,\012          currentPolicy.defaultConfig.value(), currentPolicy.primaryRange.min,\012          currentPolicy.primaryRange.max, currentPolicy.appRequestRange.min,\012          currentPolicy.appRequestRange.max))<SUB>6022</SUB>> ]
+"16564" [label = <(&lt;operator&gt;.assignment,vsyncPeriod =\012            mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod())<SUB>6030</SUB>> ]
+"16577" [label = <(onPrimaryDisplayConfigChanged,mScheduler-&gt;onPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                              display-&gt;getActiveConfig(), vsyncPeriod))<SUB>6033</SUB>> ]
+"16593" [label = <(toggleKernelIdleTimer,toggleKernelIdleTimer())<SUB>6035</SUB>> ]
+"16595" [label = <(&lt;operator&gt;.assignment,configId = mScheduler-&gt;getPreferredConfigId())<SUB>6037</SUB>> ]
+"16602" [label = <(&lt;operator&gt;.assignment,&amp; preferredRefreshRate = configId\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId)\012 // NOTE: Choose the default config ID, if Scheduler doesn't have one in mind.\012 : mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6038</SUB>> ]
+"16619" [label = <(ALOGV,ALOGV(&quot;trying to switch to Scheduler preferred config %d (%s)&quot;,\012          preferredRefreshRate.getConfigId().value(), preferredRefreshRate.getName().c_str()))<SUB>6042</SUB>> ]
+"16673" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6055</SUB>> ]
+"16367" [label = <(&lt;operator&gt;.logicalAnd,!display-&gt;isPrimary() &amp;&amp; overridePolicy)<SUB>5971</SUB>> ]
+"16376" [label = <(&lt;operator&gt;.logicalAnd,!policy &amp;&amp; !overridePolicy)<SUB>5973</SUB>> ]
+"16383" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPrimary())<SUB>5975</SUB>> ]
+"16497" [label = <(&lt;operator&gt;.conditional,overridePolicy\012 ? mRefreshRateConfigs-&gt;setOverridePolicy(policy)\012 : mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6011</SUB>> ]
+"16511" [label = <(&lt;operator&gt;.lessThan,setPolicyResult &lt; 0)<SUB>6014</SUB>> ]
+"16518" [label = <(&lt;operator&gt;.equals,setPolicyResult == scheduler::RefreshRateConfigs::CURRENT_POLICY_UNCHANGED)<SUB>6017</SUB>> ]
+"16531" [label = <(getCurrentPolicy,mRefreshRateConfigs-&gt;getCurrentPolicy())<SUB>6020</SUB>> ]
+"16537" [label = <(value,currentPolicy.defaultConfig.value())<SUB>6024</SUB>> ]
+"16543" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.min)<SUB>6024</SUB>> ]
+"16548" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange.max)<SUB>6025</SUB>> ]
+"16553" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.min)<SUB>6025</SUB>> ]
+"16558" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange.max)<SUB>6026</SUB>> ]
+"16566" [label = <(getVsyncPeriod,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod())<SUB>6031</SUB>> ]
+"16578" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onPrimaryDisplayConfigChanged)<SUB>6033</SUB>> ]
+"16582" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>6033</SUB>> ]
+"16588" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>6034</SUB>> ]
+"16597" [label = <(getPreferredConfigId,mScheduler-&gt;getPreferredConfigId())<SUB>6037</SUB>> ]
+"16604" [label = <(&lt;operator&gt;.conditional,configId\012 ? mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId)\012 // NOTE: Choose the default config ID, if Scheduler doesn't have one in mind.\012 : mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6038</SUB>> ]
+"16621" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6043</SUB>> ]
+"16628" [label = <(c_str,preferredRefreshRate.getName().c_str())<SUB>6043</SUB>> ]
+"16636" [label = <(isDisplayConfigAllowed,isDisplayConfigAllowed(preferredRefreshRate.getConfigId()))<SUB>6045</SUB>> ]
+"16368" [label = <(&lt;operator&gt;.logicalNot,!display-&gt;isPrimary())<SUB>5971</SUB>> ]
+"16377" [label = <(&lt;operator&gt;.logicalNot,!policy)<SUB>5973</SUB>> ]
+"16379" [label = <(&lt;operator&gt;.logicalNot,!overridePolicy)<SUB>5973</SUB>> ]
+"16384" [label = <(isPrimary,display-&gt;isPrimary())<SUB>5975</SUB>> ]
+"16389" [label = <(ALOGV,ALOGV(&quot;setAllowedDisplayConfigsInternal for non-primary display&quot;))<SUB>5979</SUB>> ]
+"16392" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>5980</SUB>> ]
+"16398" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!displayId))<SUB>5981</SUB>> ]
+"16402" [label = <(&lt;operator&gt;.assignment,constraints.desiredTimeNanos = systemTime())<SUB>5984</SUB>> ]
+"16407" [label = <(&lt;operator&gt;.assignment,constraints.seamlessRequired = false)<SUB>5985</SUB>> ]
+"16413" [label = <(&lt;operator&gt;.assignment,timeline = {0, 0, 0})<SUB>5987</SUB>> ]
+"16446" [label = <(setActiveConfig,display-&gt;setActiveConfig(policy-&gt;defaultConfig))<SUB>5997</SUB>> ]
+"16454" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod())<SUB>5998</SUB>> ]
+"16472" [label = <(onNonPrimaryDisplayConfigChanged,mScheduler-&gt;onNonPrimaryDisplayConfigChanged(mAppConnectionHandle, display-&gt;getId()-&gt;value,\012                                                     policy-&gt;defaultConfig, vsyncPeriod))<SUB>6001</SUB>> ]
+"16487" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6003</SUB>> ]
+"16492" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6008</SUB>> ]
+"16499" [label = <(setOverridePolicy,mRefreshRateConfigs-&gt;setOverridePolicy(policy))<SUB>6012</SUB>> ]
+"16504" [label = <(setDisplayManagerPolicy,mRefreshRateConfigs-&gt;setDisplayManagerPolicy(*policy))<SUB>6013</SUB>> ]
+"16515" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6015</SUB>> ]
+"16520" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs::CURRENT_POLICY_UNCHANGED)<SUB>6017</SUB>> ]
+"16526" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6018</SUB>> ]
+"16532" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getCurrentPolicy)<SUB>6020</SUB>> ]
+"16538" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig.value)<SUB>6024</SUB>> ]
+"16544" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>6024</SUB>> ]
+"16547" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6024</SUB>> ]
+"16549" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.primaryRange)<SUB>6025</SUB>> ]
+"16552" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6025</SUB>> ]
+"16554" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>6025</SUB>> ]
+"16557" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6025</SUB>> ]
+"16559" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.appRequestRange)<SUB>6026</SUB>> ]
+"16562" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6026</SUB>> ]
+"16567" [label = <(&lt;operator&gt;.fieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig())\012 .getVsyncPeriod)<SUB>6031</SUB>> ]
+"16580" [label = <(FIELD_IDENTIFIER,onPrimaryDisplayConfigChanged,onPrimaryDisplayConfigChanged)<SUB>6033</SUB>> ]
+"16583" [label = <(getId,display-&gt;getId())<SUB>6033</SUB>> ]
+"16587" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6033</SUB>> ]
+"16589" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>6034</SUB>> ]
+"16598" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getPreferredConfigId)<SUB>6037</SUB>> ]
+"16606" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(*configId))<SUB>6039</SUB>> ]
+"16612" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(currentPolicy.defaultConfig))<SUB>6041</SUB>> ]
+"16622" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6043</SUB>> ]
+"16629" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getName().c_str)<SUB>6043</SUB>> ]
+"16637" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6045</SUB>> ]
+"16642" [label = <(ALOGV,ALOGV(&quot;switching to Scheduler preferred config %d&quot;,\012              preferredRefreshRate.getConfigId().value()))<SUB>6046</SUB>> ]
+"16651" [label = <(setDesiredActiveConfig,setDesiredActiveConfig(\012 {preferredRefreshRate.getConfigId(), Scheduler::ConfigEvent::Changed}))<SUB>6048</SUB>> ]
+"16369" [label = <(isPrimary,display-&gt;isPrimary())<SUB>5971</SUB>> ]
+"16385" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>5975</SUB>> ]
+"16394" [label = <(getId,display-&gt;getId())<SUB>5980</SUB>> ]
+"16399" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>5981</SUB>> ]
+"16403" [label = <(&lt;operator&gt;.fieldAccess,constraints.desiredTimeNanos)<SUB>5984</SUB>> ]
+"16406" [label = <(systemTime,systemTime())<SUB>5984</SUB>> ]
+"16408" [label = <(&lt;operator&gt;.fieldAccess,constraints.seamlessRequired)<SUB>5985</SUB>> ]
+"16415" [label = <(&lt;operator&gt;.arrayInitializer,{0, 0, 0})<SUB>5987</SUB>> ]
+"16420" [label = <(&lt;operator&gt;.lessThan,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           policy-&gt;defaultConfig.value(),\012                                                           constraints, &amp;timeline) &lt; 0)<SUB>5988</SUB>> ]
+"16441" [label = <(&lt;operator&gt;.fieldAccess,timeline.refreshRequired)<SUB>5993</SUB>> ]
+"16447" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;setActiveConfig)<SUB>5997</SUB>> ]
+"16450" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>5997</SUB>> ]
+"16456" [label = <(getVsyncPeriod,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod())<SUB>5998</SUB>> ]
+"16473" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;onNonPrimaryDisplayConfigChanged)<SUB>6001</SUB>> ]
+"16477" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId()-&gt;value)<SUB>6001</SUB>> ]
+"16483" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>6002</SUB>> ]
+"16500" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setOverridePolicy)<SUB>6012</SUB>> ]
+"16505" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;setDisplayManagerPolicy)<SUB>6013</SUB>> ]
+"16508" [label = <(&lt;operator&gt;.indirection,*policy)<SUB>6013</SUB>> ]
+"16521" [label = <(&lt;operator&gt;.fieldAccess,scheduler::RefreshRateConfigs)<SUB>6017</SUB>> ]
+"16524" [label = <(FIELD_IDENTIFIER,CURRENT_POLICY_UNCHANGED,CURRENT_POLICY_UNCHANGED)<SUB>6017</SUB>> ]
+"16534" [label = <(FIELD_IDENTIFIER,getCurrentPolicy,getCurrentPolicy)<SUB>6020</SUB>> ]
+"16539" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>6024</SUB>> ]
+"16542" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6024</SUB>> ]
+"16546" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6024</SUB>> ]
+"16551" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6025</SUB>> ]
+"16556" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6025</SUB>> ]
+"16561" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6026</SUB>> ]
+"16568" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(display-&gt;getActiveConfig()))<SUB>6031</SUB>> ]
+"16576" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>6031</SUB>> ]
+"16584" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6033</SUB>> ]
+"16591" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6034</SUB>> ]
+"16600" [label = <(FIELD_IDENTIFIER,getPreferredConfigId,getPreferredConfigId)<SUB>6037</SUB>> ]
+"16607" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6039</SUB>> ]
+"16610" [label = <(&lt;operator&gt;.indirection,*configId)<SUB>6039</SUB>> ]
+"16613" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6041</SUB>> ]
+"16616" [label = <(&lt;operator&gt;.fieldAccess,currentPolicy.defaultConfig)<SUB>6041</SUB>> ]
+"16623" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6043</SUB>> ]
+"16627" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6043</SUB>> ]
+"16630" [label = <(getName,preferredRefreshRate.getName())<SUB>6043</SUB>> ]
+"16634" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>6043</SUB>> ]
+"16638" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6045</SUB>> ]
+"16644" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6047</SUB>> ]
+"16652" [label = <(&lt;operator&gt;.arrayInitializer,{preferredRefreshRate.getConfigId(), Scheduler::ConfigEvent::Changed})<SUB>6049</SUB>> ]
+"16664" [label = <(LOG_ALWAYS_FATAL,LOG_ALWAYS_FATAL(&quot;Desired config not allowed: %d&quot;,\012                         preferredRefreshRate.getConfigId().value()))<SUB>6051</SUB>> ]
+"16370" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>5971</SUB>> ]
+"16387" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>5975</SUB>> ]
+"16395" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>5980</SUB>> ]
+"16405" [label = <(FIELD_IDENTIFIER,desiredTimeNanos,desiredTimeNanos)<SUB>5984</SUB>> ]
+"16410" [label = <(FIELD_IDENTIFIER,seamlessRequired,seamlessRequired)<SUB>5985</SUB>> ]
+"16421" [label = <(setActiveConfigWithConstraints,getHwComposer().setActiveConfigWithConstraints(*displayId,\012                                                           policy-&gt;defaultConfig.value(),\012                                                           constraints, &amp;timeline))<SUB>5988</SUB>> ]
+"16438" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>5991</SUB>> ]
+"16443" [label = <(FIELD_IDENTIFIER,refreshRequired,refreshRequired)<SUB>5993</SUB>> ]
+"16445" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>5994</SUB>> ]
+"16449" [label = <(FIELD_IDENTIFIER,setActiveConfig,setActiveConfig)<SUB>5997</SUB>> ]
+"16452" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>5997</SUB>> ]
+"16457" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()]\012 -&gt;getVsyncPeriod)<SUB>5998</SUB>> ]
+"16475" [label = <(FIELD_IDENTIFIER,onNonPrimaryDisplayConfigChanged,onNonPrimaryDisplayConfigChanged)<SUB>6001</SUB>> ]
+"16478" [label = <(getId,display-&gt;getId())<SUB>6001</SUB>> ]
+"16482" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6001</SUB>> ]
+"16485" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6002</SUB>> ]
+"16502" [label = <(FIELD_IDENTIFIER,setOverridePolicy,setOverridePolicy)<SUB>6012</SUB>> ]
+"16507" [label = <(FIELD_IDENTIFIER,setDisplayManagerPolicy,setDisplayManagerPolicy)<SUB>6013</SUB>> ]
+"16541" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6024</SUB>> ]
+"16569" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>6031</SUB>> ]
+"16572" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>6031</SUB>> ]
+"16586" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6033</SUB>> ]
+"16609" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6039</SUB>> ]
+"16615" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6041</SUB>> ]
+"16618" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6041</SUB>> ]
+"16624" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6043</SUB>> ]
+"16631" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getName)<SUB>6043</SUB>> ]
+"16640" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6045</SUB>> ]
+"16645" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6047</SUB>> ]
+"16653" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6049</SUB>> ]
+"16657" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent::Changed)<SUB>6049</SUB>> ]
+"16666" [label = <(value,preferredRefreshRate.getConfigId().value())<SUB>6052</SUB>> ]
+"16372" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>5971</SUB>> ]
+"16397" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>5980</SUB>> ]
+"16422" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().setActiveConfigWithConstraints)<SUB>5988</SUB>> ]
+"16425" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>5988</SUB>> ]
+"16427" [label = <(value,policy-&gt;defaultConfig.value())<SUB>5989</SUB>> ]
+"16434" [label = <(&lt;operator&gt;.addressOf,&amp;timeline)<SUB>5990</SUB>> ]
+"16458" [label = <(&lt;operator&gt;.indirectIndexAccess,getHwComposer()\012 .getConfigs(*displayId)[policy-&gt;defaultConfig.value()])<SUB>5998</SUB>> ]
+"16471" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>5998</SUB>> ]
+"16479" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6001</SUB>> ]
+"16571" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>6031</SUB>> ]
+"16573" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>6031</SUB>> ]
+"16626" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6043</SUB>> ]
+"16633" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>6043</SUB>> ]
+"16646" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6047</SUB>> ]
+"16650" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6047</SUB>> ]
+"16654" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6049</SUB>> ]
+"16658" [label = <(&lt;operator&gt;.fieldAccess,Scheduler::ConfigEvent)<SUB>6049</SUB>> ]
+"16661" [label = <(FIELD_IDENTIFIER,Changed,Changed)<SUB>6049</SUB>> ]
+"16667" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId().value)<SUB>6052</SUB>> ]
+"16423" [label = <(getHwComposer,getHwComposer())<SUB>5988</SUB>> ]
+"16424" [label = <(FIELD_IDENTIFIER,setActiveConfigWithConstraints,setActiveConfigWithConstraints)<SUB>5988</SUB>> ]
+"16428" [label = <(&lt;operator&gt;.fieldAccess,policy-&gt;defaultConfig.value)<SUB>5989</SUB>> ]
+"16459" [label = <(getConfigs,getHwComposer()\012 .getConfigs(*displayId))<SUB>5998</SUB>> ]
+"16465" [label = <(value,policy-&gt;defaultConfig.value())<SUB>5999</SUB>> ]
+"16481" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6001</SUB>> ]
+"16575" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6031</SUB>> ]
+"16647" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6047</SUB>> ]
+"16656" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6049</SUB>> ]
+"16668" [label = <(getConfigId,preferredRefreshRate.getConfigId())<SUB>6052</SUB>> ]
+"16672" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6052</SUB>> ]
+"16429" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>5989</SUB>> ]
+"16432" [label = <(FIELD_IDENTIFIER,value,value)<SUB>5989</SUB>> ]
+"16460" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .getConfigs)<SUB>5998</SUB>> ]
+"16463" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>5999</SUB>> ]
+"16466" [label = <(&lt;operator&gt;.fieldAccess,policy-&gt;defaultConfig.value)<SUB>5999</SUB>> ]
+"16649" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6047</SUB>> ]
+"16669" [label = <(&lt;operator&gt;.fieldAccess,preferredRefreshRate.getConfigId)<SUB>6052</SUB>> ]
+"16431" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>5989</SUB>> ]
+"16461" [label = <(getHwComposer,getHwComposer())<SUB>5998</SUB>> ]
+"16462" [label = <(FIELD_IDENTIFIER,getConfigs,getConfigs)<SUB>5998</SUB>> ]
+"16467" [label = <(&lt;operator&gt;.indirectFieldAccess,policy-&gt;defaultConfig)<SUB>5999</SUB>> ]
+"16470" [label = <(FIELD_IDENTIFIER,value,value)<SUB>5999</SUB>> ]
+"16671" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>6052</SUB>> ]
+"16469" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>5999</SUB>> ]
+"16358" [label = <(METHOD,setDesiredDisplayConfigSpecsInternal)<SUB>5966</SUB>> ]
+"16675" [label = <(METHOD_RETURN,status_t)<SUB>5966</SUB>> ]
+  "16364" -> "16372" 
+  "16366" -> "16377" 
+  "16375" -> "16387" 
+  "16495" -> "16511" 
+  "16529" -> "16541" 
+  "16535" -> "16571" 
+  "16564" -> "16580" 
+  "16577" -> "16593" 
+  "16593" -> "16600" 
+  "16595" -> "16609" 
+  "16595" -> "16615" 
+  "16602" -> "16626" 
+  "16619" -> "16640" 
+  "16673" -> "16675" 
+  "16367" -> "16366" 
+  "16376" -> "16375" 
+  "16383" -> "16389" 
+  "16383" -> "16492" 
+  "16383" -> "16502" 
+  "16383" -> "16507" 
+  "16497" -> "16495" 
+  "16511" -> "16515" 
+  "16511" -> "16521" 
+  "16518" -> "16526" 
+  "16518" -> "16534" 
+  "16531" -> "16529" 
+  "16537" -> "16546" 
+  "16543" -> "16551" 
+  "16548" -> "16556" 
+  "16553" -> "16561" 
+  "16558" -> "16535" 
+  "16566" -> "16564" 
+  "16578" -> "16586" 
+  "16582" -> "16591" 
+  "16588" -> "16577" 
+  "16597" -> "16595" 
+  "16604" -> "16602" 
+  "16621" -> "16633" 
+  "16628" -> "16619" 
+  "16636" -> "16649" 
+  "16636" -> "16671" 
   "16368" -> "16367" 
-  "16373" -> "16381" 
-  "16376" -> "16383" 
-  "16382" -> "16389" 
-  "16386" -> "16394" 
-  "16391" -> "16399" 
-  "16397" -> "16407" 
-  "16430" -> "16445" 
-  "16438" -> "16459" 
-  "16456" -> "16471" 
-  "16471" -> "16659" 
-  "16476" -> "16659" 
-  "16483" -> "16481" 
-  "16488" -> "16481" 
-  "16499" -> "16659" 
-  "16504" -> "16502" 
-  "16510" -> "16659" 
-  "16516" -> "16515" 
-  "16522" -> "16521" 
-  "16528" -> "16531" 
-  "16531" -> "16527" 
-  "16533" -> "16536" 
-  "16536" -> "16532" 
-  "16538" -> "16541" 
-  "16541" -> "16537" 
-  "16543" -> "16546" 
-  "16546" -> "16542" 
-  "16551" -> "16550" 
-  "16564" -> "16562" 
-  "16567" -> "16571" 
-  "16571" -> "16566" 
-  "16573" -> "16572" 
-  "16582" -> "16581" 
-  "16590" -> "16588" 
-  "16596" -> "16588" 
-  "16606" -> "16605" 
-  "16613" -> "16612" 
-  "16621" -> "16620" 
-  "16626" -> "16640" 
-  "16635" -> "16657" 
-  "16353" -> "16352" 
+  "16377" -> "16376" 
+  "16377" -> "16379" 
+  "16379" -> "16376" 
+  "16384" -> "16383" 
+  "16389" -> "16397" 
+  "16392" -> "16399" 
+  "16398" -> "16405" 
+  "16402" -> "16410" 
+  "16407" -> "16415" 
+  "16413" -> "16423" 
+  "16446" -> "16461" 
+  "16454" -> "16475" 
+  "16472" -> "16487" 
+  "16487" -> "16675" 
+  "16492" -> "16675" 
+  "16499" -> "16497" 
+  "16504" -> "16497" 
+  "16515" -> "16675" 
+  "16520" -> "16518" 
+  "16526" -> "16675" 
+  "16532" -> "16531" 
+  "16538" -> "16537" 
+  "16544" -> "16547" 
+  "16547" -> "16543" 
+  "16549" -> "16552" 
+  "16552" -> "16548" 
+  "16554" -> "16557" 
+  "16557" -> "16553" 
+  "16559" -> "16562" 
+  "16562" -> "16558" 
+  "16567" -> "16566" 
+  "16580" -> "16578" 
+  "16583" -> "16587" 
+  "16587" -> "16582" 
+  "16589" -> "16588" 
+  "16598" -> "16597" 
+  "16606" -> "16604" 
+  "16612" -> "16604" 
+  "16622" -> "16621" 
+  "16629" -> "16628" 
+  "16637" -> "16636" 
+  "16642" -> "16656" 
+  "16651" -> "16673" 
   "16369" -> "16368" 
-  "16378" -> "16376" 
-  "16383" -> "16382" 
-  "16387" -> "16390" 
-  "16390" -> "16386" 
-  "16392" -> "16391" 
-  "16399" -> "16397" 
-  "16404" -> "16422" 
-  "16404" -> "16427" 
-  "16425" -> "16429" 
-  "16425" -> "16433" 
-  "16431" -> "16436" 
-  "16434" -> "16430" 
-  "16440" -> "16438" 
-  "16457" -> "16465" 
-  "16461" -> "16469" 
-  "16467" -> "16456" 
-  "16484" -> "16483" 
-  "16489" -> "16492" 
-  "16492" -> "16488" 
+  "16385" -> "16384" 
+  "16394" -> "16392" 
+  "16399" -> "16398" 
+  "16403" -> "16406" 
+  "16406" -> "16402" 
+  "16408" -> "16407" 
+  "16415" -> "16413" 
+  "16420" -> "16438" 
+  "16420" -> "16443" 
+  "16441" -> "16445" 
+  "16441" -> "16449" 
+  "16447" -> "16452" 
+  "16450" -> "16446" 
+  "16456" -> "16454" 
+  "16473" -> "16481" 
+  "16477" -> "16485" 
+  "16483" -> "16472" 
+  "16500" -> "16499" 
   "16505" -> "16508" 
   "16508" -> "16504" 
-  "16518" -> "16516" 
-  "16523" -> "16526" 
-  "16526" -> "16522" 
-  "16530" -> "16528" 
-  "16535" -> "16533" 
-  "16540" -> "16538" 
-  "16545" -> "16543" 
-  "16552" -> "16560" 
-  "16560" -> "16551" 
-  "16568" -> "16567" 
-  "16575" -> "16573" 
-  "16584" -> "16582" 
-  "16591" -> "16594" 
-  "16594" -> "16590" 
-  "16597" -> "16602" 
-  "16600" -> "16596" 
-  "16607" -> "16611" 
-  "16611" -> "16606" 
-  "16614" -> "16618" 
-  "16618" -> "16613" 
-  "16622" -> "16621" 
-  "16628" -> "16626" 
-  "16636" -> "16635" 
-  "16648" -> "16657" 
-  "16354" -> "16353" 
-  "16371" -> "16369" 
-  "16379" -> "16378" 
-  "16389" -> "16387" 
-  "16394" -> "16392" 
-  "16405" -> "16404" 
-  "16422" -> "16659" 
-  "16427" -> "16425" 
-  "16429" -> "16433" 
-  "16433" -> "16431" 
-  "16436" -> "16434" 
-  "16441" -> "16440" 
-  "16459" -> "16457" 
-  "16462" -> "16466" 
-  "16466" -> "16461" 
-  "16469" -> "16467" 
-  "16486" -> "16484" 
-  "16491" -> "16489" 
-  "16525" -> "16523" 
-  "16553" -> "16559" 
-  "16556" -> "16552" 
-  "16570" -> "16568" 
-  "16593" -> "16591" 
-  "16599" -> "16597" 
-  "16602" -> "16600" 
-  "16608" -> "16607" 
-  "16615" -> "16614" 
-  "16624" -> "16622" 
-  "16629" -> "16628" 
-  "16637" -> "16642" 
-  "16641" -> "16636" 
-  "16650" -> "16648" 
-  "16356" -> "16354" 
-  "16381" -> "16379" 
-  "16406" -> "16409" 
-  "16409" -> "16415" 
-  "16411" -> "16418" 
-  "16418" -> "16405" 
-  "16442" -> "16455" 
-  "16455" -> "16441" 
-  "16463" -> "16462" 
-  "16555" -> "16553" 
-  "16557" -> "16556" 
-  "16610" -> "16608" 
-  "16617" -> "16615" 
+  "16521" -> "16524" 
+  "16524" -> "16520" 
+  "16534" -> "16532" 
+  "16539" -> "16542" 
+  "16542" -> "16538" 
+  "16546" -> "16544" 
+  "16551" -> "16549" 
+  "16556" -> "16554" 
+  "16561" -> "16559" 
+  "16568" -> "16576" 
+  "16576" -> "16567" 
+  "16584" -> "16583" 
+  "16591" -> "16589" 
+  "16600" -> "16598" 
+  "16607" -> "16610" 
+  "16610" -> "16606" 
+  "16613" -> "16618" 
+  "16616" -> "16612" 
+  "16623" -> "16627" 
+  "16627" -> "16622" 
   "16630" -> "16634" 
   "16634" -> "16629" 
   "16638" -> "16637" 
-  "16642" -> "16645" 
-  "16645" -> "16641" 
-  "16651" -> "16650" 
-  "16407" -> "16408" 
-  "16408" -> "16406" 
-  "16412" -> "16411" 
-  "16443" -> "16453" 
-  "16449" -> "16442" 
-  "16465" -> "16463" 
-  "16559" -> "16557" 
+  "16644" -> "16642" 
+  "16652" -> "16651" 
+  "16664" -> "16673" 
+  "16370" -> "16369" 
+  "16387" -> "16385" 
+  "16395" -> "16394" 
+  "16405" -> "16403" 
+  "16410" -> "16408" 
+  "16421" -> "16420" 
+  "16438" -> "16675" 
+  "16443" -> "16441" 
+  "16445" -> "16449" 
+  "16449" -> "16447" 
+  "16452" -> "16450" 
+  "16457" -> "16456" 
+  "16475" -> "16473" 
+  "16478" -> "16482" 
+  "16482" -> "16477" 
+  "16485" -> "16483" 
+  "16502" -> "16500" 
+  "16507" -> "16505" 
+  "16541" -> "16539" 
+  "16569" -> "16575" 
+  "16572" -> "16568" 
+  "16586" -> "16584" 
+  "16609" -> "16607" 
+  "16615" -> "16613" 
+  "16618" -> "16616" 
+  "16624" -> "16623" 
   "16631" -> "16630" 
   "16640" -> "16638" 
-  "16652" -> "16656" 
-  "16656" -> "16651" 
-  "16413" -> "16416" 
-  "16416" -> "16412" 
-  "16444" -> "16447" 
-  "16447" -> "16443" 
-  "16450" -> "16449" 
+  "16645" -> "16644" 
+  "16653" -> "16658" 
+  "16657" -> "16652" 
+  "16666" -> "16664" 
+  "16372" -> "16370" 
+  "16397" -> "16395" 
+  "16422" -> "16425" 
+  "16425" -> "16431" 
+  "16427" -> "16434" 
+  "16434" -> "16421" 
+  "16458" -> "16471" 
+  "16471" -> "16457" 
+  "16479" -> "16478" 
+  "16571" -> "16569" 
+  "16573" -> "16572" 
+  "16626" -> "16624" 
   "16633" -> "16631" 
-  "16653" -> "16652" 
-  "16415" -> "16413" 
-  "16445" -> "16446" 
-  "16446" -> "16444" 
-  "16451" -> "16454" 
-  "16454" -> "16450" 
-  "16655" -> "16653" 
-  "16453" -> "16451" 
-  "16342" -> "16348" 
+  "16646" -> "16650" 
+  "16650" -> "16645" 
+  "16654" -> "16653" 
+  "16658" -> "16661" 
+  "16661" -> "16657" 
+  "16667" -> "16666" 
+  "16423" -> "16424" 
+  "16424" -> "16422" 
+  "16428" -> "16427" 
+  "16459" -> "16469" 
+  "16465" -> "16458" 
+  "16481" -> "16479" 
+  "16575" -> "16573" 
+  "16647" -> "16646" 
+  "16656" -> "16654" 
+  "16668" -> "16672" 
+  "16672" -> "16667" 
+  "16429" -> "16432" 
+  "16432" -> "16428" 
+  "16460" -> "16463" 
+  "16463" -> "16459" 
+  "16466" -> "16465" 
+  "16649" -> "16647" 
+  "16669" -> "16668" 
+  "16431" -> "16429" 
+  "16461" -> "16462" 
+  "16462" -> "16460" 
+  "16467" -> "16470" 
+  "16470" -> "16466" 
+  "16671" -> "16669" 
+  "16469" -> "16467" 
+  "16358" -> "16364" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/261-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/261-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/261-cfg.dot	2023-06-07 19:33:00.497398973 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/261-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,26 +1,26 @@
 digraph "setDesiredDisplayConfigSpecs" {  
-"16669" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>6065</SUB>> ]
-"16677" [label = <(&lt;operator&gt;.assignment,future = schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6071</SUB>> ]
-"16681" [label = <(RETURN,return future.get();,return future.get();)<SUB>6091</SUB>> ]
-"16671" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>6067</SUB>> ]
-"16679" [label = <(schedule,schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6071</SUB>> ]
-"16682" [label = <(get,future.get())<SUB>6091</SUB>> ]
-"16674" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6068</SUB>> ]
-"16680" [label = <(METHOD_REF,status_t anonymous_lambda_59 (),schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6071</SUB>> ]
-"16683" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>6091</SUB>> ]
-"16685" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6091</SUB>> ]
-"16661" [label = <(METHOD,setDesiredDisplayConfigSpecs)<SUB>6059</SUB>> ]
-"16686" [label = <(METHOD_RETURN,status_t)<SUB>6059</SUB>> ]
-  "16669" -> "16671" 
+"16685" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>6064</SUB>> ]
+"16693" [label = <(&lt;operator&gt;.assignment,future = schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6070</SUB>> ]
+"16697" [label = <(RETURN,return future.get();,return future.get();)<SUB>6090</SUB>> ]
+"16687" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>6066</SUB>> ]
+"16695" [label = <(schedule,schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6070</SUB>> ]
+"16698" [label = <(get,future.get())<SUB>6090</SUB>> ]
+"16690" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6067</SUB>> ]
+"16696" [label = <(METHOD_REF,status_t anonymous_lambda_59 (),schedule([=]() -&gt; status_t {\012 const auto display = ON_MAIN_THREAD(getDisplayDeviceLocked(displayToken));\012 if (!display) {\012            ALOGE(&quot;Attempt to set desired display configs for invalid display token %p&quot;,\012                  displayToken.get());\012 return NAME_NOT_FOUND;\012 } else if (display-&gt;isVirtual()) {\012            ALOGW(&quot;Attempt to set desired display configs for virtual display&quot;);\012 return INVALID_OPERATION;\012 } else {\012 using Policy = scheduler::RefreshRateConfigs::Policy;\012 const Policy policy{HwcConfigIndexType(defaultConfig),\012 {primaryRefreshRateMin, primaryRefreshRateMax},\012 {appRequestRefreshRateMin, appRequestRefreshRateMax}};\012 constexpr bool kOverridePolicy = false;\012\012 return setDesiredDisplayConfigSpecsInternal(display, policy, kOverridePolicy);\012 }\012 }))<SUB>6070</SUB>> ]
+"16699" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>6090</SUB>> ]
+"16701" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6090</SUB>> ]
+"16677" [label = <(METHOD,setDesiredDisplayConfigSpecs)<SUB>6058</SUB>> ]
+"16702" [label = <(METHOD_RETURN,status_t)<SUB>6058</SUB>> ]
+  "16685" -> "16687" 
+  "16693" -> "16701" 
+  "16697" -> "16702" 
+  "16687" -> "16690" 
+  "16687" -> "16696" 
+  "16695" -> "16693" 
+  "16698" -> "16697" 
+  "16690" -> "16702" 
+  "16696" -> "16695" 
+  "16699" -> "16698" 
+  "16701" -> "16699" 
   "16677" -> "16685" 
-  "16681" -> "16686" 
-  "16671" -> "16674" 
-  "16671" -> "16680" 
-  "16679" -> "16677" 
-  "16682" -> "16681" 
-  "16674" -> "16686" 
-  "16680" -> "16679" 
-  "16683" -> "16682" 
-  "16685" -> "16683" 
-  "16661" -> "16669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/262-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/262-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/262-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/262-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,206 +1,206 @@
 digraph "getDesiredDisplayConfigSpecs" {  
-"16696" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>6100</SUB>> ]
-"16719" [label = <(lock,lock(mStateLock))<SUB>6107</SUB>> ]
-"16722" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>6108</SUB>> ]
-"16698" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax || !outAppRequestRefreshRateMin || !outAppRequestRefreshRateMax)<SUB>6102</SUB>> ]
-"16724" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>6108</SUB>> ]
-"16727" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>6109</SUB>> ]
-"16733" [label = <(isPrimary,display-&gt;isPrimary())<SUB>6113</SUB>> ]
-"16699" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax || !outAppRequestRefreshRateMin)<SUB>6102</SUB>> ]
-"16713" [label = <(&lt;operator&gt;.logicalNot,!outAppRequestRefreshRateMax)<SUB>6103</SUB>> ]
-"16716" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6104</SUB>> ]
-"16730" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>6110</SUB>> ]
-"16734" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>6113</SUB>> ]
-"16739" [label = <(&lt;operator&gt;.assignment,policy =\012                mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>6114</SUB>> ]
-"16745" [label = <(&lt;operator&gt;.assignment,*outDefaultConfig = policy.defaultConfig.value())<SUB>6116</SUB>> ]
-"16754" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMin = policy.primaryRange.min)<SUB>6117</SUB>> ]
-"16762" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMax = policy.primaryRange.max)<SUB>6118</SUB>> ]
-"16770" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMin = policy.appRequestRange.min)<SUB>6119</SUB>> ]
-"16778" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMax = policy.appRequestRange.max)<SUB>6120</SUB>> ]
-"16786" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6121</SUB>> ]
-"16700" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax)<SUB>6102</SUB>> ]
-"16711" [label = <(&lt;operator&gt;.logicalNot,!outAppRequestRefreshRateMin)<SUB>6103</SUB>> ]
-"16736" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>6113</SUB>> ]
-"16741" [label = <(getDisplayManagerPolicy,mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>6115</SUB>> ]
-"16746" [label = <(&lt;operator&gt;.indirection,*outDefaultConfig)<SUB>6116</SUB>> ]
-"16748" [label = <(value,policy.defaultConfig.value())<SUB>6116</SUB>> ]
-"16755" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMin)<SUB>6117</SUB>> ]
-"16757" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.min)<SUB>6117</SUB>> ]
-"16763" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMax)<SUB>6118</SUB>> ]
-"16765" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.max)<SUB>6118</SUB>> ]
-"16771" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMin)<SUB>6119</SUB>> ]
-"16773" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.min)<SUB>6119</SUB>> ]
-"16779" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMax)<SUB>6120</SUB>> ]
-"16781" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.max)<SUB>6120</SUB>> ]
-"16701" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin)<SUB>6102</SUB>> ]
-"16709" [label = <(&lt;operator&gt;.logicalNot,!outPrimaryRefreshRateMax)<SUB>6103</SUB>> ]
-"16742" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getDisplayManagerPolicy)<SUB>6115</SUB>> ]
-"16749" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig.value)<SUB>6116</SUB>> ]
-"16758" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>6117</SUB>> ]
-"16761" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6117</SUB>> ]
-"16766" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>6118</SUB>> ]
-"16769" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6118</SUB>> ]
-"16774" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>6119</SUB>> ]
-"16777" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6119</SUB>> ]
-"16782" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>6120</SUB>> ]
-"16785" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6120</SUB>> ]
-"16791" [label = <(isVirtual,display-&gt;isVirtual())<SUB>6122</SUB>> ]
-"16702" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig)<SUB>6102</SUB>> ]
-"16707" [label = <(&lt;operator&gt;.logicalNot,!outPrimaryRefreshRateMin)<SUB>6102</SUB>> ]
-"16744" [label = <(FIELD_IDENTIFIER,getDisplayManagerPolicy,getDisplayManagerPolicy)<SUB>6115</SUB>> ]
-"16750" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig)<SUB>6116</SUB>> ]
-"16753" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6116</SUB>> ]
-"16760" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6117</SUB>> ]
-"16768" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6118</SUB>> ]
-"16776" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6119</SUB>> ]
-"16784" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6120</SUB>> ]
-"16792" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>6122</SUB>> ]
-"16796" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>6123</SUB>> ]
-"16703" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>6102</SUB>> ]
-"16705" [label = <(&lt;operator&gt;.logicalNot,!outDefaultConfig)<SUB>6102</SUB>> ]
-"16752" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6116</SUB>> ]
-"16794" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>6122</SUB>> ]
-"16801" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>6125</SUB>> ]
-"16807" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>6126</SUB>> ]
-"16810" [label = <(&lt;operator&gt;.assignment,*outDefaultConfig = getHwComposer().getActiveConfigIndex(*displayId))<SUB>6128</SUB>> ]
-"16820" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod())<SUB>6129</SUB>> ]
-"16831" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMin = 1e9f / vsyncPeriod)<SUB>6130</SUB>> ]
-"16837" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMax = 1e9f / vsyncPeriod)<SUB>6131</SUB>> ]
-"16843" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMin = 1e9f / vsyncPeriod)<SUB>6132</SUB>> ]
-"16849" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMax = 1e9f / vsyncPeriod)<SUB>6133</SUB>> ]
-"16855" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6134</SUB>> ]
-"16803" [label = <(getId,display-&gt;getId())<SUB>6125</SUB>> ]
-"16808" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>6126</SUB>> ]
-"16811" [label = <(&lt;operator&gt;.indirection,*outDefaultConfig)<SUB>6128</SUB>> ]
-"16813" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(*displayId))<SUB>6128</SUB>> ]
-"16822" [label = <(getVsyncPeriod,getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod())<SUB>6129</SUB>> ]
-"16832" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMin)<SUB>6130</SUB>> ]
-"16834" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6130</SUB>> ]
-"16838" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMax)<SUB>6131</SUB>> ]
-"16840" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6131</SUB>> ]
-"16844" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMin)<SUB>6132</SUB>> ]
-"16846" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6132</SUB>> ]
-"16850" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMax)<SUB>6133</SUB>> ]
-"16852" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6133</SUB>> ]
-"16804" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6125</SUB>> ]
-"16814" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>6128</SUB>> ]
-"16817" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>6128</SUB>> ]
-"16823" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod)<SUB>6129</SUB>> ]
-"16806" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6125</SUB>> ]
-"16815" [label = <(getHwComposer,getHwComposer())<SUB>6128</SUB>> ]
-"16816" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>6128</SUB>> ]
-"16824" [label = <(getActiveConfig,getHwComposer().getActiveConfig(*displayId))<SUB>6129</SUB>> ]
-"16830" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>6129</SUB>> ]
-"16825" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfig)<SUB>6129</SUB>> ]
-"16828" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>6129</SUB>> ]
-"16826" [label = <(getHwComposer,getHwComposer())<SUB>6129</SUB>> ]
-"16827" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6129</SUB>> ]
-"16688" [label = <(METHOD,getDesiredDisplayConfigSpecs)<SUB>6094</SUB>> ]
-"16857" [label = <(METHOD_RETURN,status_t)<SUB>6094</SUB>> ]
-  "16696" -> "16703" 
-  "16719" -> "16724" 
-  "16722" -> "16727" 
-  "16698" -> "16716" 
-  "16698" -> "16719" 
-  "16724" -> "16722" 
-  "16727" -> "16730" 
-  "16727" -> "16736" 
-  "16733" -> "16744" 
-  "16733" -> "16794" 
-  "16699" -> "16698" 
-  "16699" -> "16713" 
-  "16713" -> "16698" 
-  "16716" -> "16857" 
-  "16730" -> "16857" 
-  "16734" -> "16733" 
-  "16739" -> "16746" 
-  "16745" -> "16755" 
-  "16754" -> "16763" 
-  "16762" -> "16771" 
+"16712" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>6099</SUB>> ]
+"16735" [label = <(lock,lock(mStateLock))<SUB>6106</SUB>> ]
+"16738" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>6107</SUB>> ]
+"16714" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax || !outAppRequestRefreshRateMin || !outAppRequestRefreshRateMax)<SUB>6101</SUB>> ]
+"16740" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>6107</SUB>> ]
+"16743" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>6108</SUB>> ]
+"16749" [label = <(isPrimary,display-&gt;isPrimary())<SUB>6112</SUB>> ]
+"16715" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax || !outAppRequestRefreshRateMin)<SUB>6101</SUB>> ]
+"16729" [label = <(&lt;operator&gt;.logicalNot,!outAppRequestRefreshRateMax)<SUB>6102</SUB>> ]
+"16732" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6103</SUB>> ]
+"16746" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>6109</SUB>> ]
+"16750" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>6112</SUB>> ]
+"16755" [label = <(&lt;operator&gt;.assignment,policy =\012                mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>6113</SUB>> ]
+"16761" [label = <(&lt;operator&gt;.assignment,*outDefaultConfig = policy.defaultConfig.value())<SUB>6115</SUB>> ]
+"16770" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMin = policy.primaryRange.min)<SUB>6116</SUB>> ]
+"16778" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMax = policy.primaryRange.max)<SUB>6117</SUB>> ]
+"16786" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMin = policy.appRequestRange.min)<SUB>6118</SUB>> ]
+"16794" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMax = policy.appRequestRange.max)<SUB>6119</SUB>> ]
+"16802" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6120</SUB>> ]
+"16716" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin ||\012 !outPrimaryRefreshRateMax)<SUB>6101</SUB>> ]
+"16727" [label = <(&lt;operator&gt;.logicalNot,!outAppRequestRefreshRateMin)<SUB>6102</SUB>> ]
+"16752" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>6112</SUB>> ]
+"16757" [label = <(getDisplayManagerPolicy,mRefreshRateConfigs-&gt;getDisplayManagerPolicy())<SUB>6114</SUB>> ]
+"16762" [label = <(&lt;operator&gt;.indirection,*outDefaultConfig)<SUB>6115</SUB>> ]
+"16764" [label = <(value,policy.defaultConfig.value())<SUB>6115</SUB>> ]
+"16771" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMin)<SUB>6116</SUB>> ]
+"16773" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.min)<SUB>6116</SUB>> ]
+"16779" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMax)<SUB>6117</SUB>> ]
+"16781" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange.max)<SUB>6117</SUB>> ]
+"16787" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMin)<SUB>6118</SUB>> ]
+"16789" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.min)<SUB>6118</SUB>> ]
+"16795" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMax)<SUB>6119</SUB>> ]
+"16797" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange.max)<SUB>6119</SUB>> ]
+"16717" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig || !outPrimaryRefreshRateMin)<SUB>6101</SUB>> ]
+"16725" [label = <(&lt;operator&gt;.logicalNot,!outPrimaryRefreshRateMax)<SUB>6102</SUB>> ]
+"16758" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getDisplayManagerPolicy)<SUB>6114</SUB>> ]
+"16765" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig.value)<SUB>6115</SUB>> ]
+"16774" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>6116</SUB>> ]
+"16777" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6116</SUB>> ]
+"16782" [label = <(&lt;operator&gt;.fieldAccess,policy.primaryRange)<SUB>6117</SUB>> ]
+"16785" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6117</SUB>> ]
+"16790" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>6118</SUB>> ]
+"16793" [label = <(FIELD_IDENTIFIER,min,min)<SUB>6118</SUB>> ]
+"16798" [label = <(&lt;operator&gt;.fieldAccess,policy.appRequestRange)<SUB>6119</SUB>> ]
+"16801" [label = <(FIELD_IDENTIFIER,max,max)<SUB>6119</SUB>> ]
+"16807" [label = <(isVirtual,display-&gt;isVirtual())<SUB>6121</SUB>> ]
+"16718" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !outDefaultConfig)<SUB>6101</SUB>> ]
+"16723" [label = <(&lt;operator&gt;.logicalNot,!outPrimaryRefreshRateMin)<SUB>6101</SUB>> ]
+"16760" [label = <(FIELD_IDENTIFIER,getDisplayManagerPolicy,getDisplayManagerPolicy)<SUB>6114</SUB>> ]
+"16766" [label = <(&lt;operator&gt;.fieldAccess,policy.defaultConfig)<SUB>6115</SUB>> ]
+"16769" [label = <(FIELD_IDENTIFIER,value,value)<SUB>6115</SUB>> ]
+"16776" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6116</SUB>> ]
+"16784" [label = <(FIELD_IDENTIFIER,primaryRange,primaryRange)<SUB>6117</SUB>> ]
+"16792" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6118</SUB>> ]
+"16800" [label = <(FIELD_IDENTIFIER,appRequestRange,appRequestRange)<SUB>6119</SUB>> ]
+"16808" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isVirtual)<SUB>6121</SUB>> ]
+"16812" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>6122</SUB>> ]
+"16719" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>6101</SUB>> ]
+"16721" [label = <(&lt;operator&gt;.logicalNot,!outDefaultConfig)<SUB>6101</SUB>> ]
+"16768" [label = <(FIELD_IDENTIFIER,defaultConfig,defaultConfig)<SUB>6115</SUB>> ]
+"16810" [label = <(FIELD_IDENTIFIER,isVirtual,isVirtual)<SUB>6121</SUB>> ]
+"16817" [label = <(&lt;operator&gt;.assignment,displayId = display-&gt;getId())<SUB>6124</SUB>> ]
+"16823" [label = <(LOG_FATAL_IF,LOG_FATAL_IF(!displayId))<SUB>6125</SUB>> ]
+"16826" [label = <(&lt;operator&gt;.assignment,*outDefaultConfig = getHwComposer().getActiveConfigIndex(*displayId))<SUB>6127</SUB>> ]
+"16836" [label = <(&lt;operator&gt;.assignment,vsyncPeriod = getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod())<SUB>6128</SUB>> ]
+"16847" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMin = 1e9f / vsyncPeriod)<SUB>6129</SUB>> ]
+"16853" [label = <(&lt;operator&gt;.assignment,*outPrimaryRefreshRateMax = 1e9f / vsyncPeriod)<SUB>6130</SUB>> ]
+"16859" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMin = 1e9f / vsyncPeriod)<SUB>6131</SUB>> ]
+"16865" [label = <(&lt;operator&gt;.assignment,*outAppRequestRefreshRateMax = 1e9f / vsyncPeriod)<SUB>6132</SUB>> ]
+"16871" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6133</SUB>> ]
+"16819" [label = <(getId,display-&gt;getId())<SUB>6124</SUB>> ]
+"16824" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>6125</SUB>> ]
+"16827" [label = <(&lt;operator&gt;.indirection,*outDefaultConfig)<SUB>6127</SUB>> ]
+"16829" [label = <(getActiveConfigIndex,getHwComposer().getActiveConfigIndex(*displayId))<SUB>6127</SUB>> ]
+"16838" [label = <(getVsyncPeriod,getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod())<SUB>6128</SUB>> ]
+"16848" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMin)<SUB>6129</SUB>> ]
+"16850" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6129</SUB>> ]
+"16854" [label = <(&lt;operator&gt;.indirection,*outPrimaryRefreshRateMax)<SUB>6130</SUB>> ]
+"16856" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6130</SUB>> ]
+"16860" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMin)<SUB>6131</SUB>> ]
+"16862" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6131</SUB>> ]
+"16866" [label = <(&lt;operator&gt;.indirection,*outAppRequestRefreshRateMax)<SUB>6132</SUB>> ]
+"16868" [label = <(&lt;operator&gt;.division,1e9f / vsyncPeriod)<SUB>6132</SUB>> ]
+"16820" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>6124</SUB>> ]
+"16830" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfigIndex)<SUB>6127</SUB>> ]
+"16833" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>6127</SUB>> ]
+"16839" [label = <(&lt;operator&gt;.indirectFieldAccess,getHwComposer().getActiveConfig(*displayId)-&gt;getVsyncPeriod)<SUB>6128</SUB>> ]
+"16822" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>6124</SUB>> ]
+"16831" [label = <(getHwComposer,getHwComposer())<SUB>6127</SUB>> ]
+"16832" [label = <(FIELD_IDENTIFIER,getActiveConfigIndex,getActiveConfigIndex)<SUB>6127</SUB>> ]
+"16840" [label = <(getActiveConfig,getHwComposer().getActiveConfig(*displayId))<SUB>6128</SUB>> ]
+"16846" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>6128</SUB>> ]
+"16841" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getActiveConfig)<SUB>6128</SUB>> ]
+"16844" [label = <(&lt;operator&gt;.indirection,*displayId)<SUB>6128</SUB>> ]
+"16842" [label = <(getHwComposer,getHwComposer())<SUB>6128</SUB>> ]
+"16843" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>6128</SUB>> ]
+"16704" [label = <(METHOD,getDesiredDisplayConfigSpecs)<SUB>6093</SUB>> ]
+"16873" [label = <(METHOD_RETURN,status_t)<SUB>6093</SUB>> ]
+  "16712" -> "16719" 
+  "16735" -> "16740" 
+  "16738" -> "16743" 
+  "16714" -> "16732" 
+  "16714" -> "16735" 
+  "16740" -> "16738" 
+  "16743" -> "16746" 
+  "16743" -> "16752" 
+  "16749" -> "16760" 
+  "16749" -> "16810" 
+  "16715" -> "16714" 
+  "16715" -> "16729" 
+  "16729" -> "16714" 
+  "16732" -> "16873" 
+  "16746" -> "16873" 
+  "16750" -> "16749" 
+  "16755" -> "16762" 
+  "16761" -> "16771" 
   "16770" -> "16779" 
-  "16778" -> "16786" 
-  "16786" -> "16857" 
-  "16700" -> "16699" 
-  "16700" -> "16711" 
-  "16711" -> "16699" 
-  "16736" -> "16734" 
-  "16741" -> "16739" 
-  "16746" -> "16752" 
-  "16748" -> "16745" 
-  "16755" -> "16760" 
-  "16757" -> "16754" 
-  "16763" -> "16768" 
-  "16765" -> "16762" 
+  "16778" -> "16787" 
+  "16786" -> "16795" 
+  "16794" -> "16802" 
+  "16802" -> "16873" 
+  "16716" -> "16715" 
+  "16716" -> "16727" 
+  "16727" -> "16715" 
+  "16752" -> "16750" 
+  "16757" -> "16755" 
+  "16762" -> "16768" 
+  "16764" -> "16761" 
   "16771" -> "16776" 
   "16773" -> "16770" 
   "16779" -> "16784" 
   "16781" -> "16778" 
-  "16701" -> "16700" 
-  "16701" -> "16709" 
-  "16709" -> "16700" 
-  "16742" -> "16741" 
-  "16749" -> "16748" 
-  "16758" -> "16761" 
-  "16761" -> "16757" 
-  "16766" -> "16769" 
-  "16769" -> "16765" 
+  "16787" -> "16792" 
+  "16789" -> "16786" 
+  "16795" -> "16800" 
+  "16797" -> "16794" 
+  "16717" -> "16716" 
+  "16717" -> "16725" 
+  "16725" -> "16716" 
+  "16758" -> "16757" 
+  "16765" -> "16764" 
   "16774" -> "16777" 
   "16777" -> "16773" 
   "16782" -> "16785" 
   "16785" -> "16781" 
-  "16791" -> "16796" 
-  "16791" -> "16806" 
-  "16702" -> "16701" 
-  "16702" -> "16707" 
-  "16707" -> "16701" 
-  "16744" -> "16742" 
-  "16750" -> "16753" 
-  "16753" -> "16749" 
+  "16790" -> "16793" 
+  "16793" -> "16789" 
+  "16798" -> "16801" 
+  "16801" -> "16797" 
+  "16807" -> "16812" 
+  "16807" -> "16822" 
+  "16718" -> "16717" 
+  "16718" -> "16723" 
+  "16723" -> "16717" 
   "16760" -> "16758" 
-  "16768" -> "16766" 
+  "16766" -> "16769" 
+  "16769" -> "16765" 
   "16776" -> "16774" 
   "16784" -> "16782" 
-  "16792" -> "16791" 
-  "16796" -> "16857" 
-  "16703" -> "16702" 
-  "16703" -> "16705" 
-  "16705" -> "16702" 
-  "16752" -> "16750" 
-  "16794" -> "16792" 
-  "16801" -> "16808" 
-  "16807" -> "16811" 
-  "16810" -> "16826" 
-  "16820" -> "16832" 
-  "16831" -> "16838" 
-  "16837" -> "16844" 
-  "16843" -> "16850" 
-  "16849" -> "16855" 
-  "16855" -> "16857" 
-  "16803" -> "16801" 
+  "16792" -> "16790" 
+  "16800" -> "16798" 
   "16808" -> "16807" 
-  "16811" -> "16815" 
-  "16813" -> "16810" 
+  "16812" -> "16873" 
+  "16719" -> "16718" 
+  "16719" -> "16721" 
+  "16721" -> "16718" 
+  "16768" -> "16766" 
+  "16810" -> "16808" 
+  "16817" -> "16824" 
+  "16823" -> "16827" 
+  "16826" -> "16842" 
+  "16836" -> "16848" 
+  "16847" -> "16854" 
+  "16853" -> "16860" 
+  "16859" -> "16866" 
+  "16865" -> "16871" 
+  "16871" -> "16873" 
+  "16819" -> "16817" 
+  "16824" -> "16823" 
+  "16827" -> "16831" 
+  "16829" -> "16826" 
+  "16838" -> "16836" 
+  "16848" -> "16850" 
+  "16850" -> "16847" 
+  "16854" -> "16856" 
+  "16856" -> "16853" 
+  "16860" -> "16862" 
+  "16862" -> "16859" 
+  "16866" -> "16868" 
+  "16868" -> "16865" 
+  "16820" -> "16819" 
+  "16830" -> "16833" 
+  "16833" -> "16829" 
+  "16839" -> "16838" 
   "16822" -> "16820" 
-  "16832" -> "16834" 
-  "16834" -> "16831" 
-  "16838" -> "16840" 
-  "16840" -> "16837" 
-  "16844" -> "16846" 
-  "16846" -> "16843" 
-  "16850" -> "16852" 
-  "16852" -> "16849" 
-  "16804" -> "16803" 
-  "16814" -> "16817" 
-  "16817" -> "16813" 
-  "16823" -> "16822" 
-  "16806" -> "16804" 
-  "16815" -> "16816" 
-  "16816" -> "16814" 
-  "16824" -> "16830" 
-  "16830" -> "16823" 
-  "16825" -> "16828" 
-  "16828" -> "16824" 
-  "16826" -> "16827" 
-  "16827" -> "16825" 
-  "16688" -> "16696" 
+  "16831" -> "16832" 
+  "16832" -> "16830" 
+  "16840" -> "16846" 
+  "16846" -> "16839" 
+  "16841" -> "16844" 
+  "16844" -> "16840" 
+  "16842" -> "16843" 
+  "16843" -> "16841" 
+  "16704" -> "16712" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/263-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/263-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/263-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/263-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,11 +1,11 @@
 digraph "onSetInputWindowsFinished" {  
-"16861" [label = <(setInputWindowsFinished,mFlinger-&gt;setInputWindowsFinished())<SUB>6139</SUB>> ]
-"16862" [label = <(&lt;operator&gt;.indirectFieldAccess,mFlinger-&gt;setInputWindowsFinished)<SUB>6139</SUB>> ]
-"16864" [label = <(FIELD_IDENTIFIER,setInputWindowsFinished,setInputWindowsFinished)<SUB>6139</SUB>> ]
-"16859" [label = <(METHOD,onSetInputWindowsFinished)<SUB>6138</SUB>> ]
-"16865" [label = <(METHOD_RETURN,void)<SUB>6138</SUB>> ]
-  "16861" -> "16865" 
-  "16862" -> "16861" 
-  "16864" -> "16862" 
-  "16859" -> "16864" 
+"16877" [label = <(setInputWindowsFinished,mFlinger-&gt;setInputWindowsFinished())<SUB>6138</SUB>> ]
+"16878" [label = <(&lt;operator&gt;.indirectFieldAccess,mFlinger-&gt;setInputWindowsFinished)<SUB>6138</SUB>> ]
+"16880" [label = <(FIELD_IDENTIFIER,setInputWindowsFinished,setInputWindowsFinished)<SUB>6138</SUB>> ]
+"16875" [label = <(METHOD,onSetInputWindowsFinished)<SUB>6137</SUB>> ]
+"16881" [label = <(METHOD_RETURN,void)<SUB>6137</SUB>> ]
+  "16877" -> "16881" 
+  "16878" -> "16877" 
+  "16880" -> "16878" 
+  "16875" -> "16880" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/264-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/264-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/264-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/264-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,11 +1,11 @@
 digraph "fromHandle" {  
-"16871" [label = <(_l,_l(mStateLock))<SUB>6143</SUB>> ]
-"16873" [label = <(RETURN,return fromHandleLocked(handle);,return fromHandleLocked(handle);)<SUB>6144</SUB>> ]
-"16874" [label = <(fromHandleLocked,fromHandleLocked(handle))<SUB>6144</SUB>> ]
-"16867" [label = <(METHOD,fromHandle)<SUB>6142</SUB>> ]
-"16876" [label = <(METHOD_RETURN,wp&lt;Layer&gt;)<SUB>6142</SUB>> ]
-  "16871" -> "16874" 
-  "16873" -> "16876" 
-  "16874" -> "16873" 
-  "16867" -> "16871" 
+"16887" [label = <(_l,_l(mStateLock))<SUB>6142</SUB>> ]
+"16889" [label = <(RETURN,return fromHandleLocked(handle);,return fromHandleLocked(handle);)<SUB>6143</SUB>> ]
+"16890" [label = <(fromHandleLocked,fromHandleLocked(handle))<SUB>6143</SUB>> ]
+"16883" [label = <(METHOD,fromHandle)<SUB>6141</SUB>> ]
+"16892" [label = <(METHOD_RETURN,wp&lt;Layer&gt;)<SUB>6141</SUB>> ]
+  "16887" -> "16890" 
+  "16889" -> "16892" 
+  "16890" -> "16889" 
+  "16883" -> "16887" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/265-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/265-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/265-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/265-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,46 +1,46 @@
 digraph "fromHandleLocked" {  
-"16882" [label = <(&lt;operator&gt;.assignment,* b = nullptr)<SUB>6148</SUB>> ]
-"16902" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.find(b))<SUB>6155</SUB>> ]
-"16921" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>6159</SUB>> ]
-"16895" [label = <(&lt;operator&gt;.equals,b == nullptr)<SUB>6152</SUB>> ]
-"16904" [label = <(find,mLayersByLocalBinderToken.find(b))<SUB>6155</SUB>> ]
-"16910" [label = <(&lt;operator&gt;.notEquals,it != mLayersByLocalBinderToken.end())<SUB>6156</SUB>> ]
-"16888" [label = <(&lt;operator&gt;.assignment,b = handle-&gt;localBinder())<SUB>6150</SUB>> ]
-"16899" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>6153</SUB>> ]
-"16905" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.find)<SUB>6155</SUB>> ]
-"16912" [label = <(end,mLayersByLocalBinderToken.end())<SUB>6156</SUB>> ]
-"16917" [label = <(RETURN,return it-&gt;second;,return it-&gt;second;)<SUB>6157</SUB>> ]
-"16890" [label = <(localBinder,handle-&gt;localBinder())<SUB>6150</SUB>> ]
-"16907" [label = <(FIELD_IDENTIFIER,find,find)<SUB>6155</SUB>> ]
-"16913" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.end)<SUB>6156</SUB>> ]
-"16918" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>6157</SUB>> ]
-"16891" [label = <(&lt;operator&gt;.indirectFieldAccess,handle-&gt;localBinder)<SUB>6150</SUB>> ]
-"16915" [label = <(FIELD_IDENTIFIER,end,end)<SUB>6156</SUB>> ]
-"16920" [label = <(FIELD_IDENTIFIER,second,second)<SUB>6157</SUB>> ]
-"16893" [label = <(FIELD_IDENTIFIER,localBinder,localBinder)<SUB>6150</SUB>> ]
-"16878" [label = <(METHOD,fromHandleLocked)<SUB>6147</SUB>> ]
-"16923" [label = <(METHOD_RETURN,wp&lt;Layer&gt;)<SUB>6147</SUB>> ]
-  "16882" -> "16893" 
-  "16882" -> "16895" 
-  "16902" -> "16915" 
-  "16921" -> "16923" 
-  "16895" -> "16899" 
-  "16895" -> "16907" 
-  "16904" -> "16902" 
-  "16910" -> "16920" 
-  "16910" -> "16921" 
-  "16888" -> "16895" 
-  "16899" -> "16923" 
-  "16905" -> "16904" 
-  "16912" -> "16910" 
-  "16917" -> "16923" 
-  "16890" -> "16888" 
-  "16907" -> "16905" 
-  "16913" -> "16912" 
-  "16918" -> "16917" 
-  "16891" -> "16890" 
-  "16915" -> "16913" 
+"16898" [label = <(&lt;operator&gt;.assignment,* b = nullptr)<SUB>6147</SUB>> ]
+"16918" [label = <(&lt;operator&gt;.assignment,it = mLayersByLocalBinderToken.find(b))<SUB>6154</SUB>> ]
+"16937" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>6158</SUB>> ]
+"16911" [label = <(&lt;operator&gt;.equals,b == nullptr)<SUB>6151</SUB>> ]
+"16920" [label = <(find,mLayersByLocalBinderToken.find(b))<SUB>6154</SUB>> ]
+"16926" [label = <(&lt;operator&gt;.notEquals,it != mLayersByLocalBinderToken.end())<SUB>6155</SUB>> ]
+"16904" [label = <(&lt;operator&gt;.assignment,b = handle-&gt;localBinder())<SUB>6149</SUB>> ]
+"16915" [label = <(RETURN,return nullptr;,return nullptr;)<SUB>6152</SUB>> ]
+"16921" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.find)<SUB>6154</SUB>> ]
+"16928" [label = <(end,mLayersByLocalBinderToken.end())<SUB>6155</SUB>> ]
+"16933" [label = <(RETURN,return it-&gt;second;,return it-&gt;second;)<SUB>6156</SUB>> ]
+"16906" [label = <(localBinder,handle-&gt;localBinder())<SUB>6149</SUB>> ]
+"16923" [label = <(FIELD_IDENTIFIER,find,find)<SUB>6154</SUB>> ]
+"16929" [label = <(&lt;operator&gt;.fieldAccess,mLayersByLocalBinderToken.end)<SUB>6155</SUB>> ]
+"16934" [label = <(&lt;operator&gt;.indirectFieldAccess,it-&gt;second)<SUB>6156</SUB>> ]
+"16907" [label = <(&lt;operator&gt;.indirectFieldAccess,handle-&gt;localBinder)<SUB>6149</SUB>> ]
+"16931" [label = <(FIELD_IDENTIFIER,end,end)<SUB>6155</SUB>> ]
+"16936" [label = <(FIELD_IDENTIFIER,second,second)<SUB>6156</SUB>> ]
+"16909" [label = <(FIELD_IDENTIFIER,localBinder,localBinder)<SUB>6149</SUB>> ]
+"16894" [label = <(METHOD,fromHandleLocked)<SUB>6146</SUB>> ]
+"16939" [label = <(METHOD_RETURN,wp&lt;Layer&gt;)<SUB>6146</SUB>> ]
+  "16898" -> "16909" 
+  "16898" -> "16911" 
+  "16918" -> "16931" 
+  "16937" -> "16939" 
+  "16911" -> "16915" 
+  "16911" -> "16923" 
   "16920" -> "16918" 
-  "16893" -> "16891" 
-  "16878" -> "16882" 
+  "16926" -> "16936" 
+  "16926" -> "16937" 
+  "16904" -> "16911" 
+  "16915" -> "16939" 
+  "16921" -> "16920" 
+  "16928" -> "16926" 
+  "16933" -> "16939" 
+  "16906" -> "16904" 
+  "16923" -> "16921" 
+  "16929" -> "16928" 
+  "16934" -> "16933" 
+  "16907" -> "16906" 
+  "16931" -> "16929" 
+  "16936" -> "16934" 
+  "16909" -> "16907" 
+  "16894" -> "16898" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/266-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/266-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/266-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/266-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,13 +1,13 @@
 digraph "onLayerFirstRef" {  
-"16928" [label = <(&lt;operator&gt;.postIncrement,mNumLayers++)<SUB>6163</SUB>> ]
-"16930" [label = <(registerLayer,mScheduler-&gt;registerLayer(layer))<SUB>6164</SUB>> ]
-"16931" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;registerLayer)<SUB>6164</SUB>> ]
-"16933" [label = <(FIELD_IDENTIFIER,registerLayer,registerLayer)<SUB>6164</SUB>> ]
-"16925" [label = <(METHOD,onLayerFirstRef)<SUB>6162</SUB>> ]
-"16935" [label = <(METHOD_RETURN,void)<SUB>6162</SUB>> ]
-  "16928" -> "16933" 
-  "16930" -> "16935" 
-  "16931" -> "16930" 
-  "16933" -> "16931" 
-  "16925" -> "16928" 
+"16944" [label = <(&lt;operator&gt;.postIncrement,mNumLayers++)<SUB>6162</SUB>> ]
+"16946" [label = <(registerLayer,mScheduler-&gt;registerLayer(layer))<SUB>6163</SUB>> ]
+"16947" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;registerLayer)<SUB>6163</SUB>> ]
+"16949" [label = <(FIELD_IDENTIFIER,registerLayer,registerLayer)<SUB>6163</SUB>> ]
+"16941" [label = <(METHOD,onLayerFirstRef)<SUB>6161</SUB>> ]
+"16951" [label = <(METHOD_RETURN,void)<SUB>6161</SUB>> ]
+  "16944" -> "16949" 
+  "16946" -> "16951" 
+  "16947" -> "16946" 
+  "16949" -> "16947" 
+  "16941" -> "16944" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/267-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/267-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/267-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/267-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,9 +1,9 @@
 digraph "onLayerDestroyed" {  
-"16940" [label = <(&lt;operator&gt;.postDecrement,mNumLayers--)<SUB>6168</SUB>> ]
-"16942" [label = <(removeFromOffscreenLayers,removeFromOffscreenLayers(layer))<SUB>6169</SUB>> ]
-"16937" [label = <(METHOD,onLayerDestroyed)<SUB>6167</SUB>> ]
-"16944" [label = <(METHOD_RETURN,void)<SUB>6167</SUB>> ]
-  "16940" -> "16942" 
-  "16942" -> "16944" 
-  "16937" -> "16940" 
+"16956" [label = <(&lt;operator&gt;.postDecrement,mNumLayers--)<SUB>6167</SUB>> ]
+"16958" [label = <(removeFromOffscreenLayers,removeFromOffscreenLayers(layer))<SUB>6168</SUB>> ]
+"16953" [label = <(METHOD,onLayerDestroyed)<SUB>6166</SUB>> ]
+"16960" [label = <(METHOD_RETURN,void)<SUB>6166</SUB>> ]
+  "16956" -> "16958" 
+  "16958" -> "16960" 
+  "16953" -> "16956" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/268-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/268-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/268-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/268-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,24 +1,24 @@
 digraph "removeFromOffscreenLayers" {  
-"16964" [label = <(erase,mOffscreenLayers.erase(layer))<SUB>6183</SUB>> ]
-"16965" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.erase)<SUB>6183</SUB>> ]
-"16956" [label = <(emplace,mOffscreenLayers.emplace(child.get()))<SUB>6181</SUB>> ]
-"16967" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>6183</SUB>> ]
-"16957" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.emplace)<SUB>6181</SUB>> ]
-"16960" [label = <(get,child.get())<SUB>6181</SUB>> ]
-"16959" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>6181</SUB>> ]
-"16961" [label = <(&lt;operator&gt;.fieldAccess,child.get)<SUB>6181</SUB>> ]
-"16963" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6181</SUB>> ]
-"16946" [label = <(METHOD,removeFromOffscreenLayers)<SUB>6179</SUB>> ]
-"16969" [label = <(METHOD_RETURN,void)<SUB>6179</SUB>> ]
-  "16964" -> "16969" 
-  "16965" -> "16964" 
-  "16956" -> "16959" 
-  "16956" -> "16967" 
-  "16967" -> "16965" 
-  "16957" -> "16963" 
-  "16960" -> "16956" 
-  "16959" -> "16957" 
-  "16961" -> "16960" 
-  "16963" -> "16961" 
-  "16946" -> "16959" 
+"16980" [label = <(erase,mOffscreenLayers.erase(layer))<SUB>6182</SUB>> ]
+"16981" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.erase)<SUB>6182</SUB>> ]
+"16972" [label = <(emplace,mOffscreenLayers.emplace(child.get()))<SUB>6180</SUB>> ]
+"16983" [label = <(FIELD_IDENTIFIER,erase,erase)<SUB>6182</SUB>> ]
+"16973" [label = <(&lt;operator&gt;.fieldAccess,mOffscreenLayers.emplace)<SUB>6180</SUB>> ]
+"16976" [label = <(get,child.get())<SUB>6180</SUB>> ]
+"16975" [label = <(FIELD_IDENTIFIER,emplace,emplace)<SUB>6180</SUB>> ]
+"16977" [label = <(&lt;operator&gt;.fieldAccess,child.get)<SUB>6180</SUB>> ]
+"16979" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6180</SUB>> ]
+"16962" [label = <(METHOD,removeFromOffscreenLayers)<SUB>6178</SUB>> ]
+"16985" [label = <(METHOD_RETURN,void)<SUB>6178</SUB>> ]
+  "16980" -> "16985" 
+  "16981" -> "16980" 
+  "16972" -> "16975" 
+  "16972" -> "16983" 
+  "16983" -> "16981" 
+  "16973" -> "16979" 
+  "16976" -> "16972" 
+  "16975" -> "16973" 
+  "16977" -> "16976" 
+  "16979" -> "16977" 
+  "16962" -> "16975" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/269-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/269-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/269-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/269-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,17 +1,17 @@
 digraph "bufferErased" {  
-"16974" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(clientCacheId.id))<SUB>6187</SUB>> ]
-"16975" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>6187</SUB>> ]
-"16978" [label = <(&lt;operator&gt;.fieldAccess,clientCacheId.id)<SUB>6187</SUB>> ]
-"16976" [label = <(getRenderEngine,getRenderEngine())<SUB>6187</SUB>> ]
-"16977" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>6187</SUB>> ]
-"16980" [label = <(FIELD_IDENTIFIER,id,id)<SUB>6187</SUB>> ]
-"16971" [label = <(METHOD,bufferErased)<SUB>6186</SUB>> ]
-"16981" [label = <(METHOD_RETURN,void)<SUB>6186</SUB>> ]
-  "16974" -> "16981" 
-  "16975" -> "16980" 
-  "16978" -> "16974" 
-  "16976" -> "16977" 
-  "16977" -> "16975" 
-  "16980" -> "16978" 
-  "16971" -> "16976" 
+"16990" [label = <(unbindExternalTextureBuffer,getRenderEngine().unbindExternalTextureBuffer(clientCacheId.id))<SUB>6186</SUB>> ]
+"16991" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().unbindExternalTextureBuffer)<SUB>6186</SUB>> ]
+"16994" [label = <(&lt;operator&gt;.fieldAccess,clientCacheId.id)<SUB>6186</SUB>> ]
+"16992" [label = <(getRenderEngine,getRenderEngine())<SUB>6186</SUB>> ]
+"16993" [label = <(FIELD_IDENTIFIER,unbindExternalTextureBuffer,unbindExternalTextureBuffer)<SUB>6186</SUB>> ]
+"16996" [label = <(FIELD_IDENTIFIER,id,id)<SUB>6186</SUB>> ]
+"16987" [label = <(METHOD,bufferErased)<SUB>6185</SUB>> ]
+"16997" [label = <(METHOD_RETURN,void)<SUB>6185</SUB>> ]
+  "16990" -> "16997" 
+  "16991" -> "16996" 
+  "16994" -> "16990" 
+  "16992" -> "16993" 
+  "16993" -> "16991" 
+  "16996" -> "16994" 
+  "16987" -> "16992" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/27-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/27-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/27-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/27-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_34" {  
-"126" [label = <(METHOD,anonymous_lambda_34)<SUB>3058</SUB>> ]
-"129" [label = <(METHOD_RETURN,ANY)<SUB>3058</SUB>> ]
+"126" [label = <(METHOD,anonymous_lambda_34)<SUB>3057</SUB>> ]
+"129" [label = <(METHOD_RETURN,ANY)<SUB>3057</SUB>> ]
   "126" -> "129" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/270-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/270-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/270-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/270-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,95 +1,95 @@
 digraph "setGlobalShadowSettings" {  
-"16991" [label = <(_l,_l(mStateLock))<SUB>6193</SUB>> ]
-"16993" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.ambientColor = vec4(ambientColor))<SUB>6194</SUB>> ]
-"17001" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.spotColor = vec4(spotColor))<SUB>6195</SUB>> ]
-"17009" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.y = lightPosY)<SUB>6196</SUB>> ]
-"17018" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.z = lightPosZ)<SUB>6197</SUB>> ]
-"17027" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightRadius = lightRadius)<SUB>6198</SUB>> ]
-"17034" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.x = 0.f)<SUB>6201</SUB>> ]
-"17043" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.length = 0.f)<SUB>6202</SUB>> ]
-"17050" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6203</SUB>> ]
-"16994" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.ambientColor)<SUB>6194</SUB>> ]
-"16999" [label = <(vec4,vec4(ambientColor))<SUB>6194</SUB>> ]
-"17002" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.spotColor)<SUB>6195</SUB>> ]
-"17007" [label = <(vec4,vec4(spotColor))<SUB>6195</SUB>> ]
-"17010" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.y)<SUB>6196</SUB>> ]
-"17019" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.z)<SUB>6197</SUB>> ]
-"17028" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightRadius)<SUB>6198</SUB>> ]
-"17035" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.x)<SUB>6201</SUB>> ]
-"17044" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.length)<SUB>6202</SUB>> ]
-"16995" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6194</SUB>> ]
-"16998" [label = <(FIELD_IDENTIFIER,ambientColor,ambientColor)<SUB>6194</SUB>> ]
-"17003" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6195</SUB>> ]
-"17006" [label = <(FIELD_IDENTIFIER,spotColor,spotColor)<SUB>6195</SUB>> ]
-"17011" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6196</SUB>> ]
-"17016" [label = <(FIELD_IDENTIFIER,y,y)<SUB>6196</SUB>> ]
-"17020" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6197</SUB>> ]
-"17025" [label = <(FIELD_IDENTIFIER,z,z)<SUB>6197</SUB>> ]
-"17029" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6198</SUB>> ]
-"17032" [label = <(FIELD_IDENTIFIER,lightRadius,lightRadius)<SUB>6198</SUB>> ]
-"17036" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6201</SUB>> ]
-"17041" [label = <(FIELD_IDENTIFIER,x,x)<SUB>6201</SUB>> ]
-"17045" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6202</SUB>> ]
-"17048" [label = <(FIELD_IDENTIFIER,length,length)<SUB>6202</SUB>> ]
-"16997" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6194</SUB>> ]
-"17005" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6195</SUB>> ]
-"17012" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6196</SUB>> ]
-"17015" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6196</SUB>> ]
-"17021" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6197</SUB>> ]
-"17024" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6197</SUB>> ]
-"17031" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6198</SUB>> ]
-"17037" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6201</SUB>> ]
-"17040" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6201</SUB>> ]
-"17047" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6202</SUB>> ]
-"17014" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6196</SUB>> ]
-"17023" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6197</SUB>> ]
-"17039" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6201</SUB>> ]
-"16983" [label = <(METHOD,setGlobalShadowSettings)<SUB>6190</SUB>> ]
-"17052" [label = <(METHOD_RETURN,status_t)<SUB>6190</SUB>> ]
-  "16991" -> "16997" 
-  "16993" -> "17005" 
-  "17001" -> "17014" 
-  "17009" -> "17023" 
-  "17018" -> "17031" 
-  "17027" -> "17039" 
+"17007" [label = <(_l,_l(mStateLock))<SUB>6192</SUB>> ]
+"17009" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.ambientColor = vec4(ambientColor))<SUB>6193</SUB>> ]
+"17017" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.spotColor = vec4(spotColor))<SUB>6194</SUB>> ]
+"17025" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.y = lightPosY)<SUB>6195</SUB>> ]
+"17034" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.z = lightPosZ)<SUB>6196</SUB>> ]
+"17043" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightRadius = lightRadius)<SUB>6197</SUB>> ]
+"17050" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.lightPos.x = 0.f)<SUB>6200</SUB>> ]
+"17059" [label = <(&lt;operator&gt;.assignment,mCurrentState.globalShadowSettings.length = 0.f)<SUB>6201</SUB>> ]
+"17066" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6202</SUB>> ]
+"17010" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.ambientColor)<SUB>6193</SUB>> ]
+"17015" [label = <(vec4,vec4(ambientColor))<SUB>6193</SUB>> ]
+"17018" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.spotColor)<SUB>6194</SUB>> ]
+"17023" [label = <(vec4,vec4(spotColor))<SUB>6194</SUB>> ]
+"17026" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.y)<SUB>6195</SUB>> ]
+"17035" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.z)<SUB>6196</SUB>> ]
+"17044" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightRadius)<SUB>6197</SUB>> ]
+"17051" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos.x)<SUB>6200</SUB>> ]
+"17060" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.length)<SUB>6201</SUB>> ]
+"17011" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6193</SUB>> ]
+"17014" [label = <(FIELD_IDENTIFIER,ambientColor,ambientColor)<SUB>6193</SUB>> ]
+"17019" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6194</SUB>> ]
+"17022" [label = <(FIELD_IDENTIFIER,spotColor,spotColor)<SUB>6194</SUB>> ]
+"17027" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6195</SUB>> ]
+"17032" [label = <(FIELD_IDENTIFIER,y,y)<SUB>6195</SUB>> ]
+"17036" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6196</SUB>> ]
+"17041" [label = <(FIELD_IDENTIFIER,z,z)<SUB>6196</SUB>> ]
+"17045" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6197</SUB>> ]
+"17048" [label = <(FIELD_IDENTIFIER,lightRadius,lightRadius)<SUB>6197</SUB>> ]
+"17052" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings.lightPos)<SUB>6200</SUB>> ]
+"17057" [label = <(FIELD_IDENTIFIER,x,x)<SUB>6200</SUB>> ]
+"17061" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6201</SUB>> ]
+"17064" [label = <(FIELD_IDENTIFIER,length,length)<SUB>6201</SUB>> ]
+"17013" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6193</SUB>> ]
+"17021" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6194</SUB>> ]
+"17028" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6195</SUB>> ]
+"17031" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6195</SUB>> ]
+"17037" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6196</SUB>> ]
+"17040" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6196</SUB>> ]
+"17047" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6197</SUB>> ]
+"17053" [label = <(&lt;operator&gt;.fieldAccess,mCurrentState.globalShadowSettings)<SUB>6200</SUB>> ]
+"17056" [label = <(FIELD_IDENTIFIER,lightPos,lightPos)<SUB>6200</SUB>> ]
+"17063" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6201</SUB>> ]
+"17030" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6195</SUB>> ]
+"17039" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6196</SUB>> ]
+"17055" [label = <(FIELD_IDENTIFIER,globalShadowSettings,globalShadowSettings)<SUB>6200</SUB>> ]
+"16999" [label = <(METHOD,setGlobalShadowSettings)<SUB>6189</SUB>> ]
+"17068" [label = <(METHOD_RETURN,status_t)<SUB>6189</SUB>> ]
+  "17007" -> "17013" 
+  "17009" -> "17021" 
+  "17017" -> "17030" 
+  "17025" -> "17039" 
   "17034" -> "17047" 
-  "17043" -> "17050" 
-  "17050" -> "17052" 
-  "16994" -> "16999" 
-  "16999" -> "16993" 
-  "17002" -> "17007" 
-  "17007" -> "17001" 
-  "17010" -> "17009" 
-  "17019" -> "17018" 
-  "17028" -> "17027" 
+  "17043" -> "17055" 
+  "17050" -> "17063" 
+  "17059" -> "17066" 
+  "17066" -> "17068" 
+  "17010" -> "17015" 
+  "17015" -> "17009" 
+  "17018" -> "17023" 
+  "17023" -> "17017" 
+  "17026" -> "17025" 
   "17035" -> "17034" 
   "17044" -> "17043" 
-  "16995" -> "16998" 
-  "16998" -> "16994" 
-  "17003" -> "17006" 
-  "17006" -> "17002" 
-  "17011" -> "17016" 
-  "17016" -> "17010" 
-  "17020" -> "17025" 
-  "17025" -> "17019" 
-  "17029" -> "17032" 
-  "17032" -> "17028" 
+  "17051" -> "17050" 
+  "17060" -> "17059" 
+  "17011" -> "17014" 
+  "17014" -> "17010" 
+  "17019" -> "17022" 
+  "17022" -> "17018" 
+  "17027" -> "17032" 
+  "17032" -> "17026" 
   "17036" -> "17041" 
   "17041" -> "17035" 
   "17045" -> "17048" 
   "17048" -> "17044" 
-  "16997" -> "16995" 
-  "17005" -> "17003" 
-  "17012" -> "17015" 
-  "17015" -> "17011" 
-  "17021" -> "17024" 
-  "17024" -> "17020" 
-  "17031" -> "17029" 
+  "17052" -> "17057" 
+  "17057" -> "17051" 
+  "17061" -> "17064" 
+  "17064" -> "17060" 
+  "17013" -> "17011" 
+  "17021" -> "17019" 
+  "17028" -> "17031" 
+  "17031" -> "17027" 
   "17037" -> "17040" 
   "17040" -> "17036" 
   "17047" -> "17045" 
-  "17014" -> "17012" 
-  "17023" -> "17021" 
+  "17053" -> "17056" 
+  "17056" -> "17052" 
+  "17063" -> "17061" 
+  "17030" -> "17028" 
   "17039" -> "17037" 
-  "16983" -> "16991" 
+  "17055" -> "17053" 
+  "16999" -> "17007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/271-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/271-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/271-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/271-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,15 +1,15 @@
 digraph "getGenericLayerMetadataKeyMap" {  
-"17057" [label = <(&lt;operator&gt;.assignment,genericLayerMetadataKeyMap{\012 // Note: METADATA_OWNER_UID and METADATA_WINDOW_TYPE are officially\012 // supported, and exposed via the\012 // IVrComposerClient::VrCommand::SET_LAYER_INFO command.\012 {&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID},\012 {&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR},\012 })<SUB>6211</SUB>> ]
-"17066" [label = <(RETURN,return genericLayerMetadataKeyMap;,return genericLayerMetadataKeyMap;)<SUB>6218</SUB>> ]
-"17059" [label = <(&lt;operator&gt;.arrayInitializer,{\012 // Note: METADATA_OWNER_UID and METADATA_WINDOW_TYPE are officially\012 // supported, and exposed via the\012 // IVrComposerClient::VrCommand::SET_LAYER_INFO command.\012 {&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID},\012 {&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR},\012 })<SUB>6211</SUB>> ]
-"17060" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID})<SUB>6215</SUB>> ]
-"17063" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR})<SUB>6216</SUB>> ]
-"17054" [label = <(METHOD,getGenericLayerMetadataKeyMap)<SUB>6206</SUB>> ]
-"17068" [label = <(METHOD_RETURN,unordered_map&lt;std.string,uint32_t&gt;)<SUB>6206</SUB>> ]
-  "17057" -> "17066" 
-  "17066" -> "17068" 
-  "17059" -> "17057" 
-  "17060" -> "17063" 
-  "17063" -> "17059" 
-  "17054" -> "17060" 
+"17073" [label = <(&lt;operator&gt;.assignment,genericLayerMetadataKeyMap{\012 // Note: METADATA_OWNER_UID and METADATA_WINDOW_TYPE are officially\012 // supported, and exposed via the\012 // IVrComposerClient::VrCommand::SET_LAYER_INFO command.\012 {&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID},\012 {&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR},\012 })<SUB>6210</SUB>> ]
+"17082" [label = <(RETURN,return genericLayerMetadataKeyMap;,return genericLayerMetadataKeyMap;)<SUB>6217</SUB>> ]
+"17075" [label = <(&lt;operator&gt;.arrayInitializer,{\012 // Note: METADATA_OWNER_UID and METADATA_WINDOW_TYPE are officially\012 // supported, and exposed via the\012 // IVrComposerClient::VrCommand::SET_LAYER_INFO command.\012 {&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID},\012 {&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR},\012 })<SUB>6210</SUB>> ]
+"17076" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;org.chromium.arc.V1_0.TaskId&quot;, METADATA_TASK_ID})<SUB>6214</SUB>> ]
+"17079" [label = <(&lt;operator&gt;.arrayInitializer,{&quot;org.chromium.arc.V1_0.CursorInfo&quot;, METADATA_MOUSE_CURSOR})<SUB>6215</SUB>> ]
+"17070" [label = <(METHOD,getGenericLayerMetadataKeyMap)<SUB>6205</SUB>> ]
+"17084" [label = <(METHOD_RETURN,unordered_map&lt;std.string,uint32_t&gt;)<SUB>6205</SUB>> ]
+  "17073" -> "17082" 
+  "17082" -> "17084" 
+  "17075" -> "17073" 
+  "17076" -> "17079" 
+  "17079" -> "17075" 
+  "17070" -> "17076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/272-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/272-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/272-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/272-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,22 +1,22 @@
 digraph "setFrameRate" {  
-"17084" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 })))<SUB>6227</SUB>> ]
-"17088" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6248</SUB>> ]
-"17076" [label = <(&lt;operator&gt;.logicalNot,!ValidateFrameRate(frameRate, compatibility, &quot;SurfaceFlinger::setFrameRate&quot;))<SUB>6223</SUB>> ]
-"17085" [label = <(UNKNOWN,void,void)<SUB>6227</SUB>> ]
-"17086" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 }))<SUB>6227</SUB>> ]
-"17077" [label = <(ValidateFrameRate,ValidateFrameRate(frameRate, compatibility, &quot;SurfaceFlinger::setFrameRate&quot;))<SUB>6223</SUB>> ]
-"17082" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6224</SUB>> ]
-"17087" [label = <(METHOD_REF,ANY anonymous_lambda_60 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 }))<SUB>6227</SUB>> ]
-"17070" [label = <(METHOD,setFrameRate)<SUB>6221</SUB>> ]
-"17090" [label = <(METHOD_RETURN,status_t)<SUB>6221</SUB>> ]
-  "17084" -> "17088" 
-  "17088" -> "17090" 
-  "17076" -> "17085" 
-  "17076" -> "17082" 
-  "17085" -> "17087" 
-  "17086" -> "17084" 
-  "17077" -> "17076" 
-  "17082" -> "17090" 
-  "17087" -> "17086" 
-  "17070" -> "17077" 
+"17100" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 })))<SUB>6226</SUB>> ]
+"17104" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>6247</SUB>> ]
+"17092" [label = <(&lt;operator&gt;.logicalNot,!ValidateFrameRate(frameRate, compatibility, &quot;SurfaceFlinger::setFrameRate&quot;))<SUB>6222</SUB>> ]
+"17101" [label = <(UNKNOWN,void,void)<SUB>6226</SUB>> ]
+"17102" [label = <(schedule,schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 }))<SUB>6226</SUB>> ]
+"17093" [label = <(ValidateFrameRate,ValidateFrameRate(frameRate, compatibility, &quot;SurfaceFlinger::setFrameRate&quot;))<SUB>6222</SUB>> ]
+"17098" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6223</SUB>> ]
+"17103" [label = <(METHOD_REF,ANY anonymous_lambda_60 (),schedule([=] {\012 Mutex::Autolock lock(mStateLock);\012 if (authenticateSurfaceTextureLocked(surface)) {\012            sp&lt;Layer&gt; layer = (static_cast&lt;MonitoredProducer*&gt;(surface.get()))-&gt;getLayer();\012 if (layer == nullptr) {\012                ALOGE(&quot;Attempt to set frame rate on a layer that no longer exists&quot;);\012 return BAD_VALUE;\012 }\012\012 if (layer-&gt;setFrameRate(\012 Layer::FrameRate(frameRate,\012 Layer::FrameRate::convertCompatibility(compatibility)))) {\012                setTransactionFlags(eTraversalNeeded);\012 }\012 } else {\012            ALOGE(&quot;Attempt to set frame rate on an unrecognized IGraphicBufferProducer&quot;);\012 return BAD_VALUE;\012 }\012 return NO_ERROR;\012 }))<SUB>6226</SUB>> ]
+"17086" [label = <(METHOD,setFrameRate)<SUB>6220</SUB>> ]
+"17106" [label = <(METHOD_RETURN,status_t)<SUB>6220</SUB>> ]
+  "17100" -> "17104" 
+  "17104" -> "17106" 
+  "17092" -> "17101" 
+  "17092" -> "17098" 
+  "17101" -> "17103" 
+  "17102" -> "17100" 
+  "17093" -> "17092" 
+  "17098" -> "17106" 
+  "17103" -> "17102" 
+  "17086" -> "17093" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/273-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/273-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/273-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/273-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,34 +1,34 @@
 digraph "acquireFrameRateFlexibilityToken" {  
-"17102" [label = <(&lt;operator&gt;.assignment,future = schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6256</SUB>> ]
-"17107" [label = <(&lt;operator&gt;.assignment,std::tie(result, *outToken) = future.get())<SUB>6300</SUB>> ]
-"17119" [label = <(RETURN,return result;,return result;)<SUB>6301</SUB>> ]
-"17096" [label = <(&lt;operator&gt;.logicalNot,!outToken)<SUB>6252</SUB>> ]
-"17104" [label = <(schedule,schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6256</SUB>> ]
-"17108" [label = <(std::tie,std::tie(result, *outToken))<SUB>6300</SUB>> ]
-"17115" [label = <(get,future.get())<SUB>6300</SUB>> ]
-"17099" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6253</SUB>> ]
-"17105" [label = <(METHOD_REF,ANY anonymous_lambda_61 (),schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6256</SUB>> ]
-"17109" [label = <(&lt;operator&gt;.fieldAccess,std::tie)<SUB>6300</SUB>> ]
-"17113" [label = <(&lt;operator&gt;.indirection,*outToken)<SUB>6300</SUB>> ]
-"17116" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>6300</SUB>> ]
-"17111" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>6300</SUB>> ]
-"17118" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6300</SUB>> ]
-"17092" [label = <(METHOD,acquireFrameRateFlexibilityToken)<SUB>6251</SUB>> ]
-"17121" [label = <(METHOD_RETURN,status_t)<SUB>6251</SUB>> ]
-  "17102" -> "17111" 
-  "17107" -> "17119" 
-  "17119" -> "17121" 
-  "17096" -> "17099" 
-  "17096" -> "17105" 
-  "17104" -> "17102" 
-  "17108" -> "17118" 
-  "17115" -> "17107" 
-  "17099" -> "17121" 
-  "17105" -> "17104" 
-  "17109" -> "17113" 
-  "17113" -> "17108" 
-  "17116" -> "17115" 
-  "17111" -> "17109" 
-  "17118" -> "17116" 
-  "17092" -> "17096" 
+"17118" [label = <(&lt;operator&gt;.assignment,future = schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6255</SUB>> ]
+"17123" [label = <(&lt;operator&gt;.assignment,std::tie(result, *outToken) = future.get())<SUB>6299</SUB>> ]
+"17135" [label = <(RETURN,return result;,return result;)<SUB>6300</SUB>> ]
+"17112" [label = <(&lt;operator&gt;.logicalNot,!outToken)<SUB>6251</SUB>> ]
+"17120" [label = <(schedule,schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6255</SUB>> ]
+"17124" [label = <(std::tie,std::tie(result, *outToken))<SUB>6299</SUB>> ]
+"17131" [label = <(get,future.get())<SUB>6299</SUB>> ]
+"17115" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>6252</SUB>> ]
+"17121" [label = <(METHOD_REF,ANY anonymous_lambda_61 (),schedule([this] {\012 status_t result = NO_ERROR;\012        sp&lt;IBinder&gt; token;\012\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012\012 // This is a little racy, but not in a way that hurts anything. As we grab the\012 // defaultConfig from the display manager policy, we could be setting a new display\012 // manager policy, leaving us using a stale defaultConfig. The defaultConfig doesn't\012 // matter for the override policy though, since we set allowGroupSwitching to true, so\012 // it's not a problem.\012            scheduler::RefreshRateConfigs::Policy overridePolicy;\012            overridePolicy.defaultConfig =\012                    mRefreshRateConfigs-&gt;getDisplayManagerPolicy().defaultConfig;\012            overridePolicy.allowGroupSwitching = true;\012 constexpr bool kOverridePolicy = true;\012            result = setDesiredDisplayConfigSpecsInternal(display, overridePolicy, kOverridePolicy);\012 }\012\012 if (result == NO_ERROR) {\012            mFrameRateFlexibilityTokenCount++;\012 // Handing out a reference to the SurfaceFlinger object, as we're doing in the line\012 // below, is something to consider carefully. The lifetime of the\012 // FrameRateFlexibilityToken isn't tied to SurfaceFlinger object lifetime, so if this\012 // SurfaceFlinger object were to be destroyed while the token still exists, the token\012 // destructor would be accessing a stale SurfaceFlinger reference, and crash. This is ok\012 // in this case, for two reasons:\012 //   1. Once SurfaceFlinger::run() is called by main_surfaceflinger.cpp, the only way\012 //   the program exits is via a crash. So we won't have a situation where the\012 //   SurfaceFlinger object is dead but the process is still up.\012 //   2. The frame rate flexibility token is acquired/released only by CTS tests, so even\012 //   if condition 1 were changed, the problem would only show up when running CTS tests,\012 //   not on end user devices, so we could spot it and fix it without serious impact.\012            token = new FrameRateFlexibilityToken(\012 [this]() { onFrameRateFlexibilityTokenReleased(); });\012            ALOGD(&quot;Frame rate flexibility token acquired. count=%d&quot;,\012                  mFrameRateFlexibilityTokenCount);\012 }\012\012 return std::make_pair(result, token);\012 }))<SUB>6255</SUB>> ]
+"17125" [label = <(&lt;operator&gt;.fieldAccess,std::tie)<SUB>6299</SUB>> ]
+"17129" [label = <(&lt;operator&gt;.indirection,*outToken)<SUB>6299</SUB>> ]
+"17132" [label = <(&lt;operator&gt;.fieldAccess,future.get)<SUB>6299</SUB>> ]
+"17127" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>6299</SUB>> ]
+"17134" [label = <(FIELD_IDENTIFIER,get,get)<SUB>6299</SUB>> ]
+"17108" [label = <(METHOD,acquireFrameRateFlexibilityToken)<SUB>6250</SUB>> ]
+"17137" [label = <(METHOD_RETURN,status_t)<SUB>6250</SUB>> ]
+  "17118" -> "17127" 
+  "17123" -> "17135" 
+  "17135" -> "17137" 
+  "17112" -> "17115" 
+  "17112" -> "17121" 
+  "17120" -> "17118" 
+  "17124" -> "17134" 
+  "17131" -> "17123" 
+  "17115" -> "17137" 
+  "17121" -> "17120" 
+  "17125" -> "17129" 
+  "17129" -> "17124" 
+  "17132" -> "17131" 
+  "17127" -> "17125" 
+  "17134" -> "17132" 
+  "17108" -> "17112" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/274-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/274-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/274-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/274-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,13 +1,13 @@
 digraph "onFrameRateFlexibilityTokenReleased" {  
-"17125" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 })))<SUB>6305</SUB>> ]
-"17126" [label = <(UNKNOWN,void,void)<SUB>6305</SUB>> ]
-"17127" [label = <(schedule,schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 }))<SUB>6305</SUB>> ]
-"17128" [label = <(METHOD_REF,ANY anonymous_lambda_62 (),schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 }))<SUB>6305</SUB>> ]
-"17123" [label = <(METHOD,onFrameRateFlexibilityTokenReleased)<SUB>6304</SUB>> ]
-"17129" [label = <(METHOD_RETURN,void)<SUB>6304</SUB>> ]
-  "17125" -> "17129" 
-  "17126" -> "17128" 
-  "17127" -> "17125" 
-  "17128" -> "17127" 
-  "17123" -> "17126" 
+"17141" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 })))<SUB>6304</SUB>> ]
+"17142" [label = <(UNKNOWN,void,void)<SUB>6304</SUB>> ]
+"17143" [label = <(schedule,schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 }))<SUB>6304</SUB>> ]
+"17144" [label = <(METHOD_REF,ANY anonymous_lambda_62 (),schedule([this] {\012        LOG_ALWAYS_FATAL_IF(mFrameRateFlexibilityTokenCount == 0,\012 &quot;Failed tracking frame rate flexibility tokens&quot;);\012        mFrameRateFlexibilityTokenCount--;\012        ALOGD(&quot;Frame rate flexibility token released. count=%d&quot;, mFrameRateFlexibilityTokenCount);\012 if (mFrameRateFlexibilityTokenCount == 0) {\012 const auto display = ON_MAIN_THREAD(getDefaultDisplayDeviceLocked());\012 constexpr bool kOverridePolicy = true;\012 status_t result = setDesiredDisplayConfigSpecsInternal(display, {}, kOverridePolicy);\012            LOG_ALWAYS_FATAL_IF(result &lt; 0, &quot;Failed releasing frame rate flexibility token&quot;);\012 }\012 }))<SUB>6304</SUB>> ]
+"17139" [label = <(METHOD,onFrameRateFlexibilityTokenReleased)<SUB>6303</SUB>> ]
+"17145" [label = <(METHOD_RETURN,void)<SUB>6303</SUB>> ]
+  "17141" -> "17145" 
+  "17142" -> "17144" 
+  "17143" -> "17141" 
+  "17144" -> "17143" 
+  "17139" -> "17142" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/275-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/275-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/275-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/275-cfg.dot	2023-06-07 19:33:06.737398397 +0330
@@ -1,13 +1,13 @@
 digraph "enableRefreshRateOverlay" {  
-"17134" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 })))<SUB>6320</SUB>> ]
-"17135" [label = <(UNKNOWN,void,void)<SUB>6320</SUB>> ]
-"17136" [label = <(schedule,schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 }))<SUB>6320</SUB>> ]
-"17137" [label = <(METHOD_REF,ANY anonymous_lambda_63 (),schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 }))<SUB>6320</SUB>> ]
-"17131" [label = <(METHOD,enableRefreshRateOverlay)<SUB>6319</SUB>> ]
-"17138" [label = <(METHOD_RETURN,void)<SUB>6319</SUB>> ]
-  "17134" -> "17138" 
-  "17135" -> "17137" 
-  "17136" -> "17134" 
-  "17137" -> "17136" 
-  "17131" -> "17135" 
+"17150" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 })))<SUB>6319</SUB>> ]
+"17151" [label = <(UNKNOWN,void,void)<SUB>6319</SUB>> ]
+"17152" [label = <(schedule,schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 }))<SUB>6319</SUB>> ]
+"17153" [label = <(METHOD_REF,ANY anonymous_lambda_63 (),schedule([=] {\012        std::unique_ptr&lt;RefreshRateOverlay&gt; overlay;\012 if (enable) {\012            overlay = std::make_unique&lt;RefreshRateOverlay&gt;(*this);\012 }\012\012 {\012 Mutex::Autolock lock(mStateLock);\012\012 // Destroy the layer of the current overlay, if any, outside the lock.\012            mRefreshRateOverlay.swap(overlay);\012 if (!mRefreshRateOverlay) return;\012\012 if (const auto display = getDefaultDisplayDeviceLocked()) {\012                mRefreshRateOverlay-&gt;setViewport(display-&gt;getSize());\012 }\012\012            mRefreshRateOverlay-&gt;changeRefreshRate(mRefreshRateConfigs-&gt;getCurrentRefreshRate());\012 }\012 }))<SUB>6319</SUB>> ]
+"17147" [label = <(METHOD,enableRefreshRateOverlay)<SUB>6318</SUB>> ]
+"17154" [label = <(METHOD_RETURN,void)<SUB>6318</SUB>> ]
+  "17150" -> "17154" 
+  "17151" -> "17153" 
+  "17152" -> "17150" 
+  "17153" -> "17152" 
+  "17147" -> "17151" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/276-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/276-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/276-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/276-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.fieldAccess" {  
-"17593" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
-"17597" [label = <(METHOD_RETURN,ANY)> ]
-  "17593" -> "17597" 
+"17609" [label = <(METHOD,&lt;operator&gt;.fieldAccess)> ]
+"17613" [label = <(METHOD_RETURN,ANY)> ]
+  "17609" -> "17613" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/277-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/277-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/277-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/277-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignment" {  
-"17598" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
-"17602" [label = <(METHOD_RETURN,ANY)> ]
-  "17598" -> "17602" 
+"17614" [label = <(METHOD,&lt;operator&gt;.assignment)> ]
+"17618" [label = <(METHOD_RETURN,ANY)> ]
+  "17614" -> "17618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/278-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/278-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/278-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/278-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.conditional" {  
-"17603" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
-"17608" [label = <(METHOD_RETURN,ANY)> ]
-  "17603" -> "17608" 
+"17619" [label = <(METHOD,&lt;operator&gt;.conditional)> ]
+"17624" [label = <(METHOD_RETURN,ANY)> ]
+  "17619" -> "17624" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/279-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/279-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/279-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/279-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterThan" {  
-"17609" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
-"17613" [label = <(METHOD_RETURN,ANY)> ]
-  "17609" -> "17613" 
+"17625" [label = <(METHOD,&lt;operator&gt;.greaterThan)> ]
+"17629" [label = <(METHOD_RETURN,ANY)> ]
+  "17625" -> "17629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/28-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/28-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/28-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/28-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_35" {  
-"131" [label = <(METHOD,anonymous_lambda_35)<SUB>3063</SUB>> ]
-"134" [label = <(METHOD_RETURN,ANY)<SUB>3063</SUB>> ]
+"131" [label = <(METHOD,anonymous_lambda_35)<SUB>3062</SUB>> ]
+"134" [label = <(METHOD_RETURN,ANY)<SUB>3062</SUB>> ]
   "131" -> "134" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/280-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/280-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/280-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/280-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "property_get" {  
-"17614" [label = <(METHOD,property_get)> ]
-"17619" [label = <(METHOD_RETURN,ANY)> ]
-  "17614" -> "17619" 
+"17630" [label = <(METHOD,property_get)> ]
+"17635" [label = <(METHOD_RETURN,ANY)> ]
+  "17630" -> "17635" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/281-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/281-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/281-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/281-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "std::atof" {  
-"17620" [label = <(METHOD,std::atof)> ]
-"17624" [label = <(METHOD_RETURN,ANY)> ]
-  "17620" -> "17624" 
+"17636" [label = <(METHOD,std::atof)> ]
+"17640" [label = <(METHOD_RETURN,ANY)> ]
+  "17636" -> "17640" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/282-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/282-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/282-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/282-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalAnd" {  
-"17625" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
-"17629" [label = <(METHOD_RETURN,ANY)> ]
-  "17625" -> "17629" 
+"17641" [label = <(METHOD,&lt;operator&gt;.logicalAnd)> ]
+"17645" [label = <(METHOD_RETURN,ANY)> ]
+  "17641" -> "17645" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/283-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/283-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/283-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/283-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalNot" {  
-"17630" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
-"17633" [label = <(METHOD_RETURN,ANY)> ]
-  "17630" -> "17633" 
+"17646" [label = <(METHOD,&lt;operator&gt;.logicalNot)> ]
+"17649" [label = <(METHOD_RETURN,ANY)> ]
+  "17646" -> "17649" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/284-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/284-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/284-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/284-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGE" {  
-"17634" [label = <(METHOD,ALOGE)> ]
-"17637" [label = <(METHOD_RETURN,ANY)> ]
-  "17634" -> "17637" 
+"17650" [label = <(METHOD,ALOGE)> ]
+"17653" [label = <(METHOD_RETURN,ANY)> ]
+  "17650" -> "17653" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/285-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/285-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/285-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/285-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.logicalOr" {  
-"17638" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
-"17642" [label = <(METHOD_RETURN,ANY)> ]
-  "17638" -> "17642" 
+"17654" [label = <(METHOD,&lt;operator&gt;.logicalOr)> ]
+"17658" [label = <(METHOD_RETURN,ANY)> ]
+  "17654" -> "17658" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/286-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/286-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/286-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/286-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.equals" {  
-"17643" [label = <(METHOD,&lt;operator&gt;.equals)> ]
-"17647" [label = <(METHOD_RETURN,ANY)> ]
-  "17643" -> "17647" 
+"17659" [label = <(METHOD,&lt;operator&gt;.equals)> ]
+"17663" [label = <(METHOD_RETURN,ANY)> ]
+  "17659" -> "17663" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/287-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/287-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/287-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/287-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "mCallback" {  
-"17648" [label = <(METHOD,mCallback)> ]
-"17650" [label = <(METHOD_RETURN,ANY)> ]
-  "17648" -> "17650" 
+"17664" [label = <(METHOD,mCallback)> ]
+"17666" [label = <(METHOD_RETURN,ANY)> ]
+  "17664" -> "17666" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/288-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/288-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/288-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/288-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sHardwareTest" {  
-"17651" [label = <(METHOD,sHardwareTest)> ]
-"17654" [label = <(METHOD_RETURN,ANY)> ]
-  "17651" -> "17654" 
+"17667" [label = <(METHOD,sHardwareTest)> ]
+"17670" [label = <(METHOD_RETURN,ANY)> ]
+  "17667" -> "17670" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/289-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/289-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/289-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/289-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sAccessSurfaceFlinger" {  
-"17655" [label = <(METHOD,sAccessSurfaceFlinger)> ]
-"17658" [label = <(METHOD_RETURN,ANY)> ]
-  "17655" -> "17658" 
+"17671" [label = <(METHOD,sAccessSurfaceFlinger)> ]
+"17674" [label = <(METHOD_RETURN,ANY)> ]
+  "17671" -> "17674" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/29-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/29-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/29-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/29-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_36" {  
-"136" [label = <(METHOD,anonymous_lambda_36)<SUB>3074</SUB>> ]
-"138" [label = <(METHOD_RETURN,ANY)<SUB>3074</SUB>> ]
+"136" [label = <(METHOD,anonymous_lambda_36)<SUB>3073</SUB>> ]
+"138" [label = <(METHOD_RETURN,ANY)<SUB>3073</SUB>> ]
   "136" -> "138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/290-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/290-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/290-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/290-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sReadFramebuffer" {  
-"17659" [label = <(METHOD,sReadFramebuffer)> ]
-"17662" [label = <(METHOD_RETURN,ANY)> ]
-  "17659" -> "17662" 
+"17675" [label = <(METHOD,sReadFramebuffer)> ]
+"17678" [label = <(METHOD_RETURN,ANY)> ]
+  "17675" -> "17678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/291-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/291-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/291-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/291-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sDump" {  
-"17663" [label = <(METHOD,sDump)> ]
-"17666" [label = <(METHOD_RETURN,ANY)> ]
-  "17663" -> "17666" 
+"17679" [label = <(METHOD,sDump)> ]
+"17682" [label = <(METHOD_RETURN,ANY)> ]
+  "17679" -> "17682" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/292-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/292-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/292-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/292-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.arrayInitializer" {  
-"17667" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
-"17671" [label = <(METHOD_RETURN,ANY)> ]
-  "17667" -> "17671" 
+"17683" [label = <(METHOD,&lt;operator&gt;.arrayInitializer)> ]
+"17687" [label = <(METHOD_RETURN,ANY)> ]
+  "17683" -> "17687" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/293-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/293-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/293-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/293-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGI" {  
-"17672" [label = <(METHOD,ALOGI)> ]
-"17675" [label = <(METHOD_RETURN,ANY)> ]
-  "17672" -> "17675" 
+"17688" [label = <(METHOD,ALOGI)> ]
+"17691" [label = <(METHOD_RETURN,ANY)> ]
+  "17688" -> "17691" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/294-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/294-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/294-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/294-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "std::string" {  
-"17676" [label = <(METHOD,std::string)> ]
-"17680" [label = <(METHOD_RETURN,ANY)> ]
-  "17676" -> "17680" 
+"17692" [label = <(METHOD,std::string)> ]
+"17696" [label = <(METHOD_RETURN,ANY)> ]
+  "17692" -> "17696" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/295-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/295-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/295-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/295-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addition" {  
-"17681" [label = <(METHOD,&lt;operator&gt;.addition)> ]
-"17685" [label = <(METHOD_RETURN,ANY)> ]
-  "17681" -> "17685" 
+"17697" [label = <(METHOD,&lt;operator&gt;.addition)> ]
+"17701" [label = <(METHOD_RETURN,ANY)> ]
+  "17697" -> "17701" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/296-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/296-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/296-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/296-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "std::to_string" {  
-"17686" [label = <(METHOD,std::to_string)> ]
-"17690" [label = <(METHOD_RETURN,ANY)> ]
-  "17686" -> "17690" 
+"17702" [label = <(METHOD,std::to_string)> ]
+"17706" [label = <(METHOD_RETURN,ANY)> ]
+  "17702" -> "17706" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/297-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/297-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/297-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/297-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.cast" {  
-"17691" [label = <(METHOD,&lt;operator&gt;.cast)> ]
-"17695" [label = <(METHOD_RETURN,ANY)> ]
-  "17691" -> "17695" 
+"17707" [label = <(METHOD,&lt;operator&gt;.cast)> ]
+"17711" [label = <(METHOD_RETURN,ANY)> ]
+  "17707" -> "17711" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/298-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/298-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/298-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/298-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "running_without_sync_framework" {  
-"17696" [label = <(METHOD,running_without_sync_framework)> ]
-"17699" [label = <(METHOD_RETURN,ANY)> ]
-  "17696" -> "17699" 
+"17712" [label = <(METHOD,running_without_sync_framework)> ]
+"17715" [label = <(METHOD_RETURN,ANY)> ]
+  "17712" -> "17715" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/299-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/299-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/299-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/299-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "present_time_offset_from_vsync_ns" {  
-"17700" [label = <(METHOD,present_time_offset_from_vsync_ns)> ]
-"17703" [label = <(METHOD_RETURN,ANY)> ]
-  "17700" -> "17703" 
+"17716" [label = <(METHOD,present_time_offset_from_vsync_ns)> ]
+"17719" [label = <(METHOD_RETURN,ANY)> ]
+  "17716" -> "17719" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/3-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/3-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/3-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/3-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_10" {  
-"17" [label = <(METHOD,anonymous_lambda_10)<SUB>1034</SUB>> ]
-"19" [label = <(METHOD_RETURN,status_t)<SUB>1034</SUB>> ]
+"17" [label = <(METHOD,anonymous_lambda_10)<SUB>1033</SUB>> ]
+"19" [label = <(METHOD_RETURN,status_t)<SUB>1033</SUB>> ]
   "17" -> "19" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/30-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/30-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/30-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/30-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_37" {  
-"140" [label = <(METHOD,anonymous_lambda_37)<SUB>3104</SUB>> ]
-"143" [label = <(METHOD_RETURN,ANY)<SUB>3104</SUB>> ]
+"140" [label = <(METHOD,anonymous_lambda_37)<SUB>3103</SUB>> ]
+"143" [label = <(METHOD_RETURN,ANY)<SUB>3103</SUB>> ]
   "140" -> "143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/300-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/300-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/300-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/300-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "force_hwc_copy_for_virtual_displays" {  
-"17704" [label = <(METHOD,force_hwc_copy_for_virtual_displays)> ]
-"17707" [label = <(METHOD_RETURN,ANY)> ]
-  "17704" -> "17707" 
+"17720" [label = <(METHOD,force_hwc_copy_for_virtual_displays)> ]
+"17723" [label = <(METHOD_RETURN,ANY)> ]
+  "17720" -> "17723" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/301-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/301-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/301-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/301-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "max_virtual_display_dimension" {  
-"17708" [label = <(METHOD,max_virtual_display_dimension)> ]
-"17711" [label = <(METHOD_RETURN,ANY)> ]
-  "17708" -> "17711" 
+"17724" [label = <(METHOD,max_virtual_display_dimension)> ]
+"17727" [label = <(METHOD_RETURN,ANY)> ]
+  "17724" -> "17727" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/302-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/302-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/302-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/302-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "use_vr_flinger" {  
-"17712" [label = <(METHOD,use_vr_flinger)> ]
-"17715" [label = <(METHOD_RETURN,ANY)> ]
-  "17712" -> "17715" 
+"17728" [label = <(METHOD,use_vr_flinger)> ]
+"17731" [label = <(METHOD_RETURN,ANY)> ]
+  "17728" -> "17731" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/303-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/303-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/303-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/303-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "max_frame_buffer_acquired_buffers" {  
-"17716" [label = <(METHOD,max_frame_buffer_acquired_buffers)> ]
-"17719" [label = <(METHOD_RETURN,ANY)> ]
-  "17716" -> "17719" 
+"17732" [label = <(METHOD,max_frame_buffer_acquired_buffers)> ]
+"17735" [label = <(METHOD_RETURN,ANY)> ]
+  "17732" -> "17735" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/304-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/304-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/304-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/304-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "std::max" {  
-"17720" [label = <(METHOD,std::max)> ]
-"17725" [label = <(METHOD_RETURN,ANY)> ]
-  "17720" -> "17725" 
+"17736" [label = <(METHOD,std::max)> ]
+"17741" [label = <(METHOD_RETURN,ANY)> ]
+  "17736" -> "17741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/305-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/305-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/305-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/305-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "max_graphics_width" {  
-"17726" [label = <(METHOD,max_graphics_width)> ]
-"17729" [label = <(METHOD_RETURN,ANY)> ]
-  "17726" -> "17729" 
+"17742" [label = <(METHOD,max_graphics_width)> ]
+"17745" [label = <(METHOD_RETURN,ANY)> ]
+  "17742" -> "17745" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/306-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/306-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/306-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/306-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "max_graphics_height" {  
-"17730" [label = <(METHOD,max_graphics_height)> ]
-"17733" [label = <(METHOD_RETURN,ANY)> ]
-  "17730" -> "17733" 
+"17746" [label = <(METHOD,max_graphics_height)> ]
+"17749" [label = <(METHOD_RETURN,ANY)> ]
+  "17746" -> "17749" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/307-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/307-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/307-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/307-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "has_wide_color_display" {  
-"17734" [label = <(METHOD,has_wide_color_display)> ]
-"17737" [label = <(METHOD_RETURN,ANY)> ]
-  "17734" -> "17737" 
+"17750" [label = <(METHOD,has_wide_color_display)> ]
+"17753" [label = <(METHOD_RETURN,ANY)> ]
+  "17750" -> "17753" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/308-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/308-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/308-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/308-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "use_color_management" {  
-"17738" [label = <(METHOD,use_color_management)> ]
-"17741" [label = <(METHOD_RETURN,ANY)> ]
-  "17738" -> "17741" 
+"17754" [label = <(METHOD,use_color_management)> ]
+"17757" [label = <(METHOD_RETURN,ANY)> ]
+  "17754" -> "17757" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/309-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/309-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/309-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/309-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "default_composition_dataspace" {  
-"17742" [label = <(METHOD,default_composition_dataspace)> ]
-"17745" [label = <(METHOD_RETURN,ANY)> ]
-  "17742" -> "17745" 
+"17758" [label = <(METHOD,default_composition_dataspace)> ]
+"17761" [label = <(METHOD_RETURN,ANY)> ]
+  "17758" -> "17761" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/31-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/31-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/31-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/31-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_38" {  
-"145" [label = <(METHOD,anonymous_lambda_38)<SUB>3123</SUB>> ]
-"148" [label = <(METHOD_RETURN,ANY)<SUB>3123</SUB>> ]
+"145" [label = <(METHOD,anonymous_lambda_38)<SUB>3122</SUB>> ]
+"148" [label = <(METHOD_RETURN,ANY)<SUB>3122</SUB>> ]
   "145" -> "148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/310-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/310-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/310-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/310-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "wcg_composition_dataspace" {  
-"17746" [label = <(METHOD,wcg_composition_dataspace)> ]
-"17749" [label = <(METHOD_RETURN,ANY)> ]
-  "17746" -> "17749" 
+"17762" [label = <(METHOD,wcg_composition_dataspace)> ]
+"17765" [label = <(METHOD_RETURN,ANY)> ]
+  "17762" -> "17765" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/311-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/311-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/311-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/311-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "default_composition_pixel_format" {  
-"17750" [label = <(METHOD,default_composition_pixel_format)> ]
-"17753" [label = <(METHOD_RETURN,ANY)> ]
-  "17750" -> "17753" 
+"17766" [label = <(METHOD,default_composition_pixel_format)> ]
+"17769" [label = <(METHOD_RETURN,ANY)> ]
+  "17766" -> "17769" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/312-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/312-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/312-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/312-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "wcg_composition_pixel_format" {  
-"17754" [label = <(METHOD,wcg_composition_pixel_format)> ]
-"17757" [label = <(METHOD_RETURN,ANY)> ]
-  "17754" -> "17757" 
+"17770" [label = <(METHOD,wcg_composition_pixel_format)> ]
+"17773" [label = <(METHOD_RETURN,ANY)> ]
+  "17770" -> "17773" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/313-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/313-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/313-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/313-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "color_space_agnostic_dataspace" {  
-"17758" [label = <(METHOD,color_space_agnostic_dataspace)> ]
-"17761" [label = <(METHOD_RETURN,ANY)> ]
-  "17758" -> "17761" 
+"17774" [label = <(METHOD,color_space_agnostic_dataspace)> ]
+"17777" [label = <(METHOD_RETURN,ANY)> ]
+  "17774" -> "17777" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/314-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/314-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/314-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/314-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "use_context_priority" {  
-"17762" [label = <(METHOD,use_context_priority)> ]
-"17765" [label = <(METHOD_RETURN,ANY)> ]
-  "17762" -> "17765" 
+"17778" [label = <(METHOD,use_context_priority)> ]
+"17781" [label = <(METHOD_RETURN,ANY)> ]
+  "17778" -> "17781" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/315-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/315-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/315-cfg.dot	2023-06-07 19:33:00.507398971 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/315-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "primary_display_orientation" {  
-"17766" [label = <(METHOD,primary_display_orientation)> ]
-"17769" [label = <(METHOD_RETURN,ANY)> ]
-  "17766" -> "17769" 
+"17782" [label = <(METHOD,primary_display_orientation)> ]
+"17785" [label = <(METHOD_RETURN,ANY)> ]
+  "17782" -> "17785" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/316-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/316-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/316-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/316-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGV" {  
-"17770" [label = <(METHOD,ALOGV)> ]
-"17774" [label = <(METHOD_RETURN,ANY)> ]
-  "17770" -> "17774" 
+"17786" [label = <(METHOD,ALOGV)> ]
+"17790" [label = <(METHOD_RETURN,ANY)> ]
+  "17786" -> "17790" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/317-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/317-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/317-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/317-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "toCString" {  
-"17775" [label = <(METHOD,toCString)> ]
-"17778" [label = <(METHOD_RETURN,ANY)> ]
-  "17775" -> "17778" 
+"17791" [label = <(METHOD,toCString)> ]
+"17794" [label = <(METHOD_RETURN,ANY)> ]
+  "17791" -> "17794" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/318-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/318-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/318-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/318-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sysprop::getDisplayNativePrimaries" {  
-"17779" [label = <(METHOD,sysprop::getDisplayNativePrimaries)> ]
-"17782" [label = <(METHOD_RETURN,ANY)> ]
-  "17779" -> "17782" 
+"17795" [label = <(METHOD,sysprop::getDisplayNativePrimaries)> ]
+"17798" [label = <(METHOD_RETURN,ANY)> ]
+  "17795" -> "17798" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/319-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/319-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/319-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/319-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "atoi" {  
-"17783" [label = <(METHOD,atoi)> ]
-"17786" [label = <(METHOD_RETURN,ANY)> ]
-  "17783" -> "17786" 
+"17799" [label = <(METHOD,atoi)> ]
+"17802" [label = <(METHOD_RETURN,ANY)> ]
+  "17799" -> "17802" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/32-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/32-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/32-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/32-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_39" {  
-"150" [label = <(METHOD,anonymous_lambda_39)<SUB>3157</SUB>> ]
-"153" [label = <(METHOD_RETURN,ANY)<SUB>3157</SUB>> ]
+"150" [label = <(METHOD,anonymous_lambda_39)<SUB>3156</SUB>> ]
+"153" [label = <(METHOD_RETURN,ANY)<SUB>3156</SUB>> ]
   "150" -> "153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/320-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/320-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/320-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/320-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "strcmp" {  
-"17787" [label = <(METHOD,strcmp)> ]
-"17791" [label = <(METHOD_RETURN,ANY)> ]
-  "17787" -> "17791" 
+"17803" [label = <(METHOD,strcmp)> ]
+"17807" [label = <(METHOD_RETURN,ANY)> ]
+  "17803" -> "17807" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/321-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/321-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/321-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/321-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGI_IF" {  
-"17792" [label = <(METHOD,ALOGI_IF)> ]
-"17796" [label = <(METHOD_RETURN,ANY)> ]
-  "17792" -> "17796" 
+"17808" [label = <(METHOD,ALOGI_IF)> ]
+"17812" [label = <(METHOD_RETURN,ANY)> ]
+  "17808" -> "17812" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/322-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/322-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/322-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/322-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "property_get_int32" {  
-"17797" [label = <(METHOD,property_get_int32)> ]
-"17801" [label = <(METHOD_RETURN,ANY)> ]
-  "17797" -> "17801" 
+"17813" [label = <(METHOD,property_get_int32)> ]
+"17817" [label = <(METHOD_RETURN,ANY)> ]
+  "17813" -> "17817" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/323-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/323-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/323-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/323-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "int32_t" {  
-"17802" [label = <(METHOD,int32_t)> ]
-"17805" [label = <(METHOD_RETURN,ANY)> ]
-  "17802" -> "17805" 
+"17818" [label = <(METHOD,int32_t)> ]
+"17821" [label = <(METHOD_RETURN,ANY)> ]
+  "17818" -> "17821" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/324-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/324-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/324-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/324-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "size_t" {  
-"17806" [label = <(METHOD,size_t)> ]
-"17809" [label = <(METHOD_RETURN,ANY)> ]
-  "17806" -> "17809" 
+"17822" [label = <(METHOD,size_t)> ]
+"17825" [label = <(METHOD_RETURN,ANY)> ]
+  "17822" -> "17825" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/325-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/325-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/325-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/325-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "useTrebleTestingOverride" {  
-"17810" [label = <(METHOD,useTrebleTestingOverride)> ]
-"17812" [label = <(METHOD_RETURN,ANY)> ]
-  "17810" -> "17812" 
+"17826" [label = <(METHOD,useTrebleTestingOverride)> ]
+"17828" [label = <(METHOD_RETURN,ANY)> ]
+  "17826" -> "17828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/326-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/326-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/326-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/326-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "setenv" {  
-"17813" [label = <(METHOD,setenv)> ]
-"17818" [label = <(METHOD_RETURN,ANY)> ]
-  "17813" -> "17818" 
+"17829" [label = <(METHOD,setenv)> ]
+"17834" [label = <(METHOD_RETURN,ANY)> ]
+  "17829" -> "17834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/327-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/327-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/327-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/327-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "use_frame_rate_api" {  
-"17819" [label = <(METHOD,use_frame_rate_api)> ]
-"17822" [label = <(METHOD_RETURN,ANY)> ]
-  "17819" -> "17822" 
+"17835" [label = <(METHOD,use_frame_rate_api)> ]
+"17838" [label = <(METHOD_RETURN,ANY)> ]
+  "17835" -> "17838" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/328-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/328-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/328-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/328-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "sysprop::support_kernel_idle_timer" {  
-"17823" [label = <(METHOD,sysprop::support_kernel_idle_timer)> ]
-"17827" [label = <(METHOD_RETURN,ANY)> ]
-  "17823" -> "17827" 
+"17839" [label = <(METHOD,sysprop::support_kernel_idle_timer)> ]
+"17843" [label = <(METHOD_RETURN,ANY)> ]
+  "17839" -> "17843" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/329-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/329-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/329-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/329-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "base::SetProperty" {  
-"17828" [label = <(METHOD,base::SetProperty)> ]
-"17833" [label = <(METHOD_RETURN,ANY)> ]
-  "17828" -> "17833" 
+"17844" [label = <(METHOD,base::SetProperty)> ]
+"17849" [label = <(METHOD_RETURN,ANY)> ]
+  "17844" -> "17849" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/33-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/33-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/33-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/33-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_40" {  
-"155" [label = <(METHOD,anonymous_lambda_40)<SUB>3231</SUB>> ]
-"157" [label = <(METHOD_RETURN,ANY)<SUB>3231</SUB>> ]
+"155" [label = <(METHOD,anonymous_lambda_40)<SUB>3230</SUB>> ]
+"157" [label = <(METHOD_RETURN,ANY)<SUB>3230</SUB>> ]
   "155" -> "157" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/330-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/330-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/330-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/330-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "init" {  
-"17834" [label = <(METHOD,init)> ]
-"17838" [label = <(METHOD_RETURN,ANY)> ]
-  "17834" -> "17838" 
+"17850" [label = <(METHOD,init)> ]
+"17854" [label = <(METHOD_RETURN,ANY)> ]
+  "17850" -> "17854" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/331-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/331-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/331-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/331-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectFieldAccess" {  
-"17839" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
-"17843" [label = <(METHOD_RETURN,ANY)> ]
-  "17839" -> "17843" 
+"17855" [label = <(METHOD,&lt;operator&gt;.indirectFieldAccess)> ]
+"17859" [label = <(METHOD_RETURN,ANY)> ]
+  "17855" -> "17859" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/332-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/332-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/332-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/332-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "initializeDisplays" {  
-"17844" [label = <(METHOD,initializeDisplays)> ]
-"17846" [label = <(METHOD_RETURN,ANY)> ]
-  "17844" -> "17846" 
+"17860" [label = <(METHOD,initializeDisplays)> ]
+"17862" [label = <(METHOD_RETURN,ANY)> ]
+  "17860" -> "17862" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/333-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/333-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/333-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/333-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "startBootAnim" {  
-"17847" [label = <(METHOD,startBootAnim)> ]
-"17849" [label = <(METHOD_RETURN,ANY)> ]
-  "17847" -> "17849" 
+"17863" [label = <(METHOD,startBootAnim)> ]
+"17865" [label = <(METHOD_RETURN,ANY)> ]
+  "17863" -> "17865" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/334-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/334-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/334-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/334-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "waitMessage" {  
-"17850" [label = <(METHOD,waitMessage)> ]
-"17853" [label = <(METHOD_RETURN,ANY)> ]
-  "17850" -> "17853" 
+"17866" [label = <(METHOD,waitMessage)> ]
+"17869" [label = <(METHOD_RETURN,ANY)> ]
+  "17866" -> "17869" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/335-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/335-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/335-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/335-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "postMessage" {  
-"17854" [label = <(METHOD,postMessage)> ]
-"17858" [label = <(METHOD_RETURN,ANY)> ]
-  "17854" -> "17858" 
+"17870" [label = <(METHOD,postMessage)> ]
+"17874" [label = <(METHOD_RETURN,ANY)> ]
+  "17870" -> "17874" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/336-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/336-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/336-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/336-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "std::move" {  
-"17859" [label = <(METHOD,std::move)> ]
-"17863" [label = <(METHOD_RETURN,ANY)> ]
-  "17859" -> "17863" 
+"17875" [label = <(METHOD,std::move)> ]
+"17879" [label = <(METHOD_RETURN,ANY)> ]
+  "17875" -> "17879" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/337-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/337-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/337-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/337-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.new" {  
-"17864" [label = <(METHOD,&lt;operator&gt;.new)> ]
-"17868" [label = <(METHOD_RETURN,ANY)> ]
-  "17864" -> "17868" 
+"17880" [label = <(METHOD,&lt;operator&gt;.new)> ]
+"17884" [label = <(METHOD_RETURN,ANY)> ]
+  "17880" -> "17884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/338-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/338-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/338-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/338-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "initCheck" {  
-"17869" [label = <(METHOD,initCheck)> ]
-"17872" [label = <(METHOD_RETURN,ANY)> ]
-  "17869" -> "17872" 
+"17885" [label = <(METHOD,initCheck)> ]
+"17888" [label = <(METHOD_RETURN,ANY)> ]
+  "17885" -> "17888" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/339-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/339-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/339-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/339-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessThan" {  
-"17873" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
-"17877" [label = <(METHOD_RETURN,ANY)> ]
-  "17873" -> "17877" 
+"17889" [label = <(METHOD,&lt;operator&gt;.lessThan)> ]
+"17893" [label = <(METHOD_RETURN,ANY)> ]
+  "17889" -> "17893" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/34-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/34-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/34-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/34-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_41" {  
-"159" [label = <(METHOD,anonymous_lambda_41)<SUB>3463</SUB>> ]
-"162" [label = <(METHOD_RETURN,ANY)<SUB>3463</SUB>> ]
+"159" [label = <(METHOD,anonymous_lambda_41)<SUB>3462</SUB>> ]
+"162" [label = <(METHOD_RETURN,ANY)<SUB>3462</SUB>> ]
   "159" -> "162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/340-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/340-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/340-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/340-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "_l" {  
-"17878" [label = <(METHOD,_l)> ]
-"17881" [label = <(METHOD_RETURN,ANY)> ]
-  "17878" -> "17881" 
+"17894" [label = <(METHOD,_l)> ]
+"17897" [label = <(METHOD_RETURN,ANY)> ]
+  "17894" -> "17897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/341-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/341-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/341-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/341-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "add" {  
-"17882" [label = <(METHOD,add)> ]
-"17886" [label = <(METHOD_RETURN,ANY)> ]
-  "17882" -> "17886" 
+"17898" [label = <(METHOD,add)> ]
+"17902" [label = <(METHOD_RETURN,ANY)> ]
+  "17898" -> "17902" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/342-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/342-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/342-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/342-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "saveDisplayCreation" {  
-"17887" [label = <(METHOD,saveDisplayCreation)> ]
-"17891" [label = <(METHOD_RETURN,ANY)> ]
-  "17887" -> "17891" 
+"17903" [label = <(METHOD,saveDisplayCreation)> ]
+"17907" [label = <(METHOD_RETURN,ANY)> ]
+  "17903" -> "17907" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/343-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/343-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/343-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/343-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "lock" {  
-"17892" [label = <(METHOD,lock)> ]
-"17895" [label = <(METHOD_RETURN,ANY)> ]
-  "17892" -> "17895" 
+"17908" [label = <(METHOD,lock)> ]
+"17911" [label = <(METHOD_RETURN,ANY)> ]
+  "17908" -> "17911" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/344-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/344-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/344-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/344-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "indexOfKey" {  
-"17896" [label = <(METHOD,indexOfKey)> ]
-"17900" [label = <(METHOD_RETURN,ANY)> ]
-  "17896" -> "17900" 
+"17912" [label = <(METHOD,indexOfKey)> ]
+"17916" [label = <(METHOD_RETURN,ANY)> ]
+  "17912" -> "17916" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/345-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/345-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/345-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/345-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "get" {  
-"17901" [label = <(METHOD,get)> ]
-"17904" [label = <(METHOD_RETURN,ANY)> ]
-  "17901" -> "17904" 
+"17917" [label = <(METHOD,get)> ]
+"17920" [label = <(METHOD_RETURN,ANY)> ]
+  "17917" -> "17920" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/346-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/346-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/346-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/346-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "valueAt" {  
-"17905" [label = <(METHOD,valueAt)> ]
-"17909" [label = <(METHOD_RETURN,ANY)> ]
-  "17905" -> "17909" 
+"17921" [label = <(METHOD,valueAt)> ]
+"17925" [label = <(METHOD_RETURN,ANY)> ]
+  "17921" -> "17925" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/347-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/347-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/347-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/347-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "saveDisplayDeletion" {  
-"17910" [label = <(METHOD,saveDisplayDeletion)> ]
-"17914" [label = <(METHOD_RETURN,ANY)> ]
-  "17910" -> "17914" 
+"17926" [label = <(METHOD,saveDisplayDeletion)> ]
+"17930" [label = <(METHOD_RETURN,ANY)> ]
+  "17926" -> "17930" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/348-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/348-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/348-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/348-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "removeItemsAt" {  
-"17915" [label = <(METHOD,removeItemsAt)> ]
-"17919" [label = <(METHOD_RETURN,ANY)> ]
-  "17915" -> "17919" 
+"17931" [label = <(METHOD,removeItemsAt)> ]
+"17935" [label = <(METHOD_RETURN,ANY)> ]
+  "17931" -> "17935" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/349-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/349-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/349-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/349-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "getInternalDisplayIdLocked" {  
-"17920" [label = <(METHOD,getInternalDisplayIdLocked)> ]
-"17922" [label = <(METHOD_RETURN,ANY)> ]
-  "17920" -> "17922" 
+"17936" [label = <(METHOD,getInternalDisplayIdLocked)> ]
+"17938" [label = <(METHOD_RETURN,ANY)> ]
+  "17936" -> "17938" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/35-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/35-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/35-cfg.dot	2023-06-07 19:33:00.217398999 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/35-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_42" {  
-"164" [label = <(METHOD,anonymous_lambda_42)<SUB>4056</SUB>> ]
-"167" [label = <(METHOD_RETURN,ANY)<SUB>4056</SUB>> ]
+"164" [label = <(METHOD,anonymous_lambda_42)<SUB>4055</SUB>> ]
+"167" [label = <(METHOD_RETURN,ANY)<SUB>4055</SUB>> ]
   "164" -> "167" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/350-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/350-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/350-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/350-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "reserve" {  
-"17923" [label = <(METHOD,reserve)> ]
-"17927" [label = <(METHOD_RETURN,ANY)> ]
-  "17923" -> "17927" 
+"17939" [label = <(METHOD,reserve)> ]
+"17943" [label = <(METHOD_RETURN,ANY)> ]
+  "17939" -> "17943" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/351-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/351-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/351-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/351-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "size" {  
-"17928" [label = <(METHOD,size)> ]
-"17931" [label = <(METHOD_RETURN,ANY)> ]
-  "17928" -> "17931" 
+"17944" [label = <(METHOD,size)> ]
+"17947" [label = <(METHOD_RETURN,ANY)> ]
+  "17944" -> "17947" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/352-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/352-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/352-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/352-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "push_back" {  
-"17932" [label = <(METHOD,push_back)> ]
-"17936" [label = <(METHOD_RETURN,ANY)> ]
-  "17932" -> "17936" 
+"17948" [label = <(METHOD,push_back)> ]
+"17952" [label = <(METHOD_RETURN,ANY)> ]
+  "17948" -> "17952" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/353-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/353-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/353-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/353-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.notEquals" {  
-"17937" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
-"17941" [label = <(METHOD_RETURN,ANY)> ]
-  "17937" -> "17941" 
+"17953" [label = <(METHOD,&lt;operator&gt;.notEquals)> ]
+"17957" [label = <(METHOD_RETURN,ANY)> ]
+  "17953" -> "17957" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/354-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/354-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/354-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/354-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirection" {  
-"17942" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
-"17945" [label = <(METHOD_RETURN,ANY)> ]
-  "17942" -> "17945" 
+"17958" [label = <(METHOD,&lt;operator&gt;.indirection)> ]
+"17961" [label = <(METHOD_RETURN,ANY)> ]
+  "17958" -> "17961" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/355-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/355-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/355-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/355-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "getPhysicalDisplayTokenLocked" {  
-"17946" [label = <(METHOD,getPhysicalDisplayTokenLocked)> ]
-"17949" [label = <(METHOD_RETURN,ANY)> ]
-  "17946" -> "17949" 
+"17962" [label = <(METHOD,getPhysicalDisplayTokenLocked)> ]
+"17965" [label = <(METHOD_RETURN,ANY)> ]
+  "17962" -> "17965" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/356-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/356-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/356-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/356-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "DisplayId" {  
-"17950" [label = <(METHOD,DisplayId)> ]
-"17953" [label = <(METHOD_RETURN,ANY)> ]
-  "17950" -> "17953" 
+"17966" [label = <(METHOD,DisplayId)> ]
+"17969" [label = <(METHOD_RETURN,ANY)> ]
+  "17966" -> "17969" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/357-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/357-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/357-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/357-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "getHwComposer" {  
-"17954" [label = <(METHOD,getHwComposer)> ]
-"17956" [label = <(METHOD_RETURN,ANY)> ]
-  "17954" -> "17956" 
+"17970" [label = <(METHOD,getHwComposer)> ]
+"17972" [label = <(METHOD_RETURN,ANY)> ]
+  "17970" -> "17972" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/358-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/358-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/358-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/358-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "getRenderEngine" {  
-"17957" [label = <(METHOD,getRenderEngine)> ]
-"17959" [label = <(METHOD_RETURN,ANY)> ]
-  "17957" -> "17959" 
+"17973" [label = <(METHOD,getRenderEngine)> ]
+"17975" [label = <(METHOD_RETURN,ANY)> ]
+  "17973" -> "17975" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/359-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/359-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/359-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/359-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "join" {  
-"17960" [label = <(METHOD,join)> ]
-"17963" [label = <(METHOD_RETURN,ANY)> ]
-  "17960" -> "17963" 
+"17976" [label = <(METHOD,join)> ]
+"17979" [label = <(METHOD_RETURN,ANY)> ]
+  "17976" -> "17979" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/36-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/36-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/36-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/36-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_43" {  
-"169" [label = <(METHOD,anonymous_lambda_43)<SUB>4319</SUB>> ]
-"172" [label = <(METHOD_RETURN,ANY)<SUB>4319</SUB>> ]
+"169" [label = <(METHOD,anonymous_lambda_43)<SUB>4318</SUB>> ]
+"172" [label = <(METHOD_RETURN,ANY)<SUB>4318</SUB>> ]
   "169" -> "172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/360-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/360-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/360-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/360-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "systemTime" {  
-"17964" [label = <(METHOD,systemTime)> ]
-"17966" [label = <(METHOD_RETURN,ANY)> ]
-  "17964" -> "17966" 
+"17980" [label = <(METHOD,systemTime)> ]
+"17982" [label = <(METHOD_RETURN,ANY)> ]
+  "17980" -> "17982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/361-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/361-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/361-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/361-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.subtraction" {  
-"17967" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
-"17971" [label = <(METHOD_RETURN,ANY)> ]
-  "17967" -> "17971" 
+"17983" [label = <(METHOD,&lt;operator&gt;.subtraction)> ]
+"17987" [label = <(METHOD_RETURN,ANY)> ]
+  "17983" -> "17987" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/362-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/362-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/362-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/362-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "long" {  
-"17972" [label = <(METHOD,long)> ]
-"17975" [label = <(METHOD_RETURN,ANY)> ]
-  "17972" -> "17975" 
+"17988" [label = <(METHOD,long)> ]
+"17991" [label = <(METHOD_RETURN,ANY)> ]
+  "17988" -> "17991" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/363-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/363-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/363-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/363-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.constructorInitializer" {  
-"17976" [label = <(METHOD,&lt;operator&gt;.constructorInitializer)> ]
-"17979" [label = <(METHOD_RETURN,ANY)> ]
-  "17976" -> "17979" 
+"17992" [label = <(METHOD,&lt;operator&gt;.constructorInitializer)> ]
+"17995" [label = <(METHOD_RETURN,ANY)> ]
+  "17992" -> "17995" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/364-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/364-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/364-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/364-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ns2ms" {  
-"17980" [label = <(METHOD,ns2ms)> ]
-"17983" [label = <(METHOD_RETURN,ANY)> ]
-  "17980" -> "17983" 
+"17996" [label = <(METHOD,ns2ms)> ]
+"17999" [label = <(METHOD_RETURN,ANY)> ]
+  "17996" -> "17999" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/365-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/365-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/365-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/365-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "initialize" {  
-"17984" [label = <(METHOD,initialize)> ]
-"17987" [label = <(METHOD_RETURN,ANY)> ]
-  "17984" -> "17987" 
+"18000" [label = <(METHOD,initialize)> ]
+"18003" [label = <(METHOD_RETURN,ANY)> ]
+  "18000" -> "18003" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/366-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/366-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/366-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/366-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "onBootFinished" {  
-"17988" [label = <(METHOD,onBootFinished)> ]
-"17991" [label = <(METHOD_RETURN,ANY)> ]
-  "17988" -> "17991" 
+"18004" [label = <(METHOD,onBootFinished)> ]
+"18007" [label = <(METHOD_RETURN,ANY)> ]
+  "18004" -> "18007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/367-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/367-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/367-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/367-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "name" {  
-"17992" [label = <(METHOD,name)> ]
-"17995" [label = <(METHOD_RETURN,ANY)> ]
-  "17992" -> "17995" 
+"18008" [label = <(METHOD,name)> ]
+"18011" [label = <(METHOD_RETURN,ANY)> ]
+  "18008" -> "18011" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/368-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/368-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/368-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/368-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "getService" {  
-"17996" [label = <(METHOD,getService)> ]
-"18000" [label = <(METHOD_RETURN,ANY)> ]
-  "17996" -> "18000" 
+"18012" [label = <(METHOD,getService)> ]
+"18016" [label = <(METHOD_RETURN,ANY)> ]
+  "18012" -> "18016" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/369-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/369-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/369-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/369-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "defaultServiceManager" {  
-"18001" [label = <(METHOD,defaultServiceManager)> ]
-"18003" [label = <(METHOD_RETURN,ANY)> ]
-  "18001" -> "18003" 
+"18017" [label = <(METHOD,defaultServiceManager)> ]
+"18019" [label = <(METHOD_RETURN,ANY)> ]
+  "18017" -> "18019" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/37-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/37-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/37-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/37-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_44" {  
-"174" [label = <(METHOD,anonymous_lambda_44)<SUB>4376</SUB>> ]
-"177" [label = <(METHOD_RETURN,ANY)<SUB>4376</SUB>> ]
+"174" [label = <(METHOD,anonymous_lambda_44)<SUB>4375</SUB>> ]
+"177" [label = <(METHOD_RETURN,ANY)<SUB>4375</SUB>> ]
   "174" -> "177" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/370-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/370-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/370-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/370-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "linkToDeath" {  
-"18004" [label = <(METHOD,linkToDeath)> ]
-"18008" [label = <(METHOD_RETURN,ANY)> ]
-  "18004" -> "18008" 
+"18020" [label = <(METHOD,linkToDeath)> ]
+"18024" [label = <(METHOD_RETURN,ANY)> ]
+  "18020" -> "18024" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/371-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/371-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/371-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/371-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
-digraph "OnBootFinished" {  
-"18009" [label = <(METHOD,OnBootFinished)> ]
-"18012" [label = <(METHOD_RETURN,ANY)> ]
-  "18009" -> "18012" 
+digraph "input" {  
+"18025" [label = <(METHOD,input)> ]
+"18028" [label = <(METHOD_RETURN,ANY)> ]
+  "18025" -> "18028" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/372-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/372-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/372-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/372-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
-digraph "property_set" {  
-"18013" [label = <(METHOD,property_set)> ]
-"18017" [label = <(METHOD_RETURN,ANY)> ]
-  "18013" -> "18017" 
+digraph "String16" {  
+"18029" [label = <(METHOD,String16)> ]
+"18032" [label = <(METHOD_RETURN,ANY)> ]
+  "18029" -> "18032" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/373-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/373-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/373-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/373-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
-digraph "LOG_EVENT_LONG" {  
-"18018" [label = <(METHOD,LOG_EVENT_LONG)> ]
-"18022" [label = <(METHOD_RETURN,ANY)> ]
-  "18018" -> "18022" 
+digraph "OnBootFinished" {  
+"18033" [label = <(METHOD,OnBootFinished)> ]
+"18036" [label = <(METHOD_RETURN,ANY)> ]
+  "18033" -> "18036" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/374-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/374-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/374-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/374-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
-digraph "input" {  
-"18023" [label = <(METHOD,input)> ]
-"18026" [label = <(METHOD_RETURN,ANY)> ]
-  "18023" -> "18026" 
+digraph "property_set" {  
+"18037" [label = <(METHOD,property_set)> ]
+"18041" [label = <(METHOD_RETURN,ANY)> ]
+  "18037" -> "18041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/375-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/375-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/375-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/375-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
-digraph "String16" {  
-"18027" [label = <(METHOD,String16)> ]
-"18030" [label = <(METHOD_RETURN,ANY)> ]
-  "18027" -> "18030" 
+digraph "LOG_EVENT_LONG" {  
+"18042" [label = <(METHOD,LOG_EVENT_LONG)> ]
+"18046" [label = <(METHOD_RETURN,ANY)> ]
+  "18042" -> "18046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/376-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/376-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/376-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/376-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "schedule" {  
-"18031" [label = <(METHOD,schedule)> ]
-"18034" [label = <(METHOD_RETURN,ANY)> ]
-  "18031" -> "18034" 
+"18047" [label = <(METHOD,schedule)> ]
+"18050" [label = <(METHOD_RETURN,ANY)> ]
+  "18047" -> "18050" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/377-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/377-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/377-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/377-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "empty" {  
-"18035" [label = <(METHOD,empty)> ]
-"18038" [label = <(METHOD_RETURN,ANY)> ]
-  "18035" -> "18038" 
+"18051" [label = <(METHOD,empty)> ]
+"18054" [label = <(METHOD_RETURN,ANY)> ]
+  "18051" -> "18054" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/378-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/378-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/378-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/378-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "back" {  
-"18039" [label = <(METHOD,back)> ]
-"18042" [label = <(METHOD_RETURN,ANY)> ]
-  "18039" -> "18042" 
+"18055" [label = <(METHOD,back)> ]
+"18058" [label = <(METHOD_RETURN,ANY)> ]
+  "18055" -> "18058" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/379-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/379-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/379-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/379-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "pop_back" {  
-"18043" [label = <(METHOD,pop_back)> ]
-"18046" [label = <(METHOD_RETURN,ANY)> ]
-  "18043" -> "18046" 
+"18059" [label = <(METHOD,pop_back)> ]
+"18062" [label = <(METHOD_RETURN,ANY)> ]
+  "18059" -> "18062" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/38-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/38-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/38-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/38-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_45" {  
-"179" [label = <(METHOD,anonymous_lambda_45)<SUB>4384</SUB>> ]
-"182" [label = <(METHOD_RETURN,ANY)<SUB>4384</SUB>> ]
+"179" [label = <(METHOD,anonymous_lambda_45)<SUB>4383</SUB>> ]
+"182" [label = <(METHOD_RETURN,ANY)<SUB>4383</SUB>> ]
   "179" -> "182" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/380-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/380-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/380-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/380-cfg.dot	2023-06-07 19:33:06.747398398 +0330
@@ -1,5 +1,5 @@
 digraph "ATRACE_INT" {  
-"18047" [label = <(METHOD,ATRACE_INT)> ]
-"18051" [label = <(METHOD_RETURN,ANY)> ]
-  "18047" -> "18051" 
+"18063" [label = <(METHOD,ATRACE_INT)> ]
+"18067" [label = <(METHOD_RETURN,ANY)> ]
+  "18063" -> "18067" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/381-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/381-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/381-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/381-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.preIncrement" {  
-"18052" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
-"18055" [label = <(METHOD_RETURN,ANY)> ]
-  "18052" -> "18055" 
+"18068" [label = <(METHOD,&lt;operator&gt;.preIncrement)> ]
+"18071" [label = <(METHOD_RETURN,ANY)> ]
+  "18068" -> "18071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/382-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/382-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/382-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/382-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setRenderEngine" {  
-"18056" [label = <(METHOD,setRenderEngine)> ]
-"18060" [label = <(METHOD_RETURN,ANY)> ]
-  "18056" -> "18060" 
+"18072" [label = <(METHOD,setRenderEngine)> ]
+"18076" [label = <(METHOD_RETURN,ANY)> ]
+  "18072" -> "18076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/383-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/383-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/383-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/383-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "renderengine::RenderEngine::create" {  
-"18061" [label = <(METHOD,renderengine::RenderEngine::create)> ]
-"18065" [label = <(METHOD_RETURN,ANY)> ]
-  "18061" -> "18065" 
+"18077" [label = <(METHOD,renderengine::RenderEngine::create)> ]
+"18081" [label = <(METHOD_RETURN,ANY)> ]
+  "18077" -> "18081" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/384-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/384-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/384-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/384-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "build" {  
-"18066" [label = <(METHOD,build)> ]
-"18069" [label = <(METHOD_RETURN,ANY)> ]
-  "18066" -> "18069" 
+"18082" [label = <(METHOD,build)> ]
+"18085" [label = <(METHOD_RETURN,ANY)> ]
+  "18082" -> "18085" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/385-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/385-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/385-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/385-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setContextPriority" {  
-"18070" [label = <(METHOD,setContextPriority)> ]
-"18074" [label = <(METHOD_RETURN,ANY)> ]
-  "18070" -> "18074" 
+"18086" [label = <(METHOD,setContextPriority)> ]
+"18090" [label = <(METHOD_RETURN,ANY)> ]
+  "18086" -> "18090" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/386-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/386-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/386-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/386-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setSupportsBackgroundBlur" {  
-"18075" [label = <(METHOD,setSupportsBackgroundBlur)> ]
-"18079" [label = <(METHOD_RETURN,ANY)> ]
-  "18075" -> "18079" 
+"18091" [label = <(METHOD,setSupportsBackgroundBlur)> ]
+"18095" [label = <(METHOD_RETURN,ANY)> ]
+  "18091" -> "18095" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/387-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/387-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/387-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/387-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setPrecacheToneMapperShaderOnly" {  
-"18080" [label = <(METHOD,setPrecacheToneMapperShaderOnly)> ]
-"18084" [label = <(METHOD_RETURN,ANY)> ]
-  "18080" -> "18084" 
+"18096" [label = <(METHOD,setPrecacheToneMapperShaderOnly)> ]
+"18100" [label = <(METHOD_RETURN,ANY)> ]
+  "18096" -> "18100" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/388-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/388-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/388-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/388-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setEnableProtectedContext" {  
-"18085" [label = <(METHOD,setEnableProtectedContext)> ]
-"18089" [label = <(METHOD_RETURN,ANY)> ]
-  "18085" -> "18089" 
+"18101" [label = <(METHOD,setEnableProtectedContext)> ]
+"18105" [label = <(METHOD_RETURN,ANY)> ]
+  "18101" -> "18105" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/389-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/389-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/389-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/389-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setUseColorManagerment" {  
-"18090" [label = <(METHOD,setUseColorManagerment)> ]
-"18094" [label = <(METHOD_RETURN,ANY)> ]
-  "18090" -> "18094" 
+"18106" [label = <(METHOD,setUseColorManagerment)> ]
+"18110" [label = <(METHOD_RETURN,ANY)> ]
+  "18106" -> "18110" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/39-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/39-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/39-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/39-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_46" {  
-"184" [label = <(METHOD,anonymous_lambda_46)<SUB>4398</SUB>> ]
-"187" [label = <(METHOD_RETURN,ANY)<SUB>4398</SUB>> ]
+"184" [label = <(METHOD,anonymous_lambda_46)<SUB>4397</SUB>> ]
+"187" [label = <(METHOD_RETURN,ANY)<SUB>4397</SUB>> ]
   "184" -> "187" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/390-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/390-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/390-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/390-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setImageCacheSize" {  
-"18095" [label = <(METHOD,setImageCacheSize)> ]
-"18099" [label = <(METHOD_RETURN,ANY)> ]
-  "18095" -> "18099" 
+"18111" [label = <(METHOD,setImageCacheSize)> ]
+"18115" [label = <(METHOD_RETURN,ANY)> ]
+  "18111" -> "18115" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/391-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/391-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/391-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/391-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setPixelFormat" {  
-"18100" [label = <(METHOD,setPixelFormat)> ]
-"18104" [label = <(METHOD_RETURN,ANY)> ]
-  "18100" -> "18104" 
+"18116" [label = <(METHOD,setPixelFormat)> ]
+"18120" [label = <(METHOD_RETURN,ANY)> ]
+  "18116" -> "18120" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/392-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/392-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/392-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/392-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "renderengine::RenderEngineCreationArgs::Builder" {  
-"18105" [label = <(METHOD,renderengine::RenderEngineCreationArgs::Builder)> ]
-"18108" [label = <(METHOD_RETURN,ANY)> ]
-  "18105" -> "18108" 
+"18121" [label = <(METHOD,renderengine::RenderEngineCreationArgs::Builder)> ]
+"18124" [label = <(METHOD_RETURN,ANY)> ]
+  "18121" -> "18124" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/393-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/393-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/393-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/393-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "enable_protected_contents" {  
-"18109" [label = <(METHOD,enable_protected_contents)> ]
-"18112" [label = <(METHOD_RETURN,ANY)> ]
-  "18109" -> "18112" 
+"18125" [label = <(METHOD,enable_protected_contents)> ]
+"18128" [label = <(METHOD_RETURN,ANY)> ]
+  "18125" -> "18128" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/394-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/394-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/394-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/394-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setTimeStats" {  
-"18113" [label = <(METHOD,setTimeStats)> ]
-"18117" [label = <(METHOD_RETURN,ANY)> ]
-  "18113" -> "18117" 
+"18129" [label = <(METHOD,setTimeStats)> ]
+"18133" [label = <(METHOD_RETURN,ANY)> ]
+  "18129" -> "18133" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/395-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/395-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/395-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/395-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "LOG_ALWAYS_FATAL_IF" {  
-"18118" [label = <(METHOD,LOG_ALWAYS_FATAL_IF)> ]
-"18121" [label = <(METHOD_RETURN,ANY)> ]
-  "18118" -> "18121" 
+"18134" [label = <(METHOD,LOG_ALWAYS_FATAL_IF)> ]
+"18137" [label = <(METHOD_RETURN,ANY)> ]
+  "18134" -> "18137" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/396-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/396-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/396-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/396-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setHwComposer" {  
-"18122" [label = <(METHOD,setHwComposer)> ]
-"18126" [label = <(METHOD_RETURN,ANY)> ]
-  "18122" -> "18126" 
+"18138" [label = <(METHOD,setHwComposer)> ]
+"18142" [label = <(METHOD_RETURN,ANY)> ]
+  "18138" -> "18142" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/397-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/397-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/397-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/397-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "createHWComposer" {  
-"18127" [label = <(METHOD,createHWComposer)> ]
-"18131" [label = <(METHOD_RETURN,ANY)> ]
-  "18127" -> "18131" 
+"18143" [label = <(METHOD,createHWComposer)> ]
+"18147" [label = <(METHOD_RETURN,ANY)> ]
+  "18143" -> "18147" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/398-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/398-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/398-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/398-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getFactory" {  
-"18132" [label = <(METHOD,getFactory)> ]
-"18134" [label = <(METHOD_RETURN,ANY)> ]
-  "18132" -> "18134" 
+"18148" [label = <(METHOD,getFactory)> ]
+"18150" [label = <(METHOD_RETURN,ANY)> ]
+  "18148" -> "18150" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/399-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/399-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/399-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/399-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getBE" {  
-"18135" [label = <(METHOD,getBE)> ]
-"18137" [label = <(METHOD_RETURN,ANY)> ]
-  "18135" -> "18137" 
+"18151" [label = <(METHOD,getBE)> ]
+"18153" [label = <(METHOD_RETURN,ANY)> ]
+  "18151" -> "18153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/4-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/4-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/4-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/4-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_11" {  
-"21" [label = <(METHOD,anonymous_lambda_11)<SUB>1293</SUB>> ]
-"24" [label = <(METHOD_RETURN,ANY)<SUB>1293</SUB>> ]
+"21" [label = <(METHOD,anonymous_lambda_11)<SUB>1292</SUB>> ]
+"24" [label = <(METHOD_RETURN,ANY)<SUB>1292</SUB>> ]
   "21" -> "24" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/40-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/40-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/40-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/40-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_47" {  
-"189" [label = <(METHOD,anonymous_lambda_47)<SUB>4414</SUB>> ]
-"192" [label = <(METHOD_RETURN,ANY)<SUB>4414</SUB>> ]
+"189" [label = <(METHOD,anonymous_lambda_47)<SUB>4413</SUB>> ]
+"192" [label = <(METHOD_RETURN,ANY)<SUB>4413</SUB>> ]
   "189" -> "192" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/400-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/400-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/400-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/400-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setConfiguration" {  
-"18138" [label = <(METHOD,setConfiguration)> ]
-"18143" [label = <(METHOD_RETURN,ANY)> ]
-  "18138" -> "18143" 
+"18154" [label = <(METHOD,setConfiguration)> ]
+"18159" [label = <(METHOD_RETURN,ANY)> ]
+  "18154" -> "18159" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/401-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/401-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/401-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/401-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "processDisplayHotplugEventsLocked" {  
-"18144" [label = <(METHOD,processDisplayHotplugEventsLocked)> ]
-"18146" [label = <(METHOD_RETURN,ANY)> ]
-  "18144" -> "18146" 
+"18160" [label = <(METHOD,processDisplayHotplugEventsLocked)> ]
+"18162" [label = <(METHOD_RETURN,ANY)> ]
+  "18160" -> "18162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/402-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/402-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/402-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/402-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDefaultDisplayDeviceLocked" {  
-"18147" [label = <(METHOD,getDefaultDisplayDeviceLocked)> ]
-"18149" [label = <(METHOD_RETURN,ANY)> ]
-  "18147" -> "18149" 
+"18163" [label = <(METHOD,getDefaultDisplayDeviceLocked)> ]
+"18165" [label = <(METHOD_RETURN,ANY)> ]
+  "18163" -> "18165" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/403-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/403-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/403-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/403-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "isConnected" {  
-"18150" [label = <(METHOD,isConnected)> ]
-"18154" [label = <(METHOD_RETURN,ANY)> ]
-  "18150" -> "18154" 
+"18166" [label = <(METHOD,isConnected)> ]
+"18170" [label = <(METHOD_RETURN,ANY)> ]
+  "18166" -> "18170" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/404-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/404-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/404-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/404-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getId" {  
-"18155" [label = <(METHOD,getId)> ]
-"18158" [label = <(METHOD_RETURN,ANY)> ]
-  "18155" -> "18158" 
+"18171" [label = <(METHOD,getId)> ]
+"18174" [label = <(METHOD_RETURN,ANY)> ]
+  "18171" -> "18174" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/405-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/405-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/405-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/405-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "dvr::VrFlinger::Create" {  
-"18159" [label = <(METHOD,dvr::VrFlinger::Create)> ]
-"18165" [label = <(METHOD_RETURN,ANY)> ]
-  "18159" -> "18165" 
+"18175" [label = <(METHOD,dvr::VrFlinger::Create)> ]
+"18181" [label = <(METHOD_RETURN,ANY)> ]
+  "18175" -> "18181" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/406-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/406-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/406-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/406-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getComposer" {  
-"18166" [label = <(METHOD,getComposer)> ]
-"18169" [label = <(METHOD_RETURN,ANY)> ]
-  "18166" -> "18169" 
+"18182" [label = <(METHOD,getComposer)> ]
+"18185" [label = <(METHOD_RETURN,ANY)> ]
+  "18182" -> "18185" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/407-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/407-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/407-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/407-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "value_or" {  
-"18170" [label = <(METHOD,value_or)> ]
-"18174" [label = <(METHOD_RETURN,ANY)> ]
-  "18170" -> "18174" 
+"18186" [label = <(METHOD,value_or)> ]
+"18190" [label = <(METHOD_RETURN,ANY)> ]
+  "18186" -> "18190" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/408-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/408-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/408-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/408-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "fromPhysicalDisplayId" {  
-"18175" [label = <(METHOD,fromPhysicalDisplayId)> ]
-"18179" [label = <(METHOD_RETURN,ANY)> ]
-  "18175" -> "18179" 
+"18191" [label = <(METHOD,fromPhysicalDisplayId)> ]
+"18195" [label = <(METHOD_RETURN,ANY)> ]
+  "18191" -> "18195" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/409-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/409-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/409-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/409-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "primeCache" {  
-"18180" [label = <(METHOD,primeCache)> ]
-"18183" [label = <(METHOD_RETURN,ANY)> ]
-  "18180" -> "18183" 
+"18196" [label = <(METHOD,primeCache)> ]
+"18199" [label = <(METHOD_RETURN,ANY)> ]
+  "18196" -> "18199" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/41-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/41-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/41-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/41-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_48" {  
-"194" [label = <(METHOD,anonymous_lambda_48)<SUB>4623</SUB>> ]
-"196" [label = <(METHOD_RETURN,ANY)<SUB>4623</SUB>> ]
+"194" [label = <(METHOD,anonymous_lambda_48)<SUB>4622</SUB>> ]
+"196" [label = <(METHOD_RETURN,ANY)<SUB>4622</SUB>> ]
   "194" -> "196" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/410-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/410-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/410-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/410-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "hasCapability" {  
-"18184" [label = <(METHOD,hasCapability)> ]
-"18188" [label = <(METHOD_RETURN,ANY)> ]
-  "18184" -> "18188" 
+"18200" [label = <(METHOD,hasCapability)> ]
+"18204" [label = <(METHOD_RETURN,ANY)> ]
+  "18200" -> "18204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/411-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/411-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/411-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/411-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "createStartPropertySetThread" {  
-"18189" [label = <(METHOD,createStartPropertySetThread)> ]
-"18193" [label = <(METHOD_RETURN,ANY)> ]
-  "18189" -> "18193" 
+"18205" [label = <(METHOD,createStartPropertySetThread)> ]
+"18209" [label = <(METHOD_RETURN,ANY)> ]
+  "18205" -> "18209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/412-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/412-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/412-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/412-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "Start" {  
-"18194" [label = <(METHOD,Start)> ]
-"18197" [label = <(METHOD_RETURN,ANY)> ]
-  "18194" -> "18197" 
+"18210" [label = <(METHOD,Start)> ]
+"18213" [label = <(METHOD_RETURN,ANY)> ]
+  "18210" -> "18213" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/413-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/413-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/413-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/413-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "atof" {  
-"18198" [label = <(METHOD,atof)> ]
-"18201" [label = <(METHOD_RETURN,ANY)> ]
-  "18198" -> "18201" 
+"18214" [label = <(METHOD,atof)> ]
+"18217" [label = <(METHOD_RETURN,ANY)> ]
+  "18214" -> "18217" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/414-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/414-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/414-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/414-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "updateColorMatrixLocked" {  
-"18202" [label = <(METHOD,updateColorMatrixLocked)> ]
-"18204" [label = <(METHOD_RETURN,ANY)> ]
-  "18202" -> "18204" 
+"18218" [label = <(METHOD,updateColorMatrixLocked)> ]
+"18220" [label = <(METHOD_RETURN,ANY)> ]
+  "18218" -> "18220" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/415-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/415-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/415-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/415-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getMaxTextureSize" {  
-"18205" [label = <(METHOD,getMaxTextureSize)> ]
-"18208" [label = <(METHOD_RETURN,ANY)> ]
-  "18205" -> "18208" 
+"18221" [label = <(METHOD,getMaxTextureSize)> ]
+"18224" [label = <(METHOD_RETURN,ANY)> ]
+  "18221" -> "18224" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/416-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/416-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/416-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/416-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getMaxViewportDims" {  
-"18209" [label = <(METHOD,getMaxViewportDims)> ]
-"18212" [label = <(METHOD_RETURN,ANY)> ]
-  "18209" -> "18212" 
+"18225" [label = <(METHOD,getMaxViewportDims)> ]
+"18228" [label = <(METHOD_RETURN,ANY)> ]
+  "18225" -> "18228" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/417-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/417-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/417-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/417-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "authenticateSurfaceTextureLocked" {  
-"18213" [label = <(METHOD,authenticateSurfaceTextureLocked)> ]
-"18216" [label = <(METHOD_RETURN,ANY)> ]
-  "18213" -> "18216" 
+"18229" [label = <(METHOD,authenticateSurfaceTextureLocked)> ]
+"18232" [label = <(METHOD_RETURN,ANY)> ]
+  "18229" -> "18232" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/418-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/418-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/418-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/418-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "surfaceTextureBinder" {  
-"18217" [label = <(METHOD,surfaceTextureBinder)> ]
-"18220" [label = <(METHOD_RETURN,ANY)> ]
-  "18217" -> "18220" 
+"18233" [label = <(METHOD,surfaceTextureBinder)> ]
+"18236" [label = <(METHOD_RETURN,ANY)> ]
+  "18233" -> "18236" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/419-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/419-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/419-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/419-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "IInterface::asBinder" {  
-"18221" [label = <(METHOD,IInterface::asBinder)> ]
-"18225" [label = <(METHOD_RETURN,ANY)> ]
-  "18221" -> "18225" 
+"18237" [label = <(METHOD,IInterface::asBinder)> ]
+"18241" [label = <(METHOD_RETURN,ANY)> ]
+  "18237" -> "18241" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/42-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/42-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/42-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/42-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_49" {  
-"198" [label = <(METHOD,anonymous_lambda_49)<SUB>4658</SUB>> ]
-"200" [label = <(METHOD_RETURN,ANY)<SUB>4658</SUB>> ]
+"198" [label = <(METHOD,anonymous_lambda_49)<SUB>4657</SUB>> ]
+"200" [label = <(METHOD_RETURN,ANY)<SUB>4657</SUB>> ]
   "198" -> "200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/420-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/420-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/420-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/420-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "count" {  
-"18226" [label = <(METHOD,count)> ]
-"18229" [label = <(METHOD_RETURN,ANY)> ]
-  "18226" -> "18229" 
+"18242" [label = <(METHOD,count)> ]
+"18245" [label = <(METHOD_RETURN,ANY)> ]
+  "18242" -> "18245" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/421-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/421-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/421-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/421-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "std::this_thread::get_id" {  
-"18230" [label = <(METHOD,std::this_thread::get_id)> ]
-"18233" [label = <(METHOD_RETURN,ANY)> ]
-  "18230" -> "18233" 
+"18246" [label = <(METHOD,std::this_thread::get_id)> ]
+"18249" [label = <(METHOD_RETURN,ANY)> ]
+  "18246" -> "18249" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/422-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/422-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/422-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/422-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayDeviceLocked" {  
-"18234" [label = <(METHOD,getDisplayDeviceLocked)> ]
-"18237" [label = <(METHOD_RETURN,ANY)> ]
-  "18234" -> "18237" 
+"18250" [label = <(METHOD,getDisplayDeviceLocked)> ]
+"18253" [label = <(METHOD_RETURN,ANY)> ]
+  "18250" -> "18253" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/423-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/423-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/423-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/423-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getLayerStack" {  
-"18238" [label = <(METHOD,getLayerStack)> ]
-"18241" [label = <(METHOD_RETURN,ANY)> ]
-  "18238" -> "18241" 
+"18254" [label = <(METHOD,getLayerStack)> ]
+"18257" [label = <(METHOD_RETURN,ANY)> ]
+  "18254" -> "18257" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/424-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/424-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/424-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/424-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getOrientation" {  
-"18242" [label = <(METHOD,getOrientation)> ]
-"18245" [label = <(METHOD_RETURN,ANY)> ]
-  "18242" -> "18245" 
+"18258" [label = <(METHOD,getOrientation)> ]
+"18261" [label = <(METHOD_RETURN,ANY)> ]
+  "18258" -> "18261" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/425-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/425-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/425-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/425-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getViewport" {  
-"18246" [label = <(METHOD,getViewport)> ]
-"18249" [label = <(METHOD_RETURN,ANY)> ]
-  "18246" -> "18249" 
+"18262" [label = <(METHOD,getViewport)> ]
+"18265" [label = <(METHOD_RETURN,ANY)> ]
+  "18262" -> "18265" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/426-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/426-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/426-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/426-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "isValid" {  
-"18250" [label = <(METHOD,isValid)> ]
-"18253" [label = <(METHOD_RETURN,ANY)> ]
-  "18250" -> "18253" 
+"18266" [label = <(METHOD,isValid)> ]
+"18269" [label = <(METHOD_RETURN,ANY)> ]
+  "18266" -> "18269" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/427-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/427-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/427-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/427-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getSize" {  
-"18254" [label = <(METHOD,getSize)> ]
-"18257" [label = <(METHOD_RETURN,ANY)> ]
-  "18254" -> "18257" 
+"18270" [label = <(METHOD,getSize)> ]
+"18273" [label = <(METHOD_RETURN,ANY)> ]
+  "18270" -> "18273" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/428-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/428-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/428-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/428-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getConnectionType" {  
-"18258" [label = <(METHOD,getConnectionType)> ]
-"18261" [label = <(METHOD_RETURN,ANY)> ]
-  "18258" -> "18261" 
+"18274" [label = <(METHOD,getConnectionType)> ]
+"18277" [label = <(METHOD_RETURN,ANY)> ]
+  "18274" -> "18277" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/429-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/429-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/429-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/429-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentDivision" {  
-"18262" [label = <(METHOD,&lt;operator&gt;.assignmentDivision)> ]
-"18266" [label = <(METHOD_RETURN,ANY)> ]
-  "18262" -> "18266" 
+"18278" [label = <(METHOD,&lt;operator&gt;.assignmentDivision)> ]
+"18282" [label = <(METHOD_RETURN,ANY)> ]
+  "18278" -> "18282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/43-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/43-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/43-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/43-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_50" {  
-"202" [label = <(METHOD,anonymous_lambda_50)<SUB>4663</SUB>> ]
-"204" [label = <(METHOD_RETURN,ANY)<SUB>4663</SUB>> ]
+"202" [label = <(METHOD,anonymous_lambda_50)<SUB>4662</SUB>> ]
+"204" [label = <(METHOD_RETURN,ANY)<SUB>4662</SUB>> ]
   "202" -> "204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/430-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/430-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/430-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/430-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "isSecure" {  
-"18267" [label = <(METHOD,isSecure)> ]
-"18270" [label = <(METHOD_RETURN,ANY)> ]
-  "18267" -> "18270" 
+"18283" [label = <(METHOD,isSecure)> ]
+"18286" [label = <(METHOD_RETURN,ANY)> ]
+  "18283" -> "18286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/431-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/431-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/431-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/431-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDeviceProductInfoLocked" {  
-"18271" [label = <(METHOD,getDeviceProductInfoLocked)> ]
-"18274" [label = <(METHOD_RETURN,ANY)> ]
-  "18271" -> "18274" 
+"18287" [label = <(METHOD,getDeviceProductInfoLocked)> ]
+"18290" [label = <(METHOD_RETURN,ANY)> ]
+  "18287" -> "18290" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/432-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/432-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/432-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/432-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getPhysicalDisplayIdLocked" {  
-"18275" [label = <(METHOD,getPhysicalDisplayIdLocked)> ]
-"18278" [label = <(METHOD_RETURN,ANY)> ]
-  "18275" -> "18278" 
+"18291" [label = <(METHOD,getPhysicalDisplayIdLocked)> ]
+"18294" [label = <(METHOD_RETURN,ANY)> ]
+  "18291" -> "18294" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/433-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/433-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/433-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/433-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "clear" {  
-"18279" [label = <(METHOD,clear)> ]
-"18282" [label = <(METHOD_RETURN,ANY)> ]
-  "18279" -> "18282" 
+"18295" [label = <(METHOD,clear)> ]
+"18298" [label = <(METHOD_RETURN,ANY)> ]
+  "18295" -> "18298" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/434-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/434-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/434-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/434-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getConfigs" {  
-"18283" [label = <(METHOD,getConfigs)> ]
-"18287" [label = <(METHOD_RETURN,ANY)> ]
-  "18283" -> "18287" 
+"18299" [label = <(METHOD,getConfigs)> ]
+"18303" [label = <(METHOD_RETURN,ANY)> ]
+  "18299" -> "18303" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/435-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/435-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/435-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/435-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getWidth" {  
-"18288" [label = <(METHOD,getWidth)> ]
-"18291" [label = <(METHOD_RETURN,ANY)> ]
-  "18288" -> "18291" 
+"18304" [label = <(METHOD,getWidth)> ]
+"18307" [label = <(METHOD_RETURN,ANY)> ]
+  "18304" -> "18307" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/436-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/436-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/436-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/436-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getHeight" {  
-"18292" [label = <(METHOD,getHeight)> ]
-"18295" [label = <(METHOD_RETURN,ANY)> ]
-  "18292" -> "18295" 
+"18308" [label = <(METHOD,getHeight)> ]
+"18311" [label = <(METHOD_RETURN,ANY)> ]
+  "18308" -> "18311" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/437-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/437-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/437-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/437-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDpiX" {  
-"18296" [label = <(METHOD,getDpiX)> ]
-"18299" [label = <(METHOD_RETURN,ANY)> ]
-  "18296" -> "18299" 
+"18312" [label = <(METHOD,getDpiX)> ]
+"18315" [label = <(METHOD_RETURN,ANY)> ]
+  "18312" -> "18315" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/438-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/438-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/438-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/438-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDpiY" {  
-"18300" [label = <(METHOD,getDpiY)> ]
-"18303" [label = <(METHOD_RETURN,ANY)> ]
-  "18300" -> "18303" 
+"18316" [label = <(METHOD,getDpiY)> ]
+"18319" [label = <(METHOD_RETURN,ANY)> ]
+  "18316" -> "18319" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/439-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/439-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/439-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/439-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "std::swap" {  
-"18304" [label = <(METHOD,std::swap)> ]
-"18309" [label = <(METHOD_RETURN,ANY)> ]
-  "18304" -> "18309" 
+"18320" [label = <(METHOD,std::swap)> ]
+"18325" [label = <(METHOD_RETURN,ANY)> ]
+  "18320" -> "18325" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/44-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/44-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/44-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/44-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_51" {  
-"206" [label = <(METHOD,anonymous_lambda_51)<SUB>4734</SUB>> ]
-"209" [label = <(METHOD_RETURN,ANY)<SUB>4734</SUB>> ]
+"206" [label = <(METHOD,anonymous_lambda_51)<SUB>4733</SUB>> ]
+"209" [label = <(METHOD_RETURN,ANY)<SUB>4733</SUB>> ]
   "206" -> "209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/440-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/440-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/440-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/440-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "ui::Size" {  
-"18310" [label = <(METHOD,ui::Size)> ]
-"18315" [label = <(METHOD_RETURN,ANY)> ]
-  "18310" -> "18315" 
+"18326" [label = <(METHOD,ui::Size)> ]
+"18331" [label = <(METHOD_RETURN,ANY)> ]
+  "18326" -> "18331" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/441-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/441-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/441-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/441-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getVsyncPeriod" {  
-"18316" [label = <(METHOD,getVsyncPeriod)> ]
-"18319" [label = <(METHOD_RETURN,ANY)> ]
-  "18316" -> "18319" 
+"18332" [label = <(METHOD,getVsyncPeriod)> ]
+"18335" [label = <(METHOD_RETURN,ANY)> ]
+  "18332" -> "18335" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/442-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/442-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/442-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/442-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.division" {  
-"18320" [label = <(METHOD,&lt;operator&gt;.division)> ]
-"18324" [label = <(METHOD_RETURN,ANY)> ]
-  "18320" -> "18324" 
+"18336" [label = <(METHOD,&lt;operator&gt;.division)> ]
+"18340" [label = <(METHOD_RETURN,ANY)> ]
+  "18336" -> "18340" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/443-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/443-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/443-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/443-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getOffsetsForRefreshRate" {  
-"18325" [label = <(METHOD,getOffsetsForRefreshRate)> ]
-"18329" [label = <(METHOD_RETURN,ANY)> ]
-  "18325" -> "18329" 
+"18341" [label = <(METHOD,getOffsetsForRefreshRate)> ]
+"18345" [label = <(METHOD_RETURN,ANY)> ]
+  "18341" -> "18345" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/444-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/444-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/444-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/444-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getConfigGroup" {  
-"18330" [label = <(METHOD,getConfigGroup)> ]
-"18333" [label = <(METHOD_RETURN,ANY)> ]
-  "18330" -> "18333" 
+"18346" [label = <(METHOD,getConfigGroup)> ]
+"18349" [label = <(METHOD_RETURN,ANY)> ]
+  "18346" -> "18349" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/445-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/445-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/445-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/445-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayStatInfo" {  
-"18334" [label = <(METHOD,getDisplayStatInfo)> ]
-"18338" [label = <(METHOD_RETURN,ANY)> ]
-  "18334" -> "18338" 
+"18350" [label = <(METHOD,getDisplayStatInfo)> ]
+"18354" [label = <(METHOD_RETURN,ANY)> ]
+  "18350" -> "18354" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/446-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/446-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/446-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/446-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "value" {  
-"18339" [label = <(METHOD,value)> ]
-"18342" [label = <(METHOD_RETURN,ANY)> ]
-  "18339" -> "18342" 
+"18355" [label = <(METHOD,value)> ]
+"18358" [label = <(METHOD_RETURN,ANY)> ]
+  "18355" -> "18358" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/447-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/447-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/447-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/447-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getActiveConfig" {  
-"18343" [label = <(METHOD,getActiveConfig)> ]
-"18347" [label = <(METHOD_RETURN,ANY)> ]
-  "18343" -> "18347" 
+"18359" [label = <(METHOD,getActiveConfig)> ]
+"18363" [label = <(METHOD_RETURN,ANY)> ]
+  "18359" -> "18363" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/448-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/448-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/448-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/448-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "isPrimary" {  
-"18348" [label = <(METHOD,isPrimary)> ]
-"18351" [label = <(METHOD_RETURN,ANY)> ]
-  "18348" -> "18351" 
+"18364" [label = <(METHOD,isPrimary)> ]
+"18367" [label = <(METHOD_RETURN,ANY)> ]
+  "18364" -> "18367" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/449-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/449-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/449-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/449-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getDesiredActiveConfig" {  
-"18352" [label = <(METHOD,getDesiredActiveConfig)> ]
-"18354" [label = <(METHOD_RETURN,ANY)> ]
-  "18352" -> "18354" 
+"18368" [label = <(METHOD,getDesiredActiveConfig)> ]
+"18370" [label = <(METHOD_RETURN,ANY)> ]
+  "18368" -> "18370" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/45-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/45-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/45-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/45-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_52" {  
-"211" [label = <(METHOD,anonymous_lambda_52)<SUB>4818</SUB>> ]
-"214" [label = <(METHOD_RETURN,ANY)<SUB>4818</SUB>> ]
+"211" [label = <(METHOD,anonymous_lambda_52)<SUB>4817</SUB>> ]
+"214" [label = <(METHOD_RETURN,ANY)<SUB>4817</SUB>> ]
   "211" -> "214" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/450-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/450-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/450-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/450-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "ATRACE_CALL" {  
-"18355" [label = <(METHOD,ATRACE_CALL)> ]
-"18357" [label = <(METHOD_RETURN,ANY)> ]
-  "18355" -> "18357" 
+"18371" [label = <(METHOD,ATRACE_CALL)> ]
+"18373" [label = <(METHOD_RETURN,ANY)> ]
+  "18371" -> "18373" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/451-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/451-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/451-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/451-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getRefreshRateFromConfigId" {  
-"18358" [label = <(METHOD,getRefreshRateFromConfigId)> ]
-"18362" [label = <(METHOD_RETURN,ANY)> ]
-  "18358" -> "18362" 
+"18374" [label = <(METHOD,getRefreshRateFromConfigId)> ]
+"18378" [label = <(METHOD_RETURN,ANY)> ]
+  "18374" -> "18378" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/452-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/452-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/452-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/452-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "c_str" {  
-"18363" [label = <(METHOD,c_str)> ]
-"18366" [label = <(METHOD_RETURN,ANY)> ]
-  "18363" -> "18366" 
+"18379" [label = <(METHOD,c_str)> ]
+"18382" [label = <(METHOD_RETURN,ANY)> ]
+  "18379" -> "18382" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/453-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/453-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/453-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/453-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getName" {  
-"18367" [label = <(METHOD,getName)> ]
-"18370" [label = <(METHOD_RETURN,ANY)> ]
-  "18367" -> "18370" 
+"18383" [label = <(METHOD,getName)> ]
+"18386" [label = <(METHOD_RETURN,ANY)> ]
+  "18383" -> "18386" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/454-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/454-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/454-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/454-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.or" {  
-"18371" [label = <(METHOD,&lt;operator&gt;.or)> ]
-"18375" [label = <(METHOD_RETURN,ANY)> ]
-  "18371" -> "18375" 
+"18387" [label = <(METHOD,&lt;operator&gt;.or)> ]
+"18391" [label = <(METHOD_RETURN,ANY)> ]
+  "18387" -> "18391" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/455-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/455-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/455-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/455-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getConfigId" {  
-"18376" [label = <(METHOD,getConfigId)> ]
-"18379" [label = <(METHOD_RETURN,ANY)> ]
-  "18376" -> "18379" 
+"18392" [label = <(METHOD,getConfigId)> ]
+"18395" [label = <(METHOD_RETURN,ANY)> ]
+  "18392" -> "18395" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/456-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/456-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/456-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/456-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "repaintEverythingForHWC" {  
-"18380" [label = <(METHOD,repaintEverythingForHWC)> ]
-"18382" [label = <(METHOD_RETURN,ANY)> ]
-  "18380" -> "18382" 
+"18396" [label = <(METHOD,repaintEverythingForHWC)> ]
+"18398" [label = <(METHOD_RETURN,ANY)> ]
+  "18396" -> "18398" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/457-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/457-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/457-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/457-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "resyncToHardwareVsync" {  
-"18383" [label = <(METHOD,resyncToHardwareVsync)> ]
-"18388" [label = <(METHOD_RETURN,ANY)> ]
-  "18383" -> "18388" 
+"18399" [label = <(METHOD,resyncToHardwareVsync)> ]
+"18404" [label = <(METHOD_RETURN,ANY)> ]
+  "18399" -> "18404" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/458-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/458-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/458-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/458-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "onRefreshRateChangeInitiated" {  
-"18389" [label = <(METHOD,onRefreshRateChangeInitiated)> ]
-"18392" [label = <(METHOD_RETURN,ANY)> ]
-  "18389" -> "18392" 
+"18405" [label = <(METHOD,onRefreshRateChangeInitiated)> ]
+"18408" [label = <(METHOD_RETURN,ANY)> ]
+  "18405" -> "18408" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/459-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/459-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/459-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/459-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setRefreshRateFps" {  
-"18393" [label = <(METHOD,setRefreshRateFps)> ]
-"18397" [label = <(METHOD_RETURN,ANY)> ]
-  "18393" -> "18397" 
+"18409" [label = <(METHOD,setRefreshRateFps)> ]
+"18413" [label = <(METHOD_RETURN,ANY)> ]
+  "18409" -> "18413" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/46-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/46-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/46-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/46-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_53" {  
-"216" [label = <(METHOD,anonymous_lambda_53)<SUB>5356</SUB>> ]
-"218" [label = <(METHOD_RETURN,ANY)<SUB>5356</SUB>> ]
+"216" [label = <(METHOD,anonymous_lambda_53)<SUB>5355</SUB>> ]
+"218" [label = <(METHOD_RETURN,ANY)<SUB>5355</SUB>> ]
   "216" -> "218" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/460-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/460-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/460-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/460-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getFps" {  
-"18398" [label = <(METHOD,getFps)> ]
-"18401" [label = <(METHOD_RETURN,ANY)> ]
-  "18398" -> "18401" 
+"18414" [label = <(METHOD,getFps)> ]
+"18417" [label = <(METHOD_RETURN,ANY)> ]
+  "18414" -> "18417" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/461-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/461-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/461-cfg.dot	2023-06-07 19:33:00.517398972 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/461-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setPhaseOffsets" {  
-"18402" [label = <(METHOD,setPhaseOffsets)> ]
-"18406" [label = <(METHOD_RETURN,ANY)> ]
-  "18402" -> "18406" 
+"18418" [label = <(METHOD,setPhaseOffsets)> ]
+"18422" [label = <(METHOD_RETURN,ANY)> ]
+  "18418" -> "18422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/462-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/462-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/462-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/462-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getCurrentOffsets" {  
-"18407" [label = <(METHOD,getCurrentOffsets)> ]
-"18410" [label = <(METHOD_RETURN,ANY)> ]
-  "18407" -> "18410" 
+"18423" [label = <(METHOD,getCurrentOffsets)> ]
+"18426" [label = <(METHOD_RETURN,ANY)> ]
+  "18423" -> "18426" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/463-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/463-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/463-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/463-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setConfigChangePending" {  
-"18411" [label = <(METHOD,setConfigChangePending)> ]
-"18415" [label = <(METHOD_RETURN,ANY)> ]
-  "18411" -> "18415" 
+"18427" [label = <(METHOD,setConfigChangePending)> ]
+"18431" [label = <(METHOD_RETURN,ANY)> ]
+  "18427" -> "18431" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/464-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/464-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/464-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/464-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "changeRefreshRate" {  
-"18416" [label = <(METHOD,changeRefreshRate)> ]
-"18420" [label = <(METHOD_RETURN,ANY)> ]
-  "18416" -> "18420" 
+"18432" [label = <(METHOD,changeRefreshRate)> ]
+"18436" [label = <(METHOD_RETURN,ANY)> ]
+  "18432" -> "18436" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/465-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/465-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/465-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/465-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setCurrentConfigId" {  
-"18421" [label = <(METHOD,setCurrentConfigId)> ]
-"18425" [label = <(METHOD_RETURN,ANY)> ]
-  "18421" -> "18425" 
+"18437" [label = <(METHOD,setCurrentConfigId)> ]
+"18441" [label = <(METHOD_RETURN,ANY)> ]
+  "18437" -> "18441" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/466-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/466-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/466-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/466-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setConfigMode" {  
-"18426" [label = <(METHOD,setConfigMode)> ]
-"18430" [label = <(METHOD_RETURN,ANY)> ]
-  "18426" -> "18430" 
+"18442" [label = <(METHOD,setConfigMode)> ]
+"18446" [label = <(METHOD_RETURN,ANY)> ]
+  "18442" -> "18446" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/467-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/467-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/467-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/467-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setActiveConfig" {  
-"18431" [label = <(METHOD,setActiveConfig)> ]
-"18435" [label = <(METHOD_RETURN,ANY)> ]
-  "18431" -> "18435" 
+"18447" [label = <(METHOD,setActiveConfig)> ]
+"18451" [label = <(METHOD_RETURN,ANY)> ]
+  "18447" -> "18451" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/468-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/468-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/468-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/468-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "incrementRefreshRateSwitches" {  
-"18436" [label = <(METHOD,incrementRefreshRateSwitches)> ]
-"18439" [label = <(METHOD_RETURN,ANY)> ]
-  "18436" -> "18439" 
+"18452" [label = <(METHOD,incrementRefreshRateSwitches)> ]
+"18455" [label = <(METHOD_RETURN,ANY)> ]
+  "18452" -> "18455" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/469-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/469-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/469-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/469-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "onPrimaryDisplayConfigChanged" {  
-"18440" [label = <(METHOD,onPrimaryDisplayConfigChanged)> ]
-"18447" [label = <(METHOD_RETURN,ANY)> ]
-  "18440" -> "18447" 
+"18456" [label = <(METHOD,onPrimaryDisplayConfigChanged)> ]
+"18463" [label = <(METHOD_RETURN,ANY)> ]
+  "18456" -> "18463" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/47-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/47-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/47-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/47-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_54" {  
-"220" [label = <(METHOD,anonymous_lambda_54)<SUB>5713</SUB>> ]
-"223" [label = <(METHOD_RETURN,ANY)<SUB>5713</SUB>> ]
+"220" [label = <(METHOD,anonymous_lambda_54)<SUB>5712</SUB>> ]
+"223" [label = <(METHOD_RETURN,ANY)<SUB>5712</SUB>> ]
   "220" -> "223" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/470-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/470-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/470-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/470-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "desiredActiveConfigChangeDone" {  
-"18448" [label = <(METHOD,desiredActiveConfigChangeDone)> ]
-"18450" [label = <(METHOD_RETURN,ANY)> ]
-  "18448" -> "18450" 
+"18464" [label = <(METHOD,desiredActiveConfigChangeDone)> ]
+"18466" [label = <(METHOD_RETURN,ANY)> ]
+  "18464" -> "18466" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/471-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/471-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/471-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/471-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "isDisplayConfigAllowed" {  
-"18451" [label = <(METHOD,isDisplayConfigAllowed)> ]
-"18454" [label = <(METHOD_RETURN,ANY)> ]
-  "18451" -> "18454" 
+"18467" [label = <(METHOD,isDisplayConfigAllowed)> ]
+"18470" [label = <(METHOD_RETURN,ANY)> ]
+  "18467" -> "18470" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/472-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/472-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/472-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/472-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "setActiveConfigWithConstraints" {  
-"18455" [label = <(METHOD,setActiveConfigWithConstraints)> ]
-"18462" [label = <(METHOD_RETURN,ANY)> ]
-  "18455" -> "18462" 
+"18471" [label = <(METHOD,setActiveConfigWithConstraints)> ]
+"18478" [label = <(METHOD_RETURN,ANY)> ]
+  "18471" -> "18478" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/473-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/473-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/473-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/473-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.addressOf" {  
-"18463" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
-"18466" [label = <(METHOD_RETURN,ANY)> ]
-  "18463" -> "18466" 
+"18479" [label = <(METHOD,&lt;operator&gt;.addressOf)> ]
+"18482" [label = <(METHOD_RETURN,ANY)> ]
+  "18479" -> "18482" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/474-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/474-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/474-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/474-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGW" {  
-"18467" [label = <(METHOD,ALOGW)> ]
-"18470" [label = <(METHOD_RETURN,ANY)> ]
-  "18467" -> "18470" 
+"18483" [label = <(METHOD,ALOGW)> ]
+"18486" [label = <(METHOD_RETURN,ANY)> ]
+  "18483" -> "18486" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/475-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/475-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/475-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/475-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "onNewVsyncPeriodChangeTimeline" {  
-"18471" [label = <(METHOD,onNewVsyncPeriodChangeTimeline)> ]
-"18475" [label = <(METHOD_RETURN,ANY)> ]
-  "18471" -> "18475" 
+"18487" [label = <(METHOD,onNewVsyncPeriodChangeTimeline)> ]
+"18491" [label = <(METHOD_RETURN,ANY)> ]
+  "18487" -> "18491" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/476-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/476-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/476-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/476-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getColorModes" {  
-"18476" [label = <(METHOD,getColorModes)> ]
-"18480" [label = <(METHOD_RETURN,ANY)> ]
-  "18476" -> "18480" 
+"18492" [label = <(METHOD,getColorModes)> ]
+"18496" [label = <(METHOD_RETURN,ANY)> ]
+  "18492" -> "18496" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/477-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/477-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/477-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/477-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "std::remove_copy_if" {  
-"18481" [label = <(METHOD,std::remove_copy_if)> ]
-"18488" [label = <(METHOD_RETURN,ANY)> ]
-  "18481" -> "18488" 
+"18497" [label = <(METHOD,std::remove_copy_if)> ]
+"18504" [label = <(METHOD_RETURN,ANY)> ]
+  "18497" -> "18504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/478-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/478-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/478-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/478-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "cbegin" {  
-"18489" [label = <(METHOD,cbegin)> ]
-"18492" [label = <(METHOD_RETURN,ANY)> ]
-  "18489" -> "18492" 
+"18505" [label = <(METHOD,cbegin)> ]
+"18508" [label = <(METHOD_RETURN,ANY)> ]
+  "18505" -> "18508" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/479-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/479-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/479-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/479-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "cend" {  
-"18493" [label = <(METHOD,cend)> ]
-"18496" [label = <(METHOD_RETURN,ANY)> ]
-  "18493" -> "18496" 
+"18509" [label = <(METHOD,cend)> ]
+"18512" [label = <(METHOD_RETURN,ANY)> ]
+  "18509" -> "18512" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/48-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/48-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/48-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/48-cfg.dot	2023-06-07 19:33:06.457398423 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_55" {  
-"225" [label = <(METHOD,anonymous_lambda_55)<SUB>5772</SUB>> ]
-"227" [label = <(METHOD_RETURN,ANY)<SUB>5772</SUB>> ]
+"225" [label = <(METHOD,anonymous_lambda_55)<SUB>5771</SUB>> ]
+"227" [label = <(METHOD_RETURN,ANY)<SUB>5771</SUB>> ]
   "225" -> "227" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/480-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/480-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/480-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/480-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "std::back_inserter" {  
-"18497" [label = <(METHOD,std::back_inserter)> ]
-"18501" [label = <(METHOD_RETURN,ANY)> ]
-  "18497" -> "18501" 
+"18513" [label = <(METHOD,std::back_inserter)> ]
+"18517" [label = <(METHOD_RETURN,ANY)> ]
+  "18513" -> "18517" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/481-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/481-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/481-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/481-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "std::copy" {  
-"18502" [label = <(METHOD,std::copy)> ]
-"18508" [label = <(METHOD_RETURN,ANY)> ]
-  "18502" -> "18508" 
+"18518" [label = <(METHOD,std::copy)> ]
+"18524" [label = <(METHOD_RETURN,ANY)> ]
+  "18518" -> "18524" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/482-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/482-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/482-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/482-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getInternalDisplayToken" {  
-"18509" [label = <(METHOD,getInternalDisplayToken)> ]
-"18511" [label = <(METHOD_RETURN,ANY)> ]
-  "18509" -> "18511" 
+"18525" [label = <(METHOD,getInternalDisplayToken)> ]
+"18527" [label = <(METHOD_RETURN,ANY)> ]
+  "18525" -> "18527" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/483-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/483-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/483-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/483-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "memcpy" {  
-"18512" [label = <(METHOD,memcpy)> ]
-"18517" [label = <(METHOD_RETURN,ANY)> ]
-  "18512" -> "18517" 
+"18528" [label = <(METHOD,memcpy)> ]
+"18533" [label = <(METHOD_RETURN,ANY)> ]
+  "18528" -> "18533" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/484-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/484-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/484-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/484-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.sizeOf" {  
-"18518" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
-"18521" [label = <(METHOD_RETURN,ANY)> ]
-  "18518" -> "18521" 
+"18534" [label = <(METHOD,&lt;operator&gt;.sizeOf)> ]
+"18537" [label = <(METHOD_RETURN,ANY)> ]
+  "18534" -> "18537" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/485-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/485-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/485-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/485-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getState" {  
-"18522" [label = <(METHOD,getState)> ]
-"18525" [label = <(METHOD_RETURN,ANY)> ]
-  "18522" -> "18525" 
+"18538" [label = <(METHOD,getState)> ]
+"18541" [label = <(METHOD_RETURN,ANY)> ]
+  "18538" -> "18541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/486-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/486-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/486-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/486-cfg.dot	2023-06-07 19:33:06.757398396 +0330
@@ -1,5 +1,5 @@
 digraph "getCompositionDisplay" {  
-"18526" [label = <(METHOD,getCompositionDisplay)> ]
-"18529" [label = <(METHOD_RETURN,ANY)> ]
-  "18526" -> "18529" 
+"18542" [label = <(METHOD,getCompositionDisplay)> ]
+"18545" [label = <(METHOD_RETURN,ANY)> ]
+  "18542" -> "18545" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/487-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/487-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/487-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/487-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "hasDisplayCapability" {  
-"18530" [label = <(METHOD,hasDisplayCapability)> ]
-"18535" [label = <(METHOD_RETURN,ANY)> ]
-  "18530" -> "18535" 
+"18546" [label = <(METHOD,hasDisplayCapability)> ]
+"18551" [label = <(METHOD_RETURN,ANY)> ]
+  "18546" -> "18551" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/488-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/488-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/488-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/488-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getSupportedContentTypes" {  
-"18536" [label = <(METHOD,getSupportedContentTypes)> ]
-"18541" [label = <(METHOD_RETURN,ANY)> ]
-  "18536" -> "18541" 
+"18552" [label = <(METHOD,getSupportedContentTypes)> ]
+"18557" [label = <(METHOD_RETURN,ANY)> ]
+  "18552" -> "18557" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/489-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/489-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/489-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/489-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::any_of" {  
-"18542" [label = <(METHOD,std::any_of)> ]
-"18548" [label = <(METHOD_RETURN,ANY)> ]
-  "18542" -> "18548" 
+"18558" [label = <(METHOD,std::any_of)> ]
+"18564" [label = <(METHOD_RETURN,ANY)> ]
+  "18558" -> "18564" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/49-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/49-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/49-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/49-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_56" {  
-"229" [label = <(METHOD,anonymous_lambda_56)<SUB>5838</SUB>> ]
-"232" [label = <(METHOD_RETURN,ANY)<SUB>5838</SUB>> ]
+"229" [label = <(METHOD,anonymous_lambda_56)<SUB>5837</SUB>> ]
+"232" [label = <(METHOD_RETURN,ANY)<SUB>5837</SUB>> ]
   "229" -> "232" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/490-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/490-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/490-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/490-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "begin" {  
-"18549" [label = <(METHOD,begin)> ]
-"18552" [label = <(METHOD_RETURN,ANY)> ]
-  "18549" -> "18552" 
+"18565" [label = <(METHOD,begin)> ]
+"18568" [label = <(METHOD_RETURN,ANY)> ]
+  "18565" -> "18568" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/491-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/491-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/491-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/491-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "end" {  
-"18553" [label = <(METHOD,end)> ]
-"18556" [label = <(METHOD_RETURN,ANY)> ]
-  "18553" -> "18556" 
+"18569" [label = <(METHOD,end)> ]
+"18572" [label = <(METHOD_RETURN,ANY)> ]
+  "18569" -> "18572" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/492-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/492-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/492-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/492-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "clearStats" {  
-"18557" [label = <(METHOD,clearStats)> ]
-"18560" [label = <(METHOD_RETURN,ANY)> ]
-  "18557" -> "18560" 
+"18573" [label = <(METHOD,clearStats)> ]
+"18576" [label = <(METHOD_RETURN,ANY)> ]
+  "18573" -> "18576" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/493-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/493-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/493-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/493-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getStats" {  
-"18561" [label = <(METHOD,getStats)> ]
-"18565" [label = <(METHOD_RETURN,ANY)> ]
-  "18561" -> "18565" 
+"18577" [label = <(METHOD,getStats)> ]
+"18581" [label = <(METHOD_RETURN,ANY)> ]
+  "18577" -> "18581" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/494-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/494-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/494-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/494-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getHdrCapabilities" {  
-"18566" [label = <(METHOD,getHdrCapabilities)> ]
-"18571" [label = <(METHOD_RETURN,ANY)> ]
-  "18566" -> "18571" 
+"18582" [label = <(METHOD,getHdrCapabilities)> ]
+"18587" [label = <(METHOD_RETURN,ANY)> ]
+  "18582" -> "18587" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/495-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/495-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/495-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/495-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "HdrCapabilities" {  
-"18572" [label = <(METHOD,HdrCapabilities)> ]
-"18578" [label = <(METHOD_RETURN,ANY)> ]
-  "18572" -> "18578" 
+"18588" [label = <(METHOD,HdrCapabilities)> ]
+"18594" [label = <(METHOD_RETURN,ANY)> ]
+  "18588" -> "18594" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/496-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/496-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/496-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/496-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getSupportedHdrTypes" {  
-"18579" [label = <(METHOD,getSupportedHdrTypes)> ]
-"18582" [label = <(METHOD_RETURN,ANY)> ]
-  "18579" -> "18582" 
+"18595" [label = <(METHOD,getSupportedHdrTypes)> ]
+"18598" [label = <(METHOD_RETURN,ANY)> ]
+  "18595" -> "18598" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/497-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/497-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/497-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/497-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDesiredMaxLuminance" {  
-"18583" [label = <(METHOD,getDesiredMaxLuminance)> ]
-"18586" [label = <(METHOD_RETURN,ANY)> ]
-  "18583" -> "18586" 
+"18599" [label = <(METHOD,getDesiredMaxLuminance)> ]
+"18602" [label = <(METHOD_RETURN,ANY)> ]
+  "18599" -> "18602" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/498-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/498-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/498-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/498-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDesiredMaxAverageLuminance" {  
-"18587" [label = <(METHOD,getDesiredMaxAverageLuminance)> ]
-"18590" [label = <(METHOD_RETURN,ANY)> ]
-  "18587" -> "18590" 
+"18603" [label = <(METHOD,getDesiredMaxAverageLuminance)> ]
+"18606" [label = <(METHOD_RETURN,ANY)> ]
+  "18603" -> "18606" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/499-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/499-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/499-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/499-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDesiredMinLuminance" {  
-"18591" [label = <(METHOD,getDesiredMinLuminance)> ]
-"18594" [label = <(METHOD_RETURN,ANY)> ]
-  "18591" -> "18594" 
+"18607" [label = <(METHOD,getDesiredMinLuminance)> ]
+"18610" [label = <(METHOD_RETURN,ANY)> ]
+  "18607" -> "18610" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/5-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/5-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/5-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/5-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_12" {  
-"26" [label = <(METHOD,anonymous_lambda_12)<SUB>1440</SUB>> ]
-"28" [label = <(METHOD_RETURN,ANY)<SUB>1440</SUB>> ]
+"26" [label = <(METHOD,anonymous_lambda_12)<SUB>1439</SUB>> ]
+"28" [label = <(METHOD_RETURN,ANY)<SUB>1439</SUB>> ]
   "26" -> "28" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/50-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/50-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/50-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/50-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_57" {  
-"234" [label = <(METHOD,anonymous_lambda_57)<SUB>5907</SUB>> ]
-"237" [label = <(METHOD_RETURN,ANY)<SUB>5907</SUB>> ]
+"234" [label = <(METHOD,anonymous_lambda_57)<SUB>5906</SUB>> ]
+"237" [label = <(METHOD_RETURN,ANY)<SUB>5906</SUB>> ]
   "234" -> "237" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/500-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/500-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/500-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/500-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "LOG_FATAL_IF" {  
-"18595" [label = <(METHOD,LOG_FATAL_IF)> ]
-"18598" [label = <(METHOD_RETURN,ANY)> ]
-  "18595" -> "18598" 
+"18611" [label = <(METHOD,LOG_FATAL_IF)> ]
+"18614" [label = <(METHOD_RETURN,ANY)> ]
+  "18611" -> "18614" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/501-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/501-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/501-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/501-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayIdentificationData" {  
-"18599" [label = <(METHOD,getDisplayIdentificationData)> ]
-"18605" [label = <(METHOD_RETURN,ANY)> ]
-  "18599" -> "18605" 
+"18615" [label = <(METHOD,getDisplayIdentificationData)> ]
+"18621" [label = <(METHOD_RETURN,ANY)> ]
+  "18615" -> "18621" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/502-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/502-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/502-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/502-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "parseDisplayIdentificationData" {  
-"18606" [label = <(METHOD,parseDisplayIdentificationData)> ]
-"18610" [label = <(METHOD_RETURN,ANY)> ]
-  "18606" -> "18610" 
+"18622" [label = <(METHOD,parseDisplayIdentificationData)> ]
+"18626" [label = <(METHOD_RETURN,ANY)> ]
+  "18622" -> "18626" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/503-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/503-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/503-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/503-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayedContentSamplingAttributes" {  
-"18611" [label = <(METHOD,getDisplayedContentSamplingAttributes)> ]
-"18618" [label = <(METHOD_RETURN,ANY)> ]
-  "18611" -> "18618" 
+"18627" [label = <(METHOD,getDisplayedContentSamplingAttributes)> ]
+"18634" [label = <(METHOD_RETURN,ANY)> ]
+  "18627" -> "18634" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/504-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/504-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/504-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/504-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayedContentSample" {  
-"18619" [label = <(METHOD,getDisplayedContentSample)> ]
-"18626" [label = <(METHOD_RETURN,ANY)> ]
-  "18619" -> "18626" 
+"18635" [label = <(METHOD,getDisplayedContentSample)> ]
+"18642" [label = <(METHOD_RETURN,ANY)> ]
+  "18635" -> "18642" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/505-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/505-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/505-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/505-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "supportsProtectedContent" {  
-"18627" [label = <(METHOD,supportsProtectedContent)> ]
-"18630" [label = <(METHOD_RETURN,ANY)> ]
-  "18627" -> "18630" 
+"18643" [label = <(METHOD,supportsProtectedContent)> ]
+"18646" [label = <(METHOD_RETURN,ANY)> ]
+  "18643" -> "18646" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/506-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/506-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/506-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/506-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "hasWideColorGamut" {  
-"18631" [label = <(METHOD,hasWideColorGamut)> ]
-"18634" [label = <(METHOD_RETURN,ANY)> ]
-  "18631" -> "18634" 
+"18647" [label = <(METHOD,hasWideColorGamut)> ]
+"18650" [label = <(METHOD_RETURN,ANY)> ]
+  "18647" -> "18650" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/507-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/507-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/507-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/507-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "wait" {  
-"18635" [label = <(METHOD,wait)> ]
-"18639" [label = <(METHOD_RETURN,ANY)> ]
-  "18635" -> "18639" 
+"18651" [label = <(METHOD,wait)> ]
+"18655" [label = <(METHOD_RETURN,ANY)> ]
+  "18651" -> "18655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/508-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/508-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/508-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/508-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "injectVSync" {  
-"18640" [label = <(METHOD,injectVSync)> ]
-"18645" [label = <(METHOD_RETURN,ANY)> ]
-  "18640" -> "18645" 
+"18656" [label = <(METHOD,injectVSync)> ]
+"18661" [label = <(METHOD_RETURN,ANY)> ]
+  "18656" -> "18661" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/509-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/509-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/509-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/509-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "calculateExpectedPresentTime" {  
-"18646" [label = <(METHOD,calculateExpectedPresentTime)> ]
-"18649" [label = <(METHOD_RETURN,ANY)> ]
-  "18646" -> "18649" 
+"18662" [label = <(METHOD,calculateExpectedPresentTime)> ]
+"18665" [label = <(METHOD_RETURN,ANY)> ]
+  "18662" -> "18665" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/51-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/51-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/51-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/51-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_58" {  
-"239" [label = <(METHOD,anonymous_lambda_58)<SUB>5955</SUB>> ]
-"242" [label = <(METHOD_RETURN,ANY)<SUB>5955</SUB>> ]
+"239" [label = <(METHOD,anonymous_lambda_58)<SUB>5954</SUB>> ]
+"242" [label = <(METHOD_RETURN,ANY)<SUB>5954</SUB>> ]
   "239" -> "242" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/510-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/510-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/510-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/510-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "fromHandle" {  
-"18650" [label = <(METHOD,fromHandle)> ]
-"18653" [label = <(METHOD_RETURN,ANY)> ]
-  "18650" -> "18653" 
+"18666" [label = <(METHOD,fromHandle)> ]
+"18669" [label = <(METHOD_RETURN,ANY)> ]
+  "18666" -> "18669" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/511-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/511-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/511-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/511-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "addListener" {  
-"18654" [label = <(METHOD,addListener)> ]
-"18660" [label = <(METHOD_RETURN,ANY)> ]
-  "18654" -> "18660" 
+"18670" [label = <(METHOD,addListener)> ]
+"18676" [label = <(METHOD_RETURN,ANY)> ]
+  "18670" -> "18676" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/512-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/512-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/512-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/512-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "removeListener" {  
-"18661" [label = <(METHOD,removeListener)> ]
-"18665" [label = <(METHOD_RETURN,ANY)> ]
-  "18661" -> "18665" 
+"18677" [label = <(METHOD,removeListener)> ]
+"18681" [label = <(METHOD_RETURN,ANY)> ]
+  "18677" -> "18681" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/513-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/513-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/513-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/513-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "notifyTouchEvent" {  
-"18666" [label = <(METHOD,notifyTouchEvent)> ]
-"18669" [label = <(METHOD_RETURN,ANY)> ]
-  "18666" -> "18669" 
+"18682" [label = <(METHOD,notifyTouchEvent)> ]
+"18685" [label = <(METHOD_RETURN,ANY)> ]
+  "18682" -> "18685" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/514-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/514-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/514-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/514-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "createDisplayEventConnection" {  
-"18670" [label = <(METHOD,createDisplayEventConnection)> ]
-"18675" [label = <(METHOD_RETURN,ANY)> ]
-  "18670" -> "18675" 
+"18686" [label = <(METHOD,createDisplayEventConnection)> ]
+"18691" [label = <(METHOD_RETURN,ANY)> ]
+  "18686" -> "18691" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/515-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/515-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/515-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/515-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "resetIdleTimer" {  
-"18676" [label = <(METHOD,resetIdleTimer)> ]
-"18679" [label = <(METHOD_RETURN,ANY)> ]
-  "18676" -> "18679" 
+"18692" [label = <(METHOD,resetIdleTimer)> ]
+"18695" [label = <(METHOD_RETURN,ANY)> ]
+  "18692" -> "18695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/516-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/516-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/516-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/516-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "notifyDisplayUpdateImminent" {  
-"18680" [label = <(METHOD,notifyDisplayUpdateImminent)> ]
-"18683" [label = <(METHOD_RETURN,ANY)> ]
-  "18680" -> "18683" 
+"18696" [label = <(METHOD,notifyDisplayUpdateImminent)> ]
+"18699" [label = <(METHOD_RETURN,ANY)> ]
+  "18696" -> "18699" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/517-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/517-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/517-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/517-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "invalidate" {  
-"18684" [label = <(METHOD,invalidate)> ]
-"18687" [label = <(METHOD_RETURN,ANY)> ]
-  "18684" -> "18687" 
+"18700" [label = <(METHOD,invalidate)> ]
+"18703" [label = <(METHOD_RETURN,ANY)> ]
+  "18700" -> "18703" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/518-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/518-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/518-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/518-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "refresh" {  
-"18688" [label = <(METHOD,refresh)> ]
-"18691" [label = <(METHOD_RETURN,ANY)> ]
-  "18688" -> "18691" 
+"18704" [label = <(METHOD,refresh)> ]
+"18707" [label = <(METHOD_RETURN,ANY)> ]
+  "18704" -> "18707" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/519-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/519-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/519-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/519-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayVsyncPeriod" {  
-"18692" [label = <(METHOD,getDisplayVsyncPeriod)> ]
-"18696" [label = <(METHOD_RETURN,ANY)> ]
-  "18692" -> "18696" 
+"18708" [label = <(METHOD,getDisplayVsyncPeriod)> ]
+"18712" [label = <(METHOD_RETURN,ANY)> ]
+  "18708" -> "18712" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/52-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/52-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/52-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/52-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_59" {  
-"244" [label = <(METHOD,anonymous_lambda_59)<SUB>6071</SUB>> ]
-"246" [label = <(METHOD_RETURN,status_t)<SUB>6071</SUB>> ]
+"244" [label = <(METHOD,anonymous_lambda_59)<SUB>6070</SUB>> ]
+"246" [label = <(METHOD_RETURN,status_t)<SUB>6070</SUB>> ]
   "244" -> "246" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/520-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/520-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/520-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/520-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "ATRACE_NAME" {  
-"18697" [label = <(METHOD,ATRACE_NAME)> ]
-"18700" [label = <(METHOD_RETURN,ANY)> ]
-  "18697" -> "18700" 
+"18713" [label = <(METHOD,ATRACE_NAME)> ]
+"18716" [label = <(METHOD_RETURN,ANY)> ]
+  "18713" -> "18716" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/521-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/521-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/521-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/521-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onVsync" {  
-"18701" [label = <(METHOD,onVsync)> ]
-"18706" [label = <(METHOD_RETURN,ANY)> ]
-  "18701" -> "18706" 
+"18717" [label = <(METHOD,onVsync)> ]
+"18722" [label = <(METHOD_RETURN,ANY)> ]
+  "18717" -> "18722" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/522-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/522-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/522-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/522-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getInternalHwcDisplayId" {  
-"18707" [label = <(METHOD,getInternalHwcDisplayId)> ]
-"18710" [label = <(METHOD_RETURN,ANY)> ]
-  "18707" -> "18710" 
+"18723" [label = <(METHOD,getInternalHwcDisplayId)> ]
+"18726" [label = <(METHOD_RETURN,ANY)> ]
+  "18723" -> "18726" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/523-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/523-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/523-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/523-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "addResyncSample" {  
-"18711" [label = <(METHOD,addResyncSample)> ]
-"18717" [label = <(METHOD_RETURN,ANY)> ]
-  "18711" -> "18717" 
+"18727" [label = <(METHOD,addResyncSample)> ]
+"18733" [label = <(METHOD_RETURN,ANY)> ]
+  "18727" -> "18733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/524-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/524-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/524-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/524-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onRefreshRateChangeCompleted" {  
-"18718" [label = <(METHOD,onRefreshRateChangeCompleted)> ]
-"18721" [label = <(METHOD_RETURN,ANY)> ]
-  "18718" -> "18721" 
+"18734" [label = <(METHOD,onRefreshRateChangeCompleted)> ]
+"18737" [label = <(METHOD_RETURN,ANY)> ]
+  "18734" -> "18737" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/525-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/525-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/525-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/525-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "isConfigAllowed" {  
-"18722" [label = <(METHOD,isConfigAllowed)> ]
-"18726" [label = <(METHOD_RETURN,ANY)> ]
-  "18722" -> "18726" 
+"18738" [label = <(METHOD,isConfigAllowed)> ]
+"18742" [label = <(METHOD_RETURN,ANY)> ]
+  "18738" -> "18742" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/526-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/526-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/526-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/526-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setDesiredActiveConfig" {  
-"18727" [label = <(METHOD,setDesiredActiveConfig)> ]
-"18730" [label = <(METHOD_RETURN,ANY)> ]
-  "18727" -> "18730" 
+"18743" [label = <(METHOD,setDesiredActiveConfig)> ]
+"18746" [label = <(METHOD_RETURN,ANY)> ]
+  "18743" -> "18746" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/527-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/527-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/527-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/527-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "emplace_back" {  
-"18731" [label = <(METHOD,emplace_back)> ]
-"18735" [label = <(METHOD_RETURN,ANY)> ]
-  "18731" -> "18735" 
+"18747" [label = <(METHOD,emplace_back)> ]
+"18751" [label = <(METHOD_RETURN,ANY)> ]
+  "18747" -> "18751" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/528-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/528-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/528-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/528-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "HotplugEvent" {  
-"18736" [label = <(METHOD,HotplugEvent)> ]
-"18739" [label = <(METHOD_RETURN,ANY)> ]
-  "18736" -> "18739" 
+"18752" [label = <(METHOD,HotplugEvent)> ]
+"18755" [label = <(METHOD_RETURN,ANY)> ]
+  "18752" -> "18755" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/529-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/529-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/529-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/529-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "isPoweredOn" {  
-"18740" [label = <(METHOD,isPoweredOn)> ]
-"18743" [label = <(METHOD_RETURN,ANY)> ]
-  "18740" -> "18743" 
+"18756" [label = <(METHOD,isPoweredOn)> ]
+"18759" [label = <(METHOD_RETURN,ANY)> ]
+  "18756" -> "18759" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/53-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/53-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/53-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/53-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_60" {  
-"248" [label = <(METHOD,anonymous_lambda_60)<SUB>6227</SUB>> ]
-"250" [label = <(METHOD_RETURN,ANY)<SUB>6227</SUB>> ]
+"248" [label = <(METHOD,anonymous_lambda_60)<SUB>6226</SUB>> ]
+"250" [label = <(METHOD_RETURN,ANY)<SUB>6226</SUB>> ]
   "248" -> "250" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/530-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/530-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/530-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/530-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setVsyncEnabled" {  
-"18744" [label = <(METHOD,setVsyncEnabled)> ]
-"18749" [label = <(METHOD_RETURN,ANY)> ]
-  "18744" -> "18749" 
+"18760" [label = <(METHOD,setVsyncEnabled)> ]
+"18765" [label = <(METHOD_RETURN,ANY)> ]
+  "18760" -> "18765" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/531-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/531-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/531-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/531-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "disableHardwareVsync" {  
-"18750" [label = <(METHOD,disableHardwareVsync)> ]
-"18754" [label = <(METHOD_RETURN,ANY)> ]
-  "18750" -> "18754" 
+"18766" [label = <(METHOD,disableHardwareVsync)> ]
+"18770" [label = <(METHOD_RETURN,ANY)> ]
+  "18766" -> "18770" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/532-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/532-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/532-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/532-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "isUsingVrComposer" {  
-"18755" [label = <(METHOD,isUsingVrComposer)> ]
-"18758" [label = <(METHOD_RETURN,ANY)> ]
-  "18755" -> "18758" 
+"18771" [label = <(METHOD,isUsingVrComposer)> ]
+"18774" [label = <(METHOD_RETURN,ANY)> ]
+  "18771" -> "18774" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/533-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/533-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/533-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/533-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "isRemote" {  
-"18759" [label = <(METHOD,isRemote)> ]
-"18762" [label = <(METHOD_RETURN,ANY)> ]
-  "18759" -> "18762" 
+"18775" [label = <(METHOD,isRemote)> ]
+"18778" [label = <(METHOD_RETURN,ANY)> ]
+  "18775" -> "18778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/534-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/534-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/534-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/534-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getPowerMode" {  
-"18763" [label = <(METHOD,getPowerMode)> ]
-"18766" [label = <(METHOD_RETURN,ANY)> ]
-  "18763" -> "18766" 
+"18779" [label = <(METHOD,getPowerMode)> ]
+"18782" [label = <(METHOD_RETURN,ANY)> ]
+  "18779" -> "18782" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/535-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/535-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/535-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/535-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "clearOutputLayers" {  
-"18767" [label = <(METHOD,clearOutputLayers)> ]
-"18770" [label = <(METHOD_RETURN,ANY)> ]
-  "18767" -> "18770" 
+"18783" [label = <(METHOD,clearOutputLayers)> ]
+"18786" [label = <(METHOD_RETURN,ANY)> ]
+  "18783" -> "18786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/536-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/536-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/536-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/536-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "SeizeDisplayOwnership" {  
-"18771" [label = <(METHOD,SeizeDisplayOwnership)> ]
-"18774" [label = <(METHOD_RETURN,ANY)> ]
-  "18771" -> "18774" 
+"18787" [label = <(METHOD,SeizeDisplayOwnership)> ]
+"18790" [label = <(METHOD_RETURN,ANY)> ]
+  "18787" -> "18790" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/537-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/537-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/537-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/537-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "resetDisplayState" {  
-"18775" [label = <(METHOD,resetDisplayState)> ]
-"18777" [label = <(METHOD_RETURN,ANY)> ]
-  "18775" -> "18777" 
+"18791" [label = <(METHOD,resetDisplayState)> ]
+"18793" [label = <(METHOD_RETURN,ANY)> ]
+  "18791" -> "18793" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/538-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/538-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/538-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/538-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::unique_ptr&lt;HWComposer&gt;" {  
-"18778" [label = <(METHOD,std::unique_ptr&lt;HWComposer&gt;)> ]
-"18781" [label = <(METHOD_RETURN,ANY)> ]
-  "18778" -> "18781" 
+"18794" [label = <(METHOD,std::unique_ptr&lt;HWComposer&gt;)> ]
+"18797" [label = <(METHOD_RETURN,ANY)> ]
+  "18794" -> "18797" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/539-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/539-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/539-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/539-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "GrantDisplayOwnership" {  
-"18782" [label = <(METHOD,GrantDisplayOwnership)> ]
-"18785" [label = <(METHOD_RETURN,ANY)> ]
-  "18782" -> "18785" 
+"18798" [label = <(METHOD,GrantDisplayOwnership)> ]
+"18801" [label = <(METHOD_RETURN,ANY)> ]
+  "18798" -> "18801" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/54-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/54-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/54-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/54-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_61" {  
-"252" [label = <(METHOD,anonymous_lambda_61)<SUB>6256</SUB>> ]
-"254" [label = <(METHOD_RETURN,ANY)<SUB>6256</SUB>> ]
+"252" [label = <(METHOD,anonymous_lambda_61)<SUB>6255</SUB>> ]
+"254" [label = <(METHOD_RETURN,ANY)<SUB>6255</SUB>> ]
   "252" -> "254" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/540-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/540-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/540-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/540-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "invalidateHwcGeometry" {  
-"18786" [label = <(METHOD,invalidateHwcGeometry)> ]
-"18788" [label = <(METHOD_RETURN,ANY)> ]
-  "18786" -> "18788" 
+"18802" [label = <(METHOD,invalidateHwcGeometry)> ]
+"18804" [label = <(METHOD_RETURN,ANY)> ]
+  "18802" -> "18804" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/541-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/541-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/541-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/541-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setPowerModeInternal" {  
-"18789" [label = <(METHOD,setPowerModeInternal)> ]
-"18793" [label = <(METHOD_RETURN,ANY)> ]
-  "18789" -> "18793" 
+"18805" [label = <(METHOD,setPowerModeInternal)> ]
+"18809" [label = <(METHOD_RETURN,ANY)> ]
+  "18805" -> "18809" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/542-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/542-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/542-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/542-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCurrentRefreshRate" {  
-"18794" [label = <(METHOD,getCurrentRefreshRate)> ]
-"18797" [label = <(METHOD_RETURN,ANY)> ]
-  "18794" -> "18797" 
+"18810" [label = <(METHOD,getCurrentRefreshRate)> ]
+"18813" [label = <(METHOD_RETURN,ANY)> ]
+  "18810" -> "18813" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/543-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/543-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/543-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/543-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplayRefreshPeriod" {  
-"18798" [label = <(METHOD,setDisplayRefreshPeriod)> ]
-"18802" [label = <(METHOD_RETURN,ANY)> ]
-  "18798" -> "18802" 
+"18814" [label = <(METHOD,setDisplayRefreshPeriod)> ]
+"18818" [label = <(METHOD_RETURN,ANY)> ]
+  "18814" -> "18818" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/544-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/544-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/544-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/544-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setIgnorePresentFences" {  
-"18803" [label = <(METHOD,setIgnorePresentFences)> ]
-"18807" [label = <(METHOD_RETURN,ANY)> ]
-  "18803" -> "18807" 
+"18819" [label = <(METHOD,setIgnorePresentFences)> ]
+"18823" [label = <(METHOD_RETURN,ANY)> ]
+  "18819" -> "18823" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/545-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/545-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/545-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/545-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setCompositorTimingSnapped" {  
-"18808" [label = <(METHOD,setCompositorTimingSnapped)> ]
-"18812" [label = <(METHOD_RETURN,ANY)> ]
-  "18808" -> "18812" 
+"18824" [label = <(METHOD,setCompositorTimingSnapped)> ]
+"18828" [label = <(METHOD_RETURN,ANY)> ]
+  "18824" -> "18828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/546-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/546-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/546-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/546-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getOffsets" {  
-"18813" [label = <(METHOD,getOffsets)> ]
-"18816" [label = <(METHOD_RETURN,ANY)> ]
-  "18813" -> "18816" 
+"18829" [label = <(METHOD,getOffsets)> ]
+"18832" [label = <(METHOD_RETURN,ANY)> ]
+  "18829" -> "18832" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/547-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/547-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/547-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/547-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.indirectIndexAccess" {  
-"18817" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
-"18821" [label = <(METHOD_RETURN,ANY)> ]
-  "18817" -> "18821" 
+"18833" [label = <(METHOD,&lt;operator&gt;.indirectIndexAccess)> ]
+"18837" [label = <(METHOD_RETURN,ANY)> ]
+  "18833" -> "18837" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/548-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/548-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/548-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/548-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "previousFrameFence" {  
-"18822" [label = <(METHOD,previousFrameFence)> ]
-"18824" [label = <(METHOD_RETURN,ANY)> ]
-  "18822" -> "18824" 
+"18838" [label = <(METHOD,previousFrameFence)> ]
+"18840" [label = <(METHOD_RETURN,ANY)> ]
+  "18838" -> "18840" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/549-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/549-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/549-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/549-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.minus" {  
-"18825" [label = <(METHOD,&lt;operator&gt;.minus)> ]
-"18828" [label = <(METHOD_RETURN,ANY)> ]
-  "18825" -> "18828" 
+"18841" [label = <(METHOD,&lt;operator&gt;.minus)> ]
+"18844" [label = <(METHOD_RETURN,ANY)> ]
+  "18841" -> "18844" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/55-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/55-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/55-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/55-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_62" {  
-"256" [label = <(METHOD,anonymous_lambda_62)<SUB>6305</SUB>> ]
-"258" [label = <(METHOD_RETURN,ANY)<SUB>6305</SUB>> ]
+"256" [label = <(METHOD,anonymous_lambda_62)<SUB>6304</SUB>> ]
+"258" [label = <(METHOD_RETURN,ANY)<SUB>6304</SUB>> ]
   "256" -> "258" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/550-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/550-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/550-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/550-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getSignalTime" {  
-"18829" [label = <(METHOD,getSignalTime)> ]
-"18832" [label = <(METHOD_RETURN,ANY)> ]
-  "18829" -> "18832" 
+"18845" [label = <(METHOD,getSignalTime)> ]
+"18848" [label = <(METHOD_RETURN,ANY)> ]
+  "18845" -> "18848" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/551-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/551-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/551-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/551-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDispSyncExpectedPresentTime" {  
-"18833" [label = <(METHOD,getDispSyncExpectedPresentTime)> ]
-"18837" [label = <(METHOD_RETURN,ANY)> ]
-  "18833" -> "18837" 
+"18849" [label = <(METHOD,getDispSyncExpectedPresentTime)> ]
+"18853" [label = <(METHOD_RETURN,ANY)> ]
+  "18849" -> "18853" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/552-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/552-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/552-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/552-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onMessageInvalidate" {  
-"18838" [label = <(METHOD,onMessageInvalidate)> ]
-"18841" [label = <(METHOD_RETURN,ANY)> ]
-  "18838" -> "18841" 
+"18854" [label = <(METHOD,onMessageInvalidate)> ]
+"18857" [label = <(METHOD_RETURN,ANY)> ]
+  "18854" -> "18857" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/553-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/553-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/553-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/553-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onMessageRefresh" {  
-"18842" [label = <(METHOD,onMessageRefresh)> ]
-"18844" [label = <(METHOD_RETURN,ANY)> ]
-  "18842" -> "18844" 
+"18858" [label = <(METHOD,onMessageRefresh)> ]
+"18860" [label = <(METHOD_RETURN,ANY)> ]
+  "18858" -> "18860" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/554-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/554-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/554-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/554-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "load" {  
-"18845" [label = <(METHOD,load)> ]
-"18848" [label = <(METHOD_RETURN,ANY)> ]
-  "18845" -> "18848" 
+"18861" [label = <(METHOD,load)> ]
+"18864" [label = <(METHOD_RETURN,ANY)> ]
+  "18861" -> "18864" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/555-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/555-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/555-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/555-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "previousFramePending" {  
-"18849" [label = <(METHOD,previousFramePending)> ]
-"18852" [label = <(METHOD_RETURN,ANY)> ]
-  "18849" -> "18852" 
+"18865" [label = <(METHOD,previousFramePending)> ]
+"18868" [label = <(METHOD_RETURN,ANY)> ]
+  "18865" -> "18868" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/556-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/556-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/556-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/556-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "previousFramePresentTime" {  
-"18853" [label = <(METHOD,previousFramePresentTime)> ]
-"18855" [label = <(METHOD_RETURN,ANY)> ]
-  "18853" -> "18855" 
+"18869" [label = <(METHOD,previousFramePresentTime)> ]
+"18871" [label = <(METHOD_RETURN,ANY)> ]
+  "18869" -> "18871" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/557-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/557-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/557-cfg.dot	2023-06-07 19:33:00.527398970 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/557-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.greaterEqualsThan" {  
-"18856" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
-"18860" [label = <(METHOD_RETURN,ANY)> ]
-  "18856" -> "18860" 
+"18872" [label = <(METHOD,&lt;operator&gt;.greaterEqualsThan)> ]
+"18876" [label = <(METHOD_RETURN,ANY)> ]
+  "18872" -> "18876" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/558-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/558-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/558-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/558-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.postIncrement" {  
-"18861" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
-"18864" [label = <(METHOD_RETURN,ANY)> ]
-  "18861" -> "18864" 
+"18877" [label = <(METHOD,&lt;operator&gt;.postIncrement)> ]
+"18880" [label = <(METHOD_RETURN,ANY)> ]
+  "18877" -> "18880" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/559-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/559-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/559-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/559-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "incrementMissedFrames" {  
-"18865" [label = <(METHOD,incrementMissedFrames)> ]
-"18868" [label = <(METHOD_RETURN,ANY)> ]
-  "18865" -> "18868" 
+"18881" [label = <(METHOD,incrementMissedFrames)> ]
+"18884" [label = <(METHOD_RETURN,ANY)> ]
+  "18881" -> "18884" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/56-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/56-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/56-cfg.dot	2023-06-07 19:33:00.227398997 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/56-cfg.dot	2023-06-07 19:33:06.467398424 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_63" {  
-"260" [label = <(METHOD,anonymous_lambda_63)<SUB>6320</SUB>> ]
-"262" [label = <(METHOD_RETURN,ANY)<SUB>6320</SUB>> ]
+"260" [label = <(METHOD,anonymous_lambda_63)<SUB>6319</SUB>> ]
+"262" [label = <(METHOD_RETURN,ANY)<SUB>6319</SUB>> ]
   "260" -> "262" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/560-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/560-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/560-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/560-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "ON_MAIN_THREAD" {  
-"18869" [label = <(METHOD,ON_MAIN_THREAD)<SUB>132</SUB>> ]
-"18871" [label = <(METHOD_RETURN,ANY)> ]
-  "18869" -> "18871" 
+"18885" [label = <(METHOD,ON_MAIN_THREAD)<SUB>132</SUB>> ]
+"18887" [label = <(METHOD_RETURN,ANY)> ]
+  "18885" -> "18887" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/561-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/561-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/561-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/561-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "signalLayerUpdate" {  
-"18872" [label = <(METHOD,signalLayerUpdate)> ]
-"18874" [label = <(METHOD_RETURN,ANY)> ]
-  "18872" -> "18874" 
+"18888" [label = <(METHOD,signalLayerUpdate)> ]
+"18890" [label = <(METHOD_RETURN,ANY)> ]
+  "18888" -> "18890" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/562-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/562-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/562-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/562-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "updateVrFlinger" {  
-"18875" [label = <(METHOD,updateVrFlinger)> ]
-"18877" [label = <(METHOD_RETURN,ANY)> ]
-  "18875" -> "18877" 
+"18891" [label = <(METHOD,updateVrFlinger)> ]
+"18893" [label = <(METHOD_RETURN,ANY)> ]
+  "18891" -> "18893" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/563-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/563-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/563-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/563-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "isEnabled" {  
-"18878" [label = <(METHOD,isEnabled)> ]
-"18881" [label = <(METHOD_RETURN,ANY)> ]
-  "18878" -> "18881" 
+"18894" [label = <(METHOD,isEnabled)> ]
+"18897" [label = <(METHOD_RETURN,ANY)> ]
+  "18894" -> "18897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/564-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/564-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/564-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/564-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "handleMessageTransaction" {  
-"18882" [label = <(METHOD,handleMessageTransaction)> ]
-"18884" [label = <(METHOD_RETURN,ANY)> ]
-  "18882" -> "18884" 
+"18898" [label = <(METHOD,handleMessageTransaction)> ]
+"18900" [label = <(METHOD_RETURN,ANY)> ]
+  "18898" -> "18900" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/565-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/565-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/565-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/565-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operators&gt;.assignmentOr" {  
-"18885" [label = <(METHOD,&lt;operators&gt;.assignmentOr)> ]
-"18889" [label = <(METHOD_RETURN,ANY)> ]
-  "18885" -> "18889" 
+"18901" [label = <(METHOD,&lt;operators&gt;.assignmentOr)> ]
+"18905" [label = <(METHOD_RETURN,ANY)> ]
+  "18901" -> "18905" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/566-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/566-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/566-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/566-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "handleMessageInvalidate" {  
-"18890" [label = <(METHOD,handleMessageInvalidate)> ]
-"18892" [label = <(METHOD_RETURN,ANY)> ]
-  "18890" -> "18892" 
+"18906" [label = <(METHOD,handleMessageInvalidate)> ]
+"18908" [label = <(METHOD_RETURN,ANY)> ]
+  "18906" -> "18908" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/567-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/567-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/567-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/567-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "flagIsSetLocked" {  
-"18893" [label = <(METHOD,flagIsSetLocked)> ]
-"18897" [label = <(METHOD_RETURN,ANY)> ]
-  "18893" -> "18897" 
+"18909" [label = <(METHOD,flagIsSetLocked)> ]
+"18913" [label = <(METHOD_RETURN,ANY)> ]
+  "18909" -> "18913" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/568-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/568-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/568-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/568-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "notifyLocked" {  
-"18898" [label = <(METHOD,notifyLocked)> ]
-"18902" [label = <(METHOD_RETURN,ANY)> ]
-  "18898" -> "18902" 
+"18914" [label = <(METHOD,notifyLocked)> ]
+"18918" [label = <(METHOD_RETURN,ANY)> ]
+  "18914" -> "18918" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/569-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/569-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/569-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/569-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "chooseRefreshRateForContent" {  
-"18903" [label = <(METHOD,chooseRefreshRateForContent)> ]
-"18906" [label = <(METHOD_RETURN,ANY)> ]
-  "18903" -> "18906" 
+"18919" [label = <(METHOD,chooseRefreshRateForContent)> ]
+"18922" [label = <(METHOD_RETURN,ANY)> ]
+  "18919" -> "18922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/57-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/57-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/57-cfg.dot	2023-06-07 19:33:00.257398995 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/57-cfg.dot	2023-06-07 19:33:06.487398420 +0330
@@ -26,7 +26,7 @@
 "470" [label = <(&lt;operator&gt;.fieldAccess,ui::PixelFormat)<SUB>280</SUB>> ]
 "473" [label = <(FIELD_IDENTIFIER,RGBA_8888,RGBA_8888)<SUB>280</SUB>> ]
 "265" [label = <(METHOD,&lt;global&gt;)<SUB>1</SUB>> ]
-"17140" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
+"17156" [label = <(METHOD_RETURN,ANY)<SUB>1</SUB>> ]
   "414" -> "417" 
   "417" -> "420" 
   "420" -> "423" 
@@ -36,7 +36,7 @@
   "447" -> "456" 
   "453" -> "465" 
   "461" -> "470" 
-  "467" -> "17140" 
+  "467" -> "17156" 
   "340" -> "342" 
   "342" -> "343" 
   "343" -> "345" 
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/570-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/570-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/570-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/570-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "updateCursorAsync" {  
-"18907" [label = <(METHOD,updateCursorAsync)> ]
-"18911" [label = <(METHOD_RETURN,ANY)> ]
-  "18907" -> "18911" 
+"18923" [label = <(METHOD,updateCursorAsync)> ]
+"18927" [label = <(METHOD_RETURN,ANY)> ]
+  "18923" -> "18927" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/571-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/571-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/571-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/571-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "updateInputFlinger" {  
-"18912" [label = <(METHOD,updateInputFlinger)> ]
-"18914" [label = <(METHOD_RETURN,ANY)> ]
-  "18912" -> "18914" 
+"18928" [label = <(METHOD,updateInputFlinger)> ]
+"18930" [label = <(METHOD_RETURN,ANY)> ]
+  "18928" -> "18930" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/572-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/572-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/572-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/572-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "CC_LIKELY" {  
-"18915" [label = <(METHOD,CC_LIKELY)> ]
-"18918" [label = <(METHOD_RETURN,ANY)> ]
-  "18915" -> "18918" 
+"18931" [label = <(METHOD,CC_LIKELY)> ]
+"18934" [label = <(METHOD_RETURN,ANY)> ]
+  "18931" -> "18934" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/573-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/573-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/573-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/573-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.lessEqualsThan" {  
-"18919" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
-"18923" [label = <(METHOD_RETURN,ANY)> ]
-  "18919" -> "18923" 
+"18935" [label = <(METHOD,&lt;operator&gt;.lessEqualsThan)> ]
+"18939" [label = <(METHOD_RETURN,ANY)> ]
+  "18935" -> "18939" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/574-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/574-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/574-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/574-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "signalRefresh" {  
-"18924" [label = <(METHOD,signalRefresh)> ]
-"18926" [label = <(METHOD_RETURN,ANY)> ]
-  "18924" -> "18926" 
+"18940" [label = <(METHOD,signalRefresh)> ]
+"18942" [label = <(METHOD_RETURN,ANY)> ]
+  "18940" -> "18942" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/575-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/575-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/575-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/575-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "peekTransactionFlags" {  
-"18927" [label = <(METHOD,peekTransactionFlags)> ]
-"18929" [label = <(METHOD_RETURN,ANY)> ]
-  "18927" -> "18929" 
+"18943" [label = <(METHOD,peekTransactionFlags)> ]
+"18945" [label = <(METHOD_RETURN,ANY)> ]
+  "18943" -> "18945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/576-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/576-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/576-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/576-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "flushTransactionQueues" {  
-"18930" [label = <(METHOD,flushTransactionQueues)> ]
-"18932" [label = <(METHOD_RETURN,ANY)> ]
-  "18930" -> "18932" 
+"18946" [label = <(METHOD,flushTransactionQueues)> ]
+"18948" [label = <(METHOD_RETURN,ANY)> ]
+  "18946" -> "18948" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/577-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/577-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/577-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/577-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "transactionFlushNeeded" {  
-"18933" [label = <(METHOD,transactionFlushNeeded)> ]
-"18935" [label = <(METHOD_RETURN,ANY)> ]
-  "18933" -> "18935" 
+"18949" [label = <(METHOD,transactionFlushNeeded)> ]
+"18951" [label = <(METHOD_RETURN,ANY)> ]
+  "18949" -> "18951" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/578-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/578-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/578-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/578-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "traverseInZOrder" {  
-"18936" [label = <(METHOD,traverseInZOrder)> ]
-"18941" [label = <(METHOD_RETURN,ANY)> ]
-  "18936" -> "18941" 
+"18952" [label = <(METHOD,traverseInZOrder)> ]
+"18957" [label = <(METHOD_RETURN,ANY)> ]
+  "18952" -> "18957" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/579-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/579-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/579-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/579-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCompositionEngineLayerFE" {  
-"18942" [label = <(METHOD,getCompositionEngineLayerFE)> ]
-"18945" [label = <(METHOD_RETURN,ANY)> ]
-  "18942" -> "18945" 
+"18958" [label = <(METHOD,getCompositionEngineLayerFE)> ]
+"18961" [label = <(METHOD_RETURN,ANY)> ]
+  "18958" -> "18961" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/580-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/580-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/580-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/580-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "exchange" {  
-"18946" [label = <(METHOD,exchange)> ]
-"18950" [label = <(METHOD_RETURN,ANY)> ]
-  "18946" -> "18950" 
+"18962" [label = <(METHOD,exchange)> ]
+"18966" [label = <(METHOD_RETURN,ANY)> ]
+  "18962" -> "18966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/581-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/581-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/581-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/581-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "DisplayDevice::getPrimaryDisplayRotationFlags" {  
-"18951" [label = <(METHOD,DisplayDevice::getPrimaryDisplayRotationFlags)> ]
-"18954" [label = <(METHOD_RETURN,ANY)> ]
-  "18951" -> "18954" 
+"18967" [label = <(METHOD,DisplayDevice::getPrimaryDisplayRotationFlags)> ]
+"18970" [label = <(METHOD_RETURN,ANY)> ]
+  "18967" -> "18970" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/582-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/582-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/582-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/582-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "CC_UNLIKELY" {  
-"18955" [label = <(METHOD,CC_UNLIKELY)> ]
-"18958" [label = <(METHOD_RETURN,ANY)> ]
-  "18955" -> "18958" 
+"18971" [label = <(METHOD,CC_UNLIKELY)> ]
+"18974" [label = <(METHOD_RETURN,ANY)> ]
+  "18971" -> "18974" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/583-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/583-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/583-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/583-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::chrono::milliseconds" {  
-"18959" [label = <(METHOD,std::chrono::milliseconds)> ]
-"18963" [label = <(METHOD_RETURN,ANY)> ]
-  "18959" -> "18963" 
+"18975" [label = <(METHOD,std::chrono::milliseconds)> ]
+"18979" [label = <(METHOD_RETURN,ANY)> ]
+  "18975" -> "18979" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/584-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/584-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/584-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/584-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "present" {  
-"18964" [label = <(METHOD,present)> ]
-"18968" [label = <(METHOD_RETURN,ANY)> ]
-  "18964" -> "18968" 
+"18980" [label = <(METHOD,present)> ]
+"18984" [label = <(METHOD_RETURN,ANY)> ]
+  "18980" -> "18984" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/585-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/585-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/585-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/585-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "recordFrameDuration" {  
-"18969" [label = <(METHOD,recordFrameDuration)> ]
-"18974" [label = <(METHOD_RETURN,ANY)> ]
-  "18969" -> "18974" 
+"18985" [label = <(METHOD,recordFrameDuration)> ]
+"18990" [label = <(METHOD_RETURN,ANY)> ]
+  "18985" -> "18990" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/586-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/586-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/586-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/586-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onDisplayRefreshed" {  
-"18975" [label = <(METHOD,onDisplayRefreshed)> ]
-"18979" [label = <(METHOD_RETURN,ANY)> ]
-  "18975" -> "18979" 
+"18991" [label = <(METHOD,onDisplayRefreshed)> ]
+"18995" [label = <(METHOD_RETURN,ANY)> ]
+  "18991" -> "18995" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/587-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/587-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/587-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/587-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "postFrame" {  
-"18980" [label = <(METHOD,postFrame)> ]
-"18982" [label = <(METHOD_RETURN,ANY)> ]
-  "18980" -> "18982" 
+"18996" [label = <(METHOD,postFrame)> ]
+"18998" [label = <(METHOD_RETURN,ANY)> ]
+  "18996" -> "18998" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/588-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/588-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/588-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/588-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "postComposition" {  
-"18983" [label = <(METHOD,postComposition)> ]
-"18985" [label = <(METHOD_RETURN,ANY)> ]
-  "18983" -> "18985" 
+"18999" [label = <(METHOD,postComposition)> ]
+"19001" [label = <(METHOD_RETURN,ANY)> ]
+  "18999" -> "19001" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/589-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/589-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/589-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/589-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "incrementCompositionStrategyChanges" {  
-"18986" [label = <(METHOD,incrementCompositionStrategyChanges)> ]
-"18989" [label = <(METHOD_RETURN,ANY)> ]
-  "18986" -> "18989" 
+"19002" [label = <(METHOD,incrementCompositionStrategyChanges)> ]
+"19005" [label = <(METHOD_RETURN,ANY)> ]
+  "19002" -> "19005" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/590-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/590-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/590-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/590-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "onRefreshed" {  
-"18990" [label = <(METHOD,onRefreshed)> ]
-"18994" [label = <(METHOD_RETURN,ANY)> ]
-  "18990" -> "18994" 
+"19006" [label = <(METHOD,onRefreshed)> ]
+"19010" [label = <(METHOD_RETURN,ANY)> ]
+  "19006" -> "19010" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/591-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/591-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/591-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/591-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "notify" {  
-"18995" [label = <(METHOD,notify)> ]
-"18999" [label = <(METHOD_RETURN,ANY)> ]
-  "18995" -> "18999" 
+"19011" [label = <(METHOD,notify)> ]
+"19015" [label = <(METHOD_RETURN,ANY)> ]
+  "19011" -> "19015" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/592-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/592-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/592-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/592-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "needsAnotherUpdate" {  
-"19000" [label = <(METHOD,needsAnotherUpdate)> ]
-"19003" [label = <(METHOD_RETURN,ANY)> ]
-  "19000" -> "19003" 
+"19016" [label = <(METHOD,needsAnotherUpdate)> ]
+"19019" [label = <(METHOD_RETURN,ANY)> ]
+  "19016" -> "19019" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/593-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/593-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/593-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/593-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "handlePageFlip" {  
-"19004" [label = <(METHOD,handlePageFlip)> ]
-"19006" [label = <(METHOD_RETURN,ANY)> ]
-  "19004" -> "19006" 
+"19020" [label = <(METHOD,handlePageFlip)> ]
+"19022" [label = <(METHOD_RETURN,ANY)> ]
+  "19020" -> "19022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/594-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/594-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/594-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/594-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "computeLayerBounds" {  
-"19007" [label = <(METHOD,computeLayerBounds)> ]
-"19009" [label = <(METHOD_RETURN,ANY)> ]
-  "19007" -> "19009" 
+"19023" [label = <(METHOD,computeLayerBounds)> ]
+"19025" [label = <(METHOD_RETURN,ANY)> ]
+  "19023" -> "19025" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/595-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/595-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/595-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/595-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "set" {  
-"19010" [label = <(METHOD,set)> ]
-"19014" [label = <(METHOD_RETURN,ANY)> ]
-  "19010" -> "19014" 
+"19026" [label = <(METHOD,set)> ]
+"19030" [label = <(METHOD_RETURN,ANY)> ]
+  "19026" -> "19030" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/596-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/596-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/596-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/596-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getScreenBounds" {  
-"19015" [label = <(METHOD,getScreenBounds)> ]
-"19018" [label = <(METHOD_RETURN,ANY)> ]
-  "19015" -> "19018" 
+"19031" [label = <(METHOD,getScreenBounds)> ]
+"19034" [label = <(METHOD_RETURN,ANY)> ]
+  "19031" -> "19034" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/597-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/597-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/597-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/597-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "invalidateLayerStack" {  
-"19019" [label = <(METHOD,invalidateLayerStack)> ]
-"19023" [label = <(METHOD_RETURN,ANY)> ]
-  "19019" -> "19023" 
+"19035" [label = <(METHOD,invalidateLayerStack)> ]
+"19039" [label = <(METHOD_RETURN,ANY)> ]
+  "19035" -> "19039" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/598-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/598-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/598-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/598-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "push" {  
-"19024" [label = <(METHOD,push)> ]
-"19028" [label = <(METHOD_RETURN,ANY)> ]
-  "19024" -> "19028" 
+"19040" [label = <(METHOD,push)> ]
+"19044" [label = <(METHOD_RETURN,ANY)> ]
+  "19040" -> "19044" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/599-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/599-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/599-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/599-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "front" {  
-"19029" [label = <(METHOD,front)> ]
-"19032" [label = <(METHOD_RETURN,ANY)> ]
-  "19029" -> "19032" 
+"19045" [label = <(METHOD,front)> ]
+"19048" [label = <(METHOD_RETURN,ANY)> ]
+  "19045" -> "19048" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/6-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/6-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/6-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/6-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_13" {  
-"30" [label = <(METHOD,anonymous_lambda_13)<SUB>1459</SUB>> ]
-"32" [label = <(METHOD_RETURN,ANY)<SUB>1459</SUB>> ]
+"30" [label = <(METHOD,anonymous_lambda_13)<SUB>1458</SUB>> ]
+"32" [label = <(METHOD_RETURN,ANY)<SUB>1458</SUB>> ]
   "30" -> "32" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/600-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/600-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/600-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/600-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCachedSignalTime" {  
-"19033" [label = <(METHOD,getCachedSignalTime)> ]
-"19036" [label = <(METHOD_RETURN,ANY)> ]
-  "19033" -> "19036" 
+"19049" [label = <(METHOD,getCachedSignalTime)> ]
+"19052" [label = <(METHOD_RETURN,ANY)> ]
+  "19049" -> "19052" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/601-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/601-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/601-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/601-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "pop" {  
-"19037" [label = <(METHOD,pop)> ]
-"19040" [label = <(METHOD_RETURN,ANY)> ]
-  "19037" -> "19040" 
+"19053" [label = <(METHOD,pop)> ]
+"19056" [label = <(METHOD_RETURN,ANY)> ]
+  "19053" -> "19056" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/602-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/602-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/602-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/602-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.modulo" {  
-"19041" [label = <(METHOD,&lt;operator&gt;.modulo)> ]
-"19045" [label = <(METHOD_RETURN,ANY)> ]
-  "19041" -> "19045" 
+"19057" [label = <(METHOD,&lt;operator&gt;.modulo)> ]
+"19061" [label = <(METHOD_RETURN,ANY)> ]
+  "19057" -> "19061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/603-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/603-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/603-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/603-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.multiplication" {  
-"19046" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
-"19050" [label = <(METHOD_RETURN,ANY)> ]
-  "19046" -> "19050" 
+"19062" [label = <(METHOD,&lt;operator&gt;.multiplication)> ]
+"19066" [label = <(METHOD_RETURN,ANY)> ]
+  "19062" -> "19066" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/604-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/604-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/604-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/604-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "releasePendingBuffer" {  
-"19051" [label = <(METHOD,releasePendingBuffer)> ]
-"19055" [label = <(METHOD_RETURN,ANY)> ]
-  "19051" -> "19055" 
+"19067" [label = <(METHOD,releasePendingBuffer)> ]
+"19071" [label = <(METHOD_RETURN,ANY)> ]
+  "19067" -> "19071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/605-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/605-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/605-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/605-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "updateSignalTimes" {  
-"19056" [label = <(METHOD,updateSignalTimes)> ]
-"19059" [label = <(METHOD_RETURN,ANY)> ]
-  "19056" -> "19059" 
+"19072" [label = <(METHOD,updateSignalTimes)> ]
+"19075" [label = <(METHOD_RETURN,ANY)> ]
+  "19072" -> "19075" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/606-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/606-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/606-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/606-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getClientTargetAcquireFence" {  
-"19060" [label = <(METHOD,getClientTargetAcquireFence)> ]
-"19063" [label = <(METHOD_RETURN,ANY)> ]
-  "19060" -> "19063" 
+"19076" [label = <(METHOD,getClientTargetAcquireFence)> ]
+"19079" [label = <(METHOD_RETURN,ANY)> ]
+  "19076" -> "19079" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/607-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/607-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/607-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/607-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getRenderSurface" {  
-"19064" [label = <(METHOD,getRenderSurface)> ]
-"19067" [label = <(METHOD_RETURN,ANY)> ]
-  "19064" -> "19067" 
+"19080" [label = <(METHOD,getRenderSurface)> ]
+"19083" [label = <(METHOD_RETURN,ANY)> ]
+  "19080" -> "19083" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/608-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/608-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/608-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/608-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getPresentFence" {  
-"19068" [label = <(METHOD,getPresentFence)> ]
-"19072" [label = <(METHOD_RETURN,ANY)> ]
-  "19068" -> "19072" 
+"19084" [label = <(METHOD,getPresentFence)> ]
+"19088" [label = <(METHOD_RETURN,ANY)> ]
+  "19084" -> "19088" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/609-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/609-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/609-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/609-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "updateCompositorTiming" {  
-"19073" [label = <(METHOD,updateCompositorTiming)> ]
-"19078" [label = <(METHOD_RETURN,ANY)> ]
-  "19073" -> "19078" 
+"19089" [label = <(METHOD,updateCompositorTiming)> ]
+"19094" [label = <(METHOD_RETURN,ANY)> ]
+  "19089" -> "19094" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/610-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/610-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/610-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/610-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getLastFrameRefreshTimestamp" {  
-"19079" [label = <(METHOD,getLastFrameRefreshTimestamp)> ]
-"19082" [label = <(METHOD_RETURN,ANY)> ]
-  "19079" -> "19082" 
+"19095" [label = <(METHOD,getLastFrameRefreshTimestamp)> ]
+"19098" [label = <(METHOD_RETURN,ANY)> ]
+  "19095" -> "19098" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/611-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/611-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/611-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/611-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "traverse" {  
-"19083" [label = <(METHOD,traverse)> ]
-"19087" [label = <(METHOD_RETURN,ANY)> ]
-  "19083" -> "19087" 
+"19099" [label = <(METHOD,traverse)> ]
+"19103" [label = <(METHOD_RETURN,ANY)> ]
+  "19099" -> "19103" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/612-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/612-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/612-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/612-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "addPresentFence" {  
-"19088" [label = <(METHOD,addPresentFence)> ]
-"19092" [label = <(METHOD_RETURN,ANY)> ]
-  "19088" -> "19092" 
+"19104" [label = <(METHOD,addPresentFence)> ]
+"19108" [label = <(METHOD_RETURN,ANY)> ]
+  "19104" -> "19108" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/613-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/613-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/613-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/613-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "sendCallbacks" {  
-"19093" [label = <(METHOD,sendCallbacks)> ]
-"19096" [label = <(METHOD_RETURN,ANY)> ]
-  "19093" -> "19096" 
+"19109" [label = <(METHOD,sendCallbacks)> ]
+"19112" [label = <(METHOD_RETURN,ANY)> ]
+  "19109" -> "19112" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/614-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/614-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/614-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/614-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "enableHardwareVsync" {  
-"19097" [label = <(METHOD,enableHardwareVsync)> ]
-"19100" [label = <(METHOD_RETURN,ANY)> ]
-  "19097" -> "19100" 
+"19113" [label = <(METHOD,enableHardwareVsync)> ]
+"19116" [label = <(METHOD_RETURN,ANY)> ]
+  "19113" -> "19116" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/615-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/615-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/615-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/615-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setActualPresentFence" {  
-"19101" [label = <(METHOD,setActualPresentFence)> ]
-"19105" [label = <(METHOD_RETURN,ANY)> ]
-  "19101" -> "19105" 
+"19117" [label = <(METHOD,setActualPresentFence)> ]
+"19121" [label = <(METHOD_RETURN,ANY)> ]
+  "19117" -> "19121" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/616-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/616-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/616-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/616-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getRefreshTimestamp" {  
-"19106" [label = <(METHOD,getRefreshTimestamp)> ]
-"19110" [label = <(METHOD_RETURN,ANY)> ]
-  "19106" -> "19110" 
+"19122" [label = <(METHOD,getRefreshTimestamp)> ]
+"19126" [label = <(METHOD_RETURN,ANY)> ]
+  "19122" -> "19126" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/617-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/617-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/617-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/617-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setActualPresentTime" {  
-"19111" [label = <(METHOD,setActualPresentTime)> ]
-"19115" [label = <(METHOD_RETURN,ANY)> ]
-  "19111" -> "19115" 
+"19127" [label = <(METHOD,setActualPresentTime)> ]
+"19131" [label = <(METHOD_RETURN,ANY)> ]
+  "19127" -> "19131" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/618-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/618-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/618-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/618-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "advanceFrame" {  
-"19116" [label = <(METHOD,advanceFrame)> ]
-"19119" [label = <(METHOD_RETURN,ANY)> ]
-  "19116" -> "19119" 
+"19132" [label = <(METHOD,advanceFrame)> ]
+"19135" [label = <(METHOD_RETURN,ANY)> ]
+  "19132" -> "19135" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/619-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/619-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/619-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/619-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "incrementTotalFrames" {  
-"19120" [label = <(METHOD,incrementTotalFrames)> ]
-"19123" [label = <(METHOD_RETURN,ANY)> ]
-  "19120" -> "19123" 
+"19136" [label = <(METHOD,incrementTotalFrames)> ]
+"19139" [label = <(METHOD_RETURN,ANY)> ]
+  "19136" -> "19139" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/620-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/620-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/620-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/620-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "incrementClientCompositionFrames" {  
-"19124" [label = <(METHOD,incrementClientCompositionFrames)> ]
-"19127" [label = <(METHOD_RETURN,ANY)> ]
-  "19124" -> "19127" 
+"19140" [label = <(METHOD,incrementClientCompositionFrames)> ]
+"19143" [label = <(METHOD_RETURN,ANY)> ]
+  "19140" -> "19143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/621-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/621-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/621-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/621-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "incrementClientCompositionReusedFrames" {  
-"19128" [label = <(METHOD,incrementClientCompositionReusedFrames)> ]
-"19131" [label = <(METHOD_RETURN,ANY)> ]
-  "19128" -> "19131" 
+"19144" [label = <(METHOD,incrementClientCompositionReusedFrames)> ]
+"19147" [label = <(METHOD_RETURN,ANY)> ]
+  "19144" -> "19147" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/622-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/622-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/622-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/622-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "setPresentFenceGlobal" {  
-"19132" [label = <(METHOD,setPresentFenceGlobal)> ]
-"19136" [label = <(METHOD_RETURN,ANY)> ]
-  "19132" -> "19136" 
+"19148" [label = <(METHOD,setPresentFenceGlobal)> ]
+"19152" [label = <(METHOD_RETURN,ANY)> ]
+  "19148" -> "19152" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/623-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/623-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/623-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/623-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getEventThreadConnectionCount" {  
-"19137" [label = <(METHOD,getEventThreadConnectionCount)> ]
-"19141" [label = <(METHOD_RETURN,ANY)> ]
-  "19137" -> "19141" 
+"19153" [label = <(METHOD,getEventThreadConnectionCount)> ]
+"19157" [label = <(METHOD_RETURN,ANY)> ]
+  "19153" -> "19157" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/624-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/624-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/624-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/624-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "recordDisplayEventConnectionCount" {  
-"19142" [label = <(METHOD,recordDisplayEventConnectionCount)> ]
-"19146" [label = <(METHOD_RETURN,ANY)> ]
-  "19142" -> "19146" 
+"19158" [label = <(METHOD,recordDisplayEventConnectionCount)> ]
+"19162" [label = <(METHOD_RETURN,ANY)> ]
+  "19158" -> "19162" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/625-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/625-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/625-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/625-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "android::util::stats_write" {  
-"19147" [label = <(METHOD,android::util::stats_write)> ]
-"19153" [label = <(METHOD_RETURN,ANY)> ]
-  "19147" -> "19153" 
+"19163" [label = <(METHOD,android::util::stats_write)> ]
+"19169" [label = <(METHOD_RETURN,ANY)> ]
+  "19163" -> "19169" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/626-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/626-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/626-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/626-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentPlus" {  
-"19154" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
-"19158" [label = <(METHOD_RETURN,ANY)> ]
-  "19154" -> "19158" 
+"19170" [label = <(METHOD,&lt;operator&gt;.assignmentPlus)> ]
+"19174" [label = <(METHOD_RETURN,ANY)> ]
+  "19170" -> "19174" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/627-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/627-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/627-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/627-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "cleanupPostRender" {  
-"19159" [label = <(METHOD,cleanupPostRender)> ]
-"19162" [label = <(METHOD_RETURN,ANY)> ]
-  "19159" -> "19162" 
+"19175" [label = <(METHOD,cleanupPostRender)> ]
+"19178" [label = <(METHOD_RETURN,ANY)> ]
+  "19175" -> "19178" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/628-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/628-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/628-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/628-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "resize" {  
-"19163" [label = <(METHOD,resize)> ]
-"19167" [label = <(METHOD_RETURN,ANY)> ]
-  "19163" -> "19167" 
+"19179" [label = <(METHOD,resize)> ]
+"19183" [label = <(METHOD_RETURN,ANY)> ]
+  "19179" -> "19183" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/629-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/629-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/629-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/629-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "genTextures" {  
-"19168" [label = <(METHOD,genTextures)> ]
-"19173" [label = <(METHOD_RETURN,ANY)> ]
-  "19168" -> "19173" 
+"19184" [label = <(METHOD,genTextures)> ]
+"19189" [label = <(METHOD_RETURN,ANY)> ]
+  "19184" -> "19189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/630-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/630-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/630-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/630-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "data" {  
-"19174" [label = <(METHOD,data)> ]
-"19177" [label = <(METHOD_RETURN,ANY)> ]
-  "19174" -> "19177" 
+"19190" [label = <(METHOD,data)> ]
+"19193" [label = <(METHOD_RETURN,ANY)> ]
+  "19190" -> "19193" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/631-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/631-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/631-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/631-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "deleteTextures" {  
-"19178" [label = <(METHOD,deleteTextures)> ]
-"19183" [label = <(METHOD_RETURN,ANY)> ]
-  "19178" -> "19183" 
+"19194" [label = <(METHOD,deleteTextures)> ]
+"19199" [label = <(METHOD_RETURN,ANY)> ]
+  "19194" -> "19199" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/632-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/632-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/632-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/632-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "notifyNewContent" {  
-"19184" [label = <(METHOD,notifyNewContent)> ]
-"19187" [label = <(METHOD_RETURN,ANY)> ]
-  "19184" -> "19187" 
+"19200" [label = <(METHOD,notifyNewContent)> ]
+"19203" [label = <(METHOD_RETURN,ANY)> ]
+  "19200" -> "19203" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/633-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/633-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/633-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/633-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "ATRACE_ENABLED" {  
-"19188" [label = <(METHOD,ATRACE_ENABLED)> ]
-"19190" [label = <(METHOD_RETURN,ANY)> ]
-  "19188" -> "19190" 
+"19204" [label = <(METHOD,ATRACE_ENABLED)> ]
+"19206" [label = <(METHOD_RETURN,ANY)> ]
+  "19204" -> "19206" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/634-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/634-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/634-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/634-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "ATRACE_INT64" {  
-"19191" [label = <(METHOD,ATRACE_INT64)> ]
-"19195" [label = <(METHOD_RETURN,ANY)> ]
-  "19191" -> "19195" 
+"19207" [label = <(METHOD,ATRACE_INT64)> ]
+"19211" [label = <(METHOD_RETURN,ANY)> ]
+  "19207" -> "19211" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/635-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/635-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/635-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/635-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getTotalSize" {  
-"19196" [label = <(METHOD,getTotalSize)> ]
-"19199" [label = <(METHOD_RETURN,ANY)> ]
-  "19196" -> "19199" 
+"19212" [label = <(METHOD,getTotalSize)> ]
+"19215" [label = <(METHOD_RETURN,ANY)> ]
+  "19212" -> "19215" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/636-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/636-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/636-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/636-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "GraphicBufferAllocator::get" {  
-"19200" [label = <(METHOD,GraphicBufferAllocator::get)> ]
-"19203" [label = <(METHOD_RETURN,ANY)> ]
-  "19200" -> "19203" 
+"19216" [label = <(METHOD,GraphicBufferAllocator::get)> ]
+"19219" [label = <(METHOD_RETURN,ANY)> ]
+  "19216" -> "19219" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/637-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/637-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/637-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/637-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "toFloatRect" {  
-"19204" [label = <(METHOD,toFloatRect)> ]
-"19207" [label = <(METHOD_RETURN,ANY)> ]
-  "19204" -> "19207" 
+"19220" [label = <(METHOD,toFloatRect)> ]
+"19223" [label = <(METHOD_RETURN,ANY)> ]
+  "19220" -> "19223" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/638-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/638-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/638-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/638-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "belongsInOutput" {  
-"19208" [label = <(METHOD,belongsInOutput)> ]
-"19213" [label = <(METHOD_RETURN,ANY)> ]
-  "19208" -> "19213" 
+"19224" [label = <(METHOD,belongsInOutput)> ]
+"19229" [label = <(METHOD_RETURN,ANY)> ]
+  "19224" -> "19229" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/639-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/639-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/639-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/639-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getPrimaryDisplayOnly" {  
-"19214" [label = <(METHOD,getPrimaryDisplayOnly)> ]
-"19217" [label = <(METHOD_RETURN,ANY)> ]
-  "19214" -> "19217" 
+"19230" [label = <(METHOD,getPrimaryDisplayOnly)> ]
+"19233" [label = <(METHOD_RETURN,ANY)> ]
+  "19230" -> "19233" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/640-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/640-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/640-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/640-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "computeBounds" {  
-"19218" [label = <(METHOD,computeBounds)> ]
-"19224" [label = <(METHOD_RETURN,ANY)> ]
-  "19218" -> "19224" 
+"19234" [label = <(METHOD,computeBounds)> ]
+"19240" [label = <(METHOD_RETURN,ANY)> ]
+  "19234" -> "19240" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/641-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/641-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/641-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/641-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "getLayerClipBoundsForDisplay" {  
-"19225" [label = <(METHOD,getLayerClipBoundsForDisplay)> ]
-"19228" [label = <(METHOD_RETURN,ANY)> ]
-  "19225" -> "19228" 
+"19241" [label = <(METHOD,getLayerClipBoundsForDisplay)> ]
+"19244" [label = <(METHOD_RETURN,ANY)> ]
+  "19241" -> "19244" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/642-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/642-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/642-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/642-cfg.dot	2023-06-07 19:33:06.767398394 +0330
@@ -1,5 +1,5 @@
 digraph "ui::Transform" {  
-"19229" [label = <(METHOD,ui::Transform)> ]
-"19232" [label = <(METHOD_RETURN,ANY)> ]
-  "19229" -> "19232" 
+"19245" [label = <(METHOD,ui::Transform)> ]
+"19248" [label = <(METHOD_RETURN,ANY)> ]
+  "19245" -> "19248" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/643-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/643-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/643-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/643-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getPageFlipCount" {  
-"19233" [label = <(METHOD,getPageFlipCount)> ]
-"19236" [label = <(METHOD_RETURN,ANY)> ]
-  "19233" -> "19236" 
+"19249" [label = <(METHOD,getPageFlipCount)> ]
+"19252" [label = <(METHOD_RETURN,ANY)> ]
+  "19249" -> "19252" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/644-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/644-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/644-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/644-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "logFrameStats" {  
-"19237" [label = <(METHOD,logFrameStats)> ]
-"19239" [label = <(METHOD_RETURN,ANY)> ]
-  "19237" -> "19239" 
+"19253" [label = <(METHOD,logFrameStats)> ]
+"19255" [label = <(METHOD_RETURN,ANY)> ]
+  "19253" -> "19255" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/645-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/645-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/645-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/645-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "drawingState" {  
-"19240" [label = <(METHOD,drawingState)> ]
-"19243" [label = <(METHOD_RETURN,ANY)> ]
-  "19240" -> "19243" 
+"19256" [label = <(METHOD,drawingState)> ]
+"19259" [label = <(METHOD_RETURN,ANY)> ]
+  "19256" -> "19259" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/646-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/646-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/646-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/646-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onTransactionHandled" {  
-"19244" [label = <(METHOD,onTransactionHandled)> ]
-"19247" [label = <(METHOD_RETURN,ANY)> ]
-  "19244" -> "19247" 
+"19260" [label = <(METHOD,onTransactionHandled)> ]
+"19263" [label = <(METHOD_RETURN,ANY)> ]
+  "19260" -> "19263" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/647-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/647-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/647-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/647-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getTransactionFlags" {  
-"19248" [label = <(METHOD,getTransactionFlags)> ]
-"19251" [label = <(METHOD_RETURN,ANY)> ]
-  "19248" -> "19251" 
+"19264" [label = <(METHOD,getTransactionFlags)> ]
+"19267" [label = <(METHOD_RETURN,ANY)> ]
+  "19264" -> "19267" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/648-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/648-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/648-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/648-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "handleTransactionLocked" {  
-"19252" [label = <(METHOD,handleTransactionLocked)> ]
-"19255" [label = <(METHOD_RETURN,ANY)> ]
-  "19252" -> "19255" 
+"19268" [label = <(METHOD,handleTransactionLocked)> ]
+"19271" [label = <(METHOD_RETURN,ANY)> ]
+  "19268" -> "19271" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/649-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/649-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/649-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/649-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onHotplug" {  
-"19256" [label = <(METHOD,onHotplug)> ]
-"19261" [label = <(METHOD_RETURN,ANY)> ]
-  "19256" -> "19261" 
+"19272" [label = <(METHOD,onHotplug)> ]
+"19277" [label = <(METHOD_RETURN,ANY)> ]
+  "19272" -> "19277" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/650-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/650-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/650-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/650-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "find" {  
-"19262" [label = <(METHOD,find)> ]
-"19266" [label = <(METHOD_RETURN,ANY)> ]
-  "19262" -> "19266" 
+"19278" [label = <(METHOD,find)> ]
+"19282" [label = <(METHOD_RETURN,ANY)> ]
+  "19278" -> "19282" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/651-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/651-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/651-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/651-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "to_string" {  
-"19267" [label = <(METHOD,to_string)> ]
-"19270" [label = <(METHOD_RETURN,ANY)> ]
-  "19267" -> "19270" 
+"19283" [label = <(METHOD,to_string)> ]
+"19286" [label = <(METHOD_RETURN,ANY)> ]
+  "19283" -> "19286" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/652-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/652-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/652-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/652-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "initScheduler" {  
-"19271" [label = <(METHOD,initScheduler)> ]
-"19274" [label = <(METHOD_RETURN,ANY)> ]
-  "19271" -> "19274" 
+"19287" [label = <(METHOD,initScheduler)> ]
+"19290" [label = <(METHOD_RETURN,ANY)> ]
+  "19287" -> "19290" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/653-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/653-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/653-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/653-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "emplace" {  
-"19275" [label = <(METHOD,emplace)> ]
-"19279" [label = <(METHOD_RETURN,ANY)> ]
-  "19275" -> "19279" 
+"19291" [label = <(METHOD,emplace)> ]
+"19295" [label = <(METHOD_RETURN,ANY)> ]
+  "19291" -> "19295" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/654-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/654-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/654-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/654-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "editValueFor" {  
-"19280" [label = <(METHOD,editValueFor)> ]
-"19284" [label = <(METHOD_RETURN,ANY)> ]
-  "19280" -> "19284" 
+"19296" [label = <(METHOD,editValueFor)> ]
+"19300" [label = <(METHOD_RETURN,ANY)> ]
+  "19296" -> "19300" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/655-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/655-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/655-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/655-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "DisplayDeviceState" {  
-"19285" [label = <(METHOD,DisplayDeviceState)> ]
-"19288" [label = <(METHOD_RETURN,ANY)> ]
-  "19285" -> "19288" 
+"19301" [label = <(METHOD,DisplayDeviceState)> ]
+"19304" [label = <(METHOD_RETURN,ANY)> ]
+  "19301" -> "19304" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/656-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/656-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/656-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/656-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "erase" {  
-"19289" [label = <(METHOD,erase)> ]
-"19293" [label = <(METHOD_RETURN,ANY)> ]
-  "19289" -> "19293" 
+"19305" [label = <(METHOD,erase)> ]
+"19309" [label = <(METHOD_RETURN,ANY)> ]
+  "19305" -> "19309" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/657-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/657-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/657-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/657-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "processDisplayChangesLocked" {  
-"19294" [label = <(METHOD,processDisplayChangesLocked)> ]
-"19296" [label = <(METHOD_RETURN,ANY)> ]
-  "19294" -> "19296" 
+"19310" [label = <(METHOD,processDisplayChangesLocked)> ]
+"19312" [label = <(METHOD_RETURN,ANY)> ]
+  "19310" -> "19312" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/658-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/658-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/658-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/658-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onHotplugReceived" {  
-"19297" [label = <(METHOD,onHotplugReceived)> ]
-"19303" [label = <(METHOD_RETURN,ANY)> ]
-  "19297" -> "19303" 
+"19313" [label = <(METHOD,onHotplugReceived)> ]
+"19319" [label = <(METHOD_RETURN,ANY)> ]
+  "19313" -> "19319" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/659-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/659-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/659-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/659-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayId" {  
-"19304" [label = <(METHOD,getDisplayId)> ]
-"19307" [label = <(METHOD_RETURN,ANY)> ]
-  "19304" -> "19307" 
+"19320" [label = <(METHOD,getDisplayId)> ]
+"19323" [label = <(METHOD_RETURN,ANY)> ]
+  "19320" -> "19323" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/660-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/660-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/660-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/660-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "creationArgs" {  
-"19308" [label = <(METHOD,creationArgs)> ]
-"19313" [label = <(METHOD_RETURN,ANY)> ]
-  "19308" -> "19313" 
+"19324" [label = <(METHOD,creationArgs)> ]
+"19329" [label = <(METHOD_RETURN,ANY)> ]
+  "19324" -> "19329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/661-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/661-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/661-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/661-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isWideColorMode" {  
-"19314" [label = <(METHOD,isWideColorMode)> ]
-"19317" [label = <(METHOD_RETURN,ANY)> ]
-  "19314" -> "19317" 
+"19330" [label = <(METHOD,isWideColorMode)> ]
+"19333" [label = <(METHOD_RETURN,ANY)> ]
+  "19330" -> "19333" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/662-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/662-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/662-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/662-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getRenderIntents" {  
-"19318" [label = <(METHOD,getRenderIntents)> ]
-"19323" [label = <(METHOD_RETURN,ANY)> ]
-  "19318" -> "19323" 
+"19334" [label = <(METHOD,getRenderIntents)> ]
+"19339" [label = <(METHOD_RETURN,ANY)> ]
+  "19334" -> "19339" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/663-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/663-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/663-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/663-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getSupportedPerFrameMetadata" {  
-"19324" [label = <(METHOD,getSupportedPerFrameMetadata)> ]
-"19328" [label = <(METHOD_RETURN,ANY)> ]
-  "19324" -> "19328" 
+"19340" [label = <(METHOD,getSupportedPerFrameMetadata)> ]
+"19344" [label = <(METHOD_RETURN,ANY)> ]
+  "19340" -> "19344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/664-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/664-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/664-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/664-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createNativeWindowSurface" {  
-"19329" [label = <(METHOD,createNativeWindowSurface)> ]
-"19333" [label = <(METHOD_RETURN,ANY)> ]
-  "19329" -> "19333" 
+"19345" [label = <(METHOD,createNativeWindowSurface)> ]
+"19349" [label = <(METHOD_RETURN,ANY)> ]
+  "19345" -> "19349" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/665-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/665-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/665-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/665-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getNativeWindow" {  
-"19334" [label = <(METHOD,getNativeWindow)> ]
-"19337" [label = <(METHOD_RETURN,ANY)> ]
-  "19334" -> "19337" 
+"19350" [label = <(METHOD,getNativeWindow)> ]
+"19353" [label = <(METHOD_RETURN,ANY)> ]
+  "19350" -> "19353" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/666-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/666-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/666-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/666-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isVirtual" {  
-"19338" [label = <(METHOD,isVirtual)> ]
-"19341" [label = <(METHOD_RETURN,ANY)> ]
-  "19338" -> "19341" 
+"19354" [label = <(METHOD,isVirtual)> ]
+"19357" [label = <(METHOD_RETURN,ANY)> ]
+  "19354" -> "19357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/667-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/667-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/667-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/667-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setSwapInterval" {  
-"19342" [label = <(METHOD,setSwapInterval)> ]
-"19347" [label = <(METHOD_RETURN,ANY)> ]
-  "19342" -> "19347" 
+"19358" [label = <(METHOD,setSwapInterval)> ]
+"19363" [label = <(METHOD_RETURN,ANY)> ]
+  "19358" -> "19363" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/668-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/668-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/668-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/668-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createDisplayDevice" {  
-"19348" [label = <(METHOD,createDisplayDevice)> ]
-"19352" [label = <(METHOD_RETURN,ANY)> ]
-  "19348" -> "19352" 
+"19364" [label = <(METHOD,createDisplayDevice)> ]
+"19368" [label = <(METHOD_RETURN,ANY)> ]
+  "19364" -> "19368" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/669-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/669-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/669-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/669-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "preallocateBuffers" {  
-"19353" [label = <(METHOD,preallocateBuffers)> ]
-"19356" [label = <(METHOD_RETURN,ANY)> ]
-  "19353" -> "19356" 
+"19369" [label = <(METHOD,preallocateBuffers)> ]
+"19372" [label = <(METHOD_RETURN,ANY)> ]
+  "19369" -> "19372" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/670-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/670-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/670-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/670-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setColorProfile" {  
-"19357" [label = <(METHOD,setColorProfile)> ]
-"19361" [label = <(METHOD_RETURN,ANY)> ]
-  "19357" -> "19361" 
+"19373" [label = <(METHOD,setColorProfile)> ]
+"19377" [label = <(METHOD_RETURN,ANY)> ]
+  "19373" -> "19377" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/671-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/671-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/671-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/671-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "compositionengine::Output::ColorProfile" {  
-"19362" [label = <(METHOD,compositionengine::Output::ColorProfile)> ]
-"19365" [label = <(METHOD_RETURN,ANY)> ]
-  "19362" -> "19365" 
+"19378" [label = <(METHOD,compositionengine::Output::ColorProfile)> ]
+"19381" [label = <(METHOD_RETURN,ANY)> ]
+  "19378" -> "19381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/672-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/672-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/672-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/672-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "HwcConfigIndexType" {  
-"19366" [label = <(METHOD,HwcConfigIndexType)> ]
-"19369" [label = <(METHOD_RETURN,ANY)> ]
-  "19366" -> "19369" 
+"19382" [label = <(METHOD,HwcConfigIndexType)> ]
+"19385" [label = <(METHOD_RETURN,ANY)> ]
+  "19382" -> "19385" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/673-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/673-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/673-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/673-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getActiveConfigIndex" {  
-"19370" [label = <(METHOD,getActiveConfigIndex)> ]
-"19374" [label = <(METHOD_RETURN,ANY)> ]
-  "19370" -> "19374" 
+"19386" [label = <(METHOD,getActiveConfigIndex)> ]
+"19390" [label = <(METHOD_RETURN,ANY)> ]
+  "19386" -> "19390" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/674-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/674-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/674-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/674-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setLayerStack" {  
-"19375" [label = <(METHOD,setLayerStack)> ]
-"19379" [label = <(METHOD_RETURN,ANY)> ]
-  "19375" -> "19379" 
+"19391" [label = <(METHOD,setLayerStack)> ]
+"19395" [label = <(METHOD_RETURN,ANY)> ]
+  "19391" -> "19395" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/675-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/675-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/675-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/675-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setProjection" {  
-"19380" [label = <(METHOD,setProjection)> ]
-"19386" [label = <(METHOD_RETURN,ANY)> ]
-  "19380" -> "19386" 
+"19396" [label = <(METHOD,setProjection)> ]
+"19402" [label = <(METHOD_RETURN,ANY)> ]
+  "19396" -> "19402" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/676-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/676-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/676-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/676-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplayName" {  
-"19387" [label = <(METHOD,setDisplayName)> ]
-"19391" [label = <(METHOD_RETURN,ANY)> ]
-  "19387" -> "19391" 
+"19403" [label = <(METHOD,setDisplayName)> ]
+"19407" [label = <(METHOD_RETURN,ANY)> ]
+  "19403" -> "19407" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/677-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/677-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/677-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/677-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getCompositionEngine" {  
-"19392" [label = <(METHOD,getCompositionEngine)> ]
-"19394" [label = <(METHOD_RETURN,ANY)> ]
-  "19392" -> "19394" 
+"19408" [label = <(METHOD,getCompositionEngine)> ]
+"19410" [label = <(METHOD_RETURN,ANY)> ]
+  "19408" -> "19410" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/678-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/678-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/678-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/678-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "query" {  
-"19395" [label = <(METHOD,query)> ]
-"19400" [label = <(METHOD_RETURN,ANY)> ]
-  "19395" -> "19400" 
+"19411" [label = <(METHOD,query)> ]
+"19416" [label = <(METHOD_RETURN,ANY)> ]
+  "19411" -> "19416" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/679-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/679-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/679-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/679-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGE_IF" {  
-"19401" [label = <(METHOD,ALOGE_IF)> ]
-"19406" [label = <(METHOD_RETURN,ANY)> ]
-  "19401" -> "19406" 
+"19417" [label = <(METHOD,ALOGE_IF)> ]
+"19422" [label = <(METHOD_RETURN,ANY)> ]
+  "19417" -> "19422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/680-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/680-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/680-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/680-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setPhysical" {  
-"19407" [label = <(METHOD,setPhysical)> ]
-"19411" [label = <(METHOD_RETURN,ANY)> ]
-  "19407" -> "19411" 
+"19423" [label = <(METHOD,setPhysical)> ]
+"19427" [label = <(METHOD_RETURN,ANY)> ]
+  "19423" -> "19427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/681-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/681-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/681-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/681-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setPixels" {  
-"19412" [label = <(METHOD,setPixels)> ]
-"19416" [label = <(METHOD_RETURN,ANY)> ]
-  "19412" -> "19416" 
+"19428" [label = <(METHOD,setPixels)> ]
+"19432" [label = <(METHOD_RETURN,ANY)> ]
+  "19428" -> "19432" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/682-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/682-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/682-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/682-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setIsSecure" {  
-"19417" [label = <(METHOD,setIsSecure)> ]
-"19421" [label = <(METHOD_RETURN,ANY)> ]
-  "19417" -> "19421" 
+"19433" [label = <(METHOD,setIsSecure)> ]
+"19437" [label = <(METHOD_RETURN,ANY)> ]
+  "19433" -> "19437" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/683-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/683-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/683-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/683-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setLayerStackId" {  
-"19422" [label = <(METHOD,setLayerStackId)> ]
-"19426" [label = <(METHOD_RETURN,ANY)> ]
-  "19422" -> "19426" 
+"19438" [label = <(METHOD,setLayerStackId)> ]
+"19442" [label = <(METHOD_RETURN,ANY)> ]
+  "19438" -> "19442" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/684-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/684-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/684-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/684-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setPowerAdvisor" {  
-"19427" [label = <(METHOD,setPowerAdvisor)> ]
-"19431" [label = <(METHOD_RETURN,ANY)> ]
-  "19427" -> "19431" 
+"19443" [label = <(METHOD,setPowerAdvisor)> ]
+"19447" [label = <(METHOD_RETURN,ANY)> ]
+  "19443" -> "19447" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/685-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/685-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/685-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/685-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setUseHwcVirtualDisplays" {  
-"19432" [label = <(METHOD,setUseHwcVirtualDisplays)> ]
-"19436" [label = <(METHOD_RETURN,ANY)> ]
-  "19432" -> "19436" 
+"19448" [label = <(METHOD,setUseHwcVirtualDisplays)> ]
+"19452" [label = <(METHOD_RETURN,ANY)> ]
+  "19448" -> "19452" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/686-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/686-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/686-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/686-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setName" {  
-"19437" [label = <(METHOD,setName)> ]
-"19441" [label = <(METHOD_RETURN,ANY)> ]
-  "19437" -> "19441" 
+"19453" [label = <(METHOD,setName)> ]
+"19457" [label = <(METHOD_RETURN,ANY)> ]
+  "19453" -> "19457" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/687-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/687-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/687-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/687-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createDisplay" {  
-"19442" [label = <(METHOD,createDisplay)> ]
-"19446" [label = <(METHOD_RETURN,ANY)> ]
-  "19442" -> "19446" 
+"19458" [label = <(METHOD,createDisplay)> ]
+"19462" [label = <(METHOD_RETURN,ANY)> ]
+  "19458" -> "19462" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/688-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/688-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/688-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/688-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createBufferQueue" {  
-"19447" [label = <(METHOD,createBufferQueue)> ]
-"19453" [label = <(METHOD_RETURN,ANY)> ]
-  "19447" -> "19453" 
+"19463" [label = <(METHOD,createBufferQueue)> ]
+"19469" [label = <(METHOD_RETURN,ANY)> ]
+  "19463" -> "19469" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/689-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/689-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/689-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/689-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setupNewDisplayDeviceInternal" {  
-"19454" [label = <(METHOD,setupNewDisplayDeviceInternal)> ]
-"19461" [label = <(METHOD_RETURN,ANY)> ]
-  "19454" -> "19461" 
+"19470" [label = <(METHOD,setupNewDisplayDeviceInternal)> ]
+"19477" [label = <(METHOD_RETURN,ANY)> ]
+  "19470" -> "19477" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/690-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/690-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/690-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/690-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "dispatchDisplayHotplugEvent" {  
-"19462" [label = <(METHOD,dispatchDisplayHotplugEvent)> ]
-"19466" [label = <(METHOD_RETURN,ANY)> ]
-  "19462" -> "19466" 
+"19478" [label = <(METHOD,dispatchDisplayHotplugEvent)> ]
+"19482" [label = <(METHOD_RETURN,ANY)> ]
+  "19478" -> "19482" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/691-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/691-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/691-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/691-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onPrimaryDisplayAreaChanged" {  
-"19467" [label = <(METHOD,onPrimaryDisplayAreaChanged)> ]
-"19471" [label = <(METHOD_RETURN,ANY)> ]
-  "19467" -> "19471" 
+"19483" [label = <(METHOD,onPrimaryDisplayAreaChanged)> ]
+"19487" [label = <(METHOD_RETURN,ANY)> ]
+  "19483" -> "19487" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/692-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/692-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/692-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/692-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "disconnect" {  
-"19472" [label = <(METHOD,disconnect)> ]
-"19475" [label = <(METHOD_RETURN,ANY)> ]
-  "19472" -> "19475" 
+"19488" [label = <(METHOD,disconnect)> ]
+"19491" [label = <(METHOD_RETURN,ANY)> ]
+  "19488" -> "19491" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/693-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/693-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/693-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/693-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "allocatePhysicalDisplay" {  
-"19476" [label = <(METHOD,allocatePhysicalDisplay)> ]
-"19481" [label = <(METHOD_RETURN,ANY)> ]
-  "19476" -> "19481" 
+"19492" [label = <(METHOD,allocatePhysicalDisplay)> ]
+"19497" [label = <(METHOD_RETURN,ANY)> ]
+  "19492" -> "19497" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/694-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/694-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/694-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/694-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "processDisplayAdded" {  
-"19482" [label = <(METHOD,processDisplayAdded)> ]
-"19486" [label = <(METHOD_RETURN,ANY)> ]
-  "19482" -> "19486" 
+"19498" [label = <(METHOD,processDisplayAdded)> ]
+"19502" [label = <(METHOD_RETURN,ANY)> ]
+  "19498" -> "19502" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/695-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/695-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/695-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/695-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplaySize" {  
-"19487" [label = <(METHOD,setDisplaySize)> ]
-"19492" [label = <(METHOD_RETURN,ANY)> ]
-  "19487" -> "19492" 
+"19503" [label = <(METHOD,setDisplaySize)> ]
+"19508" [label = <(METHOD_RETURN,ANY)> ]
+  "19503" -> "19508" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/696-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/696-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/696-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/696-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setViewport" {  
-"19493" [label = <(METHOD,setViewport)> ]
-"19497" [label = <(METHOD_RETURN,ANY)> ]
-  "19493" -> "19497" 
+"19509" [label = <(METHOD,setViewport)> ]
+"19513" [label = <(METHOD_RETURN,ANY)> ]
+  "19509" -> "19513" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/697-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/697-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/697-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/697-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "curr" {  
-"19498" [label = <(METHOD,curr)> ]
-"19501" [label = <(METHOD_RETURN,ANY)> ]
-  "19498" -> "19501" 
+"19514" [label = <(METHOD,curr)> ]
+"19517" [label = <(METHOD_RETURN,ANY)> ]
+  "19514" -> "19517" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/698-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/698-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/698-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/698-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "draw" {  
-"19502" [label = <(METHOD,draw)> ]
-"19505" [label = <(METHOD_RETURN,ANY)> ]
-  "19502" -> "19505" 
+"19518" [label = <(METHOD,draw)> ]
+"19521" [label = <(METHOD_RETURN,ANY)> ]
+  "19518" -> "19521" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/699-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/699-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/699-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/699-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isIdenticalTo" {  
-"19506" [label = <(METHOD,isIdenticalTo)> ]
-"19510" [label = <(METHOD_RETURN,ANY)> ]
-  "19506" -> "19510" 
+"19522" [label = <(METHOD,isIdenticalTo)> ]
+"19526" [label = <(METHOD_RETURN,ANY)> ]
+  "19522" -> "19526" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/7-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/7-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/7-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/7-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_14" {  
-"34" [label = <(METHOD,anonymous_lambda_14)<SUB>1922</SUB>> ]
-"36" [label = <(METHOD_RETURN,ANY)<SUB>1922</SUB>> ]
+"34" [label = <(METHOD,anonymous_lambda_14)<SUB>1921</SUB>> ]
+"36" [label = <(METHOD_RETURN,ANY)<SUB>1921</SUB>> ]
   "34" -> "36" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/700-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/700-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/700-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/700-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "keyAt" {  
-"19511" [label = <(METHOD,keyAt)> ]
-"19515" [label = <(METHOD_RETURN,ANY)> ]
-  "19511" -> "19515" 
+"19527" [label = <(METHOD,keyAt)> ]
+"19531" [label = <(METHOD_RETURN,ANY)> ]
+  "19527" -> "19531" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/701-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/701-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/701-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/701-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "processDisplayRemoved" {  
-"19516" [label = <(METHOD,processDisplayRemoved)> ]
-"19519" [label = <(METHOD_RETURN,ANY)> ]
-  "19516" -> "19519" 
+"19532" [label = <(METHOD,processDisplayRemoved)> ]
+"19535" [label = <(METHOD_RETURN,ANY)> ]
+  "19532" -> "19535" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/702-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/702-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/702-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/702-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "processDisplayChanged" {  
-"19520" [label = <(METHOD,processDisplayChanged)> ]
-"19525" [label = <(METHOD_RETURN,ANY)> ]
-  "19520" -> "19525" 
+"19536" [label = <(METHOD,processDisplayChanged)> ]
+"19541" [label = <(METHOD_RETURN,ANY)> ]
+  "19536" -> "19541" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/703-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/703-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/703-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/703-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.and" {  
-"19526" [label = <(METHOD,&lt;operator&gt;.and)> ]
-"19530" [label = <(METHOD_RETURN,ANY)> ]
-  "19526" -> "19530" 
+"19542" [label = <(METHOD,&lt;operator&gt;.and)> ]
+"19546" [label = <(METHOD_RETURN,ANY)> ]
+  "19542" -> "19546" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/704-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/704-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/704-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/704-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "commitInputWindowCommands" {  
-"19531" [label = <(METHOD,commitInputWindowCommands)> ]
-"19533" [label = <(METHOD_RETURN,ANY)> ]
-  "19531" -> "19533" 
+"19547" [label = <(METHOD,commitInputWindowCommands)> ]
+"19549" [label = <(METHOD_RETURN,ANY)> ]
+  "19547" -> "19549" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/705-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/705-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/705-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/705-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "commitTransaction" {  
-"19534" [label = <(METHOD,commitTransaction)> ]
-"19536" [label = <(METHOD_RETURN,ANY)> ]
-  "19534" -> "19536" 
+"19550" [label = <(METHOD,commitTransaction)> ]
+"19552" [label = <(METHOD_RETURN,ANY)> ]
+  "19550" -> "19552" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/706-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/706-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/706-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/706-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "updateInputWindowInfo" {  
-"19537" [label = <(METHOD,updateInputWindowInfo)> ]
-"19539" [label = <(METHOD_RETURN,ANY)> ]
-  "19537" -> "19539" 
+"19553" [label = <(METHOD,updateInputWindowInfo)> ]
+"19555" [label = <(METHOD_RETURN,ANY)> ]
+  "19553" -> "19555" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/707-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/707-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/707-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/707-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setInputWindowsFinished" {  
-"19540" [label = <(METHOD,setInputWindowsFinished)> ]
-"19543" [label = <(METHOD_RETURN,ANY)> ]
-  "19540" -> "19543" 
+"19556" [label = <(METHOD,setInputWindowsFinished)> ]
+"19559" [label = <(METHOD_RETURN,ANY)> ]
+  "19556" -> "19559" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/708-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/708-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/708-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/708-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "traverseInReverseZOrder" {  
-"19544" [label = <(METHOD,traverseInReverseZOrder)> ]
-"19549" [label = <(METHOD_RETURN,ANY)> ]
-  "19544" -> "19549" 
+"19560" [label = <(METHOD,traverseInReverseZOrder)> ]
+"19565" [label = <(METHOD_RETURN,ANY)> ]
+  "19560" -> "19565" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/709-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/709-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/709-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/709-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setInputWindows" {  
-"19550" [label = <(METHOD,setInputWindows)> ]
-"19555" [label = <(METHOD_RETURN,ANY)> ]
-  "19550" -> "19555" 
+"19566" [label = <(METHOD,setInputWindows)> ]
+"19571" [label = <(METHOD_RETURN,ANY)> ]
+  "19566" -> "19571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/710-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/710-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/710-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/710-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "merge" {  
-"19556" [label = <(METHOD,merge)> ]
-"19560" [label = <(METHOD_RETURN,ANY)> ]
-  "19556" -> "19560" 
+"19572" [label = <(METHOD,merge)> ]
+"19576" [label = <(METHOD_RETURN,ANY)> ]
+  "19572" -> "19576" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/711-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/711-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/711-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/711-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "changeRefreshRateLocked" {  
-"19561" [label = <(METHOD,changeRefreshRateLocked)> ]
-"19565" [label = <(METHOD_RETURN,ANY)> ]
-  "19561" -> "19565" 
+"19577" [label = <(METHOD,changeRefreshRateLocked)> ]
+"19581" [label = <(METHOD_RETURN,ANY)> ]
+  "19577" -> "19581" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/712-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/712-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/712-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/712-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.bracketedPrimary" {  
-"19566" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
-"19569" [label = <(METHOD_RETURN,ANY)> ]
-  "19566" -> "19569" 
+"19582" [label = <(METHOD,&lt;operator&gt;.bracketedPrimary)> ]
+"19585" [label = <(METHOD_RETURN,ANY)> ]
+  "19582" -> "19585" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/713-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/713-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/713-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/713-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.expressionList" {  
-"19570" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
-"19574" [label = <(METHOD_RETURN,ANY)> ]
-  "19570" -> "19574" 
+"19586" [label = <(METHOD,&lt;operator&gt;.expressionList)> ]
+"19590" [label = <(METHOD_RETURN,ANY)> ]
+  "19586" -> "19590" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/714-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/714-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/714-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/714-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createPhaseConfiguration" {  
-"19575" [label = <(METHOD,createPhaseConfiguration)> ]
-"19579" [label = <(METHOD_RETURN,ANY)> ]
-  "19575" -> "19579" 
+"19591" [label = <(METHOD,createPhaseConfiguration)> ]
+"19595" [label = <(METHOD_RETURN,ANY)> ]
+  "19591" -> "19595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/715-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/715-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/715-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/715-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createScheduler" {  
-"19580" [label = <(METHOD,createScheduler)> ]
-"19586" [label = <(METHOD_RETURN,ANY)> ]
-  "19580" -> "19586" 
+"19596" [label = <(METHOD,createScheduler)> ]
+"19602" [label = <(METHOD_RETURN,ANY)> ]
+  "19596" -> "19602" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/716-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/716-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/716-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/716-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createConnection" {  
-"19587" [label = <(METHOD,createConnection)> ]
-"19593" [label = <(METHOD_RETURN,ANY)> ]
-  "19587" -> "19593" 
+"19603" [label = <(METHOD,createConnection)> ]
+"19609" [label = <(METHOD_RETURN,ANY)> ]
+  "19603" -> "19609" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/717-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/717-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/717-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/717-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "impl::EventThread::InterceptVSyncsCallback" {  
-"19594" [label = <(METHOD,impl::EventThread::InterceptVSyncsCallback)> ]
-"19597" [label = <(METHOD_RETURN,ANY)> ]
-  "19594" -> "19597" 
+"19610" [label = <(METHOD,impl::EventThread::InterceptVSyncsCallback)> ]
+"19613" [label = <(METHOD_RETURN,ANY)> ]
+  "19610" -> "19613" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/718-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/718-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/718-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/718-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setEventConnection" {  
-"19598" [label = <(METHOD,setEventConnection)> ]
-"19602" [label = <(METHOD_RETURN,ANY)> ]
-  "19598" -> "19602" 
+"19614" [label = <(METHOD,setEventConnection)> ]
+"19618" [label = <(METHOD_RETURN,ANY)> ]
+  "19614" -> "19618" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/719-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/719-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/719-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/719-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getEventConnection" {  
-"19603" [label = <(METHOD,getEventConnection)> ]
-"19607" [label = <(METHOD_RETURN,ANY)> ]
-  "19603" -> "19607" 
+"19619" [label = <(METHOD,getEventConnection)> ]
+"19623" [label = <(METHOD_RETURN,ANY)> ]
+  "19619" -> "19623" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/720-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/720-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/720-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/720-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "RegionSamplingThread::EnvironmentTimingTunables" {  
-"19608" [label = <(METHOD,RegionSamplingThread::EnvironmentTimingTunables)> ]
-"19611" [label = <(METHOD_RETURN,ANY)> ]
-  "19608" -> "19611" 
+"19624" [label = <(METHOD,RegionSamplingThread::EnvironmentTimingTunables)> ]
+"19627" [label = <(METHOD_RETURN,ANY)> ]
+  "19624" -> "19627" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/721-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/721-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/721-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/721-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "commitTransactionLocked" {  
-"19612" [label = <(METHOD,commitTransactionLocked)> ]
-"19614" [label = <(METHOD_RETURN,ANY)> ]
-  "19612" -> "19614" 
+"19628" [label = <(METHOD,commitTransactionLocked)> ]
+"19630" [label = <(METHOD_RETURN,ANY)> ]
+  "19628" -> "19630" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/722-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/722-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/722-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/722-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "broadcast" {  
-"19615" [label = <(METHOD,broadcast)> ]
-"19618" [label = <(METHOD_RETURN,ANY)> ]
-  "19615" -> "19618" 
+"19631" [label = <(METHOD,broadcast)> ]
+"19634" [label = <(METHOD_RETURN,ANY)> ]
+  "19631" -> "19634" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/723-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/723-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/723-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/723-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isEmpty" {  
-"19619" [label = <(METHOD,isEmpty)> ]
-"19622" [label = <(METHOD_RETURN,ANY)> ]
-  "19619" -> "19622" 
+"19635" [label = <(METHOD,isEmpty)> ]
+"19638" [label = <(METHOD_RETURN,ANY)> ]
+  "19635" -> "19638" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/724-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/724-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/724-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/724-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "recordBufferingStats" {  
-"19623" [label = <(METHOD,recordBufferingStats)> ]
-"19627" [label = <(METHOD_RETURN,ANY)> ]
-  "19623" -> "19627" 
+"19639" [label = <(METHOD,recordBufferingStats)> ]
+"19643" [label = <(METHOD_RETURN,ANY)> ]
+  "19639" -> "19643" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/725-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/725-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/725-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/725-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getOccupancyHistory" {  
-"19628" [label = <(METHOD,getOccupancyHistory)> ]
-"19632" [label = <(METHOD_RETURN,ANY)> ]
-  "19628" -> "19632" 
+"19644" [label = <(METHOD,getOccupancyHistory)> ]
+"19648" [label = <(METHOD_RETURN,ANY)> ]
+  "19644" -> "19648" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/726-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/726-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/726-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/726-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isRemovedFromCurrentState" {  
-"19633" [label = <(METHOD,isRemovedFromCurrentState)> ]
-"19636" [label = <(METHOD_RETURN,ANY)> ]
-  "19633" -> "19636" 
+"19649" [label = <(METHOD,isRemovedFromCurrentState)> ]
+"19652" [label = <(METHOD_RETURN,ANY)> ]
+  "19649" -> "19652" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/727-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/727-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/727-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/727-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "latchAndReleaseBuffer" {  
-"19637" [label = <(METHOD,latchAndReleaseBuffer)> ]
-"19640" [label = <(METHOD_RETURN,ANY)> ]
-  "19637" -> "19640" 
+"19653" [label = <(METHOD,latchAndReleaseBuffer)> ]
+"19656" [label = <(METHOD_RETURN,ANY)> ]
+  "19653" -> "19656" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/728-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/728-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/728-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/728-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getParent" {  
-"19641" [label = <(METHOD,getParent)> ]
-"19644" [label = <(METHOD_RETURN,ANY)> ]
-  "19641" -> "19644" 
+"19657" [label = <(METHOD,getParent)> ]
+"19660" [label = <(METHOD_RETURN,ANY)> ]
+  "19657" -> "19660" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/729-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/729-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/729-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/729-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "commitOffscreenLayers" {  
-"19645" [label = <(METHOD,commitOffscreenLayers)> ]
-"19647" [label = <(METHOD_RETURN,ANY)> ]
-  "19645" -> "19647" 
+"19661" [label = <(METHOD,commitOffscreenLayers)> ]
+"19663" [label = <(METHOD_RETURN,ANY)> ]
+  "19661" -> "19663" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/730-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/730-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/730-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/730-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "orSelf" {  
-"19648" [label = <(METHOD,orSelf)> ]
-"19652" [label = <(METHOD_RETURN,ANY)> ]
-  "19648" -> "19652" 
+"19664" [label = <(METHOD,orSelf)> ]
+"19668" [label = <(METHOD_RETURN,ANY)> ]
+  "19664" -> "19668" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/731-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/731-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/731-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/731-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "editState" {  
-"19653" [label = <(METHOD,editState)> ]
-"19656" [label = <(METHOD_RETURN,ANY)> ]
-  "19653" -> "19656" 
+"19669" [label = <(METHOD,editState)> ]
+"19672" [label = <(METHOD_RETURN,ANY)> ]
+  "19669" -> "19672" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/732-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/732-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/732-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/732-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "latchBuffer" {  
-"19657" [label = <(METHOD,latchBuffer)> ]
-"19663" [label = <(METHOD_RETURN,ANY)> ]
-  "19657" -> "19663" 
+"19673" [label = <(METHOD,latchBuffer)> ]
+"19679" [label = <(METHOD_RETURN,ANY)> ]
+  "19673" -> "19679" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/733-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/733-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/733-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/733-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "useSurfaceDamage" {  
-"19664" [label = <(METHOD,useSurfaceDamage)> ]
-"19667" [label = <(METHOD_RETURN,ANY)> ]
-  "19664" -> "19667" 
+"19680" [label = <(METHOD,useSurfaceDamage)> ]
+"19683" [label = <(METHOD_RETURN,ANY)> ]
+  "19680" -> "19683" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/734-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/734-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/734-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/734-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "isBufferLatched" {  
-"19668" [label = <(METHOD,isBufferLatched)> ]
-"19671" [label = <(METHOD_RETURN,ANY)> ]
-  "19668" -> "19671" 
+"19684" [label = <(METHOD,isBufferLatched)> ]
+"19687" [label = <(METHOD_RETURN,ANY)> ]
+  "19684" -> "19687" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/735-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/735-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/735-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/735-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "promote" {  
-"19672" [label = <(METHOD,promote)> ]
-"19675" [label = <(METHOD_RETURN,ANY)> ]
-  "19672" -> "19675" 
+"19688" [label = <(METHOD,promote)> ]
+"19691" [label = <(METHOD_RETURN,ANY)> ]
+  "19688" -> "19691" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/736-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/736-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/736-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/736-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "fromHandleLocked" {  
-"19676" [label = <(METHOD,fromHandleLocked)> ]
-"19679" [label = <(METHOD_RETURN,ANY)> ]
-  "19676" -> "19679" 
+"19692" [label = <(METHOD,fromHandleLocked)> ]
+"19695" [label = <(METHOD_RETURN,ANY)> ]
+  "19692" -> "19695" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/737-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/737-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/737-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/737-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "localBinder" {  
-"19680" [label = <(METHOD,localBinder)> ]
-"19683" [label = <(METHOD_RETURN,ANY)> ]
-  "19680" -> "19683" 
+"19696" [label = <(METHOD,localBinder)> ]
+"19699" [label = <(METHOD_RETURN,ANY)> ]
+  "19696" -> "19699" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/738-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/738-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/738-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/738-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onRemovedFromCurrentState" {  
-"19684" [label = <(METHOD,onRemovedFromCurrentState)> ]
-"19687" [label = <(METHOD_RETURN,ANY)> ]
-  "19684" -> "19687" 
+"19700" [label = <(METHOD,onRemovedFromCurrentState)> ]
+"19703" [label = <(METHOD_RETURN,ANY)> ]
+  "19700" -> "19703" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/739-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/739-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/739-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/739-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "addChild" {  
-"19688" [label = <(METHOD,addChild)> ]
-"19692" [label = <(METHOD_RETURN,ANY)> ]
-  "19688" -> "19692" 
+"19704" [label = <(METHOD,addChild)> ]
+"19708" [label = <(METHOD_RETURN,ANY)> ]
+  "19704" -> "19708" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/740-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/740-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/740-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/740-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "insert" {  
-"19693" [label = <(METHOD,insert)> ]
-"19697" [label = <(METHOD_RETURN,ANY)> ]
-  "19693" -> "19697" 
+"19709" [label = <(METHOD,insert)> ]
+"19713" [label = <(METHOD_RETURN,ANY)> ]
+  "19709" -> "19713" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/741-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/741-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/741-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/741-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "updateTransformHint" {  
-"19698" [label = <(METHOD,updateTransformHint)> ]
-"19702" [label = <(METHOD_RETURN,ANY)> ]
-  "19698" -> "19702" 
+"19714" [label = <(METHOD,updateTransformHint)> ]
+"19718" [label = <(METHOD_RETURN,ANY)> ]
+  "19714" -> "19718" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/742-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/742-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/742-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/742-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getTransformHint" {  
-"19703" [label = <(METHOD,getTransformHint)> ]
-"19706" [label = <(METHOD_RETURN,ANY)> ]
-  "19703" -> "19706" 
+"19719" [label = <(METHOD,getTransformHint)> ]
+"19722" [label = <(METHOD_RETURN,ANY)> ]
+  "19719" -> "19722" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/743-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/743-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/743-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/743-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "attachLayer" {  
-"19707" [label = <(METHOD,attachLayer)> ]
-"19712" [label = <(METHOD_RETURN,ANY)> ]
-  "19707" -> "19712" 
+"19723" [label = <(METHOD,attachLayer)> ]
+"19728" [label = <(METHOD_RETURN,ANY)> ]
+  "19723" -> "19728" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/744-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/744-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/744-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/744-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "fetch_and" {  
-"19713" [label = <(METHOD,fetch_and)> ]
-"19717" [label = <(METHOD_RETURN,ANY)> ]
-  "19713" -> "19717" 
+"19729" [label = <(METHOD,fetch_and)> ]
+"19733" [label = <(METHOD_RETURN,ANY)> ]
+  "19729" -> "19733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/745-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/745-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/745-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/745-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.not" {  
-"19718" [label = <(METHOD,&lt;operator&gt;.not)> ]
-"19721" [label = <(METHOD_RETURN,ANY)> ]
-  "19718" -> "19721" 
+"19734" [label = <(METHOD,&lt;operator&gt;.not)> ]
+"19737" [label = <(METHOD_RETURN,ANY)> ]
+  "19734" -> "19737" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/746-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/746-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/746-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/746-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransactionFlags" {  
-"19722" [label = <(METHOD,setTransactionFlags)> ]
-"19725" [label = <(METHOD_RETURN,ANY)> ]
-  "19722" -> "19725" 
+"19738" [label = <(METHOD,setTransactionFlags)> ]
+"19741" [label = <(METHOD_RETURN,ANY)> ]
+  "19738" -> "19741" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/747-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/747-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/747-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/747-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "fetch_or" {  
-"19726" [label = <(METHOD,fetch_or)> ]
-"19730" [label = <(METHOD_RETURN,ANY)> ]
-  "19726" -> "19730" 
+"19742" [label = <(METHOD,fetch_or)> ]
+"19746" [label = <(METHOD_RETURN,ANY)> ]
+  "19742" -> "19746" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/748-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/748-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/748-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/748-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransactionStart" {  
-"19731" [label = <(METHOD,setTransactionStart)> ]
-"19735" [label = <(METHOD_RETURN,ANY)> ]
-  "19731" -> "19735" 
+"19747" [label = <(METHOD,setTransactionStart)> ]
+"19751" [label = <(METHOD_RETURN,ANY)> ]
+  "19747" -> "19751" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/749-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/749-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/749-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/749-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "signalTransaction" {  
-"19736" [label = <(METHOD,signalTransaction)> ]
-"19738" [label = <(METHOD_RETURN,ANY)> ]
-  "19736" -> "19738" 
+"19752" [label = <(METHOD,signalTransaction)> ]
+"19754" [label = <(METHOD_RETURN,ANY)> ]
+  "19752" -> "19754" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/750-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/750-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/750-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/750-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "transactionIsReadyToBeApplied" {  
-"19739" [label = <(METHOD,transactionIsReadyToBeApplied)> ]
-"19743" [label = <(METHOD_RETURN,ANY)> ]
-  "19739" -> "19743" 
+"19755" [label = <(METHOD,transactionIsReadyToBeApplied)> ]
+"19759" [label = <(METHOD_RETURN,ANY)> ]
+  "19755" -> "19759" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/751-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/751-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/751-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/751-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "applyTransactionState" {  
-"19744" [label = <(METHOD,applyTransactionState)> ]
-"19756" [label = <(METHOD_RETURN,ANY)> ]
-  "19744" -> "19756" 
+"19760" [label = <(METHOD,applyTransactionState)> ]
+"19772" [label = <(METHOD_RETURN,ANY)> ]
+  "19760" -> "19772" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/752-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/752-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/752-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/752-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "std::next" {  
-"19757" [label = <(METHOD,std::next)> ]
-"19762" [label = <(METHOD_RETURN,ANY)> ]
-  "19757" -> "19762" 
+"19773" [label = <(METHOD,std::next)> ]
+"19778" [label = <(METHOD_RETURN,ANY)> ]
+  "19773" -> "19778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/753-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/753-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/753-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/753-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "s2ns" {  
-"19763" [label = <(METHOD,s2ns)> ]
-"19766" [label = <(METHOD_RETURN,ANY)> ]
-  "19763" -> "19766" 
+"19779" [label = <(METHOD,s2ns)> ]
+"19782" [label = <(METHOD_RETURN,ANY)> ]
+  "19779" -> "19782" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/754-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/754-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/754-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/754-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getStatus" {  
-"19767" [label = <(METHOD,getStatus)> ]
-"19770" [label = <(METHOD_RETURN,ANY)> ]
-  "19767" -> "19770" 
+"19783" [label = <(METHOD,getStatus)> ]
+"19786" [label = <(METHOD_RETURN,ANY)> ]
+  "19783" -> "19786" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/755-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/755-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/755-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/755-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "callingThreadHasUnscopedSurfaceFlingerAccess" {  
-"19771" [label = <(METHOD,callingThreadHasUnscopedSurfaceFlingerAccess)> ]
-"19774" [label = <(METHOD_RETURN,ANY)> ]
-  "19771" -> "19774" 
+"19787" [label = <(METHOD,callingThreadHasUnscopedSurfaceFlingerAccess)> ]
+"19790" [label = <(METHOD_RETURN,ANY)> ]
+  "19787" -> "19790" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/756-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/756-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/756-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/756-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "waitRelative" {  
-"19775" [label = <(METHOD,waitRelative)> ]
-"19780" [label = <(METHOD_RETURN,ANY)> ]
-  "19775" -> "19780" 
+"19791" [label = <(METHOD,waitRelative)> ]
+"19796" [label = <(METHOD_RETURN,ANY)> ]
+  "19791" -> "19796" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/757-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/757-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/757-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/757-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGW_IF" {  
-"19781" [label = <(METHOD,ALOGW_IF)> ]
-"19785" [label = <(METHOD_RETURN,ANY)> ]
-  "19781" -> "19785" 
+"19797" [label = <(METHOD,ALOGW_IF)> ]
+"19801" [label = <(METHOD_RETURN,ANY)> ]
+  "19797" -> "19801" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/758-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/758-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/758-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/758-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplayStateLocked" {  
-"19786" [label = <(METHOD,setDisplayStateLocked)> ]
-"19789" [label = <(METHOD_RETURN,ANY)> ]
-  "19786" -> "19789" 
+"19802" [label = <(METHOD,setDisplayStateLocked)> ]
+"19805" [label = <(METHOD_RETURN,ANY)> ]
+  "19802" -> "19805" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/759-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/759-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/759-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/759-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "startRegistration" {  
-"19790" [label = <(METHOD,startRegistration)> ]
-"19794" [label = <(METHOD_RETURN,ANY)> ]
-  "19790" -> "19794" 
+"19806" [label = <(METHOD,startRegistration)> ]
+"19810" [label = <(METHOD_RETURN,ANY)> ]
+  "19806" -> "19810" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/760-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/760-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/760-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/760-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "endRegistration" {  
-"19795" [label = <(METHOD,endRegistration)> ]
-"19799" [label = <(METHOD_RETURN,ANY)> ]
-  "19795" -> "19799" 
+"19811" [label = <(METHOD,endRegistration)> ]
+"19815" [label = <(METHOD_RETURN,ANY)> ]
+  "19811" -> "19815" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/761-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/761-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/761-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/761-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setClientStateLocked" {  
-"19800" [label = <(METHOD,setClientStateLocked)> ]
-"19807" [label = <(METHOD_RETURN,ANY)> ]
-  "19800" -> "19807" 
+"19816" [label = <(METHOD,setClientStateLocked)> ]
+"19823" [label = <(METHOD_RETURN,ANY)> ]
+  "19816" -> "19823" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/762-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/762-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/762-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/762-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "recordLayerHistory" {  
-"19808" [label = <(METHOD,recordLayerHistory)> ]
-"19814" [label = <(METHOD_RETURN,ANY)> ]
-  "19808" -> "19814" 
+"19824" [label = <(METHOD,recordLayerHistory)> ]
+"19830" [label = <(METHOD_RETURN,ANY)> ]
+  "19824" -> "19830" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/763-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/763-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/763-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/763-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "addInputWindowCommands" {  
-"19815" [label = <(METHOD,addInputWindowCommands)> ]
-"19818" [label = <(METHOD_RETURN,ANY)> ]
-  "19815" -> "19818" 
+"19831" [label = <(METHOD,addInputWindowCommands)> ]
+"19834" [label = <(METHOD_RETURN,ANY)> ]
+  "19831" -> "19834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/764-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/764-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/764-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/764-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "ClientCache::getInstance" {  
-"19819" [label = <(METHOD,ClientCache::getInstance)> ]
-"19822" [label = <(METHOD_RETURN,ANY)> ]
-  "19819" -> "19822" 
+"19835" [label = <(METHOD,ClientCache::getInstance)> ]
+"19838" [label = <(METHOD_RETURN,ANY)> ]
+  "19835" -> "19838" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/765-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/765-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/765-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/765-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "unbindExternalTextureBuffer" {  
-"19823" [label = <(METHOD,unbindExternalTextureBuffer)> ]
-"19827" [label = <(METHOD_RETURN,ANY)> ]
-  "19823" -> "19827" 
+"19839" [label = <(METHOD,unbindExternalTextureBuffer)> ]
+"19843" [label = <(METHOD_RETURN,ANY)> ]
+  "19839" -> "19843" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/766-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/766-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/766-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/766-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "saveTransaction" {  
-"19828" [label = <(METHOD,saveTransaction)> ]
-"19835" [label = <(METHOD_RETURN,ANY)> ]
-  "19828" -> "19835" 
+"19844" [label = <(METHOD,saveTransaction)> ]
+"19851" [label = <(METHOD_RETURN,ANY)> ]
+  "19844" -> "19851" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/767-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/767-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/767-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/767-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operators&gt;.assignmentAnd" {  
-"19836" [label = <(METHOD,&lt;operators&gt;.assignmentAnd)> ]
-"19840" [label = <(METHOD_RETURN,ANY)> ]
-  "19836" -> "19840" 
+"19852" [label = <(METHOD,&lt;operators&gt;.assignmentAnd)> ]
+"19856" [label = <(METHOD_RETURN,ANY)> ]
+  "19852" -> "19856" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/768-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/768-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/768-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/768-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "editValueAt" {  
-"19841" [label = <(METHOD,editValueAt)> ]
-"19845" [label = <(METHOD_RETURN,ANY)> ]
-  "19841" -> "19845" 
+"19857" [label = <(METHOD,editValueAt)> ]
+"19861" [label = <(METHOD_RETURN,ANY)> ]
+  "19857" -> "19861" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/769-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/769-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/769-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/769-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "IPCThreadState::self" {  
-"19846" [label = <(METHOD,IPCThreadState::self)> ]
-"19849" [label = <(METHOD_RETURN,ANY)> ]
-  "19846" -> "19849" 
+"19862" [label = <(METHOD,IPCThreadState::self)> ]
+"19865" [label = <(METHOD_RETURN,ANY)> ]
+  "19862" -> "19865" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/770-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/770-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/770-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/770-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getCallingPid" {  
-"19850" [label = <(METHOD,getCallingPid)> ]
-"19853" [label = <(METHOD_RETURN,ANY)> ]
-  "19850" -> "19853" 
+"19866" [label = <(METHOD,getCallingPid)> ]
+"19869" [label = <(METHOD_RETURN,ANY)> ]
+  "19866" -> "19869" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/771-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/771-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/771-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/771-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getCallingUid" {  
-"19854" [label = <(METHOD,getCallingUid)> ]
-"19857" [label = <(METHOD_RETURN,ANY)> ]
-  "19854" -> "19857" 
+"19870" [label = <(METHOD,getCallingUid)> ]
+"19873" [label = <(METHOD_RETURN,ANY)> ]
+  "19870" -> "19873" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/772-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/772-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/772-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/772-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "PermissionCache::checkPermission" {  
-"19858" [label = <(METHOD,PermissionCache::checkPermission)> ]
-"19864" [label = <(METHOD_RETURN,ANY)> ]
-  "19858" -> "19864" 
+"19874" [label = <(METHOD,PermissionCache::checkPermission)> ]
+"19880" [label = <(METHOD_RETURN,ANY)> ]
+  "19874" -> "19880" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/773-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/773-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/773-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/773-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "checkPermission" {  
-"19865" [label = <(METHOD,checkPermission)> ]
-"19870" [label = <(METHOD_RETURN,ANY)> ]
-  "19865" -> "19870" 
+"19881" [label = <(METHOD,checkPermission)> ]
+"19886" [label = <(METHOD_RETURN,ANY)> ]
+  "19881" -> "19886" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/774-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/774-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/774-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/774-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "registerUnpresentedCallbackHandle" {  
-"19871" [label = <(METHOD,registerUnpresentedCallbackHandle)> ]
-"19875" [label = <(METHOD_RETURN,ANY)> ]
-  "19871" -> "19875" 
+"19887" [label = <(METHOD,registerUnpresentedCallbackHandle)> ]
+"19891" [label = <(METHOD_RETURN,ANY)> ]
+  "19887" -> "19891" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/775-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/775-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/775-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/775-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "pushPendingState" {  
-"19876" [label = <(METHOD,pushPendingState)> ]
-"19879" [label = <(METHOD_RETURN,ANY)> ]
-  "19876" -> "19879" 
+"19892" [label = <(METHOD,pushPendingState)> ]
+"19895" [label = <(METHOD_RETURN,ANY)> ]
+  "19892" -> "19895" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/776-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/776-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/776-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/776-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "onDisconnect" {  
-"19880" [label = <(METHOD,onDisconnect)> ]
-"19883" [label = <(METHOD_RETURN,ANY)> ]
-  "19880" -> "19883" 
+"19896" [label = <(METHOD,onDisconnect)> ]
+"19899" [label = <(METHOD_RETURN,ANY)> ]
+  "19896" -> "19899" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/777-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/777-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/777-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/777-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setPosition" {  
-"19884" [label = <(METHOD,setPosition)> ]
-"19889" [label = <(METHOD_RETURN,ANY)> ]
-  "19884" -> "19889" 
+"19900" [label = <(METHOD,setPosition)> ]
+"19905" [label = <(METHOD_RETURN,ANY)> ]
+  "19900" -> "19905" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/778-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/778-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/778-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/778-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "indexOf" {  
-"19890" [label = <(METHOD,indexOf)> ]
-"19894" [label = <(METHOD_RETURN,ANY)> ]
-  "19890" -> "19894" 
+"19906" [label = <(METHOD,indexOf)> ]
+"19910" [label = <(METHOD_RETURN,ANY)> ]
+  "19906" -> "19910" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/779-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/779-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/779-cfg.dot	2023-06-07 19:33:00.537398968 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/779-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setLayer" {  
-"19895" [label = <(METHOD,setLayer)> ]
-"19899" [label = <(METHOD_RETURN,ANY)> ]
-  "19895" -> "19899" 
+"19911" [label = <(METHOD,setLayer)> ]
+"19915" [label = <(METHOD_RETURN,ANY)> ]
+  "19911" -> "19915" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/780-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/780-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/780-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/780-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "removeAt" {  
-"19900" [label = <(METHOD,removeAt)> ]
-"19904" [label = <(METHOD_RETURN,ANY)> ]
-  "19900" -> "19904" 
+"19916" [label = <(METHOD,removeAt)> ]
+"19920" [label = <(METHOD_RETURN,ANY)> ]
+  "19916" -> "19920" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/781-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/781-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/781-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/781-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setChildLayer" {  
-"19905" [label = <(METHOD,setChildLayer)> ]
-"19910" [label = <(METHOD_RETURN,ANY)> ]
-  "19905" -> "19910" 
+"19921" [label = <(METHOD,setChildLayer)> ]
+"19926" [label = <(METHOD_RETURN,ANY)> ]
+  "19921" -> "19926" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/782-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/782-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/782-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/782-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setRelativeLayer" {  
-"19911" [label = <(METHOD,setRelativeLayer)> ]
-"19916" [label = <(METHOD_RETURN,ANY)> ]
-  "19911" -> "19916" 
+"19927" [label = <(METHOD,setRelativeLayer)> ]
+"19932" [label = <(METHOD_RETURN,ANY)> ]
+  "19927" -> "19932" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/783-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/783-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/783-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/783-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setChildRelativeLayer" {  
-"19917" [label = <(METHOD,setChildRelativeLayer)> ]
-"19923" [label = <(METHOD_RETURN,ANY)> ]
-  "19917" -> "19923" 
+"19933" [label = <(METHOD,setChildRelativeLayer)> ]
+"19939" [label = <(METHOD_RETURN,ANY)> ]
+  "19933" -> "19939" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/784-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/784-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/784-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/784-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setSize" {  
-"19924" [label = <(METHOD,setSize)> ]
-"19929" [label = <(METHOD_RETURN,ANY)> ]
-  "19924" -> "19929" 
+"19940" [label = <(METHOD,setSize)> ]
+"19945" [label = <(METHOD_RETURN,ANY)> ]
+  "19940" -> "19945" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/785-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/785-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/785-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/785-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setAlpha" {  
-"19930" [label = <(METHOD,setAlpha)> ]
-"19934" [label = <(METHOD_RETURN,ANY)> ]
-  "19930" -> "19934" 
+"19946" [label = <(METHOD,setAlpha)> ]
+"19950" [label = <(METHOD_RETURN,ANY)> ]
+  "19946" -> "19950" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/786-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/786-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/786-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/786-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setColor" {  
-"19935" [label = <(METHOD,setColor)> ]
-"19939" [label = <(METHOD_RETURN,ANY)> ]
-  "19935" -> "19939" 
+"19951" [label = <(METHOD,setColor)> ]
+"19955" [label = <(METHOD_RETURN,ANY)> ]
+  "19951" -> "19955" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/787-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/787-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/787-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/787-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setColorTransform" {  
-"19940" [label = <(METHOD,setColorTransform)> ]
-"19944" [label = <(METHOD_RETURN,ANY)> ]
-  "19940" -> "19944" 
+"19956" [label = <(METHOD,setColorTransform)> ]
+"19960" [label = <(METHOD_RETURN,ANY)> ]
+  "19956" -> "19960" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/788-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/788-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/788-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/788-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setBackgroundColor" {  
-"19945" [label = <(METHOD,setBackgroundColor)> ]
-"19951" [label = <(METHOD_RETURN,ANY)> ]
-  "19945" -> "19951" 
+"19961" [label = <(METHOD,setBackgroundColor)> ]
+"19967" [label = <(METHOD_RETURN,ANY)> ]
+  "19961" -> "19967" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/789-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/789-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/789-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/789-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setMatrix" {  
-"19952" [label = <(METHOD,setMatrix)> ]
-"19957" [label = <(METHOD_RETURN,ANY)> ]
-  "19952" -> "19957" 
+"19968" [label = <(METHOD,setMatrix)> ]
+"19973" [label = <(METHOD_RETURN,ANY)> ]
+  "19968" -> "19973" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/790-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/790-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/790-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/790-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransparentRegionHint" {  
-"19958" [label = <(METHOD,setTransparentRegionHint)> ]
-"19962" [label = <(METHOD_RETURN,ANY)> ]
-  "19958" -> "19962" 
+"19974" [label = <(METHOD,setTransparentRegionHint)> ]
+"19978" [label = <(METHOD_RETURN,ANY)> ]
+  "19974" -> "19978" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/791-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/791-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/791-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/791-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setFlags" {  
-"19963" [label = <(METHOD,setFlags)> ]
-"19968" [label = <(METHOD_RETURN,ANY)> ]
-  "19963" -> "19968" 
+"19979" [label = <(METHOD,setFlags)> ]
+"19984" [label = <(METHOD_RETURN,ANY)> ]
+  "19979" -> "19984" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/792-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/792-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/792-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/792-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setCrop_legacy" {  
-"19969" [label = <(METHOD,setCrop_legacy)> ]
-"19973" [label = <(METHOD_RETURN,ANY)> ]
-  "19969" -> "19973" 
+"19985" [label = <(METHOD,setCrop_legacy)> ]
+"19989" [label = <(METHOD_RETURN,ANY)> ]
+  "19985" -> "19989" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/793-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/793-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/793-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/793-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setCornerRadius" {  
-"19974" [label = <(METHOD,setCornerRadius)> ]
-"19978" [label = <(METHOD_RETURN,ANY)> ]
-  "19974" -> "19978" 
+"19990" [label = <(METHOD,setCornerRadius)> ]
+"19994" [label = <(METHOD_RETURN,ANY)> ]
+  "19990" -> "19994" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/794-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/794-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/794-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/794-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setBackgroundBlurRadius" {  
-"19979" [label = <(METHOD,setBackgroundBlurRadius)> ]
-"19983" [label = <(METHOD_RETURN,ANY)> ]
-  "19979" -> "19983" 
+"19995" [label = <(METHOD,setBackgroundBlurRadius)> ]
+"19999" [label = <(METHOD_RETURN,ANY)> ]
+  "19995" -> "19999" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/795-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/795-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/795-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/795-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "hasParent" {  
-"19984" [label = <(METHOD,hasParent)> ]
-"19987" [label = <(METHOD_RETURN,ANY)> ]
-  "19984" -> "19987" 
+"20000" [label = <(METHOD,hasParent)> ]
+"20003" [label = <(METHOD_RETURN,ANY)> ]
+  "20000" -> "20003" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/796-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/796-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/796-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/796-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getDebugName" {  
-"19988" [label = <(METHOD,getDebugName)> ]
-"19991" [label = <(METHOD_RETURN,ANY)> ]
-  "19988" -> "19991" 
+"20004" [label = <(METHOD,getDebugName)> ]
+"20007" [label = <(METHOD_RETURN,ANY)> ]
+  "20004" -> "20007" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/797-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/797-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/797-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/797-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "deferTransactionUntil_legacy" {  
-"19992" [label = <(METHOD,deferTransactionUntil_legacy)> ]
-"19997" [label = <(METHOD_RETURN,ANY)> ]
-  "19992" -> "19997" 
+"20008" [label = <(METHOD,deferTransactionUntil_legacy)> ]
+"20013" [label = <(METHOD_RETURN,ANY)> ]
+  "20008" -> "20013" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/798-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/798-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/798-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/798-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getLayer" {  
-"19998" [label = <(METHOD,getLayer)> ]
-"20001" [label = <(METHOD_RETURN,ANY)> ]
-  "19998" -> "20001" 
+"20014" [label = <(METHOD,getLayer)> ]
+"20017" [label = <(METHOD_RETURN,ANY)> ]
+  "20014" -> "20017" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/799-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/799-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/799-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/799-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "reparentChildren" {  
-"20002" [label = <(METHOD,reparentChildren)> ]
-"20006" [label = <(METHOD_RETURN,ANY)> ]
-  "20002" -> "20006" 
+"20018" [label = <(METHOD,reparentChildren)> ]
+"20022" [label = <(METHOD_RETURN,ANY)> ]
+  "20018" -> "20022" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/8-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/8-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/8-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/8-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_15" {  
-"38" [label = <(METHOD,anonymous_lambda_15)<SUB>1942</SUB>> ]
-"40" [label = <(METHOD_RETURN,ANY)<SUB>1942</SUB>> ]
+"38" [label = <(METHOD,anonymous_lambda_15)<SUB>1941</SUB>> ]
+"40" [label = <(METHOD_RETURN,ANY)<SUB>1941</SUB>> ]
   "38" -> "40" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/800-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/800-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/800-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/800-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "detachChildren" {  
-"20007" [label = <(METHOD,detachChildren)> ]
-"20010" [label = <(METHOD_RETURN,ANY)> ]
-  "20007" -> "20010" 
+"20023" [label = <(METHOD,detachChildren)> ]
+"20026" [label = <(METHOD_RETURN,ANY)> ]
+  "20023" -> "20026" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/801-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/801-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/801-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/801-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setOverrideScalingMode" {  
-"20011" [label = <(METHOD,setOverrideScalingMode)> ]
-"20015" [label = <(METHOD_RETURN,ANY)> ]
-  "20011" -> "20015" 
+"20027" [label = <(METHOD,setOverrideScalingMode)> ]
+"20031" [label = <(METHOD_RETURN,ANY)> ]
+  "20027" -> "20031" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/802-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/802-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/802-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/802-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransform" {  
-"20016" [label = <(METHOD,setTransform)> ]
-"20020" [label = <(METHOD_RETURN,ANY)> ]
-  "20016" -> "20020" 
+"20032" [label = <(METHOD,setTransform)> ]
+"20036" [label = <(METHOD_RETURN,ANY)> ]
+  "20032" -> "20036" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/803-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/803-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/803-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/803-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransformToDisplayInverse" {  
-"20021" [label = <(METHOD,setTransformToDisplayInverse)> ]
-"20025" [label = <(METHOD_RETURN,ANY)> ]
-  "20021" -> "20025" 
+"20037" [label = <(METHOD,setTransformToDisplayInverse)> ]
+"20041" [label = <(METHOD_RETURN,ANY)> ]
+  "20037" -> "20041" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/804-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/804-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/804-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/804-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setCrop" {  
-"20026" [label = <(METHOD,setCrop)> ]
-"20030" [label = <(METHOD_RETURN,ANY)> ]
-  "20026" -> "20030" 
+"20042" [label = <(METHOD,setCrop)> ]
+"20046" [label = <(METHOD_RETURN,ANY)> ]
+  "20042" -> "20046" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/805-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/805-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/805-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/805-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setFrame" {  
-"20031" [label = <(METHOD,setFrame)> ]
-"20035" [label = <(METHOD_RETURN,ANY)> ]
-  "20031" -> "20035" 
+"20047" [label = <(METHOD,setFrame)> ]
+"20051" [label = <(METHOD_RETURN,ANY)> ]
+  "20047" -> "20051" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/806-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/806-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/806-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/806-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setAcquireFence" {  
-"20036" [label = <(METHOD,setAcquireFence)> ]
-"20040" [label = <(METHOD_RETURN,ANY)> ]
-  "20036" -> "20040" 
+"20052" [label = <(METHOD,setAcquireFence)> ]
+"20056" [label = <(METHOD_RETURN,ANY)> ]
+  "20052" -> "20056" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/807-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/807-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/807-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/807-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setDataspace" {  
-"20041" [label = <(METHOD,setDataspace)> ]
-"20045" [label = <(METHOD_RETURN,ANY)> ]
-  "20041" -> "20045" 
+"20057" [label = <(METHOD,setDataspace)> ]
+"20061" [label = <(METHOD_RETURN,ANY)> ]
+  "20057" -> "20061" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/808-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/808-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/808-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/808-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setHdrMetadata" {  
-"20046" [label = <(METHOD,setHdrMetadata)> ]
-"20050" [label = <(METHOD_RETURN,ANY)> ]
-  "20046" -> "20050" 
+"20062" [label = <(METHOD,setHdrMetadata)> ]
+"20066" [label = <(METHOD_RETURN,ANY)> ]
+  "20062" -> "20066" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/809-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/809-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/809-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/809-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setSurfaceDamageRegion" {  
-"20051" [label = <(METHOD,setSurfaceDamageRegion)> ]
-"20055" [label = <(METHOD_RETURN,ANY)> ]
-  "20051" -> "20055" 
+"20067" [label = <(METHOD,setSurfaceDamageRegion)> ]
+"20071" [label = <(METHOD_RETURN,ANY)> ]
+  "20067" -> "20071" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/810-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/810-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/810-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/810-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setApi" {  
-"20056" [label = <(METHOD,setApi)> ]
-"20060" [label = <(METHOD_RETURN,ANY)> ]
-  "20056" -> "20060" 
+"20072" [label = <(METHOD,setApi)> ]
+"20076" [label = <(METHOD_RETURN,ANY)> ]
+  "20072" -> "20076" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/811-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/811-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/811-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/811-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setSidebandStream" {  
-"20061" [label = <(METHOD,setSidebandStream)> ]
-"20065" [label = <(METHOD_RETURN,ANY)> ]
-  "20061" -> "20065" 
+"20077" [label = <(METHOD,setSidebandStream)> ]
+"20081" [label = <(METHOD_RETURN,ANY)> ]
+  "20077" -> "20081" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/812-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/812-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/812-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/812-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setInputInfo" {  
-"20066" [label = <(METHOD,setInputInfo)> ]
-"20070" [label = <(METHOD_RETURN,ANY)> ]
-  "20066" -> "20070" 
+"20082" [label = <(METHOD,setInputInfo)> ]
+"20086" [label = <(METHOD_RETURN,ANY)> ]
+  "20082" -> "20086" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/813-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/813-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/813-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/813-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setMetadata" {  
-"20071" [label = <(METHOD,setMetadata)> ]
-"20075" [label = <(METHOD_RETURN,ANY)> ]
-  "20071" -> "20075" 
+"20087" [label = <(METHOD,setMetadata)> ]
+"20091" [label = <(METHOD_RETURN,ANY)> ]
+  "20087" -> "20091" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/814-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/814-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/814-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/814-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setColorSpaceAgnostic" {  
-"20076" [label = <(METHOD,setColorSpaceAgnostic)> ]
-"20080" [label = <(METHOD_RETURN,ANY)> ]
-  "20076" -> "20080" 
+"20092" [label = <(METHOD,setColorSpaceAgnostic)> ]
+"20096" [label = <(METHOD_RETURN,ANY)> ]
+  "20092" -> "20096" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/815-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/815-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/815-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/815-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setShadowRadius" {  
-"20081" [label = <(METHOD,setShadowRadius)> ]
-"20085" [label = <(METHOD_RETURN,ANY)> ]
-  "20081" -> "20085" 
+"20097" [label = <(METHOD,setShadowRadius)> ]
+"20101" [label = <(METHOD_RETURN,ANY)> ]
+  "20097" -> "20101" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/816-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/816-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/816-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/816-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setFrameRateSelectionPriority" {  
-"20086" [label = <(METHOD,setFrameRateSelectionPriority)> ]
-"20090" [label = <(METHOD_RETURN,ANY)> ]
-  "20086" -> "20090" 
+"20102" [label = <(METHOD,setFrameRateSelectionPriority)> ]
+"20106" [label = <(METHOD_RETURN,ANY)> ]
+  "20102" -> "20106" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/817-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/817-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/817-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/817-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "ValidateFrameRate" {  
-"20091" [label = <(METHOD,ValidateFrameRate)> ]
-"20096" [label = <(METHOD_RETURN,ANY)> ]
-  "20091" -> "20096" 
+"20107" [label = <(METHOD,ValidateFrameRate)> ]
+"20112" [label = <(METHOD_RETURN,ANY)> ]
+  "20107" -> "20112" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/818-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/818-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/818-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/818-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setFrameRate" {  
-"20097" [label = <(METHOD,setFrameRate)> ]
-"20101" [label = <(METHOD_RETURN,ANY)> ]
-  "20097" -> "20101" 
+"20113" [label = <(METHOD,setFrameRate)> ]
+"20117" [label = <(METHOD_RETURN,ANY)> ]
+  "20113" -> "20117" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/819-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/819-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/819-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/819-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "Layer::FrameRate" {  
-"20102" [label = <(METHOD,Layer::FrameRate)> ]
-"20107" [label = <(METHOD_RETURN,ANY)> ]
-  "20102" -> "20107" 
+"20118" [label = <(METHOD,Layer::FrameRate)> ]
+"20123" [label = <(METHOD_RETURN,ANY)> ]
+  "20118" -> "20123" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/820-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/820-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/820-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/820-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "Layer::FrameRate::convertCompatibility" {  
-"20108" [label = <(METHOD,Layer::FrameRate::convertCompatibility)> ]
-"20112" [label = <(METHOD_RETURN,ANY)> ]
-  "20108" -> "20112" 
+"20124" [label = <(METHOD,Layer::FrameRate::convertCompatibility)> ]
+"20128" [label = <(METHOD_RETURN,ANY)> ]
+  "20124" -> "20128" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/821-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/821-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/821-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/821-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setFixedTransformHint" {  
-"20113" [label = <(METHOD,setFixedTransformHint)> ]
-"20117" [label = <(METHOD_RETURN,ANY)> ]
-  "20113" -> "20117" 
+"20129" [label = <(METHOD,setFixedTransformHint)> ]
+"20133" [label = <(METHOD_RETURN,ANY)> ]
+  "20129" -> "20133" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/822-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/822-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/822-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/822-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "reparent" {  
-"20118" [label = <(METHOD,reparent)> ]
-"20122" [label = <(METHOD_RETURN,ANY)> ]
-  "20118" -> "20122" 
+"20134" [label = <(METHOD,reparent)> ]
+"20138" [label = <(METHOD_RETURN,ANY)> ]
+  "20134" -> "20138" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/823-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/823-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/823-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/823-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "remove" {  
-"20123" [label = <(METHOD,remove)> ]
-"20127" [label = <(METHOD_RETURN,ANY)> ]
-  "20123" -> "20127" 
+"20139" [label = <(METHOD,remove)> ]
+"20143" [label = <(METHOD_RETURN,ANY)> ]
+  "20139" -> "20143" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/824-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/824-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/824-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/824-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.arithmeticShiftRight" {  
-"20128" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
-"20132" [label = <(METHOD_RETURN,ANY)> ]
-  "20128" -> "20132" 
+"20144" [label = <(METHOD,&lt;operator&gt;.arithmeticShiftRight)> ]
+"20148" [label = <(METHOD_RETURN,ANY)> ]
+  "20144" -> "20148" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/825-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/825-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/825-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/825-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "cacheExternalTextureBuffer" {  
-"20133" [label = <(METHOD,cacheExternalTextureBuffer)> ]
-"20137" [label = <(METHOD_RETURN,ANY)> ]
-  "20133" -> "20137" 
+"20149" [label = <(METHOD,cacheExternalTextureBuffer)> ]
+"20153" [label = <(METHOD_RETURN,ANY)> ]
+  "20149" -> "20153" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/826-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/826-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/826-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/826-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "registerErasedRecipient" {  
-"20138" [label = <(METHOD,registerErasedRecipient)> ]
-"20143" [label = <(METHOD_RETURN,ANY)> ]
-  "20138" -> "20143" 
+"20154" [label = <(METHOD,registerErasedRecipient)> ]
+"20159" [label = <(METHOD_RETURN,ANY)> ]
+  "20154" -> "20159" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/827-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/827-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/827-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/827-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setBuffer" {  
-"20144" [label = <(METHOD,setBuffer)> ]
-"20152" [label = <(METHOD_RETURN,ANY)> ]
-  "20144" -> "20152" 
+"20160" [label = <(METHOD,setBuffer)> ]
+"20168" [label = <(METHOD_RETURN,ANY)> ]
+  "20160" -> "20168" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/828-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/828-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/828-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/828-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "setTransactionCompletedListeners" {  
-"20153" [label = <(METHOD,setTransactionCompletedListeners)> ]
-"20157" [label = <(METHOD_RETURN,ANY)> ]
-  "20153" -> "20157" 
+"20169" [label = <(METHOD,setTransactionCompletedListeners)> ]
+"20173" [label = <(METHOD_RETURN,ANY)> ]
+  "20169" -> "20173" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/829-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/829-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/829-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/829-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "getUniqueLayerName" {  
-"20158" [label = <(METHOD,getUniqueLayerName)> ]
-"20161" [label = <(METHOD_RETURN,ANY)> ]
-  "20158" -> "20161" 
+"20174" [label = <(METHOD,getUniqueLayerName)> ]
+"20177" [label = <(METHOD_RETURN,ANY)> ]
+  "20174" -> "20177" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/83-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/83-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/83-cfg.dot	2023-06-07 19:33:00.287398992 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/83-cfg.dot	2023-06-07 19:33:06.527398418 +0330
@@ -7,11 +7,11 @@
 "1274" [label = <(onBootFinished,mTimeStats-&gt;onBootFinished())<SUB>595</SUB>> ]
 "1279" [label = <(name,name(&quot;window&quot;))<SUB>598</SUB>> ]
 "1281" [label = <(&lt;operator&gt;.assignment,mWindowManager = defaultServiceManager()-&gt;getService(name))<SUB>599</SUB>> ]
-"1307" [label = <(property_set,property_set(&quot;service.bootanim.exit&quot;, &quot;1&quot;))<SUB>611</SUB>> ]
-"1311" [label = <(&lt;operator&gt;.assignment,LOGTAG_SF_STOP_BOOTANIM = 60110)<SUB>613</SUB>> ]
-"1314" [label = <(LOG_EVENT_LONG,LOG_EVENT_LONG(LOGTAG_SF_STOP_BOOTANIM,\012                   ns2ms(systemTime(SYSTEM_TIME_MONOTONIC))))<SUB>614</SUB>> ]
-"1319" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; input(defaultServiceManager()-&gt;getService(String16(&quot;inputflinger&quot;))))<SUB>617</SUB>> ]
-"1330" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([=] {\012 if (input == nullptr) {\012            ALOGE(&quot;Failed to link to input service&quot;);\012 } else {\012            mInputFlinger = interface_cast&lt;IInputFlinger&gt;(input);\012 }\012\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 })))<SUB>619</SUB>> ]
+"1300" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; input(defaultServiceManager()-&gt;getService(\012 String16(&quot;inputflinger&quot;))))<SUB>603</SUB>> ]
+"1334" [label = <(property_set,property_set(&quot;service.bootanim.exit&quot;, &quot;1&quot;))<SUB>618</SUB>> ]
+"1338" [label = <(&lt;operator&gt;.assignment,LOGTAG_SF_STOP_BOOTANIM = 60110)<SUB>620</SUB>> ]
+"1341" [label = <(LOG_EVENT_LONG,LOG_EVENT_LONG(LOGTAG_SF_STOP_BOOTANIM,\012                   ns2ms(systemTime(SYSTEM_TIME_MONOTONIC))))<SUB>621</SUB>> ]
+"1346" [label = <(&lt;operator&gt;.cast,static_cast&lt;void&gt;(schedule([this] {\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 })))<SUB>624</SUB>> ]
 "1234" [label = <(&lt;operator&gt;.equals,mBootFinished == true)<SUB>582</SUB>> ]
 "1245" [label = <(&lt;operator&gt;.notEquals,mStartPropertySetThread-&gt;join() != NO_ERROR)<SUB>587</SUB>> ]
 "1257" [label = <(systemTime,systemTime())<SUB>590</SUB>> ]
@@ -21,11 +21,12 @@
 "1275" [label = <(&lt;operator&gt;.indirectFieldAccess,mTimeStats-&gt;onBootFinished)<SUB>595</SUB>> ]
 "1283" [label = <(getService,defaultServiceManager()-&gt;getService(name))<SUB>599</SUB>> ]
 "1289" [label = <(&lt;operator&gt;.notEquals,mWindowManager != 0)<SUB>600</SUB>> ]
-"1316" [label = <(ns2ms,ns2ms(systemTime(SYSTEM_TIME_MONOTONIC)))<SUB>615</SUB>> ]
-"1320" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>617</SUB>> ]
-"1323" [label = <(input,input(defaultServiceManager()-&gt;getService(String16(&quot;inputflinger&quot;))))<SUB>617</SUB>> ]
-"1331" [label = <(UNKNOWN,void,void)<SUB>619</SUB>> ]
-"1332" [label = <(schedule,schedule([=] {\012 if (input == nullptr) {\012            ALOGE(&quot;Failed to link to input service&quot;);\012 } else {\012            mInputFlinger = interface_cast&lt;IInputFlinger&gt;(input);\012 }\012\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 }))<SUB>619</SUB>> ]
+"1301" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>603</SUB>> ]
+"1304" [label = <(input,input(defaultServiceManager()-&gt;getService(\012 String16(&quot;inputflinger&quot;))))<SUB>603</SUB>> ]
+"1312" [label = <(&lt;operator&gt;.equals,input == nullptr)<SUB>605</SUB>> ]
+"1343" [label = <(ns2ms,ns2ms(systemTime(SYSTEM_TIME_MONOTONIC)))<SUB>622</SUB>> ]
+"1347" [label = <(UNKNOWN,void,void)<SUB>624</SUB>> ]
+"1348" [label = <(schedule,schedule([this] {\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 }))<SUB>624</SUB>> ]
 "1238" [label = <(ALOGE,ALOGE(&quot;Extra call to bootFinished&quot;))<SUB>583</SUB>> ]
 "1240" [label = <(RETURN,return;,return;)<SUB>584</SUB>> ]
 "1246" [label = <(join,mStartPropertySetThread-&gt;join())<SUB>587</SUB>> ]
@@ -35,27 +36,31 @@
 "1277" [label = <(FIELD_IDENTIFIER,onBootFinished,onBootFinished)<SUB>595</SUB>> ]
 "1284" [label = <(&lt;operator&gt;.indirectFieldAccess,defaultServiceManager()-&gt;getService)<SUB>599</SUB>> ]
 "1293" [label = <(linkToDeath,mWindowManager-&gt;linkToDeath(static_cast&lt;IBinder::DeathRecipient*&gt;(this)))<SUB>601</SUB>> ]
-"1303" [label = <(OnBootFinished,mVrFlinger-&gt;OnBootFinished())<SUB>605</SUB>> ]
-"1317" [label = <(systemTime,systemTime(SYSTEM_TIME_MONOTONIC))<SUB>615</SUB>> ]
-"1324" [label = <(getService,defaultServiceManager()-&gt;getService(String16(&quot;inputflinger&quot;)))<SUB>617</SUB>> ]
-"1333" [label = <(METHOD_REF,ANY anonymous_lambda_7 (),schedule([=] {\012 if (input == nullptr) {\012            ALOGE(&quot;Failed to link to input service&quot;);\012 } else {\012            mInputFlinger = interface_cast&lt;IInputFlinger&gt;(input);\012 }\012\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 }))<SUB>619</SUB>> ]
+"1305" [label = <(getService,defaultServiceManager()-&gt;getService(\012 String16(&quot;inputflinger&quot;)))<SUB>603</SUB>> ]
+"1316" [label = <(ALOGE,ALOGE(&quot;Failed to link to input service&quot;))<SUB>606</SUB>> ]
+"1330" [label = <(OnBootFinished,mVrFlinger-&gt;OnBootFinished())<SUB>612</SUB>> ]
+"1344" [label = <(systemTime,systemTime(SYSTEM_TIME_MONOTONIC))<SUB>622</SUB>> ]
+"1349" [label = <(METHOD_REF,ANY anonymous_lambda_7 (),schedule([this] {\012        readPersistentProperties();\012        mPowerAdvisor.onBootFinished();\012        mBootStage = BootStage::FINISHED;\012\012 if (property_get_bool(&quot;sf.debug.show_refresh_rate_overlay&quot;, false)) {\012            enableRefreshRateOverlay(true);\012 }\012 }))<SUB>624</SUB>> ]
 "1247" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;join)<SUB>587</SUB>> ]
 "1268" [label = <(ns2ms,ns2ms(duration))<SUB>592</SUB>> ]
 "1285" [label = <(defaultServiceManager,defaultServiceManager())<SUB>599</SUB>> ]
 "1286" [label = <(FIELD_IDENTIFIER,getService,getService)<SUB>599</SUB>> ]
 "1294" [label = <(&lt;operator&gt;.indirectFieldAccess,mWindowManager-&gt;linkToDeath)<SUB>601</SUB>> ]
 "1297" [label = <(&lt;operator&gt;.cast,static_cast&lt;IBinder::DeathRecipient*&gt;(this))<SUB>601</SUB>> ]
-"1304" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;OnBootFinished)<SUB>605</SUB>> ]
-"1325" [label = <(&lt;operator&gt;.indirectFieldAccess,defaultServiceManager()-&gt;getService)<SUB>617</SUB>> ]
-"1328" [label = <(String16,String16(&quot;inputflinger&quot;))<SUB>617</SUB>> ]
+"1306" [label = <(&lt;operator&gt;.indirectFieldAccess,defaultServiceManager()-&gt;getService)<SUB>603</SUB>> ]
+"1309" [label = <(String16,String16(&quot;inputflinger&quot;))<SUB>604</SUB>> ]
+"1320" [label = <(&lt;operator&gt;.assignment,mInputFlinger = interface_cast&lt;IInputFlinger&gt;(input))<SUB>608</SUB>> ]
+"1331" [label = <(&lt;operator&gt;.indirectFieldAccess,mVrFlinger-&gt;OnBootFinished)<SUB>612</SUB>> ]
 "1249" [label = <(FIELD_IDENTIFIER,join,join)<SUB>587</SUB>> ]
 "1296" [label = <(FIELD_IDENTIFIER,linkToDeath,linkToDeath)<SUB>601</SUB>> ]
 "1298" [label = <(UNKNOWN,IBinder::DeathRecipient*,IBinder::DeathRecipient*)<SUB>601</SUB>> ]
-"1306" [label = <(FIELD_IDENTIFIER,OnBootFinished,OnBootFinished)<SUB>605</SUB>> ]
-"1326" [label = <(defaultServiceManager,defaultServiceManager())<SUB>617</SUB>> ]
-"1327" [label = <(FIELD_IDENTIFIER,getService,getService)<SUB>617</SUB>> ]
+"1307" [label = <(defaultServiceManager,defaultServiceManager())<SUB>603</SUB>> ]
+"1308" [label = <(FIELD_IDENTIFIER,getService,getService)<SUB>603</SUB>> ]
+"1322" [label = <(&lt;operator&gt;.greaterThan,interface_cast&lt;IInputFlinger&gt;(input))<SUB>608</SUB>> ]
+"1333" [label = <(FIELD_IDENTIFIER,OnBootFinished,OnBootFinished)<SUB>612</SUB>> ]
+"1323" [label = <(&lt;operator&gt;.lessThan,interface_cast&lt;IInputFlinger)<SUB>608</SUB>> ]
 "1231" [label = <(METHOD,bootFinished)<SUB>580</SUB>> ]
-"1334" [label = <(METHOD_RETURN,void)<SUB>580</SUB>> ]
+"1350" [label = <(METHOD_RETURN,void)<SUB>580</SUB>> ]
   "1241" -> "1249" 
   "1255" -> "1261" 
   "1259" -> "1268" 
@@ -64,11 +69,11 @@
   "1274" -> "1279" 
   "1279" -> "1285" 
   "1281" -> "1289" 
-  "1307" -> "1311" 
-  "1311" -> "1317" 
-  "1314" -> "1320" 
-  "1319" -> "1331" 
-  "1330" -> "1334" 
+  "1300" -> "1312" 
+  "1334" -> "1338" 
+  "1338" -> "1344" 
+  "1341" -> "1347" 
+  "1346" -> "1350" 
   "1234" -> "1238" 
   "1234" -> "1241" 
   "1245" -> "1252" 
@@ -80,41 +85,47 @@
   "1275" -> "1274" 
   "1283" -> "1281" 
   "1289" -> "1296" 
-  "1289" -> "1306" 
-  "1289" -> "1307" 
-  "1316" -> "1314" 
-  "1320" -> "1326" 
-  "1323" -> "1319" 
-  "1331" -> "1333" 
-  "1332" -> "1330" 
+  "1289" -> "1301" 
+  "1301" -> "1307" 
+  "1304" -> "1300" 
+  "1312" -> "1316" 
+  "1312" -> "1323" 
+  "1343" -> "1341" 
+  "1347" -> "1349" 
+  "1348" -> "1346" 
   "1238" -> "1240" 
-  "1240" -> "1334" 
+  "1240" -> "1350" 
   "1246" -> "1245" 
   "1252" -> "1257" 
   "1267" -> "1266" 
   "1273" -> "1271" 
   "1277" -> "1275" 
   "1284" -> "1283" 
-  "1293" -> "1306" 
-  "1293" -> "1307" 
-  "1303" -> "1307" 
-  "1317" -> "1316" 
-  "1324" -> "1323" 
-  "1333" -> "1332" 
+  "1293" -> "1301" 
+  "1305" -> "1304" 
+  "1316" -> "1333" 
+  "1316" -> "1334" 
+  "1330" -> "1334" 
+  "1344" -> "1343" 
+  "1349" -> "1348" 
   "1247" -> "1246" 
   "1268" -> "1267" 
   "1285" -> "1286" 
   "1286" -> "1284" 
   "1294" -> "1298" 
   "1297" -> "1293" 
-  "1304" -> "1303" 
-  "1325" -> "1328" 
-  "1328" -> "1324" 
+  "1306" -> "1309" 
+  "1309" -> "1305" 
+  "1320" -> "1333" 
+  "1320" -> "1334" 
+  "1331" -> "1330" 
   "1249" -> "1247" 
   "1296" -> "1294" 
   "1298" -> "1297" 
-  "1306" -> "1304" 
-  "1326" -> "1327" 
-  "1327" -> "1325" 
+  "1307" -> "1308" 
+  "1308" -> "1306" 
+  "1322" -> "1320" 
+  "1333" -> "1331" 
+  "1323" -> "1322" 
   "1231" -> "1234" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/830-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/830-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/830-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/830-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createContainerLayer" {  
-"20162" [label = <(METHOD,createContainerLayer)> ]
-"20166" [label = <(METHOD_RETURN,ANY)> ]
-  "20162" -> "20166" 
+"20178" [label = <(METHOD,createContainerLayer)> ]
+"20182" [label = <(METHOD_RETURN,ANY)> ]
+  "20178" -> "20182" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/831-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/831-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/831-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/831-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "LayerMetadata" {  
-"20167" [label = <(METHOD,LayerMetadata)> ]
-"20169" [label = <(METHOD_RETURN,ANY)> ]
-  "20167" -> "20169" 
+"20183" [label = <(METHOD,LayerMetadata)> ]
+"20185" [label = <(METHOD_RETURN,ANY)> ]
+  "20183" -> "20185" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/832-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/832-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/832-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/832-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "createClone" {  
-"20170" [label = <(METHOD,createClone)> ]
-"20173" [label = <(METHOD_RETURN,ANY)> ]
-  "20170" -> "20173" 
+"20186" [label = <(METHOD,createClone)> ]
+"20189" [label = <(METHOD_RETURN,ANY)> ]
+  "20186" -> "20189" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/833-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/833-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/833-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/833-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "addClientLayer" {  
-"20174" [label = <(METHOD,addClientLayer)> ]
-"20184" [label = <(METHOD_RETURN,ANY)> ]
-  "20174" -> "20184" 
+"20190" [label = <(METHOD,addClientLayer)> ]
+"20200" [label = <(METHOD_RETURN,ANY)> ]
+  "20190" -> "20200" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/834-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/834-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/834-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/834-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "int" {  
-"20185" [label = <(METHOD,int)> ]
-"20188" [label = <(METHOD_RETURN,ANY)> ]
-  "20185" -> "20188" 
+"20201" [label = <(METHOD,int)> ]
+"20204" [label = <(METHOD_RETURN,ANY)> ]
+  "20201" -> "20204" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/835-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/835-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/835-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/835-cfg.dot	2023-06-07 19:33:06.777398395 +0330
@@ -1,5 +1,5 @@
 digraph "ALOG_ASSERT" {  
-"20189" [label = <(METHOD,ALOG_ASSERT)> ]
-"20193" [label = <(METHOD_RETURN,ANY)> ]
-  "20189" -> "20193" 
+"20205" [label = <(METHOD,ALOG_ASSERT)> ]
+"20209" [label = <(METHOD_RETURN,ANY)> ]
+  "20205" -> "20209" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/836-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/836-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/836-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/836-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "string" {  
-"20194" [label = <(METHOD,string)> ]
-"20197" [label = <(METHOD_RETURN,ANY)> ]
-  "20194" -> "20197" 
+"20210" [label = <(METHOD,string)> ]
+"20213" [label = <(METHOD_RETURN,ANY)> ]
+  "20210" -> "20213" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/837-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/837-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/837-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/837-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "has" {  
-"20198" [label = <(METHOD,has)> ]
-"20202" [label = <(METHOD_RETURN,ANY)> ]
-  "20198" -> "20202" 
+"20214" [label = <(METHOD,has)> ]
+"20218" [label = <(METHOD_RETURN,ANY)> ]
+  "20214" -> "20218" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/838-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/838-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/838-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/838-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getInt32" {  
-"20203" [label = <(METHOD,getInt32)> ]
-"20208" [label = <(METHOD_RETURN,ANY)> ]
-  "20203" -> "20208" 
+"20219" [label = <(METHOD,getInt32)> ]
+"20224" [label = <(METHOD_RETURN,ANY)> ]
+  "20219" -> "20224" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/839-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/839-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/839-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/839-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setInt32" {  
-"20209" [label = <(METHOD,setInt32)> ]
-"20214" [label = <(METHOD_RETURN,ANY)> ]
-  "20209" -> "20214" 
+"20225" [label = <(METHOD,setInt32)> ]
+"20230" [label = <(METHOD_RETURN,ANY)> ]
+  "20225" -> "20230" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/84-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/84-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/84-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/84-cfg.dot	2023-06-07 19:33:06.537398417 +0330
@@ -1,54 +1,54 @@
 digraph "getNewTexture" {  
-"1370" [label = <(RETURN,return schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get();,return schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get();)<SUB>652</SUB>> ]
-"1340" [label = <(lock,lock(mTexturePoolMutex))<SUB>638</SUB>> ]
-"1368" [label = <(&lt;operator&gt;.preIncrement,++mTexturePoolSize)<SUB>647</SUB>> ]
-"1371" [label = <(get,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get())<SUB>652</SUB>> ]
-"1343" [label = <(&lt;operator&gt;.logicalNot,!mTexturePool.empty())<SUB>639</SUB>> ]
-"1372" [label = <(&lt;operator&gt;.fieldAccess,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get)<SUB>652</SUB>> ]
-"1344" [label = <(empty,mTexturePool.empty())<SUB>639</SUB>> ]
-"1350" [label = <(&lt;operator&gt;.assignment,name = mTexturePool.back())<SUB>640</SUB>> ]
-"1356" [label = <(pop_back,mTexturePool.pop_back())<SUB>641</SUB>> ]
-"1360" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>642</SUB>> ]
-"1366" [label = <(RETURN,return name;,return name;)<SUB>643</SUB>> ]
-"1373" [label = <(schedule,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 }))<SUB>652</SUB>> ]
-"1375" [label = <(FIELD_IDENTIFIER,get,get)<SUB>652</SUB>> ]
-"1345" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.empty)<SUB>639</SUB>> ]
-"1352" [label = <(back,mTexturePool.back())<SUB>640</SUB>> ]
-"1357" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.pop_back)<SUB>641</SUB>> ]
-"1362" [label = <(size,mTexturePool.size())<SUB>642</SUB>> ]
-"1374" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 }))<SUB>652</SUB>> ]
-"1347" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>639</SUB>> ]
-"1353" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.back)<SUB>640</SUB>> ]
-"1359" [label = <(FIELD_IDENTIFIER,pop_back,pop_back)<SUB>641</SUB>> ]
-"1363" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>642</SUB>> ]
-"1355" [label = <(FIELD_IDENTIFIER,back,back)<SUB>640</SUB>> ]
-"1365" [label = <(FIELD_IDENTIFIER,size,size)<SUB>642</SUB>> ]
-"1336" [label = <(METHOD,getNewTexture)<SUB>636</SUB>> ]
-"1376" [label = <(METHOD_RETURN,uint32_t)<SUB>636</SUB>> ]
-  "1370" -> "1376" 
-  "1340" -> "1347" 
-  "1368" -> "1374" 
-  "1371" -> "1370" 
-  "1343" -> "1355" 
-  "1343" -> "1368" 
-  "1372" -> "1371" 
-  "1344" -> "1343" 
-  "1350" -> "1359" 
-  "1356" -> "1365" 
-  "1360" -> "1366" 
-  "1366" -> "1376" 
-  "1373" -> "1375" 
-  "1375" -> "1372" 
-  "1345" -> "1344" 
-  "1352" -> "1350" 
-  "1357" -> "1356" 
-  "1362" -> "1360" 
-  "1374" -> "1373" 
-  "1347" -> "1345" 
-  "1353" -> "1352" 
-  "1359" -> "1357" 
-  "1363" -> "1362" 
-  "1355" -> "1353" 
-  "1365" -> "1363" 
-  "1336" -> "1340" 
+"1386" [label = <(RETURN,return schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get();,return schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get();)<SUB>651</SUB>> ]
+"1356" [label = <(lock,lock(mTexturePoolMutex))<SUB>637</SUB>> ]
+"1384" [label = <(&lt;operator&gt;.preIncrement,++mTexturePoolSize)<SUB>646</SUB>> ]
+"1387" [label = <(get,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get())<SUB>651</SUB>> ]
+"1359" [label = <(&lt;operator&gt;.logicalNot,!mTexturePool.empty())<SUB>638</SUB>> ]
+"1388" [label = <(&lt;operator&gt;.fieldAccess,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 })\012 .get)<SUB>651</SUB>> ]
+"1360" [label = <(empty,mTexturePool.empty())<SUB>638</SUB>> ]
+"1366" [label = <(&lt;operator&gt;.assignment,name = mTexturePool.back())<SUB>639</SUB>> ]
+"1372" [label = <(pop_back,mTexturePool.pop_back())<SUB>640</SUB>> ]
+"1376" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>641</SUB>> ]
+"1382" [label = <(RETURN,return name;,return name;)<SUB>642</SUB>> ]
+"1389" [label = <(schedule,schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 }))<SUB>651</SUB>> ]
+"1391" [label = <(FIELD_IDENTIFIER,get,get)<SUB>651</SUB>> ]
+"1361" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.empty)<SUB>638</SUB>> ]
+"1368" [label = <(back,mTexturePool.back())<SUB>639</SUB>> ]
+"1373" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.pop_back)<SUB>640</SUB>> ]
+"1378" [label = <(size,mTexturePool.size())<SUB>641</SUB>> ]
+"1390" [label = <(METHOD_REF,ANY anonymous_lambda_8 (),schedule([this] {\012 uint32_t name = 0;\012               getRenderEngine().genTextures(1, &amp;name);\012 return name;\012 }))<SUB>651</SUB>> ]
+"1363" [label = <(FIELD_IDENTIFIER,empty,empty)<SUB>638</SUB>> ]
+"1369" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.back)<SUB>639</SUB>> ]
+"1375" [label = <(FIELD_IDENTIFIER,pop_back,pop_back)<SUB>640</SUB>> ]
+"1379" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>641</SUB>> ]
+"1371" [label = <(FIELD_IDENTIFIER,back,back)<SUB>639</SUB>> ]
+"1381" [label = <(FIELD_IDENTIFIER,size,size)<SUB>641</SUB>> ]
+"1352" [label = <(METHOD,getNewTexture)<SUB>635</SUB>> ]
+"1392" [label = <(METHOD_RETURN,uint32_t)<SUB>635</SUB>> ]
+  "1386" -> "1392" 
+  "1356" -> "1363" 
+  "1384" -> "1390" 
+  "1387" -> "1386" 
+  "1359" -> "1371" 
+  "1359" -> "1384" 
+  "1388" -> "1387" 
+  "1360" -> "1359" 
+  "1366" -> "1375" 
+  "1372" -> "1381" 
+  "1376" -> "1382" 
+  "1382" -> "1392" 
+  "1389" -> "1391" 
+  "1391" -> "1388" 
+  "1361" -> "1360" 
+  "1368" -> "1366" 
+  "1373" -> "1372" 
+  "1378" -> "1376" 
+  "1390" -> "1389" 
+  "1363" -> "1361" 
+  "1369" -> "1368" 
+  "1375" -> "1373" 
+  "1379" -> "1378" 
+  "1371" -> "1369" 
+  "1381" -> "1379" 
+  "1352" -> "1356" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/840-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/840-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/840-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/840-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "createBufferQueueLayer" {  
-"20215" [label = <(METHOD,createBufferQueueLayer)> ]
-"20219" [label = <(METHOD_RETURN,ANY)> ]
-  "20215" -> "20219" 
+"20231" [label = <(METHOD,createBufferQueueLayer)> ]
+"20235" [label = <(METHOD_RETURN,ANY)> ]
+  "20231" -> "20235" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/841-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/841-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/841-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/841-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "createBufferStateLayer" {  
-"20220" [label = <(METHOD,createBufferStateLayer)> ]
-"20224" [label = <(METHOD_RETURN,ANY)> ]
-  "20220" -> "20224" 
+"20236" [label = <(METHOD,createBufferStateLayer)> ]
+"20240" [label = <(METHOD_RETURN,ANY)> ]
+  "20236" -> "20240" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/842-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/842-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/842-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/842-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "createEffectLayer" {  
-"20225" [label = <(METHOD,createEffectLayer)> ]
-"20229" [label = <(METHOD_RETURN,ANY)> ]
-  "20225" -> "20229" 
+"20241" [label = <(METHOD,createEffectLayer)> ]
+"20245" [label = <(METHOD_RETURN,ANY)> ]
+  "20241" -> "20245" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/843-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/843-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/843-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/843-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setPrimaryDisplayOnly" {  
-"20230" [label = <(METHOD,setPrimaryDisplayOnly)> ]
-"20233" [label = <(METHOD_RETURN,ANY)> ]
-  "20230" -> "20233" 
+"20246" [label = <(METHOD,setPrimaryDisplayOnly)> ]
+"20249" [label = <(METHOD_RETURN,ANY)> ]
+  "20246" -> "20249" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/844-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/844-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/844-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/844-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "saveSurfaceCreation" {  
-"20234" [label = <(METHOD,saveSurfaceCreation)> ]
-"20238" [label = <(METHOD_RETURN,ANY)> ]
-  "20234" -> "20238" 
+"20250" [label = <(METHOD,saveSurfaceCreation)> ]
+"20254" [label = <(METHOD_RETURN,ANY)> ]
+  "20250" -> "20254" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/845-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/845-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/845-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/845-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "base::StringPrintf" {  
-"20239" [label = <(METHOD,base::StringPrintf)> ]
-"20245" [label = <(METHOD_RETURN,ANY)> ]
-  "20239" -> "20245" 
+"20255" [label = <(METHOD,base::StringPrintf)> ]
+"20261" [label = <(METHOD_RETURN,ANY)> ]
+  "20255" -> "20261" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/846-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/846-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/846-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/846-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGV_IF" {  
-"20246" [label = <(METHOD,ALOGV_IF)> ]
-"20252" [label = <(METHOD_RETURN,ANY)> ]
-  "20246" -> "20252" 
+"20262" [label = <(METHOD,ALOGV_IF)> ]
+"20268" [label = <(METHOD_RETURN,ANY)> ]
+  "20262" -> "20268" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/847-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/847-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/847-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/847-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "args" {  
-"20253" [label = <(METHOD,args)> ]
-"20262" [label = <(METHOD_RETURN,ANY)> ]
-  "20253" -> "20262" 
+"20269" [label = <(METHOD,args)> ]
+"20278" [label = <(METHOD_RETURN,ANY)> ]
+  "20269" -> "20278" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/848-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/848-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/848-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/848-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getNewTexture" {  
-"20263" [label = <(METHOD,getNewTexture)> ]
-"20265" [label = <(METHOD_RETURN,ANY)> ]
-  "20263" -> "20265" 
+"20279" [label = <(METHOD,getNewTexture)> ]
+"20281" [label = <(METHOD_RETURN,ANY)> ]
+  "20279" -> "20281" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/849-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/849-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/849-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/849-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setDefaultBufferProperties" {  
-"20266" [label = <(METHOD,setDefaultBufferProperties)> ]
-"20272" [label = <(METHOD_RETURN,ANY)> ]
-  "20266" -> "20272" 
+"20282" [label = <(METHOD,setDefaultBufferProperties)> ]
+"20288" [label = <(METHOD_RETURN,ANY)> ]
+  "20282" -> "20288" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/85-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/85-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/85-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/85-cfg.dot	2023-06-07 19:33:06.537398417 +0330
@@ -1,21 +1,21 @@
 digraph "deleteTextureAsync" {  
-"1382" [label = <(lock,lock(mTexturePoolMutex))<SUB>661</SUB>> ]
-"1384" [label = <(push_back,mTexturePool.push_back(texture))<SUB>664</SUB>> ]
-"1389" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>665</SUB>> ]
-"1385" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.push_back)<SUB>664</SUB>> ]
-"1391" [label = <(size,mTexturePool.size())<SUB>665</SUB>> ]
-"1387" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>664</SUB>> ]
-"1392" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>665</SUB>> ]
-"1394" [label = <(FIELD_IDENTIFIER,size,size)<SUB>665</SUB>> ]
-"1378" [label = <(METHOD,deleteTextureAsync)<SUB>660</SUB>> ]
-"1395" [label = <(METHOD_RETURN,void)<SUB>660</SUB>> ]
-  "1382" -> "1387" 
-  "1384" -> "1394" 
-  "1389" -> "1395" 
-  "1385" -> "1384" 
-  "1391" -> "1389" 
-  "1387" -> "1385" 
-  "1392" -> "1391" 
-  "1394" -> "1392" 
-  "1378" -> "1382" 
+"1398" [label = <(lock,lock(mTexturePoolMutex))<SUB>660</SUB>> ]
+"1400" [label = <(push_back,mTexturePool.push_back(texture))<SUB>663</SUB>> ]
+"1405" [label = <(ATRACE_INT,ATRACE_INT(&quot;TexturePoolSize&quot;, mTexturePool.size()))<SUB>664</SUB>> ]
+"1401" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.push_back)<SUB>663</SUB>> ]
+"1407" [label = <(size,mTexturePool.size())<SUB>664</SUB>> ]
+"1403" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>663</SUB>> ]
+"1408" [label = <(&lt;operator&gt;.fieldAccess,mTexturePool.size)<SUB>664</SUB>> ]
+"1410" [label = <(FIELD_IDENTIFIER,size,size)<SUB>664</SUB>> ]
+"1394" [label = <(METHOD,deleteTextureAsync)<SUB>659</SUB>> ]
+"1411" [label = <(METHOD_RETURN,void)<SUB>659</SUB>> ]
+  "1398" -> "1403" 
+  "1400" -> "1410" 
+  "1405" -> "1411" 
+  "1401" -> "1400" 
+  "1407" -> "1405" 
+  "1403" -> "1401" 
+  "1408" -> "1407" 
+  "1410" -> "1408" 
+  "1394" -> "1398" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/850-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/850-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/850-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/850-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getHandle" {  
-"20273" [label = <(METHOD,getHandle)> ]
-"20276" [label = <(METHOD_RETURN,ANY)> ]
-  "20273" -> "20276" 
+"20289" [label = <(METHOD,getHandle)> ]
+"20292" [label = <(METHOD_RETURN,ANY)> ]
+  "20289" -> "20292" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/851-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/851-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/851-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/851-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getProducer" {  
-"20277" [label = <(METHOD,getProducer)> ]
-"20280" [label = <(METHOD_RETURN,ANY)> ]
-  "20277" -> "20280" 
+"20293" [label = <(METHOD,getProducer)> ]
+"20296" [label = <(METHOD_RETURN,ANY)> ]
+  "20293" -> "20296" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/852-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/852-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/852-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/852-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "strerror" {  
-"20281" [label = <(METHOD,strerror)> ]
-"20284" [label = <(METHOD_RETURN,ANY)> ]
-  "20281" -> "20284" 
+"20297" [label = <(METHOD,strerror)> ]
+"20300" [label = <(METHOD_RETURN,ANY)> ]
+  "20297" -> "20300" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/853-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/853-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/853-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/853-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "markLayerPendingRemovalLocked" {  
-"20285" [label = <(METHOD,markLayerPendingRemovalLocked)> ]
-"20288" [label = <(METHOD_RETURN,ANY)> ]
-  "20285" -> "20288" 
+"20301" [label = <(METHOD,markLayerPendingRemovalLocked)> ]
+"20304" [label = <(METHOD_RETURN,ANY)> ]
+  "20301" -> "20304" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/854-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/854-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/854-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/854-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayToken" {  
-"20289" [label = <(METHOD,getDisplayToken)> ]
-"20292" [label = <(METHOD_RETURN,ANY)> ]
-  "20289" -> "20292" 
+"20305" [label = <(METHOD,getDisplayToken)> ]
+"20308" [label = <(METHOD_RETURN,ANY)> ]
+  "20305" -> "20308" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/855-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/855-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/855-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/855-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "makeInvalid" {  
-"20293" [label = <(METHOD,makeInvalid)> ]
-"20296" [label = <(METHOD_RETURN,ANY)> ]
-  "20293" -> "20296" 
+"20309" [label = <(METHOD,makeInvalid)> ]
+"20312" [label = <(METHOD_RETURN,ANY)> ]
+  "20309" -> "20312" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/856-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/856-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/856-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/856-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setTransactionState" {  
-"20297" [label = <(METHOD,setTransactionState)> ]
-"20308" [label = <(METHOD_RETURN,ANY)> ]
-  "20297" -> "20308" 
+"20313" [label = <(METHOD,setTransactionState)> ]
+"20324" [label = <(METHOD_RETURN,ANY)> ]
+  "20313" -> "20324" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/857-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/857-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/857-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/857-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "ALOGD" {  
-"20309" [label = <(METHOD,ALOGD)> ]
-"20313" [label = <(METHOD_RETURN,ANY)> ]
-  "20309" -> "20313" 
+"20325" [label = <(METHOD,ALOGD)> ]
+"20329" [label = <(METHOD_RETURN,ANY)> ]
+  "20325" -> "20329" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/858-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/858-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/858-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/858-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setPowerMode" {  
-"20314" [label = <(METHOD,setPowerMode)> ]
-"20318" [label = <(METHOD_RETURN,ANY)> ]
-  "20314" -> "20318" 
+"20330" [label = <(METHOD,setPowerMode)> ]
+"20334" [label = <(METHOD_RETURN,ANY)> ]
+  "20330" -> "20334" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/859-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/859-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/859-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/859-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "savePowerModeUpdate" {  
-"20319" [label = <(METHOD,savePowerModeUpdate)> ]
-"20324" [label = <(METHOD_RETURN,ANY)> ]
-  "20319" -> "20324" 
+"20335" [label = <(METHOD,savePowerModeUpdate)> ]
+"20340" [label = <(METHOD_RETURN,ANY)> ]
+  "20335" -> "20340" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/86-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/86-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/86-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/86-cfg.dot	2023-06-07 19:33:06.537398417 +0330
@@ -1,288 +1,288 @@
 digraph "init" {  
-"1399" [label = <(ALOGI,ALOGI( &quot;SurfaceFlinger's main thread ready to run. &quot;\012 &quot;Initializing graphics H/W...&quot;))<SUB>671</SUB>> ]
-"1402" [label = <(_l,_l(mStateLock))<SUB>673</SUB>> ]
-"1404" [label = <(setRenderEngine,mCompositionEngine-&gt;setRenderEngine(renderengine::RenderEngine::create(\012            renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build())))<SUB>678</SUB>> ]
-"1469" [label = <(setTimeStats,mCompositionEngine-&gt;setTimeStats(mTimeStats))<SUB>690</SUB>> ]
-"1474" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(mVrFlingerRequestsDisplay,\012 &quot;Starting with vr flinger active is not currently supported.&quot;))<SUB>692</SUB>> ]
-"1477" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(getFactory().createHWComposer(getBE().mHwcServiceName)))<SUB>694</SUB>> ]
-"1488" [label = <(setConfiguration,mCompositionEngine-&gt;getHwComposer().setConfiguration(this, getBE().mComposerSequenceId))<SUB>695</SUB>> ]
-"1499" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>697</SUB>> ]
-"1501" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>698</SUB>> ]
-"1504" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display, &quot;Missing internal display after registering composer callback.&quot;))<SUB>699</SUB>> ]
-"1508" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!getHwComposer().isConnected(*display-&gt;getId()),\012 &quot;Internal display is disconnected.&quot;))<SUB>700</SUB>> ]
-"1559" [label = <(&lt;operator&gt;.assignment,mDrawingState = mCurrentState)<SUB>728</SUB>> ]
-"1562" [label = <(initializeDisplays,initializeDisplays())<SUB>731</SUB>> ]
-"1564" [label = <(property_get,property_get(&quot;service.sf.prime_shader_cache&quot;, primeShaderCache, &quot;1&quot;))<SUB>734</SUB>> ]
-"1577" [label = <(&lt;operator&gt;.assignment,presentFenceReliable =\012 !getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>741</SUB>> ]
-"1589" [label = <(&lt;operator&gt;.assignment,mStartPropertySetThread = getFactory().createStartPropertySetThread(presentFenceReliable))<SUB>743</SUB>> ]
-"1606" [label = <(ALOGV,ALOGV(&quot;Done initializing&quot;))<SUB>749</SUB>> ]
-"1405" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setRenderEngine)<SUB>678</SUB>> ]
-"1408" [label = <(renderengine::RenderEngine::create,renderengine::RenderEngine::create(\012            renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build()))<SUB>678</SUB>> ]
-"1470" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setTimeStats)<SUB>690</SUB>> ]
-"1478" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>694</SUB>> ]
-"1481" [label = <(createHWComposer,getFactory().createHWComposer(getBE().mHwcServiceName))<SUB>694</SUB>> ]
-"1489" [label = <(&lt;operator&gt;.fieldAccess,mCompositionEngine-&gt;getHwComposer().setConfiguration)<SUB>695</SUB>> ]
-"1496" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>695</SUB>> ]
-"1503" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>698</SUB>> ]
-"1505" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>699</SUB>> ]
-"1509" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().isConnected(*display-&gt;getId()))<SUB>700</SUB>> ]
-"1569" [label = <(atoi,atoi(primeShaderCache))<SUB>735</SUB>> ]
-"1579" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>742</SUB>> ]
-"1591" [label = <(createStartPropertySetThread,getFactory().createStartPropertySetThread(presentFenceReliable))<SUB>743</SUB>> ]
-"1597" [label = <(&lt;operator&gt;.notEquals,mStartPropertySetThread-&gt;Start() != NO_ERROR)<SUB>745</SUB>> ]
-"1407" [label = <(FIELD_IDENTIFIER,setRenderEngine,setRenderEngine)<SUB>678</SUB>> ]
-"1409" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::create)<SUB>678</SUB>> ]
-"1414" [label = <(build,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build())<SUB>679</SUB>> ]
-"1472" [label = <(FIELD_IDENTIFIER,setTimeStats,setTimeStats)<SUB>690</SUB>> ]
-"1480" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>694</SUB>> ]
-"1482" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createHWComposer)<SUB>694</SUB>> ]
-"1485" [label = <(&lt;operator&gt;.fieldAccess,getBE().mHwcServiceName)<SUB>694</SUB>> ]
-"1490" [label = <(getHwComposer,mCompositionEngine-&gt;getHwComposer())<SUB>695</SUB>> ]
-"1494" [label = <(FIELD_IDENTIFIER,setConfiguration,setConfiguration)<SUB>695</SUB>> ]
-"1497" [label = <(getBE,getBE())<SUB>695</SUB>> ]
-"1498" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>695</SUB>> ]
-"1510" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>700</SUB>> ]
-"1524" [label = <(&lt;operator&gt;.assignment,vrFlingerRequestDisplayCallback = [this](bool requestDisplay) {\012 // This callback is called from the vr flinger dispatch thread. We\012 // need to call signalTransaction(), which requires holding\012 // mStateLock when we're not on the main thread. Acquiring\012 // mStateLock from the vr flinger dispatch thread might trigger a\012 // deadlock in surface flinger (see b/66916578), so post a message\012 // to be handled on the main thread instead.\012 static_cast&lt;void&gt;(schedule([=] {\012                ALOGI(&quot;VR request display mode: requestDisplay=%d&quot;, requestDisplay);\012                mVrFlingerRequestsDisplay = requestDisplay;\012                signalTransaction();\012 }));\012 })<SUB>704</SUB>> ]
-"1527" [label = <(&lt;operator&gt;.assignment,mVrFlinger = dvr::VrFlinger::Create(getHwComposer().getComposer(),\012                                            getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0),\012                                            vrFlingerRequestDisplayCallback))<SUB>717</SUB>> ]
-"1572" [label = <(primeCache,getRenderEngine().primeCache())<SUB>736</SUB>> ]
-"1580" [label = <(hasCapability,getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>742</SUB>> ]
-"1592" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createStartPropertySetThread)<SUB>743</SUB>> ]
-"1598" [label = <(Start,mStartPropertySetThread-&gt;Start())<SUB>745</SUB>> ]
-"1604" [label = <(ALOGE,ALOGE(&quot;Run StartPropertySetThread failed!&quot;))<SUB>746</SUB>> ]
-"1410" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine)<SUB>678</SUB>> ]
-"1413" [label = <(FIELD_IDENTIFIER,create,create)<SUB>678</SUB>> ]
-"1415" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build)<SUB>679</SUB>> ]
-"1483" [label = <(getFactory,getFactory())<SUB>694</SUB>> ]
-"1484" [label = <(FIELD_IDENTIFIER,createHWComposer,createHWComposer)<SUB>694</SUB>> ]
-"1486" [label = <(getBE,getBE())<SUB>694</SUB>> ]
-"1487" [label = <(FIELD_IDENTIFIER,mHwcServiceName,mHwcServiceName)<SUB>694</SUB>> ]
-"1491" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getHwComposer)<SUB>695</SUB>> ]
-"1511" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>700</SUB>> ]
-"1514" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>700</SUB>> ]
-"1526" [label = <(METHOD_REF,ANY anonymous_lambda_9 (bool requestDisplay),vrFlingerRequestDisplayCallback = [this](bool requestDisplay) {\012 // This callback is called from the vr flinger dispatch thread. We\012 // need to call signalTransaction(), which requires holding\012 // mStateLock when we're not on the main thread. Acquiring\012 // mStateLock from the vr flinger dispatch thread might trigger a\012 // deadlock in surface flinger (see b/66916578), so post a message\012 // to be handled on the main thread instead.\012 static_cast&lt;void&gt;(schedule([=] {\012                ALOGI(&quot;VR request display mode: requestDisplay=%d&quot;, requestDisplay);\012                mVrFlingerRequestsDisplay = requestDisplay;\012                signalTransaction();\012 }));\012 })<SUB>704</SUB>> ]
-"1529" [label = <(dvr::VrFlinger::Create,dvr::VrFlinger::Create(getHwComposer().getComposer(),\012                                            getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0),\012                                            vrFlingerRequestDisplayCallback))<SUB>717</SUB>> ]
-"1554" [label = <(&lt;operator&gt;.logicalNot,!mVrFlinger)<SUB>722</SUB>> ]
-"1573" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().primeCache)<SUB>736</SUB>> ]
-"1581" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasCapability)<SUB>742</SUB>> ]
-"1584" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>742</SUB>> ]
-"1593" [label = <(getFactory,getFactory())<SUB>743</SUB>> ]
-"1594" [label = <(FIELD_IDENTIFIER,createStartPropertySetThread,createStartPropertySetThread)<SUB>743</SUB>> ]
-"1599" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;Start)<SUB>745</SUB>> ]
-"1416" [label = <(setContextPriority,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM))<SUB>679</SUB>> ]
-"1468" [label = <(FIELD_IDENTIFIER,build,build)<SUB>679</SUB>> ]
-"1493" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>695</SUB>> ]
-"1512" [label = <(getHwComposer,getHwComposer())<SUB>700</SUB>> ]
-"1513" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>700</SUB>> ]
-"1515" [label = <(getId,display-&gt;getId())<SUB>700</SUB>> ]
-"1530" [label = <(&lt;operator&gt;.fieldAccess,dvr::VrFlinger::Create)<SUB>717</SUB>> ]
-"1535" [label = <(getComposer,getHwComposer().getComposer())<SUB>717</SUB>> ]
-"1539" [label = <(value_or,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0))<SUB>718</SUB>> ]
-"1557" [label = <(ALOGE,ALOGE(&quot;Failed to start vrflinger&quot;))<SUB>723</SUB>> ]
-"1574" [label = <(getRenderEngine,getRenderEngine())<SUB>736</SUB>> ]
-"1575" [label = <(FIELD_IDENTIFIER,primeCache,primeCache)<SUB>736</SUB>> ]
-"1582" [label = <(getHwComposer,getHwComposer())<SUB>742</SUB>> ]
-"1583" [label = <(FIELD_IDENTIFIER,hasCapability,hasCapability)<SUB>742</SUB>> ]
-"1585" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability)<SUB>742</SUB>> ]
-"1588" [label = <(FIELD_IDENTIFIER,PRESENT_FENCE_IS_NOT_RELIABLE,PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>742</SUB>> ]
-"1601" [label = <(FIELD_IDENTIFIER,Start,Start)<SUB>745</SUB>> ]
-"1417" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority)<SUB>679</SUB>> ]
-"1452" [label = <(&lt;operator&gt;.conditional,useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)<SUB>686</SUB>> ]
-"1516" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>700</SUB>> ]
-"1531" [label = <(&lt;operator&gt;.fieldAccess,dvr::VrFlinger)<SUB>717</SUB>> ]
-"1534" [label = <(FIELD_IDENTIFIER,Create,Create)<SUB>717</SUB>> ]
-"1536" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>717</SUB>> ]
-"1540" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or)<SUB>718</SUB>> ]
-"1418" [label = <(setSupportsBackgroundBlur,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur))<SUB>679</SUB>> ]
-"1451" [label = <(FIELD_IDENTIFIER,setContextPriority,setContextPriority)<SUB>679</SUB>> ]
-"1454" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority::HIGH)<SUB>687</SUB>> ]
-"1461" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority::MEDIUM)<SUB>688</SUB>> ]
-"1518" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>700</SUB>> ]
-"1537" [label = <(getHwComposer,getHwComposer())<SUB>717</SUB>> ]
-"1538" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>717</SUB>> ]
-"1541" [label = <(fromPhysicalDisplayId,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId()))<SUB>718</SUB>> ]
-"1550" [label = <(FIELD_IDENTIFIER,value_or,value_or)<SUB>718</SUB>> ]
-"1419" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur)<SUB>679</SUB>> ]
-"1455" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority)<SUB>687</SUB>> ]
-"1460" [label = <(FIELD_IDENTIFIER,HIGH,HIGH)<SUB>687</SUB>> ]
-"1462" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority)<SUB>688</SUB>> ]
-"1467" [label = <(FIELD_IDENTIFIER,MEDIUM,MEDIUM)<SUB>688</SUB>> ]
-"1542" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .fromPhysicalDisplayId)<SUB>718</SUB>> ]
-"1545" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>719</SUB>> ]
-"1420" [label = <(setPrecacheToneMapperShaderOnly,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false))<SUB>679</SUB>> ]
-"1449" [label = <(FIELD_IDENTIFIER,setSupportsBackgroundBlur,setSupportsBackgroundBlur)<SUB>679</SUB>> ]
-"1457" [label = <(&lt;operator&gt;.fieldAccess,RenderEngine::ContextPriority)<SUB>687</SUB>> ]
-"1464" [label = <(&lt;operator&gt;.fieldAccess,RenderEngine::ContextPriority)<SUB>688</SUB>> ]
-"1543" [label = <(getHwComposer,getHwComposer())<SUB>718</SUB>> ]
-"1544" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>718</SUB>> ]
-"1546" [label = <(getId,display-&gt;getId())<SUB>719</SUB>> ]
-"1421" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly)<SUB>679</SUB>> ]
-"1547" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>719</SUB>> ]
-"1422" [label = <(setEnableProtectedContext,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false)))<SUB>679</SUB>> ]
-"1447" [label = <(FIELD_IDENTIFIER,setPrecacheToneMapperShaderOnly,setPrecacheToneMapperShaderOnly)<SUB>679</SUB>> ]
-"1549" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>719</SUB>> ]
-"1423" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext)<SUB>679</SUB>> ]
-"1445" [label = <(enable_protected_contents,enable_protected_contents(false))<SUB>683</SUB>> ]
-"1424" [label = <(setUseColorManagerment,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement))<SUB>679</SUB>> ]
-"1444" [label = <(FIELD_IDENTIFIER,setEnableProtectedContext,setEnableProtectedContext)<SUB>679</SUB>> ]
-"1425" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment)<SUB>679</SUB>> ]
-"1426" [label = <(setImageCacheSize,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers))<SUB>679</SUB>> ]
-"1442" [label = <(FIELD_IDENTIFIER,setUseColorManagerment,setUseColorManagerment)<SUB>679</SUB>> ]
-"1427" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize)<SUB>679</SUB>> ]
-"1428" [label = <(setPixelFormat,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat)))<SUB>679</SUB>> ]
-"1440" [label = <(FIELD_IDENTIFIER,setImageCacheSize,setImageCacheSize)<SUB>679</SUB>> ]
-"1429" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat)<SUB>679</SUB>> ]
-"1437" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))<SUB>680</SUB>> ]
-"1430" [label = <(renderengine::RenderEngineCreationArgs::Builder,renderengine::RenderEngineCreationArgs::Builder())<SUB>679</SUB>> ]
-"1436" [label = <(FIELD_IDENTIFIER,setPixelFormat,setPixelFormat)<SUB>679</SUB>> ]
-"1438" [label = <(UNKNOWN,int32_t,int32_t)<SUB>680</SUB>> ]
-"1431" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder)<SUB>679</SUB>> ]
-"1432" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs)<SUB>679</SUB>> ]
-"1435" [label = <(FIELD_IDENTIFIER,Builder,Builder)<SUB>679</SUB>> ]
-"1397" [label = <(METHOD,init)<SUB>670</SUB>> ]
-"1608" [label = <(METHOD_RETURN,void)<SUB>670</SUB>> ]
-  "1399" -> "1402" 
-  "1402" -> "1407" 
-  "1404" -> "1472" 
-  "1469" -> "1474" 
-  "1474" -> "1480" 
-  "1477" -> "1493" 
-  "1488" -> "1499" 
-  "1499" -> "1503" 
-  "1501" -> "1505" 
-  "1504" -> "1512" 
-  "1508" -> "1526" 
-  "1508" -> "1559" 
-  "1559" -> "1562" 
-  "1562" -> "1564" 
-  "1564" -> "1569" 
-  "1577" -> "1593" 
-  "1589" -> "1601" 
-  "1606" -> "1608" 
-  "1405" -> "1410" 
-  "1408" -> "1404" 
-  "1470" -> "1469" 
-  "1478" -> "1483" 
-  "1481" -> "1477" 
-  "1489" -> "1497" 
-  "1496" -> "1488" 
+"1415" [label = <(ALOGI,ALOGI( &quot;SurfaceFlinger's main thread ready to run. &quot;\012 &quot;Initializing graphics H/W...&quot;))<SUB>670</SUB>> ]
+"1418" [label = <(_l,_l(mStateLock))<SUB>672</SUB>> ]
+"1420" [label = <(setRenderEngine,mCompositionEngine-&gt;setRenderEngine(renderengine::RenderEngine::create(\012            renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build())))<SUB>677</SUB>> ]
+"1485" [label = <(setTimeStats,mCompositionEngine-&gt;setTimeStats(mTimeStats))<SUB>689</SUB>> ]
+"1490" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(mVrFlingerRequestsDisplay,\012 &quot;Starting with vr flinger active is not currently supported.&quot;))<SUB>691</SUB>> ]
+"1493" [label = <(setHwComposer,mCompositionEngine-&gt;setHwComposer(getFactory().createHWComposer(getBE().mHwcServiceName)))<SUB>693</SUB>> ]
+"1504" [label = <(setConfiguration,mCompositionEngine-&gt;getHwComposer().setConfiguration(this, getBE().mComposerSequenceId))<SUB>694</SUB>> ]
+"1515" [label = <(processDisplayHotplugEventsLocked,processDisplayHotplugEventsLocked())<SUB>696</SUB>> ]
+"1517" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>697</SUB>> ]
+"1520" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!display, &quot;Missing internal display after registering composer callback.&quot;))<SUB>698</SUB>> ]
+"1524" [label = <(LOG_ALWAYS_FATAL_IF,LOG_ALWAYS_FATAL_IF(!getHwComposer().isConnected(*display-&gt;getId()),\012 &quot;Internal display is disconnected.&quot;))<SUB>699</SUB>> ]
+"1575" [label = <(&lt;operator&gt;.assignment,mDrawingState = mCurrentState)<SUB>727</SUB>> ]
+"1578" [label = <(initializeDisplays,initializeDisplays())<SUB>730</SUB>> ]
+"1580" [label = <(property_get,property_get(&quot;service.sf.prime_shader_cache&quot;, primeShaderCache, &quot;1&quot;))<SUB>733</SUB>> ]
+"1593" [label = <(&lt;operator&gt;.assignment,presentFenceReliable =\012 !getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>740</SUB>> ]
+"1605" [label = <(&lt;operator&gt;.assignment,mStartPropertySetThread = getFactory().createStartPropertySetThread(presentFenceReliable))<SUB>742</SUB>> ]
+"1622" [label = <(ALOGV,ALOGV(&quot;Done initializing&quot;))<SUB>748</SUB>> ]
+"1421" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setRenderEngine)<SUB>677</SUB>> ]
+"1424" [label = <(renderengine::RenderEngine::create,renderengine::RenderEngine::create(\012            renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build()))<SUB>677</SUB>> ]
+"1486" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setTimeStats)<SUB>689</SUB>> ]
+"1494" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;setHwComposer)<SUB>693</SUB>> ]
+"1497" [label = <(createHWComposer,getFactory().createHWComposer(getBE().mHwcServiceName))<SUB>693</SUB>> ]
+"1505" [label = <(&lt;operator&gt;.fieldAccess,mCompositionEngine-&gt;getHwComposer().setConfiguration)<SUB>694</SUB>> ]
+"1512" [label = <(&lt;operator&gt;.fieldAccess,getBE().mComposerSequenceId)<SUB>694</SUB>> ]
+"1519" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>697</SUB>> ]
+"1521" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>698</SUB>> ]
+"1525" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().isConnected(*display-&gt;getId()))<SUB>699</SUB>> ]
+"1585" [label = <(atoi,atoi(primeShaderCache))<SUB>734</SUB>> ]
+"1595" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>741</SUB>> ]
+"1607" [label = <(createStartPropertySetThread,getFactory().createStartPropertySetThread(presentFenceReliable))<SUB>742</SUB>> ]
+"1613" [label = <(&lt;operator&gt;.notEquals,mStartPropertySetThread-&gt;Start() != NO_ERROR)<SUB>744</SUB>> ]
+"1423" [label = <(FIELD_IDENTIFIER,setRenderEngine,setRenderEngine)<SUB>677</SUB>> ]
+"1425" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::create)<SUB>677</SUB>> ]
+"1430" [label = <(build,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build())<SUB>678</SUB>> ]
+"1488" [label = <(FIELD_IDENTIFIER,setTimeStats,setTimeStats)<SUB>689</SUB>> ]
+"1496" [label = <(FIELD_IDENTIFIER,setHwComposer,setHwComposer)<SUB>693</SUB>> ]
+"1498" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createHWComposer)<SUB>693</SUB>> ]
+"1501" [label = <(&lt;operator&gt;.fieldAccess,getBE().mHwcServiceName)<SUB>693</SUB>> ]
+"1506" [label = <(getHwComposer,mCompositionEngine-&gt;getHwComposer())<SUB>694</SUB>> ]
+"1510" [label = <(FIELD_IDENTIFIER,setConfiguration,setConfiguration)<SUB>694</SUB>> ]
+"1513" [label = <(getBE,getBE())<SUB>694</SUB>> ]
+"1514" [label = <(FIELD_IDENTIFIER,mComposerSequenceId,mComposerSequenceId)<SUB>694</SUB>> ]
+"1526" [label = <(isConnected,getHwComposer().isConnected(*display-&gt;getId()))<SUB>699</SUB>> ]
+"1540" [label = <(&lt;operator&gt;.assignment,vrFlingerRequestDisplayCallback = [this](bool requestDisplay) {\012 // This callback is called from the vr flinger dispatch thread. We\012 // need to call signalTransaction(), which requires holding\012 // mStateLock when we're not on the main thread. Acquiring\012 // mStateLock from the vr flinger dispatch thread might trigger a\012 // deadlock in surface flinger (see b/66916578), so post a message\012 // to be handled on the main thread instead.\012 static_cast&lt;void&gt;(schedule([=] {\012                ALOGI(&quot;VR request display mode: requestDisplay=%d&quot;, requestDisplay);\012                mVrFlingerRequestsDisplay = requestDisplay;\012                signalTransaction();\012 }));\012 })<SUB>703</SUB>> ]
+"1543" [label = <(&lt;operator&gt;.assignment,mVrFlinger = dvr::VrFlinger::Create(getHwComposer().getComposer(),\012                                            getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0),\012                                            vrFlingerRequestDisplayCallback))<SUB>716</SUB>> ]
+"1588" [label = <(primeCache,getRenderEngine().primeCache())<SUB>735</SUB>> ]
+"1596" [label = <(hasCapability,getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>741</SUB>> ]
+"1608" [label = <(&lt;operator&gt;.fieldAccess,getFactory().createStartPropertySetThread)<SUB>742</SUB>> ]
+"1614" [label = <(Start,mStartPropertySetThread-&gt;Start())<SUB>744</SUB>> ]
+"1620" [label = <(ALOGE,ALOGE(&quot;Run StartPropertySetThread failed!&quot;))<SUB>745</SUB>> ]
+"1426" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine)<SUB>677</SUB>> ]
+"1429" [label = <(FIELD_IDENTIFIER,create,create)<SUB>677</SUB>> ]
+"1431" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)\012 .build)<SUB>678</SUB>> ]
+"1499" [label = <(getFactory,getFactory())<SUB>693</SUB>> ]
+"1500" [label = <(FIELD_IDENTIFIER,createHWComposer,createHWComposer)<SUB>693</SUB>> ]
+"1502" [label = <(getBE,getBE())<SUB>693</SUB>> ]
+"1503" [label = <(FIELD_IDENTIFIER,mHwcServiceName,mHwcServiceName)<SUB>693</SUB>> ]
+"1507" [label = <(&lt;operator&gt;.indirectFieldAccess,mCompositionEngine-&gt;getHwComposer)<SUB>694</SUB>> ]
+"1527" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().isConnected)<SUB>699</SUB>> ]
+"1530" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>699</SUB>> ]
+"1542" [label = <(METHOD_REF,ANY anonymous_lambda_9 (bool requestDisplay),vrFlingerRequestDisplayCallback = [this](bool requestDisplay) {\012 // This callback is called from the vr flinger dispatch thread. We\012 // need to call signalTransaction(), which requires holding\012 // mStateLock when we're not on the main thread. Acquiring\012 // mStateLock from the vr flinger dispatch thread might trigger a\012 // deadlock in surface flinger (see b/66916578), so post a message\012 // to be handled on the main thread instead.\012 static_cast&lt;void&gt;(schedule([=] {\012                ALOGI(&quot;VR request display mode: requestDisplay=%d&quot;, requestDisplay);\012                mVrFlingerRequestsDisplay = requestDisplay;\012                signalTransaction();\012 }));\012 })<SUB>703</SUB>> ]
+"1545" [label = <(dvr::VrFlinger::Create,dvr::VrFlinger::Create(getHwComposer().getComposer(),\012                                            getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0),\012                                            vrFlingerRequestDisplayCallback))<SUB>716</SUB>> ]
+"1570" [label = <(&lt;operator&gt;.logicalNot,!mVrFlinger)<SUB>721</SUB>> ]
+"1589" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().primeCache)<SUB>735</SUB>> ]
+"1597" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasCapability)<SUB>741</SUB>> ]
+"1600" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>741</SUB>> ]
+"1609" [label = <(getFactory,getFactory())<SUB>742</SUB>> ]
+"1610" [label = <(FIELD_IDENTIFIER,createStartPropertySetThread,createStartPropertySetThread)<SUB>742</SUB>> ]
+"1615" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;Start)<SUB>744</SUB>> ]
+"1432" [label = <(setContextPriority,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority(useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM))<SUB>678</SUB>> ]
+"1484" [label = <(FIELD_IDENTIFIER,build,build)<SUB>678</SUB>> ]
+"1509" [label = <(FIELD_IDENTIFIER,getHwComposer,getHwComposer)<SUB>694</SUB>> ]
+"1528" [label = <(getHwComposer,getHwComposer())<SUB>699</SUB>> ]
+"1529" [label = <(FIELD_IDENTIFIER,isConnected,isConnected)<SUB>699</SUB>> ]
+"1531" [label = <(getId,display-&gt;getId())<SUB>699</SUB>> ]
+"1546" [label = <(&lt;operator&gt;.fieldAccess,dvr::VrFlinger::Create)<SUB>716</SUB>> ]
+"1551" [label = <(getComposer,getHwComposer().getComposer())<SUB>716</SUB>> ]
+"1555" [label = <(value_or,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or(0))<SUB>717</SUB>> ]
+"1573" [label = <(ALOGE,ALOGE(&quot;Failed to start vrflinger&quot;))<SUB>722</SUB>> ]
+"1590" [label = <(getRenderEngine,getRenderEngine())<SUB>735</SUB>> ]
+"1591" [label = <(FIELD_IDENTIFIER,primeCache,primeCache)<SUB>735</SUB>> ]
+"1598" [label = <(getHwComposer,getHwComposer())<SUB>741</SUB>> ]
+"1599" [label = <(FIELD_IDENTIFIER,hasCapability,hasCapability)<SUB>741</SUB>> ]
+"1601" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability)<SUB>741</SUB>> ]
+"1604" [label = <(FIELD_IDENTIFIER,PRESENT_FENCE_IS_NOT_RELIABLE,PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>741</SUB>> ]
+"1617" [label = <(FIELD_IDENTIFIER,Start,Start)<SUB>744</SUB>> ]
+"1433" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur)\012 .setContextPriority)<SUB>678</SUB>> ]
+"1468" [label = <(&lt;operator&gt;.conditional,useContextPriority\012 ? renderengine::RenderEngine::ContextPriority::HIGH\012 : renderengine::RenderEngine::ContextPriority::MEDIUM)<SUB>685</SUB>> ]
+"1532" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>699</SUB>> ]
+"1547" [label = <(&lt;operator&gt;.fieldAccess,dvr::VrFlinger)<SUB>716</SUB>> ]
+"1550" [label = <(FIELD_IDENTIFIER,Create,Create)<SUB>716</SUB>> ]
+"1552" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().getComposer)<SUB>716</SUB>> ]
+"1556" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId())\012 .value_or)<SUB>717</SUB>> ]
+"1434" [label = <(setSupportsBackgroundBlur,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur(mSupportsBlur))<SUB>678</SUB>> ]
+"1467" [label = <(FIELD_IDENTIFIER,setContextPriority,setContextPriority)<SUB>678</SUB>> ]
+"1470" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority::HIGH)<SUB>686</SUB>> ]
+"1477" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority::MEDIUM)<SUB>687</SUB>> ]
+"1534" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>699</SUB>> ]
+"1553" [label = <(getHwComposer,getHwComposer())<SUB>716</SUB>> ]
+"1554" [label = <(FIELD_IDENTIFIER,getComposer,getComposer)<SUB>716</SUB>> ]
+"1557" [label = <(fromPhysicalDisplayId,getHwComposer()\012 .fromPhysicalDisplayId(*display-&gt;getId()))<SUB>717</SUB>> ]
+"1566" [label = <(FIELD_IDENTIFIER,value_or,value_or)<SUB>717</SUB>> ]
+"1435" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false)\012 .setSupportsBackgroundBlur)<SUB>678</SUB>> ]
+"1471" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority)<SUB>686</SUB>> ]
+"1476" [label = <(FIELD_IDENTIFIER,HIGH,HIGH)<SUB>686</SUB>> ]
+"1478" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngine::ContextPriority)<SUB>687</SUB>> ]
+"1483" [label = <(FIELD_IDENTIFIER,MEDIUM,MEDIUM)<SUB>687</SUB>> ]
+"1558" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer()\012 .fromPhysicalDisplayId)<SUB>717</SUB>> ]
+"1561" [label = <(&lt;operator&gt;.indirection,*display-&gt;getId())<SUB>718</SUB>> ]
+"1436" [label = <(setPrecacheToneMapperShaderOnly,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly(false))<SUB>678</SUB>> ]
+"1465" [label = <(FIELD_IDENTIFIER,setSupportsBackgroundBlur,setSupportsBackgroundBlur)<SUB>678</SUB>> ]
+"1473" [label = <(&lt;operator&gt;.fieldAccess,RenderEngine::ContextPriority)<SUB>686</SUB>> ]
+"1480" [label = <(&lt;operator&gt;.fieldAccess,RenderEngine::ContextPriority)<SUB>687</SUB>> ]
+"1559" [label = <(getHwComposer,getHwComposer())<SUB>717</SUB>> ]
+"1560" [label = <(FIELD_IDENTIFIER,fromPhysicalDisplayId,fromPhysicalDisplayId)<SUB>717</SUB>> ]
+"1562" [label = <(getId,display-&gt;getId())<SUB>718</SUB>> ]
+"1437" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false))\012 .setPrecacheToneMapperShaderOnly)<SUB>678</SUB>> ]
+"1563" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getId)<SUB>718</SUB>> ]
+"1438" [label = <(setEnableProtectedContext,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext(enable_protected_contents(false)))<SUB>678</SUB>> ]
+"1463" [label = <(FIELD_IDENTIFIER,setPrecacheToneMapperShaderOnly,setPrecacheToneMapperShaderOnly)<SUB>678</SUB>> ]
+"1565" [label = <(FIELD_IDENTIFIER,getId,getId)<SUB>718</SUB>> ]
+"1439" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement)\012 .setEnableProtectedContext)<SUB>678</SUB>> ]
+"1461" [label = <(enable_protected_contents,enable_protected_contents(false))<SUB>682</SUB>> ]
+"1440" [label = <(setUseColorManagerment,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment(useColorManagement))<SUB>678</SUB>> ]
+"1460" [label = <(FIELD_IDENTIFIER,setEnableProtectedContext,setEnableProtectedContext)<SUB>678</SUB>> ]
+"1441" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers)\012 .setUseColorManagerment)<SUB>678</SUB>> ]
+"1442" [label = <(setImageCacheSize,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize(maxFrameBufferAcquiredBuffers))<SUB>678</SUB>> ]
+"1458" [label = <(FIELD_IDENTIFIER,setUseColorManagerment,setUseColorManagerment)<SUB>678</SUB>> ]
+"1443" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))\012 .setImageCacheSize)<SUB>678</SUB>> ]
+"1444" [label = <(setPixelFormat,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat(static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat)))<SUB>678</SUB>> ]
+"1456" [label = <(FIELD_IDENTIFIER,setImageCacheSize,setImageCacheSize)<SUB>678</SUB>> ]
+"1445" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder()\012 .setPixelFormat)<SUB>678</SUB>> ]
+"1453" [label = <(&lt;operator&gt;.cast,static_cast&lt;int32_t&gt;(defaultCompositionPixelFormat))<SUB>679</SUB>> ]
+"1446" [label = <(renderengine::RenderEngineCreationArgs::Builder,renderengine::RenderEngineCreationArgs::Builder())<SUB>678</SUB>> ]
+"1452" [label = <(FIELD_IDENTIFIER,setPixelFormat,setPixelFormat)<SUB>678</SUB>> ]
+"1454" [label = <(UNKNOWN,int32_t,int32_t)<SUB>679</SUB>> ]
+"1447" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs::Builder)<SUB>678</SUB>> ]
+"1448" [label = <(&lt;operator&gt;.fieldAccess,renderengine::RenderEngineCreationArgs)<SUB>678</SUB>> ]
+"1451" [label = <(FIELD_IDENTIFIER,Builder,Builder)<SUB>678</SUB>> ]
+"1413" [label = <(METHOD,init)<SUB>669</SUB>> ]
+"1624" [label = <(METHOD_RETURN,void)<SUB>669</SUB>> ]
+  "1415" -> "1418" 
+  "1418" -> "1423" 
+  "1420" -> "1488" 
+  "1485" -> "1490" 
+  "1490" -> "1496" 
+  "1493" -> "1509" 
+  "1504" -> "1515" 
+  "1515" -> "1519" 
+  "1517" -> "1521" 
+  "1520" -> "1528" 
+  "1524" -> "1542" 
+  "1524" -> "1575" 
+  "1575" -> "1578" 
+  "1578" -> "1580" 
+  "1580" -> "1585" 
+  "1593" -> "1609" 
+  "1605" -> "1617" 
+  "1622" -> "1624" 
+  "1421" -> "1426" 
+  "1424" -> "1420" 
+  "1486" -> "1485" 
+  "1494" -> "1499" 
+  "1497" -> "1493" 
+  "1505" -> "1513" 
+  "1512" -> "1504" 
+  "1519" -> "1517" 
+  "1521" -> "1520" 
+  "1525" -> "1524" 
+  "1585" -> "1590" 
+  "1585" -> "1598" 
+  "1595" -> "1593" 
+  "1607" -> "1605" 
+  "1613" -> "1620" 
+  "1613" -> "1622" 
+  "1423" -> "1421" 
+  "1425" -> "1448" 
+  "1430" -> "1424" 
+  "1488" -> "1486" 
+  "1496" -> "1494" 
+  "1498" -> "1502" 
+  "1501" -> "1497" 
+  "1506" -> "1510" 
+  "1510" -> "1505" 
+  "1513" -> "1514" 
+  "1514" -> "1512" 
+  "1526" -> "1525" 
+  "1540" -> "1547" 
+  "1543" -> "1570" 
+  "1588" -> "1598" 
+  "1596" -> "1595" 
+  "1608" -> "1607" 
+  "1614" -> "1613" 
+  "1620" -> "1622" 
+  "1426" -> "1429" 
+  "1429" -> "1425" 
+  "1431" -> "1430" 
+  "1499" -> "1500" 
+  "1500" -> "1498" 
+  "1502" -> "1503" 
   "1503" -> "1501" 
-  "1505" -> "1504" 
-  "1509" -> "1508" 
-  "1569" -> "1574" 
-  "1569" -> "1582" 
-  "1579" -> "1577" 
+  "1507" -> "1506" 
+  "1527" -> "1534" 
+  "1530" -> "1526" 
+  "1542" -> "1540" 
+  "1545" -> "1543" 
+  "1570" -> "1573" 
+  "1570" -> "1575" 
+  "1589" -> "1588" 
+  "1597" -> "1601" 
+  "1600" -> "1596" 
+  "1609" -> "1610" 
+  "1610" -> "1608" 
+  "1615" -> "1614" 
+  "1432" -> "1484" 
+  "1484" -> "1431" 
+  "1509" -> "1507" 
+  "1528" -> "1529" 
+  "1529" -> "1527" 
+  "1531" -> "1530" 
+  "1546" -> "1553" 
+  "1551" -> "1559" 
+  "1555" -> "1545" 
+  "1573" -> "1575" 
+  "1590" -> "1591" 
   "1591" -> "1589" 
-  "1597" -> "1604" 
-  "1597" -> "1606" 
-  "1407" -> "1405" 
-  "1409" -> "1432" 
-  "1414" -> "1408" 
-  "1472" -> "1470" 
+  "1598" -> "1599" 
+  "1599" -> "1597" 
+  "1601" -> "1604" 
+  "1604" -> "1600" 
+  "1617" -> "1615" 
+  "1433" -> "1473" 
+  "1433" -> "1480" 
+  "1468" -> "1432" 
+  "1532" -> "1531" 
+  "1547" -> "1550" 
+  "1550" -> "1546" 
+  "1552" -> "1551" 
+  "1556" -> "1555" 
+  "1434" -> "1467" 
+  "1467" -> "1433" 
+  "1470" -> "1468" 
+  "1477" -> "1468" 
+  "1534" -> "1532" 
+  "1553" -> "1554" 
+  "1554" -> "1552" 
+  "1557" -> "1566" 
+  "1566" -> "1556" 
+  "1435" -> "1434" 
+  "1471" -> "1476" 
+  "1476" -> "1470" 
+  "1478" -> "1483" 
+  "1483" -> "1477" 
+  "1558" -> "1565" 
+  "1561" -> "1557" 
+  "1436" -> "1465" 
+  "1465" -> "1435" 
+  "1473" -> "1471" 
   "1480" -> "1478" 
-  "1482" -> "1486" 
-  "1485" -> "1481" 
-  "1490" -> "1494" 
-  "1494" -> "1489" 
-  "1497" -> "1498" 
-  "1498" -> "1496" 
-  "1510" -> "1509" 
-  "1524" -> "1531" 
-  "1527" -> "1554" 
-  "1572" -> "1582" 
-  "1580" -> "1579" 
-  "1592" -> "1591" 
-  "1598" -> "1597" 
-  "1604" -> "1606" 
-  "1410" -> "1413" 
-  "1413" -> "1409" 
-  "1415" -> "1414" 
-  "1483" -> "1484" 
-  "1484" -> "1482" 
-  "1486" -> "1487" 
-  "1487" -> "1485" 
-  "1491" -> "1490" 
-  "1511" -> "1518" 
-  "1514" -> "1510" 
-  "1526" -> "1524" 
-  "1529" -> "1527" 
-  "1554" -> "1557" 
-  "1554" -> "1559" 
-  "1573" -> "1572" 
-  "1581" -> "1585" 
-  "1584" -> "1580" 
-  "1593" -> "1594" 
-  "1594" -> "1592" 
-  "1599" -> "1598" 
-  "1416" -> "1468" 
-  "1468" -> "1415" 
-  "1493" -> "1491" 
-  "1512" -> "1513" 
-  "1513" -> "1511" 
-  "1515" -> "1514" 
-  "1530" -> "1537" 
-  "1535" -> "1543" 
-  "1539" -> "1529" 
-  "1557" -> "1559" 
-  "1574" -> "1575" 
-  "1575" -> "1573" 
-  "1582" -> "1583" 
-  "1583" -> "1581" 
-  "1585" -> "1588" 
-  "1588" -> "1584" 
-  "1601" -> "1599" 
-  "1417" -> "1457" 
-  "1417" -> "1464" 
-  "1452" -> "1416" 
-  "1516" -> "1515" 
-  "1531" -> "1534" 
-  "1534" -> "1530" 
-  "1536" -> "1535" 
-  "1540" -> "1539" 
-  "1418" -> "1451" 
-  "1451" -> "1417" 
-  "1454" -> "1452" 
-  "1461" -> "1452" 
-  "1518" -> "1516" 
-  "1537" -> "1538" 
-  "1538" -> "1536" 
-  "1541" -> "1550" 
-  "1550" -> "1540" 
-  "1419" -> "1418" 
-  "1455" -> "1460" 
-  "1460" -> "1454" 
-  "1462" -> "1467" 
-  "1467" -> "1461" 
-  "1542" -> "1549" 
-  "1545" -> "1541" 
-  "1420" -> "1449" 
-  "1449" -> "1419" 
-  "1457" -> "1455" 
-  "1464" -> "1462" 
-  "1543" -> "1544" 
-  "1544" -> "1542" 
-  "1546" -> "1545" 
-  "1421" -> "1420" 
-  "1547" -> "1546" 
-  "1422" -> "1447" 
-  "1447" -> "1421" 
-  "1549" -> "1547" 
-  "1423" -> "1445" 
-  "1445" -> "1422" 
-  "1424" -> "1444" 
-  "1444" -> "1423" 
-  "1425" -> "1424" 
-  "1426" -> "1442" 
-  "1442" -> "1425" 
-  "1427" -> "1426" 
-  "1428" -> "1440" 
-  "1440" -> "1427" 
-  "1429" -> "1438" 
-  "1437" -> "1428" 
-  "1430" -> "1436" 
-  "1436" -> "1429" 
-  "1438" -> "1437" 
-  "1431" -> "1430" 
-  "1432" -> "1435" 
-  "1435" -> "1431" 
-  "1397" -> "1399" 
+  "1559" -> "1560" 
+  "1560" -> "1558" 
+  "1562" -> "1561" 
+  "1437" -> "1436" 
+  "1563" -> "1562" 
+  "1438" -> "1463" 
+  "1463" -> "1437" 
+  "1565" -> "1563" 
+  "1439" -> "1461" 
+  "1461" -> "1438" 
+  "1440" -> "1460" 
+  "1460" -> "1439" 
+  "1441" -> "1440" 
+  "1442" -> "1458" 
+  "1458" -> "1441" 
+  "1443" -> "1442" 
+  "1444" -> "1456" 
+  "1456" -> "1443" 
+  "1445" -> "1454" 
+  "1453" -> "1444" 
+  "1446" -> "1452" 
+  "1452" -> "1445" 
+  "1454" -> "1453" 
+  "1447" -> "1446" 
+  "1448" -> "1451" 
+  "1451" -> "1447" 
+  "1413" -> "1415" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/860-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/860-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/860-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/860-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getSequenceId" {  
-"20325" [label = <(METHOD,getSequenceId)> ]
-"20328" [label = <(METHOD_RETURN,ANY)> ]
-  "20325" -> "20328" 
+"20341" [label = <(METHOD,getSequenceId)> ]
+"20344" [label = <(METHOD_RETURN,ANY)> ]
+  "20341" -> "20344" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/861-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/861-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/861-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/861-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "SurfaceFlinger::setSchedFifo" {  
-"20329" [label = <(METHOD,SurfaceFlinger::setSchedFifo)> ]
-"20333" [label = <(METHOD_RETURN,ANY)> ]
-  "20329" -> "20333" 
+"20345" [label = <(METHOD,SurfaceFlinger::setSchedFifo)> ]
+"20349" [label = <(METHOD_RETURN,ANY)> ]
+  "20345" -> "20349" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/862-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/862-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/862-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/862-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "onScreenAcquired" {  
-"20334" [label = <(METHOD,onScreenAcquired)> ]
-"20338" [label = <(METHOD_RETURN,ANY)> ]
-  "20334" -> "20338" 
+"20350" [label = <(METHOD,onScreenAcquired)> ]
+"20354" [label = <(METHOD_RETURN,ANY)> ]
+  "20350" -> "20354" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/863-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/863-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/863-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/863-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "repaintEverything" {  
-"20339" [label = <(METHOD,repaintEverything)> ]
-"20341" [label = <(METHOD_RETURN,ANY)> ]
-  "20339" -> "20341" 
+"20355" [label = <(METHOD,repaintEverything)> ]
+"20357" [label = <(METHOD_RETURN,ANY)> ]
+  "20355" -> "20357" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/864-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/864-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/864-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/864-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "onScreenReleased" {  
-"20342" [label = <(METHOD,onScreenReleased)> ]
-"20346" [label = <(METHOD_RETURN,ANY)> ]
-  "20342" -> "20346" 
+"20358" [label = <(METHOD,onScreenReleased)> ]
+"20362" [label = <(METHOD_RETURN,ANY)> ]
+  "20358" -> "20362" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/865-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/865-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/865-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/865-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setDisplayPowerState" {  
-"20347" [label = <(METHOD,setDisplayPowerState)> ]
-"20351" [label = <(METHOD_RETURN,ANY)> ]
-  "20347" -> "20351" 
+"20363" [label = <(METHOD,setDisplayPowerState)> ]
+"20367" [label = <(METHOD_RETURN,ANY)> ]
+  "20363" -> "20367" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/866-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/866-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/866-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/866-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "StringAppendF" {  
-"20352" [label = <(METHOD,StringAppendF)> ]
-"20357" [label = <(METHOD_RETURN,ANY)> ]
-  "20352" -> "20357" 
+"20368" [label = <(METHOD,StringAppendF)> ]
+"20373" [label = <(METHOD_RETURN,ANY)> ]
+  "20368" -> "20373" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/867-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/867-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/867-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/867-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumper" {  
-"20358" [label = <(METHOD,dumper)> ]
-"20361" [label = <(METHOD_RETURN,ANY)> ]
-  "20358" -> "20361" 
+"20374" [label = <(METHOD,dumper)> ]
+"20377" [label = <(METHOD_RETURN,ANY)> ]
+  "20374" -> "20377" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/868-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/868-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/868-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/868-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "argsDumper" {  
-"20362" [label = <(METHOD,argsDumper)> ]
-"20365" [label = <(METHOD_RETURN,ANY)> ]
-  "20362" -> "20365" 
+"20378" [label = <(METHOD,argsDumper)> ]
+"20381" [label = <(METHOD_RETURN,ANY)> ]
+  "20378" -> "20381" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/869-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/869-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/869-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/869-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "protoDumper" {  
-"20366" [label = <(METHOD,protoDumper)> ]
-"20369" [label = <(METHOD_RETURN,ANY)> ]
-  "20366" -> "20369" 
+"20382" [label = <(METHOD,protoDumper)> ]
+"20385" [label = <(METHOD_RETURN,ANY)> ]
+  "20382" -> "20385" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/87-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/87-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/87-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/87-cfg.dot	2023-06-07 19:33:06.537398417 +0330
@@ -1,47 +1,47 @@
 digraph "readPersistentProperties" {  
-"1613" [label = <(_l,_l(mStateLock))<SUB>753</SUB>> ]
-"1616" [label = <(property_get,property_get(&quot;persist.sys.sf.color_saturation&quot;, value, &quot;1.0&quot;))<SUB>757</SUB>> ]
-"1620" [label = <(&lt;operator&gt;.assignment,mGlobalSaturationFactor = atof(value))<SUB>758</SUB>> ]
-"1624" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>759</SUB>> ]
-"1625" [label = <(ALOGV,ALOGV(&quot;Saturation is set to %.2f&quot;, mGlobalSaturationFactor))<SUB>760</SUB>> ]
-"1628" [label = <(property_get,property_get(&quot;persist.sys.sf.native_mode&quot;, value, &quot;0&quot;))<SUB>762</SUB>> ]
-"1632" [label = <(&lt;operator&gt;.assignment,mDisplayColorSetting = static_cast&lt;DisplayColorSetting&gt;(atoi(value)))<SUB>763</SUB>> ]
-"1638" [label = <(property_get,property_get(&quot;persist.sys.sf.color_mode&quot;, value, &quot;0&quot;))<SUB>765</SUB>> ]
-"1642" [label = <(&lt;operator&gt;.assignment,mForceColorMode = static_cast&lt;ColorMode&gt;(atoi(value)))<SUB>766</SUB>> ]
-"1648" [label = <(property_get,property_get(&quot;persist.sys.sf.disable_blurs&quot;, value, &quot;0&quot;))<SUB>768</SUB>> ]
-"1653" [label = <(&lt;operator&gt;.assignment,disableBlurs = atoi(value))<SUB>769</SUB>> ]
-"1657" [label = <(&lt;operator&gt;.assignment,mDisableBlurs = disableBlurs)<SUB>770</SUB>> ]
-"1660" [label = <(ALOGI_IF,ALOGI_IF(disableBlurs, &quot;Disabling blur effects, user preference.&quot;))<SUB>771</SUB>> ]
-"1622" [label = <(atof,atof(value))<SUB>758</SUB>> ]
-"1634" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(atoi(value)))<SUB>763</SUB>> ]
-"1644" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(atoi(value)))<SUB>766</SUB>> ]
-"1655" [label = <(atoi,atoi(value))<SUB>769</SUB>> ]
-"1635" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>763</SUB>> ]
-"1636" [label = <(atoi,atoi(value))<SUB>763</SUB>> ]
-"1645" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>766</SUB>> ]
-"1646" [label = <(atoi,atoi(value))<SUB>766</SUB>> ]
-"1610" [label = <(METHOD,readPersistentProperties)<SUB>752</SUB>> ]
-"1663" [label = <(METHOD_RETURN,void)<SUB>752</SUB>> ]
-  "1613" -> "1616" 
-  "1616" -> "1622" 
-  "1620" -> "1624" 
-  "1624" -> "1625" 
-  "1625" -> "1628" 
-  "1628" -> "1635" 
+"1629" [label = <(_l,_l(mStateLock))<SUB>752</SUB>> ]
+"1632" [label = <(property_get,property_get(&quot;persist.sys.sf.color_saturation&quot;, value, &quot;1.0&quot;))<SUB>756</SUB>> ]
+"1636" [label = <(&lt;operator&gt;.assignment,mGlobalSaturationFactor = atof(value))<SUB>757</SUB>> ]
+"1640" [label = <(updateColorMatrixLocked,updateColorMatrixLocked())<SUB>758</SUB>> ]
+"1641" [label = <(ALOGV,ALOGV(&quot;Saturation is set to %.2f&quot;, mGlobalSaturationFactor))<SUB>759</SUB>> ]
+"1644" [label = <(property_get,property_get(&quot;persist.sys.sf.native_mode&quot;, value, &quot;0&quot;))<SUB>761</SUB>> ]
+"1648" [label = <(&lt;operator&gt;.assignment,mDisplayColorSetting = static_cast&lt;DisplayColorSetting&gt;(atoi(value)))<SUB>762</SUB>> ]
+"1654" [label = <(property_get,property_get(&quot;persist.sys.sf.color_mode&quot;, value, &quot;0&quot;))<SUB>764</SUB>> ]
+"1658" [label = <(&lt;operator&gt;.assignment,mForceColorMode = static_cast&lt;ColorMode&gt;(atoi(value)))<SUB>765</SUB>> ]
+"1664" [label = <(property_get,property_get(&quot;persist.sys.sf.disable_blurs&quot;, value, &quot;0&quot;))<SUB>767</SUB>> ]
+"1669" [label = <(&lt;operator&gt;.assignment,disableBlurs = atoi(value))<SUB>768</SUB>> ]
+"1673" [label = <(&lt;operator&gt;.assignment,mDisableBlurs = disableBlurs)<SUB>769</SUB>> ]
+"1676" [label = <(ALOGI_IF,ALOGI_IF(disableBlurs, &quot;Disabling blur effects, user preference.&quot;))<SUB>770</SUB>> ]
+"1638" [label = <(atof,atof(value))<SUB>757</SUB>> ]
+"1650" [label = <(&lt;operator&gt;.cast,static_cast&lt;DisplayColorSetting&gt;(atoi(value)))<SUB>762</SUB>> ]
+"1660" [label = <(&lt;operator&gt;.cast,static_cast&lt;ColorMode&gt;(atoi(value)))<SUB>765</SUB>> ]
+"1671" [label = <(atoi,atoi(value))<SUB>768</SUB>> ]
+"1651" [label = <(UNKNOWN,DisplayColorSetting,DisplayColorSetting)<SUB>762</SUB>> ]
+"1652" [label = <(atoi,atoi(value))<SUB>762</SUB>> ]
+"1661" [label = <(UNKNOWN,ColorMode,ColorMode)<SUB>765</SUB>> ]
+"1662" [label = <(atoi,atoi(value))<SUB>765</SUB>> ]
+"1626" [label = <(METHOD,readPersistentProperties)<SUB>751</SUB>> ]
+"1679" [label = <(METHOD_RETURN,void)<SUB>751</SUB>> ]
+  "1629" -> "1632" 
   "1632" -> "1638" 
-  "1638" -> "1645" 
-  "1642" -> "1648" 
-  "1648" -> "1655" 
-  "1653" -> "1657" 
-  "1657" -> "1660" 
-  "1660" -> "1663" 
-  "1622" -> "1620" 
-  "1634" -> "1632" 
-  "1644" -> "1642" 
-  "1655" -> "1653" 
-  "1635" -> "1636" 
-  "1636" -> "1634" 
-  "1645" -> "1646" 
-  "1646" -> "1644" 
-  "1610" -> "1613" 
+  "1636" -> "1640" 
+  "1640" -> "1641" 
+  "1641" -> "1644" 
+  "1644" -> "1651" 
+  "1648" -> "1654" 
+  "1654" -> "1661" 
+  "1658" -> "1664" 
+  "1664" -> "1671" 
+  "1669" -> "1673" 
+  "1673" -> "1676" 
+  "1676" -> "1679" 
+  "1638" -> "1636" 
+  "1650" -> "1648" 
+  "1660" -> "1658" 
+  "1671" -> "1669" 
+  "1651" -> "1652" 
+  "1652" -> "1650" 
+  "1661" -> "1662" 
+  "1662" -> "1660" 
+  "1626" -> "1629" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/870-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/870-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/870-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/870-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "String8" {  
-"20370" [label = <(METHOD,String8)> ]
-"20373" [label = <(METHOD_RETURN,ANY)> ]
-  "20370" -> "20373" 
+"20386" [label = <(METHOD,String8)> ]
+"20389" [label = <(METHOD_RETURN,ANY)> ]
+  "20386" -> "20389" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/871-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/871-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/871-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/871-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "locked" {  
-"20374" [label = <(METHOD,locked)> ]
-"20377" [label = <(METHOD_RETURN,ANY)> ]
-  "20374" -> "20377" 
+"20390" [label = <(METHOD,locked)> ]
+"20393" [label = <(METHOD_RETURN,ANY)> ]
+  "20390" -> "20393" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/872-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/872-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/872-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/872-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "it-&gt;second" {  
-"20378" [label = <(METHOD,it-&gt;second)> ]
-"20384" [label = <(METHOD_RETURN,ANY)> ]
-  "20378" -> "20384" 
+"20394" [label = <(METHOD,it-&gt;second)> ]
+"20400" [label = <(METHOD_RETURN,ANY)> ]
+  "20394" -> "20400" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/873-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/873-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/873-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/873-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpAllLocked" {  
-"20385" [label = <(METHOD,dumpAllLocked)> ]
-"20389" [label = <(METHOD_RETURN,ANY)> ]
-  "20385" -> "20389" 
+"20401" [label = <(METHOD,dumpAllLocked)> ]
+"20405" [label = <(METHOD_RETURN,ANY)> ]
+  "20401" -> "20405" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/874-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/874-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/874-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/874-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpProtoFromMainThread" {  
-"20390" [label = <(METHOD,dumpProtoFromMainThread)> ]
-"20392" [label = <(METHOD_RETURN,ANY)> ]
-  "20390" -> "20392" 
+"20406" [label = <(METHOD,dumpProtoFromMainThread)> ]
+"20408" [label = <(METHOD_RETURN,ANY)> ]
+  "20406" -> "20408" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/875-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/875-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/875-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/875-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "append" {  
-"20393" [label = <(METHOD,append)> ]
-"20397" [label = <(METHOD_RETURN,ANY)> ]
-  "20393" -> "20397" 
+"20409" [label = <(METHOD,append)> ]
+"20413" [label = <(METHOD_RETURN,ANY)> ]
+  "20409" -> "20413" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/876-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/876-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/876-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/876-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "SerializeAsString" {  
-"20398" [label = <(METHOD,SerializeAsString)> ]
-"20401" [label = <(METHOD_RETURN,ANY)> ]
-  "20398" -> "20401" 
+"20414" [label = <(METHOD,SerializeAsString)> ]
+"20417" [label = <(METHOD_RETURN,ANY)> ]
+  "20414" -> "20417" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/877-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/877-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/877-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/877-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "LayerProtoParser::generateLayerTree" {  
-"20402" [label = <(METHOD,LayerProtoParser::generateLayerTree)> ]
-"20406" [label = <(METHOD_RETURN,ANY)> ]
-  "20402" -> "20406" 
+"20418" [label = <(METHOD,LayerProtoParser::generateLayerTree)> ]
+"20422" [label = <(METHOD_RETURN,ANY)> ]
+  "20418" -> "20422" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/878-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/878-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/878-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/878-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "LayerProtoParser::layerTreeToString" {  
-"20407" [label = <(METHOD,LayerProtoParser::layerTreeToString)> ]
-"20411" [label = <(METHOD_RETURN,ANY)> ]
-  "20407" -> "20411" 
+"20423" [label = <(METHOD,LayerProtoParser::layerTreeToString)> ]
+"20427" [label = <(METHOD_RETURN,ANY)> ]
+  "20423" -> "20427" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/879-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/879-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/879-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/879-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpOffscreenLayers" {  
-"20412" [label = <(METHOD,dumpOffscreenLayers)> ]
-"20415" [label = <(METHOD_RETURN,ANY)> ]
-  "20412" -> "20415" 
+"20428" [label = <(METHOD,dumpOffscreenLayers)> ]
+"20431" [label = <(METHOD_RETURN,ANY)> ]
+  "20428" -> "20431" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/88-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/88-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/88-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/88-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,22 +1,22 @@
 digraph "startBootAnim" {  
-"1667" [label = <(Start,mStartPropertySetThread-&gt;Start())<SUB>777</SUB>> ]
-"1668" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;Start)<SUB>777</SUB>> ]
-"1672" [label = <(&lt;operator&gt;.notEquals,mStartPropertySetThread-&gt;join() != NO_ERROR)<SUB>779</SUB>> ]
-"1670" [label = <(FIELD_IDENTIFIER,Start,Start)<SUB>777</SUB>> ]
-"1673" [label = <(join,mStartPropertySetThread-&gt;join())<SUB>779</SUB>> ]
-"1679" [label = <(ALOGE,ALOGE(&quot;Join StartPropertySetThread failed!&quot;))<SUB>780</SUB>> ]
-"1674" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;join)<SUB>779</SUB>> ]
-"1676" [label = <(FIELD_IDENTIFIER,join,join)<SUB>779</SUB>> ]
-"1665" [label = <(METHOD,startBootAnim)<SUB>774</SUB>> ]
-"1681" [label = <(METHOD_RETURN,void)<SUB>774</SUB>> ]
-  "1667" -> "1676" 
-  "1668" -> "1667" 
-  "1672" -> "1681" 
-  "1672" -> "1679" 
-  "1670" -> "1668" 
-  "1673" -> "1672" 
-  "1679" -> "1681" 
-  "1674" -> "1673" 
-  "1676" -> "1674" 
-  "1665" -> "1670" 
+"1683" [label = <(Start,mStartPropertySetThread-&gt;Start())<SUB>776</SUB>> ]
+"1684" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;Start)<SUB>776</SUB>> ]
+"1688" [label = <(&lt;operator&gt;.notEquals,mStartPropertySetThread-&gt;join() != NO_ERROR)<SUB>778</SUB>> ]
+"1686" [label = <(FIELD_IDENTIFIER,Start,Start)<SUB>776</SUB>> ]
+"1689" [label = <(join,mStartPropertySetThread-&gt;join())<SUB>778</SUB>> ]
+"1695" [label = <(ALOGE,ALOGE(&quot;Join StartPropertySetThread failed!&quot;))<SUB>779</SUB>> ]
+"1690" [label = <(&lt;operator&gt;.indirectFieldAccess,mStartPropertySetThread-&gt;join)<SUB>778</SUB>> ]
+"1692" [label = <(FIELD_IDENTIFIER,join,join)<SUB>778</SUB>> ]
+"1681" [label = <(METHOD,startBootAnim)<SUB>773</SUB>> ]
+"1697" [label = <(METHOD_RETURN,void)<SUB>773</SUB>> ]
+  "1683" -> "1692" 
+  "1684" -> "1683" 
+  "1688" -> "1697" 
+  "1688" -> "1695" 
+  "1686" -> "1684" 
+  "1689" -> "1688" 
+  "1695" -> "1697" 
+  "1690" -> "1689" 
+  "1692" -> "1690" 
+  "1681" -> "1686" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/880-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/880-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/880-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/880-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "write" {  
-"20416" [label = <(METHOD,write)> ]
-"20421" [label = <(METHOD_RETURN,ANY)> ]
-  "20416" -> "20421" 
+"20432" [label = <(METHOD,write)> ]
+"20437" [label = <(METHOD_RETURN,ANY)> ]
+  "20432" -> "20437" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/881-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/881-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/881-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/881-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "writeToFileAsync" {  
-"20422" [label = <(METHOD,writeToFileAsync)> ]
-"20425" [label = <(METHOD_RETURN,ANY)> ]
-  "20422" -> "20425" 
+"20438" [label = <(METHOD,writeToFileAsync)> ]
+"20441" [label = <(METHOD_RETURN,ANY)> ]
+  "20438" -> "20441" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/882-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/882-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/882-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/882-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "doDump" {  
-"20426" [label = <(METHOD,doDump)> ]
-"20431" [label = <(METHOD_RETURN,ANY)> ]
-  "20426" -> "20431" 
+"20442" [label = <(METHOD,doDump)> ]
+"20447" [label = <(METHOD_RETURN,ANY)> ]
+  "20442" -> "20447" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/883-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/883-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/883-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/883-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "DumpArgs" {  
-"20432" [label = <(METHOD,DumpArgs)> ]
-"20434" [label = <(METHOD_RETURN,ANY)> ]
-  "20432" -> "20434" 
+"20448" [label = <(METHOD,DumpArgs)> ]
+"20450" [label = <(METHOD_RETURN,ANY)> ]
+  "20448" -> "20450" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/884-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/884-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/884-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/884-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpStats" {  
-"20435" [label = <(METHOD,dumpStats)> ]
-"20439" [label = <(METHOD_RETURN,ANY)> ]
-  "20435" -> "20439" 
+"20451" [label = <(METHOD,dumpStats)> ]
+"20455" [label = <(METHOD_RETURN,ANY)> ]
+  "20451" -> "20455" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/885-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/885-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/885-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/885-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "parseArgs" {  
-"20440" [label = <(METHOD,parseArgs)> ]
-"20446" [label = <(METHOD_RETURN,ANY)> ]
-  "20440" -> "20446" 
+"20456" [label = <(METHOD,parseArgs)> ]
+"20462" [label = <(METHOD_RETURN,ANY)> ]
+  "20456" -> "20462" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/886-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/886-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/886-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/886-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "logAndResetStats" {  
-"20447" [label = <(METHOD,logAndResetStats)> ]
-"20451" [label = <(METHOD_RETURN,ANY)> ]
-  "20447" -> "20451" 
+"20463" [label = <(METHOD,logAndResetStats)> ]
+"20467" [label = <(METHOD_RETURN,ANY)> ]
+  "20463" -> "20467" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/887-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/887-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/887-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/887-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "isLayerTripleBufferingDisabled" {  
-"20452" [label = <(METHOD,isLayerTripleBufferingDisabled)> ]
-"20454" [label = <(METHOD_RETURN,ANY)> ]
-  "20452" -> "20454" 
+"20468" [label = <(METHOD,isLayerTripleBufferingDisabled)> ]
+"20470" [label = <(METHOD_RETURN,ANY)> ]
+  "20468" -> "20470" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/888-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/888-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/888-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/888-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dump" {  
-"20455" [label = <(METHOD,dump)> ]
-"20459" [label = <(METHOD_RETURN,ANY)> ]
-  "20455" -> "20459" 
+"20471" [label = <(METHOD,dump)> ]
+"20475" [label = <(METHOD_RETURN,ANY)> ]
+  "20471" -> "20475" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/889-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/889-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/889-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/889-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayManagerPolicy" {  
-"20460" [label = <(METHOD,getDisplayManagerPolicy)> ]
-"20463" [label = <(METHOD_RETURN,ANY)> ]
-  "20460" -> "20463" 
+"20476" [label = <(METHOD,getDisplayManagerPolicy)> ]
+"20479" [label = <(METHOD_RETURN,ANY)> ]
+  "20476" -> "20479" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/89-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/89-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/89-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/89-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,15 +1,15 @@
 digraph "getMaxTextureSize" {  
-"1685" [label = <(RETURN,return getRenderEngine().getMaxTextureSize();,return getRenderEngine().getMaxTextureSize();)<SUB>785</SUB>> ]
-"1686" [label = <(getMaxTextureSize,getRenderEngine().getMaxTextureSize())<SUB>785</SUB>> ]
-"1687" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().getMaxTextureSize)<SUB>785</SUB>> ]
-"1688" [label = <(getRenderEngine,getRenderEngine())<SUB>785</SUB>> ]
-"1689" [label = <(FIELD_IDENTIFIER,getMaxTextureSize,getMaxTextureSize)<SUB>785</SUB>> ]
-"1683" [label = <(METHOD,getMaxTextureSize)<SUB>784</SUB>> ]
-"1690" [label = <(METHOD_RETURN,size_t)<SUB>784</SUB>> ]
-  "1685" -> "1690" 
-  "1686" -> "1685" 
-  "1687" -> "1686" 
-  "1688" -> "1689" 
-  "1689" -> "1687" 
-  "1683" -> "1688" 
+"1701" [label = <(RETURN,return getRenderEngine().getMaxTextureSize();,return getRenderEngine().getMaxTextureSize();)<SUB>784</SUB>> ]
+"1702" [label = <(getMaxTextureSize,getRenderEngine().getMaxTextureSize())<SUB>784</SUB>> ]
+"1703" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().getMaxTextureSize)<SUB>784</SUB>> ]
+"1704" [label = <(getRenderEngine,getRenderEngine())<SUB>784</SUB>> ]
+"1705" [label = <(FIELD_IDENTIFIER,getMaxTextureSize,getMaxTextureSize)<SUB>784</SUB>> ]
+"1699" [label = <(METHOD,getMaxTextureSize)<SUB>783</SUB>> ]
+"1706" [label = <(METHOD_RETURN,size_t)<SUB>783</SUB>> ]
+  "1701" -> "1706" 
+  "1702" -> "1701" 
+  "1703" -> "1702" 
+  "1704" -> "1705" 
+  "1705" -> "1703" 
+  "1699" -> "1704" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/890-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/890-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/890-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/890-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCurrentPolicy" {  
-"20464" [label = <(METHOD,getCurrentPolicy)> ]
-"20467" [label = <(METHOD_RETURN,ANY)> ]
-  "20464" -> "20467" 
+"20480" [label = <(METHOD,getCurrentPolicy)> ]
+"20483" [label = <(METHOD_RETURN,ANY)> ]
+  "20480" -> "20483" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/891-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/891-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/891-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/891-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getPrimaryDispSync" {  
-"20468" [label = <(METHOD,getPrimaryDispSync)> ]
-"20471" [label = <(METHOD_RETURN,ANY)> ]
-  "20468" -> "20471" 
+"20484" [label = <(METHOD,getPrimaryDispSync)> ]
+"20487" [label = <(METHOD_RETURN,ANY)> ]
+  "20484" -> "20487" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/892-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/892-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/892-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/892-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpFrameEvents" {  
-"20472" [label = <(METHOD,dumpFrameEvents)> ]
-"20476" [label = <(METHOD_RETURN,ANY)> ]
-  "20472" -> "20476" 
+"20488" [label = <(METHOD,dumpFrameEvents)> ]
+"20492" [label = <(METHOD_RETURN,ANY)> ]
+  "20488" -> "20492" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/893-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/893-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/893-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/893-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "isEdid" {  
-"20477" [label = <(METHOD,isEdid)> ]
-"20480" [label = <(METHOD_RETURN,ANY)> ]
-  "20477" -> "20480" 
+"20493" [label = <(METHOD,isEdid)> ]
+"20496" [label = <(METHOD_RETURN,ANY)> ]
+  "20493" -> "20496" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/894-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/894-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/894-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/894-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "parseEdid" {  
-"20481" [label = <(METHOD,parseEdid)> ]
-"20484" [label = <(METHOD_RETURN,ANY)> ]
-  "20481" -> "20484" 
+"20497" [label = <(METHOD,parseEdid)> ]
+"20500" [label = <(METHOD_RETURN,ANY)> ]
+  "20497" -> "20500" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/895-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/895-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/895-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/895-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "length" {  
-"20485" [label = <(METHOD,length)> ]
-"20488" [label = <(METHOD_RETURN,ANY)> ]
-  "20485" -> "20488" 
+"20501" [label = <(METHOD,length)> ]
+"20504" [label = <(METHOD_RETURN,ANY)> ]
+  "20501" -> "20504" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/896-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/896-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/896-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/896-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "base::ParseUint" {  
-"20489" [label = <(METHOD,base::ParseUint)> ]
-"20494" [label = <(METHOD_RETURN,ANY)> ]
-  "20489" -> "20494" 
+"20505" [label = <(METHOD,base::ParseUint)> ]
+"20510" [label = <(METHOD_RETURN,ANY)> ]
+  "20505" -> "20510" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/897-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/897-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/897-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/897-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "decodeDisplayColorSetting" {  
-"20495" [label = <(METHOD,decodeDisplayColorSetting)> ]
-"20498" [label = <(METHOD_RETURN,ANY)> ]
-  "20495" -> "20498" 
+"20511" [label = <(METHOD,decodeDisplayColorSetting)> ]
+"20514" [label = <(METHOD_RETURN,ANY)> ]
+  "20511" -> "20514" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/898-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/898-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/898-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/898-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "decodeColorMode" {  
-"20499" [label = <(METHOD,decodeColorMode)> ]
-"20502" [label = <(METHOD_RETURN,ANY)> ]
-  "20499" -> "20502" 
+"20515" [label = <(METHOD,decodeColorMode)> ]
+"20518" [label = <(METHOD_RETURN,ANY)> ]
+  "20515" -> "20518" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/899-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/899-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/899-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/899-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "writeToProto" {  
-"20503" [label = <(METHOD,writeToProto)> ]
-"20509" [label = <(METHOD_RETURN,ANY)> ]
-  "20503" -> "20509" 
+"20519" [label = <(METHOD,writeToProto)> ]
+"20525" [label = <(METHOD_RETURN,ANY)> ]
+  "20519" -> "20525" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/9-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/9-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/9-cfg.dot	2023-06-07 19:33:00.207399001 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/9-cfg.dot	2023-06-07 19:33:06.437398426 +0330
@@ -1,5 +1,5 @@
 digraph "anonymous_lambda_16" {  
-"42" [label = <(METHOD,anonymous_lambda_16)<SUB>1997</SUB>> ]
-"44" [label = <(METHOD_RETURN,ANY)<SUB>1997</SUB>> ]
+"42" [label = <(METHOD,anonymous_lambda_16)<SUB>1996</SUB>> ]
+"44" [label = <(METHOD_RETURN,ANY)<SUB>1996</SUB>> ]
   "42" -> "44" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/90-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/90-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/90-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/90-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,15 +1,15 @@
 digraph "getMaxViewportDims" {  
-"1694" [label = <(RETURN,return getRenderEngine().getMaxViewportDims();,return getRenderEngine().getMaxViewportDims();)<SUB>789</SUB>> ]
-"1695" [label = <(getMaxViewportDims,getRenderEngine().getMaxViewportDims())<SUB>789</SUB>> ]
-"1696" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().getMaxViewportDims)<SUB>789</SUB>> ]
-"1697" [label = <(getRenderEngine,getRenderEngine())<SUB>789</SUB>> ]
-"1698" [label = <(FIELD_IDENTIFIER,getMaxViewportDims,getMaxViewportDims)<SUB>789</SUB>> ]
-"1692" [label = <(METHOD,getMaxViewportDims)<SUB>788</SUB>> ]
-"1699" [label = <(METHOD_RETURN,size_t)<SUB>788</SUB>> ]
-  "1694" -> "1699" 
-  "1695" -> "1694" 
-  "1696" -> "1695" 
-  "1697" -> "1698" 
-  "1698" -> "1696" 
-  "1692" -> "1697" 
+"1710" [label = <(RETURN,return getRenderEngine().getMaxViewportDims();,return getRenderEngine().getMaxViewportDims();)<SUB>788</SUB>> ]
+"1711" [label = <(getMaxViewportDims,getRenderEngine().getMaxViewportDims())<SUB>788</SUB>> ]
+"1712" [label = <(&lt;operator&gt;.fieldAccess,getRenderEngine().getMaxViewportDims)<SUB>788</SUB>> ]
+"1713" [label = <(getRenderEngine,getRenderEngine())<SUB>788</SUB>> ]
+"1714" [label = <(FIELD_IDENTIFIER,getMaxViewportDims,getMaxViewportDims)<SUB>788</SUB>> ]
+"1708" [label = <(METHOD,getMaxViewportDims)<SUB>787</SUB>> ]
+"1715" [label = <(METHOD_RETURN,size_t)<SUB>787</SUB>> ]
+  "1710" -> "1715" 
+  "1711" -> "1710" 
+  "1712" -> "1711" 
+  "1713" -> "1714" 
+  "1714" -> "1712" 
+  "1708" -> "1713" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/900-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/900-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/900-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/900-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "add_layers" {  
-"20510" [label = <(METHOD,add_layers)> ]
-"20513" [label = <(METHOD_RETURN,ANY)> ]
-  "20510" -> "20513" 
+"20526" [label = <(METHOD,add_layers)> ]
+"20529" [label = <(METHOD_RETURN,ANY)> ]
+  "20526" -> "20529" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/901-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/901-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/901-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/901-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "set_id" {  
-"20514" [label = <(METHOD,set_id)> ]
-"20518" [label = <(METHOD_RETURN,ANY)> ]
-  "20514" -> "20518" 
+"20530" [label = <(METHOD,set_id)> ]
+"20534" [label = <(METHOD_RETURN,ANY)> ]
+  "20530" -> "20534" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/902-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/902-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/902-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/902-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "set_name" {  
-"20519" [label = <(METHOD,set_name)> ]
-"20523" [label = <(METHOD_RETURN,ANY)> ]
-  "20519" -> "20523" 
+"20535" [label = <(METHOD,set_name)> ]
+"20539" [label = <(METHOD_RETURN,ANY)> ]
+  "20535" -> "20539" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/903-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/903-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/903-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/903-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "set_parent" {  
-"20524" [label = <(METHOD,set_parent)> ]
-"20528" [label = <(METHOD_RETURN,ANY)> ]
-  "20524" -> "20528" 
+"20540" [label = <(METHOD,set_parent)> ]
+"20544" [label = <(METHOD_RETURN,ANY)> ]
+  "20540" -> "20544" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/904-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/904-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/904-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/904-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "add_children" {  
-"20529" [label = <(METHOD,add_children)> ]
-"20533" [label = <(METHOD_RETURN,ANY)> ]
-  "20529" -> "20533" 
+"20545" [label = <(METHOD,add_children)> ]
+"20549" [label = <(METHOD_RETURN,ANY)> ]
+  "20545" -> "20549" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/905-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/905-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/905-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/905-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "colorizer" {  
-"20534" [label = <(METHOD,colorizer)> ]
-"20537" [label = <(METHOD_RETURN,ANY)> ]
-  "20534" -> "20537" 
+"20550" [label = <(METHOD,colorizer)> ]
+"20553" [label = <(METHOD_RETURN,ANY)> ]
+  "20550" -> "20553" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/906-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/906-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/906-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/906-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "inTransaction" {  
-"20538" [label = <(METHOD,inTransaction)> ]
-"20541" [label = <(METHOD_RETURN,ANY)> ]
-  "20538" -> "20541" 
+"20554" [label = <(METHOD,inTransaction)> ]
+"20557" [label = <(METHOD_RETURN,ANY)> ]
+  "20554" -> "20557" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/907-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/907-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/907-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/907-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "bold" {  
-"20542" [label = <(METHOD,bold)> ]
-"20546" [label = <(METHOD_RETURN,ANY)> ]
-  "20542" -> "20546" 
+"20558" [label = <(METHOD,bold)> ]
+"20562" [label = <(METHOD_RETURN,ANY)> ]
+  "20558" -> "20562" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/908-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/908-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/908-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/908-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "reset" {  
-"20547" [label = <(METHOD,reset)> ]
-"20551" [label = <(METHOD_RETURN,ANY)> ]
-  "20547" -> "20551" 
+"20563" [label = <(METHOD,reset)> ]
+"20567" [label = <(METHOD_RETURN,ANY)> ]
+  "20563" -> "20567" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/909-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/909-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/909-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/909-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "appendSfConfigString" {  
-"20552" [label = <(METHOD,appendSfConfigString)> ]
-"20555" [label = <(METHOD_RETURN,ANY)> ]
-  "20552" -> "20555" 
+"20568" [label = <(METHOD,appendSfConfigString)> ]
+"20571" [label = <(METHOD_RETURN,ANY)> ]
+  "20568" -> "20571" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/91-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/91-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/91-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/91-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,11 +1,11 @@
 digraph "authenticateSurfaceTexture" {  
-"1705" [label = <(_l,_l(mStateLock))<SUB>796</SUB>> ]
-"1707" [label = <(RETURN,return authenticateSurfaceTextureLocked(bufferProducer);,return authenticateSurfaceTextureLocked(bufferProducer);)<SUB>797</SUB>> ]
-"1708" [label = <(authenticateSurfaceTextureLocked,authenticateSurfaceTextureLocked(bufferProducer))<SUB>797</SUB>> ]
-"1701" [label = <(METHOD,authenticateSurfaceTexture)<SUB>794</SUB>> ]
-"1710" [label = <(METHOD_RETURN,bool)<SUB>794</SUB>> ]
-  "1705" -> "1708" 
-  "1707" -> "1710" 
-  "1708" -> "1707" 
-  "1701" -> "1705" 
+"1721" [label = <(_l,_l(mStateLock))<SUB>795</SUB>> ]
+"1723" [label = <(RETURN,return authenticateSurfaceTextureLocked(bufferProducer);,return authenticateSurfaceTextureLocked(bufferProducer);)<SUB>796</SUB>> ]
+"1724" [label = <(authenticateSurfaceTextureLocked,authenticateSurfaceTextureLocked(bufferProducer))<SUB>796</SUB>> ]
+"1717" [label = <(METHOD,authenticateSurfaceTexture)<SUB>793</SUB>> ]
+"1726" [label = <(METHOD_RETURN,bool)<SUB>793</SUB>> ]
+  "1721" -> "1724" 
+  "1723" -> "1726" 
+  "1724" -> "1723" 
+  "1717" -> "1721" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/910-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/910-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/910-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/910-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "appendUiConfigString" {  
-"20556" [label = <(METHOD,appendUiConfigString)> ]
-"20559" [label = <(METHOD_RETURN,ANY)> ]
-  "20556" -> "20559" 
+"20572" [label = <(METHOD,appendUiConfigString)> ]
+"20575" [label = <(METHOD_RETURN,ANY)> ]
+  "20572" -> "20575" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/911-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/911-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/911-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/911-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "appendGuiConfigString" {  
-"20560" [label = <(METHOD,appendGuiConfigString)> ]
-"20563" [label = <(METHOD_RETURN,ANY)> ]
-  "20560" -> "20563" 
+"20576" [label = <(METHOD,appendGuiConfigString)> ]
+"20579" [label = <(METHOD_RETURN,ANY)> ]
+  "20576" -> "20579" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/912-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/912-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/912-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/912-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpDisplayIdentificationData" {  
-"20564" [label = <(METHOD,dumpDisplayIdentificationData)> ]
-"20567" [label = <(METHOD_RETURN,ANY)> ]
-  "20564" -> "20567" 
+"20580" [label = <(METHOD,dumpDisplayIdentificationData)> ]
+"20583" [label = <(METHOD_RETURN,ANY)> ]
+  "20580" -> "20583" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/913-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/913-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/913-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/913-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpWideColorInfo" {  
-"20568" [label = <(METHOD,dumpWideColorInfo)> ]
-"20571" [label = <(METHOD_RETURN,ANY)> ]
-  "20568" -> "20571" 
+"20584" [label = <(METHOD,dumpWideColorInfo)> ]
+"20587" [label = <(METHOD_RETURN,ANY)> ]
+  "20584" -> "20587" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/914-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/914-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/914-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/914-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "toString" {  
-"20572" [label = <(METHOD,toString)> ]
-"20575" [label = <(METHOD_RETURN,ANY)> ]
-  "20572" -> "20575" 
+"20588" [label = <(METHOD,toString)> ]
+"20591" [label = <(METHOD_RETURN,ANY)> ]
+  "20588" -> "20591" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/915-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/915-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/915-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/915-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "SyncFeatures::getInstance" {  
-"20576" [label = <(METHOD,SyncFeatures::getInstance)> ]
-"20579" [label = <(METHOD_RETURN,ANY)> ]
-  "20576" -> "20579" 
+"20592" [label = <(METHOD,SyncFeatures::getInstance)> ]
+"20595" [label = <(METHOD_RETURN,ANY)> ]
+  "20592" -> "20595" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/916-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/916-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/916-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/916-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpVSync" {  
-"20580" [label = <(METHOD,dumpVSync)> ]
-"20583" [label = <(METHOD_RETURN,ANY)> ]
-  "20580" -> "20583" 
+"20596" [label = <(METHOD,dumpVSync)> ]
+"20599" [label = <(METHOD_RETURN,ANY)> ]
+  "20596" -> "20599" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/917-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/917-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/917-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/917-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpStaticScreenStats" {  
-"20584" [label = <(METHOD,dumpStaticScreenStats)> ]
-"20587" [label = <(METHOD_RETURN,ANY)> ]
-  "20584" -> "20587" 
+"20600" [label = <(METHOD,dumpStaticScreenStats)> ]
+"20603" [label = <(METHOD_RETURN,ANY)> ]
+  "20600" -> "20603" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/918-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/918-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/918-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/918-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dumpBufferingStats" {  
-"20588" [label = <(METHOD,dumpBufferingStats)> ]
-"20591" [label = <(METHOD_RETURN,ANY)> ]
-  "20588" -> "20591" 
+"20604" [label = <(METHOD,dumpBufferingStats)> ]
+"20607" [label = <(METHOD_RETURN,ANY)> ]
+  "20604" -> "20607" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/919-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/919-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/919-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/919-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "DebugEGLImageTracker::getInstance" {  
-"20592" [label = <(METHOD,DebugEGLImageTracker::getInstance)> ]
-"20595" [label = <(METHOD_RETURN,ANY)> ]
-  "20592" -> "20595" 
+"20608" [label = <(METHOD,DebugEGLImageTracker::getInstance)> ]
+"20611" [label = <(METHOD_RETURN,ANY)> ]
+  "20608" -> "20611" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/92-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/92-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/92-cfg.dot	2023-06-07 19:33:00.297398990 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/92-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,33 +1,33 @@
 digraph "authenticateSurfaceTextureLocked" {  
-"1715" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; surfaceTextureBinder(IInterface::asBinder(bufferProducer)))<SUB>802</SUB>> ]
-"1725" [label = <(RETURN,return mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0;,return mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0;)<SUB>803</SUB>> ]
-"1716" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>802</SUB>> ]
-"1719" [label = <(surfaceTextureBinder,surfaceTextureBinder(IInterface::asBinder(bufferProducer)))<SUB>802</SUB>> ]
-"1726" [label = <(&lt;operator&gt;.greaterThan,mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0)<SUB>803</SUB>> ]
-"1720" [label = <(IInterface::asBinder,IInterface::asBinder(bufferProducer))<SUB>802</SUB>> ]
-"1727" [label = <(count,mGraphicBufferProducerList.count(surfaceTextureBinder.get()))<SUB>803</SUB>> ]
-"1721" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>802</SUB>> ]
-"1728" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.count)<SUB>803</SUB>> ]
-"1731" [label = <(get,surfaceTextureBinder.get())<SUB>803</SUB>> ]
-"1723" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>802</SUB>> ]
-"1730" [label = <(FIELD_IDENTIFIER,count,count)<SUB>803</SUB>> ]
-"1732" [label = <(&lt;operator&gt;.fieldAccess,surfaceTextureBinder.get)<SUB>803</SUB>> ]
-"1734" [label = <(FIELD_IDENTIFIER,get,get)<SUB>803</SUB>> ]
-"1712" [label = <(METHOD,authenticateSurfaceTextureLocked)<SUB>800</SUB>> ]
-"1736" [label = <(METHOD_RETURN,bool)<SUB>800</SUB>> ]
-  "1715" -> "1730" 
-  "1725" -> "1736" 
-  "1716" -> "1723" 
-  "1719" -> "1715" 
-  "1726" -> "1725" 
-  "1720" -> "1719" 
-  "1727" -> "1726" 
-  "1721" -> "1720" 
-  "1728" -> "1734" 
-  "1731" -> "1727" 
-  "1723" -> "1721" 
-  "1730" -> "1728" 
-  "1732" -> "1731" 
-  "1734" -> "1732" 
-  "1712" -> "1716" 
+"1731" [label = <(&lt;operator&gt;.greaterThan,sp&lt;IBinder&gt; surfaceTextureBinder(IInterface::asBinder(bufferProducer)))<SUB>801</SUB>> ]
+"1741" [label = <(RETURN,return mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0;,return mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0;)<SUB>802</SUB>> ]
+"1732" [label = <(&lt;operator&gt;.lessThan,sp&lt;IBinder)<SUB>801</SUB>> ]
+"1735" [label = <(surfaceTextureBinder,surfaceTextureBinder(IInterface::asBinder(bufferProducer)))<SUB>801</SUB>> ]
+"1742" [label = <(&lt;operator&gt;.greaterThan,mGraphicBufferProducerList.count(surfaceTextureBinder.get()) &gt; 0)<SUB>802</SUB>> ]
+"1736" [label = <(IInterface::asBinder,IInterface::asBinder(bufferProducer))<SUB>801</SUB>> ]
+"1743" [label = <(count,mGraphicBufferProducerList.count(surfaceTextureBinder.get()))<SUB>802</SUB>> ]
+"1737" [label = <(&lt;operator&gt;.fieldAccess,IInterface::asBinder)<SUB>801</SUB>> ]
+"1744" [label = <(&lt;operator&gt;.fieldAccess,mGraphicBufferProducerList.count)<SUB>802</SUB>> ]
+"1747" [label = <(get,surfaceTextureBinder.get())<SUB>802</SUB>> ]
+"1739" [label = <(FIELD_IDENTIFIER,asBinder,asBinder)<SUB>801</SUB>> ]
+"1746" [label = <(FIELD_IDENTIFIER,count,count)<SUB>802</SUB>> ]
+"1748" [label = <(&lt;operator&gt;.fieldAccess,surfaceTextureBinder.get)<SUB>802</SUB>> ]
+"1750" [label = <(FIELD_IDENTIFIER,get,get)<SUB>802</SUB>> ]
+"1728" [label = <(METHOD,authenticateSurfaceTextureLocked)<SUB>799</SUB>> ]
+"1752" [label = <(METHOD_RETURN,bool)<SUB>799</SUB>> ]
+  "1731" -> "1746" 
+  "1741" -> "1752" 
+  "1732" -> "1739" 
+  "1735" -> "1731" 
+  "1742" -> "1741" 
+  "1736" -> "1735" 
+  "1743" -> "1742" 
+  "1737" -> "1736" 
+  "1744" -> "1750" 
+  "1747" -> "1743" 
+  "1739" -> "1737" 
+  "1746" -> "1744" 
+  "1748" -> "1747" 
+  "1750" -> "1748" 
+  "1728" -> "1732" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/920-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/920-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/920-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/920-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "Layer::miniDumpHeader" {  
-"20596" [label = <(METHOD,Layer::miniDumpHeader)> ]
-"20600" [label = <(METHOD_RETURN,ANY)> ]
-  "20596" -> "20600" 
+"20612" [label = <(METHOD,Layer::miniDumpHeader)> ]
+"20616" [label = <(METHOD_RETURN,ANY)> ]
+  "20612" -> "20616" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/921-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/921-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/921-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/921-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "alloc" {  
-"20601" [label = <(METHOD,alloc)> ]
-"20604" [label = <(METHOD_RETURN,ANY)> ]
-  "20601" -> "20604" 
+"20617" [label = <(METHOD,alloc)> ]
+"20620" [label = <(METHOD_RETURN,ANY)> ]
+  "20617" -> "20620" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/922-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/922-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/922-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/922-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "Dump" {  
-"20605" [label = <(METHOD,Dump)> ]
-"20608" [label = <(METHOD_RETURN,ANY)> ]
-  "20605" -> "20608" 
+"20621" [label = <(METHOD,Dump)> ]
+"20624" [label = <(METHOD_RETURN,ANY)> ]
+  "20621" -> "20624" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/923-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/923-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/923-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/923-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "miniDump" {  
-"20609" [label = <(METHOD,miniDump)> ]
-"20612" [label = <(METHOD_RETURN,ANY)> ]
-  "20609" -> "20612" 
+"20625" [label = <(METHOD,miniDump)> ]
+"20628" [label = <(METHOD_RETURN,ANY)> ]
+  "20625" -> "20628" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/924-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/924-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/924-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/924-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "&lt;operator&gt;.assignmentMultiplication" {  
-"20613" [label = <(METHOD,&lt;operator&gt;.assignmentMultiplication)> ]
-"20617" [label = <(METHOD_RETURN,ANY)> ]
-  "20613" -> "20617" 
+"20629" [label = <(METHOD,&lt;operator&gt;.assignmentMultiplication)> ]
+"20633" [label = <(METHOD_RETURN,ANY)> ]
+  "20629" -> "20633" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/925-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/925-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/925-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/925-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "mat4" {  
-"20618" [label = <(METHOD,mat4)> ]
-"20620" [label = <(METHOD_RETURN,ANY)> ]
-  "20618" -> "20620" 
+"20634" [label = <(METHOD,mat4)> ]
+"20636" [label = <(METHOD_RETURN,ANY)> ]
+  "20634" -> "20636" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/926-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/926-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/926-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/926-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "vec4" {  
-"20621" [label = <(METHOD,vec4)> ]
-"20624" [label = <(METHOD_RETURN,ANY)> ]
-  "20621" -> "20624" 
+"20637" [label = <(METHOD,vec4)> ]
+"20640" [label = <(METHOD_RETURN,ANY)> ]
+  "20637" -> "20640" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/927-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/927-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/927-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/927-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "mDaltonizer" {  
-"20625" [label = <(METHOD,mDaltonizer)> ]
-"20627" [label = <(METHOD_RETURN,ANY)> ]
-  "20625" -> "20627" 
+"20641" [label = <(METHOD,mDaltonizer)> ]
+"20643" [label = <(METHOD_RETURN,ANY)> ]
+  "20641" -> "20643" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/928-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/928-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/928-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/928-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "CheckTransactCodeCredentials" {  
-"20628" [label = <(METHOD,CheckTransactCodeCredentials)> ]
-"20631" [label = <(METHOD_RETURN,ANY)> ]
-  "20628" -> "20631" 
+"20644" [label = <(METHOD,CheckTransactCodeCredentials)> ]
+"20647" [label = <(METHOD_RETURN,ANY)> ]
+  "20644" -> "20647" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/929-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/929-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/929-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/929-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "BnSurfaceComposer::onTransact" {  
-"20632" [label = <(METHOD,BnSurfaceComposer::onTransact)> ]
-"20639" [label = <(METHOD_RETURN,ANY)> ]
-  "20632" -> "20639" 
+"20648" [label = <(METHOD,BnSurfaceComposer::onTransact)> ]
+"20655" [label = <(METHOD_RETURN,ANY)> ]
+  "20648" -> "20655" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/93-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/93-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/93-cfg.dot	2023-06-07 19:33:00.307398991 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/93-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,50 +1,50 @@
 digraph "getSupportedFrameTimestamps" {  
-"1741" [label = <(&lt;operator&gt;.assignment,*outSupported = {\012 FrameEvent::REQUESTED_PRESENT,\012 FrameEvent::ACQUIRE,\012 FrameEvent::LATCH,\012 FrameEvent::FIRST_REFRESH_START,\012 FrameEvent::LAST_REFRESH_START,\012 FrameEvent::GPU_COMPOSITION_DONE,\012 FrameEvent::DEQUEUE_READY,\012 FrameEvent::RELEASE,\012 })<SUB>808</SUB>> ]
-"1745" [label = <(_l,_l(mStateLock,\012            std::this_thread::get_id() != mMainThreadId))<SUB>818</SUB>> ]
-"1774" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>823</SUB>> ]
-"1742" [label = <(&lt;operator&gt;.indirection,*outSupported)<SUB>808</SUB>> ]
-"1747" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>819</SUB>> ]
-"1756" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>820</SUB>> ]
-"1748" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>819</SUB>> ]
-"1757" [label = <(hasCapability,getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>820</SUB>> ]
-"1767" [label = <(push_back,outSupported-&gt;push_back(FrameEvent::DISPLAY_PRESENT))<SUB>821</SUB>> ]
-"1749" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>819</SUB>> ]
-"1758" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasCapability)<SUB>820</SUB>> ]
-"1761" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>820</SUB>> ]
-"1768" [label = <(&lt;operator&gt;.indirectFieldAccess,outSupported-&gt;push_back)<SUB>821</SUB>> ]
-"1771" [label = <(&lt;operator&gt;.fieldAccess,FrameEvent::DISPLAY_PRESENT)<SUB>821</SUB>> ]
-"1750" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>819</SUB>> ]
-"1753" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>819</SUB>> ]
-"1759" [label = <(getHwComposer,getHwComposer())<SUB>820</SUB>> ]
-"1760" [label = <(FIELD_IDENTIFIER,hasCapability,hasCapability)<SUB>820</SUB>> ]
-"1762" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability)<SUB>820</SUB>> ]
-"1765" [label = <(FIELD_IDENTIFIER,PRESENT_FENCE_IS_NOT_RELIABLE,PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>820</SUB>> ]
-"1770" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>821</SUB>> ]
-"1773" [label = <(FIELD_IDENTIFIER,DISPLAY_PRESENT,DISPLAY_PRESENT)<SUB>821</SUB>> ]
-"1738" [label = <(METHOD,getSupportedFrameTimestamps)<SUB>806</SUB>> ]
-"1776" [label = <(METHOD_RETURN,status_t)<SUB>806</SUB>> ]
-  "1741" -> "1750" 
-  "1745" -> "1759" 
-  "1774" -> "1776" 
-  "1742" -> "1741" 
-  "1747" -> "1745" 
-  "1756" -> "1770" 
-  "1756" -> "1774" 
-  "1748" -> "1747" 
-  "1757" -> "1756" 
-  "1767" -> "1774" 
-  "1749" -> "1748" 
-  "1758" -> "1762" 
-  "1761" -> "1757" 
-  "1768" -> "1773" 
-  "1771" -> "1767" 
-  "1750" -> "1753" 
-  "1753" -> "1749" 
-  "1759" -> "1760" 
-  "1760" -> "1758" 
-  "1762" -> "1765" 
-  "1765" -> "1761" 
-  "1770" -> "1768" 
-  "1773" -> "1771" 
-  "1738" -> "1742" 
+"1757" [label = <(&lt;operator&gt;.assignment,*outSupported = {\012 FrameEvent::REQUESTED_PRESENT,\012 FrameEvent::ACQUIRE,\012 FrameEvent::LATCH,\012 FrameEvent::FIRST_REFRESH_START,\012 FrameEvent::LAST_REFRESH_START,\012 FrameEvent::GPU_COMPOSITION_DONE,\012 FrameEvent::DEQUEUE_READY,\012 FrameEvent::RELEASE,\012 })<SUB>807</SUB>> ]
+"1761" [label = <(_l,_l(mStateLock,\012            std::this_thread::get_id() != mMainThreadId))<SUB>817</SUB>> ]
+"1790" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>822</SUB>> ]
+"1758" [label = <(&lt;operator&gt;.indirection,*outSupported)<SUB>807</SUB>> ]
+"1763" [label = <(&lt;operator&gt;.notEquals,std::this_thread::get_id() != mMainThreadId)<SUB>818</SUB>> ]
+"1772" [label = <(&lt;operator&gt;.logicalNot,!getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>819</SUB>> ]
+"1764" [label = <(std::this_thread::get_id,std::this_thread::get_id())<SUB>818</SUB>> ]
+"1773" [label = <(hasCapability,getHwComposer().hasCapability(hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE))<SUB>819</SUB>> ]
+"1783" [label = <(push_back,outSupported-&gt;push_back(FrameEvent::DISPLAY_PRESENT))<SUB>820</SUB>> ]
+"1765" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread::get_id)<SUB>818</SUB>> ]
+"1774" [label = <(&lt;operator&gt;.fieldAccess,getHwComposer().hasCapability)<SUB>819</SUB>> ]
+"1777" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability::PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>819</SUB>> ]
+"1784" [label = <(&lt;operator&gt;.indirectFieldAccess,outSupported-&gt;push_back)<SUB>820</SUB>> ]
+"1787" [label = <(&lt;operator&gt;.fieldAccess,FrameEvent::DISPLAY_PRESENT)<SUB>820</SUB>> ]
+"1766" [label = <(&lt;operator&gt;.fieldAccess,std::this_thread)<SUB>818</SUB>> ]
+"1769" [label = <(FIELD_IDENTIFIER,get_id,get_id)<SUB>818</SUB>> ]
+"1775" [label = <(getHwComposer,getHwComposer())<SUB>819</SUB>> ]
+"1776" [label = <(FIELD_IDENTIFIER,hasCapability,hasCapability)<SUB>819</SUB>> ]
+"1778" [label = <(&lt;operator&gt;.fieldAccess,hal::Capability)<SUB>819</SUB>> ]
+"1781" [label = <(FIELD_IDENTIFIER,PRESENT_FENCE_IS_NOT_RELIABLE,PRESENT_FENCE_IS_NOT_RELIABLE)<SUB>819</SUB>> ]
+"1786" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>820</SUB>> ]
+"1789" [label = <(FIELD_IDENTIFIER,DISPLAY_PRESENT,DISPLAY_PRESENT)<SUB>820</SUB>> ]
+"1754" [label = <(METHOD,getSupportedFrameTimestamps)<SUB>805</SUB>> ]
+"1792" [label = <(METHOD_RETURN,status_t)<SUB>805</SUB>> ]
+  "1757" -> "1766" 
+  "1761" -> "1775" 
+  "1790" -> "1792" 
+  "1758" -> "1757" 
+  "1763" -> "1761" 
+  "1772" -> "1786" 
+  "1772" -> "1790" 
+  "1764" -> "1763" 
+  "1773" -> "1772" 
+  "1783" -> "1790" 
+  "1765" -> "1764" 
+  "1774" -> "1778" 
+  "1777" -> "1773" 
+  "1784" -> "1789" 
+  "1787" -> "1783" 
+  "1766" -> "1769" 
+  "1769" -> "1765" 
+  "1775" -> "1776" 
+  "1776" -> "1774" 
+  "1778" -> "1781" 
+  "1781" -> "1777" 
+  "1786" -> "1784" 
+  "1789" -> "1787" 
+  "1754" -> "1758" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/930-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/930-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/930-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/930-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "CHECK_INTERFACE" {  
-"20640" [label = <(METHOD,CHECK_INTERFACE)> ]
-"20645" [label = <(METHOD_RETURN,ANY)> ]
-  "20640" -> "20645" 
+"20656" [label = <(METHOD,CHECK_INTERFACE)> ]
+"20661" [label = <(METHOD_RETURN,ANY)> ]
+  "20656" -> "20661" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/931-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/931-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/931-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/931-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "PermissionCache::checkCallingPermission" {  
-"20646" [label = <(METHOD,PermissionCache::checkCallingPermission)> ]
-"20650" [label = <(METHOD_RETURN,ANY)> ]
-  "20646" -> "20650" 
+"20662" [label = <(METHOD,PermissionCache::checkCallingPermission)> ]
+"20666" [label = <(METHOD_RETURN,ANY)> ]
+  "20662" -> "20666" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/932-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/932-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/932-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/932-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "readInt32" {  
-"20651" [label = <(METHOD,readInt32)> ]
-"20654" [label = <(METHOD_RETURN,ANY)> ]
-  "20651" -> "20654" 
+"20667" [label = <(METHOD,readInt32)> ]
+"20670" [label = <(METHOD_RETURN,ANY)> ]
+  "20667" -> "20670" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/933-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/933-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/933-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/933-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "writeInt32" {  
-"20655" [label = <(METHOD,writeInt32)> ]
-"20659" [label = <(METHOD_RETURN,ANY)> ]
-  "20655" -> "20659" 
+"20671" [label = <(METHOD,writeInt32)> ]
+"20675" [label = <(METHOD_RETURN,ANY)> ]
+  "20671" -> "20675" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/934-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/934-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/934-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/934-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDefaultDisplayDevice" {  
-"20660" [label = <(METHOD,getDefaultDisplayDevice)> ]
-"20662" [label = <(METHOD_RETURN,ANY)> ]
-  "20660" -> "20662" 
+"20676" [label = <(METHOD,getDefaultDisplayDevice)> ]
+"20678" [label = <(METHOD_RETURN,ANY)> ]
+  "20676" -> "20678" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/935-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/935-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/935-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/935-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setType" {  
-"20663" [label = <(METHOD,setType)> ]
-"20667" [label = <(METHOD_RETURN,ANY)> ]
-  "20663" -> "20667" 
+"20679" [label = <(METHOD,setType)> ]
+"20683" [label = <(METHOD_RETURN,ANY)> ]
+  "20679" -> "20683" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/936-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/936-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/936-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/936-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setMode" {  
-"20668" [label = <(METHOD,setMode)> ]
-"20672" [label = <(METHOD_RETURN,ANY)> ]
-  "20668" -> "20672" 
+"20684" [label = <(METHOD,setMode)> ]
+"20688" [label = <(METHOD_RETURN,ANY)> ]
+  "20684" -> "20688" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/937-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/937-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/937-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/937-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "readFloat" {  
-"20673" [label = <(METHOD,readFloat)> ]
-"20676" [label = <(METHOD_RETURN,ANY)> ]
-  "20673" -> "20676" 
+"20689" [label = <(METHOD,readFloat)> ]
+"20692" [label = <(METHOD_RETURN,ANY)> ]
+  "20689" -> "20692" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/938-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/938-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/938-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/938-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "any" {  
-"20677" [label = <(METHOD,any)> ]
-"20680" [label = <(METHOD_RETURN,ANY)> ]
-  "20677" -> "20680" 
+"20693" [label = <(METHOD,any)> ]
+"20696" [label = <(METHOD_RETURN,ANY)> ]
+  "20693" -> "20696" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/939-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/939-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/939-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/939-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "greaterThan" {  
-"20681" [label = <(METHOD,greaterThan)> ]
-"20685" [label = <(METHOD_RETURN,ANY)> ]
-  "20681" -> "20685" 
+"20697" [label = <(METHOD,greaterThan)> ]
+"20701" [label = <(METHOD_RETURN,ANY)> ]
+  "20697" -> "20701" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/94-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/94-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/94-cfg.dot	2023-06-07 19:33:00.307398991 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/94-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,87 +1,87 @@
 digraph "getDisplayState" {  
-"1792" [label = <(lock,lock(mStateLock))<SUB>831</SUB>> ]
-"1795" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>833</SUB>> ]
-"1805" [label = <(&lt;operator&gt;.assignment,state-&gt;layerStack = display-&gt;getLayerStack())<SUB>838</SUB>> ]
-"1813" [label = <(&lt;operator&gt;.assignment,state-&gt;orientation = display-&gt;getOrientation())<SUB>839</SUB>> ]
-"1822" [label = <(&lt;operator&gt;.assignment,viewport = display-&gt;getViewport())<SUB>841</SUB>> ]
-"1828" [label = <(&lt;operator&gt;.assignment,state-&gt;viewport = viewport.isValid() ? viewport.getSize() : display-&gt;getSize())<SUB>842</SUB>> ]
-"1845" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>844</SUB>> ]
-"1783" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !state)<SUB>827</SUB>> ]
-"1797" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>833</SUB>> ]
-"1800" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>834</SUB>> ]
-"1806" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;layerStack)<SUB>838</SUB>> ]
-"1809" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>838</SUB>> ]
-"1814" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;orientation)<SUB>839</SUB>> ]
-"1817" [label = <(getOrientation,display-&gt;getOrientation())<SUB>839</SUB>> ]
-"1824" [label = <(getViewport,display-&gt;getViewport())<SUB>841</SUB>> ]
-"1829" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;viewport)<SUB>842</SUB>> ]
-"1832" [label = <(&lt;operator&gt;.conditional,viewport.isValid() ? viewport.getSize() : display-&gt;getSize())<SUB>842</SUB>> ]
-"1784" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>827</SUB>> ]
-"1786" [label = <(&lt;operator&gt;.logicalNot,!state)<SUB>827</SUB>> ]
-"1789" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>828</SUB>> ]
-"1803" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>835</SUB>> ]
-"1808" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>838</SUB>> ]
-"1810" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>838</SUB>> ]
-"1816" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>839</SUB>> ]
-"1818" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>839</SUB>> ]
-"1825" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>841</SUB>> ]
-"1831" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>842</SUB>> ]
-"1833" [label = <(isValid,viewport.isValid())<SUB>842</SUB>> ]
-"1837" [label = <(getSize,viewport.getSize())<SUB>842</SUB>> ]
-"1841" [label = <(getSize,display-&gt;getSize())<SUB>842</SUB>> ]
-"1812" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>838</SUB>> ]
-"1820" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>839</SUB>> ]
-"1827" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>841</SUB>> ]
-"1834" [label = <(&lt;operator&gt;.fieldAccess,viewport.isValid)<SUB>842</SUB>> ]
-"1838" [label = <(&lt;operator&gt;.fieldAccess,viewport.getSize)<SUB>842</SUB>> ]
-"1842" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSize)<SUB>842</SUB>> ]
-"1836" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>842</SUB>> ]
-"1840" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>842</SUB>> ]
-"1844" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>842</SUB>> ]
-"1778" [label = <(METHOD,getDisplayState)<SUB>826</SUB>> ]
-"1847" [label = <(METHOD_RETURN,status_t)<SUB>826</SUB>> ]
-  "1792" -> "1797" 
-  "1795" -> "1800" 
-  "1805" -> "1816" 
-  "1813" -> "1827" 
-  "1822" -> "1831" 
-  "1828" -> "1845" 
-  "1845" -> "1847" 
-  "1783" -> "1789" 
-  "1783" -> "1792" 
-  "1797" -> "1795" 
-  "1800" -> "1803" 
-  "1800" -> "1808" 
-  "1806" -> "1812" 
-  "1809" -> "1805" 
-  "1814" -> "1820" 
-  "1817" -> "1813" 
+"1808" [label = <(lock,lock(mStateLock))<SUB>830</SUB>> ]
+"1811" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>832</SUB>> ]
+"1821" [label = <(&lt;operator&gt;.assignment,state-&gt;layerStack = display-&gt;getLayerStack())<SUB>837</SUB>> ]
+"1829" [label = <(&lt;operator&gt;.assignment,state-&gt;orientation = display-&gt;getOrientation())<SUB>838</SUB>> ]
+"1838" [label = <(&lt;operator&gt;.assignment,viewport = display-&gt;getViewport())<SUB>840</SUB>> ]
+"1844" [label = <(&lt;operator&gt;.assignment,state-&gt;viewport = viewport.isValid() ? viewport.getSize() : display-&gt;getSize())<SUB>841</SUB>> ]
+"1861" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>843</SUB>> ]
+"1799" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !state)<SUB>826</SUB>> ]
+"1813" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>832</SUB>> ]
+"1816" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>833</SUB>> ]
+"1822" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;layerStack)<SUB>837</SUB>> ]
+"1825" [label = <(getLayerStack,display-&gt;getLayerStack())<SUB>837</SUB>> ]
+"1830" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;orientation)<SUB>838</SUB>> ]
+"1833" [label = <(getOrientation,display-&gt;getOrientation())<SUB>838</SUB>> ]
+"1840" [label = <(getViewport,display-&gt;getViewport())<SUB>840</SUB>> ]
+"1845" [label = <(&lt;operator&gt;.indirectFieldAccess,state-&gt;viewport)<SUB>841</SUB>> ]
+"1848" [label = <(&lt;operator&gt;.conditional,viewport.isValid() ? viewport.getSize() : display-&gt;getSize())<SUB>841</SUB>> ]
+"1800" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>826</SUB>> ]
+"1802" [label = <(&lt;operator&gt;.logicalNot,!state)<SUB>826</SUB>> ]
+"1805" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>827</SUB>> ]
+"1819" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>834</SUB>> ]
+"1824" [label = <(FIELD_IDENTIFIER,layerStack,layerStack)<SUB>837</SUB>> ]
+"1826" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getLayerStack)<SUB>837</SUB>> ]
+"1832" [label = <(FIELD_IDENTIFIER,orientation,orientation)<SUB>838</SUB>> ]
+"1834" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getOrientation)<SUB>838</SUB>> ]
+"1841" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getViewport)<SUB>840</SUB>> ]
+"1847" [label = <(FIELD_IDENTIFIER,viewport,viewport)<SUB>841</SUB>> ]
+"1849" [label = <(isValid,viewport.isValid())<SUB>841</SUB>> ]
+"1853" [label = <(getSize,viewport.getSize())<SUB>841</SUB>> ]
+"1857" [label = <(getSize,display-&gt;getSize())<SUB>841</SUB>> ]
+"1828" [label = <(FIELD_IDENTIFIER,getLayerStack,getLayerStack)<SUB>837</SUB>> ]
+"1836" [label = <(FIELD_IDENTIFIER,getOrientation,getOrientation)<SUB>838</SUB>> ]
+"1843" [label = <(FIELD_IDENTIFIER,getViewport,getViewport)<SUB>840</SUB>> ]
+"1850" [label = <(&lt;operator&gt;.fieldAccess,viewport.isValid)<SUB>841</SUB>> ]
+"1854" [label = <(&lt;operator&gt;.fieldAccess,viewport.getSize)<SUB>841</SUB>> ]
+"1858" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getSize)<SUB>841</SUB>> ]
+"1852" [label = <(FIELD_IDENTIFIER,isValid,isValid)<SUB>841</SUB>> ]
+"1856" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>841</SUB>> ]
+"1860" [label = <(FIELD_IDENTIFIER,getSize,getSize)<SUB>841</SUB>> ]
+"1794" [label = <(METHOD,getDisplayState)<SUB>825</SUB>> ]
+"1863" [label = <(METHOD_RETURN,status_t)<SUB>825</SUB>> ]
+  "1808" -> "1813" 
+  "1811" -> "1816" 
+  "1821" -> "1832" 
+  "1829" -> "1843" 
+  "1838" -> "1847" 
+  "1844" -> "1861" 
+  "1861" -> "1863" 
+  "1799" -> "1805" 
+  "1799" -> "1808" 
+  "1813" -> "1811" 
+  "1816" -> "1819" 
+  "1816" -> "1824" 
+  "1822" -> "1828" 
+  "1825" -> "1821" 
+  "1830" -> "1836" 
+  "1833" -> "1829" 
+  "1840" -> "1838" 
+  "1845" -> "1852" 
+  "1848" -> "1844" 
+  "1800" -> "1799" 
+  "1800" -> "1802" 
+  "1802" -> "1799" 
+  "1805" -> "1863" 
+  "1819" -> "1863" 
   "1824" -> "1822" 
-  "1829" -> "1836" 
-  "1832" -> "1828" 
-  "1784" -> "1783" 
-  "1784" -> "1786" 
-  "1786" -> "1783" 
-  "1789" -> "1847" 
-  "1803" -> "1847" 
-  "1808" -> "1806" 
-  "1810" -> "1809" 
-  "1816" -> "1814" 
-  "1818" -> "1817" 
-  "1825" -> "1824" 
-  "1831" -> "1829" 
-  "1833" -> "1840" 
-  "1833" -> "1844" 
-  "1837" -> "1832" 
-  "1841" -> "1832" 
-  "1812" -> "1810" 
-  "1820" -> "1818" 
-  "1827" -> "1825" 
+  "1826" -> "1825" 
+  "1832" -> "1830" 
   "1834" -> "1833" 
-  "1838" -> "1837" 
-  "1842" -> "1841" 
+  "1841" -> "1840" 
+  "1847" -> "1845" 
+  "1849" -> "1856" 
+  "1849" -> "1860" 
+  "1853" -> "1848" 
+  "1857" -> "1848" 
+  "1828" -> "1826" 
   "1836" -> "1834" 
-  "1840" -> "1838" 
-  "1844" -> "1842" 
-  "1778" -> "1784" 
+  "1843" -> "1841" 
+  "1850" -> "1849" 
+  "1854" -> "1853" 
+  "1858" -> "1857" 
+  "1852" -> "1850" 
+  "1856" -> "1854" 
+  "1860" -> "1858" 
+  "1794" -> "1800" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/940-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/940-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/940-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/940-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "abs" {  
-"20686" [label = <(METHOD,abs)> ]
-"20689" [label = <(METHOD_RETURN,ANY)> ]
-  "20686" -> "20689" 
+"20702" [label = <(METHOD,abs)> ]
+"20705" [label = <(METHOD_RETURN,ANY)> ]
+  "20702" -> "20705" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/941-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/941-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/941-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/941-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "float4" {  
-"20690" [label = <(METHOD,float4)> ]
-"20693" [label = <(METHOD_RETURN,ANY)> ]
-  "20690" -> "20693" 
+"20706" [label = <(METHOD,float4)> ]
+"20709" [label = <(METHOD_RETURN,ANY)> ]
+  "20706" -> "20709" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/942-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/942-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/942-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/942-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setPhaseOffset" {  
-"20694" [label = <(METHOD,setPhaseOffset)> ]
-"20699" [label = <(METHOD_RETURN,ANY)> ]
-  "20694" -> "20699" 
+"20710" [label = <(METHOD,setPhaseOffset)> ]
+"20715" [label = <(METHOD_RETURN,ANY)> ]
+  "20710" -> "20715" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/943-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/943-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/943-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/943-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "enable" {  
-"20700" [label = <(METHOD,enable)> ]
-"20703" [label = <(METHOD_RETURN,ANY)> ]
-  "20700" -> "20703" 
+"20716" [label = <(METHOD,enable)> ]
+"20719" [label = <(METHOD_RETURN,ANY)> ]
+  "20716" -> "20719" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/944-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/944-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/944-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/944-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "disable" {  
-"20704" [label = <(METHOD,disable)> ]
-"20707" [label = <(METHOD_RETURN,ANY)> ]
-  "20704" -> "20707" 
+"20720" [label = <(METHOD,disable)> ]
+"20723" [label = <(METHOD_RETURN,ANY)> ]
+  "20720" -> "20723" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/945-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/945-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/945-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/945-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::min" {  
-"20708" [label = <(METHOD,std::min)> ]
-"20713" [label = <(METHOD_RETURN,ANY)> ]
-  "20708" -> "20713" 
+"20724" [label = <(METHOD,std::min)> ]
+"20729" [label = <(METHOD_RETURN,ANY)> ]
+  "20724" -> "20729" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/946-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/946-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/946-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/946-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "writeToFile" {  
-"20714" [label = <(METHOD,writeToFile)> ]
-"20717" [label = <(METHOD_RETURN,ANY)> ]
-  "20714" -> "20717" 
+"20730" [label = <(METHOD,writeToFile)> ]
+"20733" [label = <(METHOD_RETURN,ANY)> ]
+  "20730" -> "20733" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/947-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/947-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/947-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/947-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "writeBool" {  
-"20718" [label = <(METHOD,writeBool)> ]
-"20722" [label = <(METHOD_RETURN,ANY)> ]
-  "20718" -> "20722" 
+"20734" [label = <(METHOD,writeBool)> ]
+"20738" [label = <(METHOD_RETURN,ANY)> ]
+  "20734" -> "20738" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/948-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/948-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/948-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/948-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "hasRenderIntent" {  
-"20723" [label = <(METHOD,hasRenderIntent)> ]
-"20727" [label = <(METHOD_RETURN,ANY)> ]
-  "20723" -> "20727" 
+"20739" [label = <(METHOD,hasRenderIntent)> ]
+"20743" [label = <(METHOD_RETURN,ANY)> ]
+  "20739" -> "20743" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/949-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/949-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/949-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/949-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setBufferSize" {  
-"20728" [label = <(METHOD,setBufferSize)> ]
-"20732" [label = <(METHOD_RETURN,ANY)> ]
-  "20728" -> "20732" 
+"20744" [label = <(METHOD,setBufferSize)> ]
+"20748" [label = <(METHOD_RETURN,ANY)> ]
+  "20744" -> "20748" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/95-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/95-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/95-cfg.dot	2023-06-07 19:33:00.307398991 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/95-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,100 +1,100 @@
 digraph "getDisplayInfo" {  
-"1863" [label = <(lock,lock(mStateLock))<SUB>852</SUB>> ]
-"1866" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>854</SUB>> ]
-"1920" [label = <(&lt;operator&gt;.assignmentDivision,info-&gt;density /= ACONFIGURATION_DENSITY_MEDIUM)<SUB>872</SUB>> ]
-"1925" [label = <(&lt;operator&gt;.assignment,info-&gt;secure = display-&gt;isSecure())<SUB>874</SUB>> ]
-"1933" [label = <(&lt;operator&gt;.assignment,info-&gt;deviceProductInfo = getDeviceProductInfoLocked(*display))<SUB>875</SUB>> ]
-"1940" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>877</SUB>> ]
-"1854" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !info)<SUB>848</SUB>> ]
-"1868" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>854</SUB>> ]
-"1871" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>855</SUB>> ]
-"1921" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>872</SUB>> ]
-"1926" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;secure)<SUB>874</SUB>> ]
-"1929" [label = <(isSecure,display-&gt;isSecure())<SUB>874</SUB>> ]
-"1934" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;deviceProductInfo)<SUB>875</SUB>> ]
-"1937" [label = <(getDeviceProductInfoLocked,getDeviceProductInfoLocked(*display))<SUB>875</SUB>> ]
-"1855" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>848</SUB>> ]
-"1857" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>848</SUB>> ]
-"1860" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>849</SUB>> ]
-"1874" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>856</SUB>> ]
-"1879" [label = <(&lt;operator&gt;.assignment,connectionType = display-&gt;getConnectionType())<SUB>859</SUB>> ]
-"1886" [label = <(&lt;operator&gt;.assignment,info-&gt;connectionType = *connectionType)<SUB>860</SUB>> ]
-"1899" [label = <(&lt;operator&gt;.assignment,info-&gt;density = mEmulatedDisplayDensity)<SUB>866</SUB>> ]
-"1923" [label = <(FIELD_IDENTIFIER,density,density)<SUB>872</SUB>> ]
-"1928" [label = <(FIELD_IDENTIFIER,secure,secure)<SUB>874</SUB>> ]
-"1930" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isSecure)<SUB>874</SUB>> ]
-"1936" [label = <(FIELD_IDENTIFIER,deviceProductInfo,deviceProductInfo)<SUB>875</SUB>> ]
-"1938" [label = <(&lt;operator&gt;.indirection,*display)<SUB>875</SUB>> ]
-"1881" [label = <(getConnectionType,display-&gt;getConnectionType())<SUB>859</SUB>> ]
-"1887" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;connectionType)<SUB>860</SUB>> ]
-"1890" [label = <(&lt;operator&gt;.indirection,*connectionType)<SUB>860</SUB>> ]
-"1894" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>862</SUB>> ]
-"1900" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>866</SUB>> ]
-"1906" [label = <(&lt;operator&gt;.assignment,info-&gt;density = info-&gt;connectionType == DisplayConnectionType::Internal\012 ? mInternalDisplayDensity\012 : FALLBACK_DENSITY)<SUB>868</SUB>> ]
-"1932" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>874</SUB>> ]
-"1882" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getConnectionType)<SUB>859</SUB>> ]
-"1889" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>860</SUB>> ]
-"1902" [label = <(FIELD_IDENTIFIER,density,density)<SUB>866</SUB>> ]
-"1907" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>868</SUB>> ]
-"1910" [label = <(&lt;operator&gt;.conditional,info-&gt;connectionType == DisplayConnectionType::Internal\012 ? mInternalDisplayDensity\012 : FALLBACK_DENSITY)<SUB>868</SUB>> ]
-"1884" [label = <(FIELD_IDENTIFIER,getConnectionType,getConnectionType)<SUB>859</SUB>> ]
-"1909" [label = <(FIELD_IDENTIFIER,density,density)<SUB>868</SUB>> ]
-"1911" [label = <(&lt;operator&gt;.equals,info-&gt;connectionType == DisplayConnectionType::Internal)<SUB>868</SUB>> ]
-"1912" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;connectionType)<SUB>868</SUB>> ]
-"1915" [label = <(&lt;operator&gt;.fieldAccess,DisplayConnectionType::Internal)<SUB>868</SUB>> ]
-"1914" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>868</SUB>> ]
-"1917" [label = <(FIELD_IDENTIFIER,Internal,Internal)<SUB>868</SUB>> ]
-"1849" [label = <(METHOD,getDisplayInfo)<SUB>847</SUB>> ]
-"1942" [label = <(METHOD_RETURN,status_t)<SUB>847</SUB>> ]
-  "1863" -> "1868" 
-  "1866" -> "1871" 
-  "1920" -> "1928" 
-  "1925" -> "1936" 
-  "1933" -> "1940" 
-  "1940" -> "1942" 
-  "1854" -> "1860" 
-  "1854" -> "1863" 
-  "1868" -> "1866" 
-  "1871" -> "1874" 
-  "1871" -> "1884" 
-  "1921" -> "1920" 
-  "1926" -> "1932" 
-  "1929" -> "1925" 
-  "1934" -> "1938" 
-  "1937" -> "1933" 
-  "1855" -> "1854" 
-  "1855" -> "1857" 
-  "1857" -> "1854" 
-  "1860" -> "1942" 
-  "1874" -> "1942" 
-  "1879" -> "1889" 
-  "1879" -> "1894" 
-  "1886" -> "1902" 
-  "1886" -> "1909" 
-  "1899" -> "1923" 
-  "1923" -> "1921" 
-  "1928" -> "1926" 
-  "1930" -> "1929" 
-  "1936" -> "1934" 
-  "1938" -> "1937" 
-  "1881" -> "1879" 
-  "1887" -> "1890" 
-  "1890" -> "1886" 
-  "1894" -> "1942" 
-  "1900" -> "1899" 
-  "1906" -> "1923" 
-  "1932" -> "1930" 
-  "1882" -> "1881" 
-  "1889" -> "1887" 
-  "1902" -> "1900" 
-  "1907" -> "1914" 
-  "1910" -> "1906" 
+"1879" [label = <(lock,lock(mStateLock))<SUB>851</SUB>> ]
+"1882" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>853</SUB>> ]
+"1936" [label = <(&lt;operator&gt;.assignmentDivision,info-&gt;density /= ACONFIGURATION_DENSITY_MEDIUM)<SUB>871</SUB>> ]
+"1941" [label = <(&lt;operator&gt;.assignment,info-&gt;secure = display-&gt;isSecure())<SUB>873</SUB>> ]
+"1949" [label = <(&lt;operator&gt;.assignment,info-&gt;deviceProductInfo = getDeviceProductInfoLocked(*display))<SUB>874</SUB>> ]
+"1956" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>876</SUB>> ]
+"1870" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !info)<SUB>847</SUB>> ]
+"1884" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>853</SUB>> ]
+"1887" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>854</SUB>> ]
+"1937" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>871</SUB>> ]
+"1942" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;secure)<SUB>873</SUB>> ]
+"1945" [label = <(isSecure,display-&gt;isSecure())<SUB>873</SUB>> ]
+"1950" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;deviceProductInfo)<SUB>874</SUB>> ]
+"1953" [label = <(getDeviceProductInfoLocked,getDeviceProductInfoLocked(*display))<SUB>874</SUB>> ]
+"1871" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>847</SUB>> ]
+"1873" [label = <(&lt;operator&gt;.logicalNot,!info)<SUB>847</SUB>> ]
+"1876" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>848</SUB>> ]
+"1890" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>855</SUB>> ]
+"1895" [label = <(&lt;operator&gt;.assignment,connectionType = display-&gt;getConnectionType())<SUB>858</SUB>> ]
+"1902" [label = <(&lt;operator&gt;.assignment,info-&gt;connectionType = *connectionType)<SUB>859</SUB>> ]
+"1915" [label = <(&lt;operator&gt;.assignment,info-&gt;density = mEmulatedDisplayDensity)<SUB>865</SUB>> ]
+"1939" [label = <(FIELD_IDENTIFIER,density,density)<SUB>871</SUB>> ]
+"1944" [label = <(FIELD_IDENTIFIER,secure,secure)<SUB>873</SUB>> ]
+"1946" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isSecure)<SUB>873</SUB>> ]
+"1952" [label = <(FIELD_IDENTIFIER,deviceProductInfo,deviceProductInfo)<SUB>874</SUB>> ]
+"1954" [label = <(&lt;operator&gt;.indirection,*display)<SUB>874</SUB>> ]
+"1897" [label = <(getConnectionType,display-&gt;getConnectionType())<SUB>858</SUB>> ]
+"1903" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;connectionType)<SUB>859</SUB>> ]
+"1906" [label = <(&lt;operator&gt;.indirection,*connectionType)<SUB>859</SUB>> ]
+"1910" [label = <(RETURN,return INVALID_OPERATION;,return INVALID_OPERATION;)<SUB>861</SUB>> ]
+"1916" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>865</SUB>> ]
+"1922" [label = <(&lt;operator&gt;.assignment,info-&gt;density = info-&gt;connectionType == DisplayConnectionType::Internal\012 ? mInternalDisplayDensity\012 : FALLBACK_DENSITY)<SUB>867</SUB>> ]
+"1948" [label = <(FIELD_IDENTIFIER,isSecure,isSecure)<SUB>873</SUB>> ]
+"1898" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getConnectionType)<SUB>858</SUB>> ]
+"1905" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>859</SUB>> ]
+"1918" [label = <(FIELD_IDENTIFIER,density,density)<SUB>865</SUB>> ]
+"1923" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;density)<SUB>867</SUB>> ]
+"1926" [label = <(&lt;operator&gt;.conditional,info-&gt;connectionType == DisplayConnectionType::Internal\012 ? mInternalDisplayDensity\012 : FALLBACK_DENSITY)<SUB>867</SUB>> ]
+"1900" [label = <(FIELD_IDENTIFIER,getConnectionType,getConnectionType)<SUB>858</SUB>> ]
+"1925" [label = <(FIELD_IDENTIFIER,density,density)<SUB>867</SUB>> ]
+"1927" [label = <(&lt;operator&gt;.equals,info-&gt;connectionType == DisplayConnectionType::Internal)<SUB>867</SUB>> ]
+"1928" [label = <(&lt;operator&gt;.indirectFieldAccess,info-&gt;connectionType)<SUB>867</SUB>> ]
+"1931" [label = <(&lt;operator&gt;.fieldAccess,DisplayConnectionType::Internal)<SUB>867</SUB>> ]
+"1930" [label = <(FIELD_IDENTIFIER,connectionType,connectionType)<SUB>867</SUB>> ]
+"1933" [label = <(FIELD_IDENTIFIER,Internal,Internal)<SUB>867</SUB>> ]
+"1865" [label = <(METHOD,getDisplayInfo)<SUB>846</SUB>> ]
+"1958" [label = <(METHOD_RETURN,status_t)<SUB>846</SUB>> ]
+  "1879" -> "1884" 
+  "1882" -> "1887" 
+  "1936" -> "1944" 
+  "1941" -> "1952" 
+  "1949" -> "1956" 
+  "1956" -> "1958" 
+  "1870" -> "1876" 
+  "1870" -> "1879" 
   "1884" -> "1882" 
-  "1909" -> "1907" 
-  "1911" -> "1910" 
-  "1912" -> "1917" 
-  "1915" -> "1911" 
-  "1914" -> "1912" 
-  "1917" -> "1915" 
-  "1849" -> "1855" 
+  "1887" -> "1890" 
+  "1887" -> "1900" 
+  "1937" -> "1936" 
+  "1942" -> "1948" 
+  "1945" -> "1941" 
+  "1950" -> "1954" 
+  "1953" -> "1949" 
+  "1871" -> "1870" 
+  "1871" -> "1873" 
+  "1873" -> "1870" 
+  "1876" -> "1958" 
+  "1890" -> "1958" 
+  "1895" -> "1905" 
+  "1895" -> "1910" 
+  "1902" -> "1918" 
+  "1902" -> "1925" 
+  "1915" -> "1939" 
+  "1939" -> "1937" 
+  "1944" -> "1942" 
+  "1946" -> "1945" 
+  "1952" -> "1950" 
+  "1954" -> "1953" 
+  "1897" -> "1895" 
+  "1903" -> "1906" 
+  "1906" -> "1902" 
+  "1910" -> "1958" 
+  "1916" -> "1915" 
+  "1922" -> "1939" 
+  "1948" -> "1946" 
+  "1898" -> "1897" 
+  "1905" -> "1903" 
+  "1918" -> "1916" 
+  "1923" -> "1930" 
+  "1926" -> "1922" 
+  "1900" -> "1898" 
+  "1925" -> "1923" 
+  "1927" -> "1926" 
+  "1928" -> "1933" 
+  "1931" -> "1927" 
+  "1930" -> "1928" 
+  "1933" -> "1931" 
+  "1865" -> "1871" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/950-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/950-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/950-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/950-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "validateCompositionDataspace" {  
-"20733" [label = <(METHOD,validateCompositionDataspace)> ]
-"20736" [label = <(METHOD_RETURN,ANY)> ]
-  "20733" -> "20736" 
+"20749" [label = <(METHOD,validateCompositionDataspace)> ]
+"20752" [label = <(METHOD_RETURN,ANY)> ]
+  "20749" -> "20752" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/951-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/951-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/951-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/951-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "readUint32" {  
-"20737" [label = <(METHOD,readUint32)> ]
-"20740" [label = <(METHOD_RETURN,ANY)> ]
-  "20737" -> "20740" 
+"20753" [label = <(METHOD,readUint32)> ]
+"20756" [label = <(METHOD_RETURN,ANY)> ]
+  "20753" -> "20756" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/952-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/952-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/952-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/952-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "setTraceFlags" {  
-"20741" [label = <(METHOD,setTraceFlags)> ]
-"20745" [label = <(METHOD_RETURN,ANY)> ]
-  "20741" -> "20745" 
+"20757" [label = <(METHOD,setTraceFlags)> ]
+"20761" [label = <(METHOD_RETURN,ANY)> ]
+  "20757" -> "20761" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/953-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/953-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/953-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/953-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "enableRefreshRateOverlay" {  
-"20746" [label = <(METHOD,enableRefreshRateOverlay)> ]
-"20749" [label = <(METHOD_RETURN,ANY)> ]
-  "20746" -> "20749" 
+"20762" [label = <(METHOD,enableRefreshRateOverlay)> ]
+"20765" [label = <(METHOD_RETURN,ANY)> ]
+  "20762" -> "20765" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/954-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/954-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/954-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/954-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "acquireFrameRateFlexibilityToken" {  
-"20750" [label = <(METHOD,acquireFrameRateFlexibilityToken)> ]
-"20753" [label = <(METHOD_RETURN,ANY)> ]
-  "20750" -> "20753" 
+"20766" [label = <(METHOD,acquireFrameRateFlexibilityToken)> ]
+"20769" [label = <(METHOD_RETURN,ANY)> ]
+  "20766" -> "20769" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/955-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/955-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/955-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/955-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "property_get_bool" {  
-"20754" [label = <(METHOD,property_get_bool)> ]
-"20758" [label = <(METHOD_RETURN,ANY)> ]
-  "20754" -> "20758" 
+"20770" [label = <(METHOD,property_get_bool)> ]
+"20774" [label = <(METHOD_RETURN,ANY)> ]
+  "20770" -> "20774" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/956-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/956-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/956-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/956-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getIdleTimerAction" {  
-"20759" [label = <(METHOD,getIdleTimerAction)> ]
-"20762" [label = <(METHOD_RETURN,ANY)> ]
-  "20759" -> "20762" 
+"20775" [label = <(METHOD,getIdleTimerAction)> ]
+"20778" [label = <(METHOD_RETURN,ANY)> ]
+  "20775" -> "20778" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/957-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/957-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/957-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/957-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "native_window_api_disconnect" {  
-"20763" [label = <(METHOD,native_window_api_disconnect)> ]
-"20767" [label = <(METHOD_RETURN,ANY)> ]
-  "20763" -> "20767" 
+"20779" [label = <(METHOD,native_window_api_disconnect)> ]
+"20783" [label = <(METHOD_RETURN,ANY)> ]
+  "20779" -> "20783" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/958-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/958-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/958-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/958-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "ui::Transform::toRotationFlags" {  
-"20768" [label = <(METHOD,ui::Transform::toRotationFlags)> ]
-"20772" [label = <(METHOD_RETURN,ANY)> ]
-  "20768" -> "20772" 
+"20784" [label = <(METHOD,ui::Transform::toRotationFlags)> ]
+"20788" [label = <(METHOD_RETURN,ANY)> ]
+  "20784" -> "20788" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/959-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/959-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/959-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/959-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "uint32_t" {  
-"20773" [label = <(METHOD,uint32_t)> ]
-"20776" [label = <(METHOD_RETURN,ANY)> ]
-  "20773" -> "20776" 
+"20789" [label = <(METHOD,uint32_t)> ]
+"20792" [label = <(METHOD_RETURN,ANY)> ]
+  "20789" -> "20792" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/96-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/96-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/96-cfg.dot	2023-06-07 19:33:00.307398991 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/96-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,229 +1,229 @@
 digraph "getDisplayConfigs" {  
-"1958" [label = <(lock,lock(mStateLock))<SUB>886</SUB>> ]
-"1961" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>888</SUB>> ]
-"1972" [label = <(&lt;operator&gt;.assignment,isInternal = (displayId == getInternalDisplayIdLocked()))<SUB>893</SUB>> ]
-"1977" [label = <(clear,configs-&gt;clear())<SUB>895</SUB>> ]
-"2147" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>948</SUB>> ]
-"1949" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !configs)<SUB>882</SUB>> ]
-"1963" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>888</SUB>> ]
-"1966" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>889</SUB>> ]
-"1974" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>893</SUB>> ]
-"1978" [label = <(&lt;operator&gt;.indirectFieldAccess,configs-&gt;clear)<SUB>895</SUB>> ]
-"1950" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>882</SUB>> ]
-"1952" [label = <(&lt;operator&gt;.logicalNot,!configs)<SUB>882</SUB>> ]
-"1955" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>883</SUB>> ]
-"1969" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>890</SUB>> ]
-"1976" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>893</SUB>> ]
-"1980" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>895</SUB>> ]
-"1992" [label = <(&lt;operator&gt;.assignment,width = hwConfig-&gt;getWidth())<SUB>900</SUB>> ]
-"1999" [label = <(&lt;operator&gt;.assignment,height = hwConfig-&gt;getHeight())<SUB>901</SUB>> ]
-"2006" [label = <(&lt;operator&gt;.assignment,xDpi = hwConfig-&gt;getDpiX())<SUB>903</SUB>> ]
-"2013" [label = <(&lt;operator&gt;.assignment,yDpi = hwConfig-&gt;getDpiY())<SUB>904</SUB>> ]
-"2046" [label = <(&lt;operator&gt;.assignment,config.resolution = ui::Size(width, height))<SUB>913</SUB>> ]
-"2082" [label = <(&lt;operator&gt;.assignment,period = hwConfig-&gt;getVsyncPeriod())<SUB>923</SUB>> ]
-"2088" [label = <(&lt;operator&gt;.assignment,config.refreshRate = 1e9f / period)<SUB>924</SUB>> ]
-"2096" [label = <(&lt;operator&gt;.assignment,offsets = mPhaseConfiguration-&gt;getOffsetsForRefreshRate(config.refreshRate))<SUB>926</SUB>> ]
-"2105" [label = <(&lt;operator&gt;.assignment,config.appVsyncOffset = offsets.late.app)<SUB>927</SUB>> ]
-"2114" [label = <(&lt;operator&gt;.assignment,config.sfVsyncOffset = offsets.late.sf)<SUB>928</SUB>> ]
-"2123" [label = <(&lt;operator&gt;.assignment,config.configGroup = hwConfig-&gt;getConfigGroup())<SUB>929</SUB>> ]
-"2131" [label = <(&lt;operator&gt;.assignment,config.presentationDeadline = period - config.sfVsyncOffset + 1000000)<SUB>943</SUB>> ]
-"2142" [label = <(push_back,configs-&gt;push_back(config))<SUB>945</SUB>> ]
-"1994" [label = <(getWidth,hwConfig-&gt;getWidth())<SUB>900</SUB>> ]
-"2001" [label = <(getHeight,hwConfig-&gt;getHeight())<SUB>901</SUB>> ]
-"2008" [label = <(getDpiX,hwConfig-&gt;getDpiX())<SUB>903</SUB>> ]
-"2015" [label = <(getDpiY,hwConfig-&gt;getDpiY())<SUB>904</SUB>> ]
-"2020" [label = <(&lt;operator&gt;.logicalAnd,isInternal &amp;&amp;\012 (internalDisplayOrientation == ui::ROTATION_90 ||\012             internalDisplayOrientation == ui::ROTATION_270))<SUB>906</SUB>> ]
-"2047" [label = <(&lt;operator&gt;.fieldAccess,config.resolution)<SUB>913</SUB>> ]
-"2050" [label = <(ui::Size,ui::Size(width, height))<SUB>913</SUB>> ]
-"2084" [label = <(getVsyncPeriod,hwConfig-&gt;getVsyncPeriod())<SUB>923</SUB>> ]
-"2089" [label = <(&lt;operator&gt;.fieldAccess,config.refreshRate)<SUB>924</SUB>> ]
-"2092" [label = <(&lt;operator&gt;.division,1e9f / period)<SUB>924</SUB>> ]
-"2098" [label = <(getOffsetsForRefreshRate,mPhaseConfiguration-&gt;getOffsetsForRefreshRate(config.refreshRate))<SUB>926</SUB>> ]
-"2106" [label = <(&lt;operator&gt;.fieldAccess,config.appVsyncOffset)<SUB>927</SUB>> ]
-"2109" [label = <(&lt;operator&gt;.fieldAccess,offsets.late.app)<SUB>927</SUB>> ]
-"2115" [label = <(&lt;operator&gt;.fieldAccess,config.sfVsyncOffset)<SUB>928</SUB>> ]
-"2118" [label = <(&lt;operator&gt;.fieldAccess,offsets.late.sf)<SUB>928</SUB>> ]
-"2124" [label = <(&lt;operator&gt;.fieldAccess,config.configGroup)<SUB>929</SUB>> ]
-"2127" [label = <(getConfigGroup,hwConfig-&gt;getConfigGroup())<SUB>929</SUB>> ]
-"2132" [label = <(&lt;operator&gt;.fieldAccess,config.presentationDeadline)<SUB>943</SUB>> ]
-"2135" [label = <(&lt;operator&gt;.addition,period - config.sfVsyncOffset + 1000000)<SUB>943</SUB>> ]
-"2143" [label = <(&lt;operator&gt;.indirectFieldAccess,configs-&gt;push_back)<SUB>945</SUB>> ]
-"1995" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getWidth)<SUB>900</SUB>> ]
-"2002" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getHeight)<SUB>901</SUB>> ]
-"2009" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getDpiX)<SUB>903</SUB>> ]
-"2016" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getDpiY)<SUB>904</SUB>> ]
-"2022" [label = <(&lt;operator&gt;.logicalOr,internalDisplayOrientation == ui::ROTATION_90 ||\012             internalDisplayOrientation == ui::ROTATION_270)<SUB>907</SUB>> ]
-"2034" [label = <(std::swap,std::swap(width, height))<SUB>909</SUB>> ]
-"2040" [label = <(std::swap,std::swap(xDpi, yDpi))<SUB>910</SUB>> ]
-"2049" [label = <(FIELD_IDENTIFIER,resolution,resolution)<SUB>913</SUB>> ]
-"2051" [label = <(&lt;operator&gt;.fieldAccess,ui::Size)<SUB>913</SUB>> ]
-"2059" [label = <(&lt;operator&gt;.assignment,config.xDpi = mEmulatedDisplayDensity)<SUB>916</SUB>> ]
-"2064" [label = <(&lt;operator&gt;.assignment,config.yDpi = mEmulatedDisplayDensity)<SUB>917</SUB>> ]
-"2085" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getVsyncPeriod)<SUB>923</SUB>> ]
-"2091" [label = <(FIELD_IDENTIFIER,refreshRate,refreshRate)<SUB>924</SUB>> ]
-"2099" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getOffsetsForRefreshRate)<SUB>926</SUB>> ]
-"2102" [label = <(&lt;operator&gt;.fieldAccess,config.refreshRate)<SUB>926</SUB>> ]
-"2108" [label = <(FIELD_IDENTIFIER,appVsyncOffset,appVsyncOffset)<SUB>927</SUB>> ]
-"2110" [label = <(&lt;operator&gt;.fieldAccess,offsets.late)<SUB>927</SUB>> ]
-"2113" [label = <(FIELD_IDENTIFIER,app,app)<SUB>927</SUB>> ]
-"2117" [label = <(FIELD_IDENTIFIER,sfVsyncOffset,sfVsyncOffset)<SUB>928</SUB>> ]
-"2119" [label = <(&lt;operator&gt;.fieldAccess,offsets.late)<SUB>928</SUB>> ]
-"2122" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>928</SUB>> ]
-"2126" [label = <(FIELD_IDENTIFIER,configGroup,configGroup)<SUB>929</SUB>> ]
-"2128" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getConfigGroup)<SUB>929</SUB>> ]
-"2134" [label = <(FIELD_IDENTIFIER,presentationDeadline,presentationDeadline)<SUB>943</SUB>> ]
-"2136" [label = <(&lt;operator&gt;.subtraction,period - config.sfVsyncOffset)<SUB>943</SUB>> ]
-"2145" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>945</SUB>> ]
-"1997" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>900</SUB>> ]
-"2004" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>901</SUB>> ]
-"2011" [label = <(FIELD_IDENTIFIER,getDpiX,getDpiX)<SUB>903</SUB>> ]
-"2018" [label = <(FIELD_IDENTIFIER,getDpiY,getDpiY)<SUB>904</SUB>> ]
-"2023" [label = <(&lt;operator&gt;.equals,internalDisplayOrientation == ui::ROTATION_90)<SUB>907</SUB>> ]
-"2028" [label = <(&lt;operator&gt;.equals,internalDisplayOrientation == ui::ROTATION_270)<SUB>908</SUB>> ]
-"2035" [label = <(&lt;operator&gt;.fieldAccess,std::swap)<SUB>909</SUB>> ]
-"2041" [label = <(&lt;operator&gt;.fieldAccess,std::swap)<SUB>910</SUB>> ]
-"2053" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>913</SUB>> ]
-"2060" [label = <(&lt;operator&gt;.fieldAccess,config.xDpi)<SUB>916</SUB>> ]
-"2065" [label = <(&lt;operator&gt;.fieldAccess,config.yDpi)<SUB>917</SUB>> ]
-"2071" [label = <(&lt;operator&gt;.assignment,config.xDpi = xDpi)<SUB>919</SUB>> ]
-"2076" [label = <(&lt;operator&gt;.assignment,config.yDpi = yDpi)<SUB>920</SUB>> ]
-"2087" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>923</SUB>> ]
-"2101" [label = <(FIELD_IDENTIFIER,getOffsetsForRefreshRate,getOffsetsForRefreshRate)<SUB>926</SUB>> ]
-"2104" [label = <(FIELD_IDENTIFIER,refreshRate,refreshRate)<SUB>926</SUB>> ]
-"2112" [label = <(FIELD_IDENTIFIER,late,late)<SUB>927</SUB>> ]
-"2121" [label = <(FIELD_IDENTIFIER,late,late)<SUB>928</SUB>> ]
-"2130" [label = <(FIELD_IDENTIFIER,getConfigGroup,getConfigGroup)<SUB>929</SUB>> ]
-"2138" [label = <(&lt;operator&gt;.fieldAccess,config.sfVsyncOffset)<SUB>943</SUB>> ]
-"2025" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_90)<SUB>907</SUB>> ]
-"2030" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_270)<SUB>908</SUB>> ]
-"2037" [label = <(FIELD_IDENTIFIER,swap,swap)<SUB>909</SUB>> ]
-"2043" [label = <(FIELD_IDENTIFIER,swap,swap)<SUB>910</SUB>> ]
-"2062" [label = <(FIELD_IDENTIFIER,xDpi,xDpi)<SUB>916</SUB>> ]
-"2067" [label = <(FIELD_IDENTIFIER,yDpi,yDpi)<SUB>917</SUB>> ]
-"2072" [label = <(&lt;operator&gt;.fieldAccess,config.xDpi)<SUB>919</SUB>> ]
-"2077" [label = <(&lt;operator&gt;.fieldAccess,config.yDpi)<SUB>920</SUB>> ]
-"2140" [label = <(FIELD_IDENTIFIER,sfVsyncOffset,sfVsyncOffset)<SUB>943</SUB>> ]
-"2027" [label = <(FIELD_IDENTIFIER,ROTATION_90,ROTATION_90)<SUB>907</SUB>> ]
-"2032" [label = <(FIELD_IDENTIFIER,ROTATION_270,ROTATION_270)<SUB>908</SUB>> ]
-"2074" [label = <(FIELD_IDENTIFIER,xDpi,xDpi)<SUB>919</SUB>> ]
-"2079" [label = <(FIELD_IDENTIFIER,yDpi,yDpi)<SUB>920</SUB>> ]
-"1944" [label = <(METHOD,getDisplayConfigs)<SUB>880</SUB>> ]
-"2149" [label = <(METHOD_RETURN,status_t)<SUB>880</SUB>> ]
-  "1958" -> "1963" 
-  "1961" -> "1966" 
-  "1972" -> "1980" 
-  "1977" -> "1997" 
-  "2147" -> "2149" 
-  "1949" -> "1955" 
-  "1949" -> "1958" 
-  "1963" -> "1961" 
-  "1966" -> "1969" 
-  "1966" -> "1976" 
-  "1974" -> "1972" 
-  "1978" -> "1977" 
-  "1950" -> "1949" 
-  "1950" -> "1952" 
-  "1952" -> "1949" 
-  "1955" -> "2149" 
-  "1969" -> "2149" 
-  "1976" -> "1974" 
-  "1980" -> "1978" 
-  "1992" -> "2004" 
-  "1999" -> "2011" 
-  "2006" -> "2018" 
-  "2013" -> "2020" 
-  "2013" -> "2027" 
-  "2046" -> "2062" 
-  "2046" -> "2074" 
-  "2082" -> "2091" 
-  "2088" -> "2101" 
-  "2096" -> "2108" 
-  "2105" -> "2117" 
-  "2114" -> "2126" 
-  "2123" -> "2134" 
-  "2131" -> "2145" 
-  "2142" -> "1997" 
-  "2142" -> "2147" 
-  "1994" -> "1992" 
-  "2001" -> "1999" 
-  "2008" -> "2006" 
-  "2015" -> "2013" 
-  "2020" -> "2037" 
-  "2020" -> "2049" 
-  "2047" -> "2053" 
-  "2050" -> "2046" 
-  "2084" -> "2082" 
-  "2089" -> "2092" 
-  "2092" -> "2088" 
-  "2098" -> "2096" 
-  "2106" -> "2112" 
-  "2109" -> "2105" 
-  "2115" -> "2121" 
+"1974" [label = <(lock,lock(mStateLock))<SUB>885</SUB>> ]
+"1977" [label = <(&lt;operator&gt;.assignment,displayId = getPhysicalDisplayIdLocked(displayToken))<SUB>887</SUB>> ]
+"1988" [label = <(&lt;operator&gt;.assignment,isInternal = (displayId == getInternalDisplayIdLocked()))<SUB>892</SUB>> ]
+"1993" [label = <(clear,configs-&gt;clear())<SUB>894</SUB>> ]
+"2163" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>947</SUB>> ]
+"1965" [label = <(&lt;operator&gt;.logicalOr,!displayToken || !configs)<SUB>881</SUB>> ]
+"1979" [label = <(getPhysicalDisplayIdLocked,getPhysicalDisplayIdLocked(displayToken))<SUB>887</SUB>> ]
+"1982" [label = <(&lt;operator&gt;.logicalNot,!displayId)<SUB>888</SUB>> ]
+"1990" [label = <(&lt;operator&gt;.equals,displayId == getInternalDisplayIdLocked())<SUB>892</SUB>> ]
+"1994" [label = <(&lt;operator&gt;.indirectFieldAccess,configs-&gt;clear)<SUB>894</SUB>> ]
+"1966" [label = <(&lt;operator&gt;.logicalNot,!displayToken)<SUB>881</SUB>> ]
+"1968" [label = <(&lt;operator&gt;.logicalNot,!configs)<SUB>881</SUB>> ]
+"1971" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>882</SUB>> ]
+"1985" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>889</SUB>> ]
+"1992" [label = <(getInternalDisplayIdLocked,getInternalDisplayIdLocked())<SUB>892</SUB>> ]
+"1996" [label = <(FIELD_IDENTIFIER,clear,clear)<SUB>894</SUB>> ]
+"2008" [label = <(&lt;operator&gt;.assignment,width = hwConfig-&gt;getWidth())<SUB>899</SUB>> ]
+"2015" [label = <(&lt;operator&gt;.assignment,height = hwConfig-&gt;getHeight())<SUB>900</SUB>> ]
+"2022" [label = <(&lt;operator&gt;.assignment,xDpi = hwConfig-&gt;getDpiX())<SUB>902</SUB>> ]
+"2029" [label = <(&lt;operator&gt;.assignment,yDpi = hwConfig-&gt;getDpiY())<SUB>903</SUB>> ]
+"2062" [label = <(&lt;operator&gt;.assignment,config.resolution = ui::Size(width, height))<SUB>912</SUB>> ]
+"2098" [label = <(&lt;operator&gt;.assignment,period = hwConfig-&gt;getVsyncPeriod())<SUB>922</SUB>> ]
+"2104" [label = <(&lt;operator&gt;.assignment,config.refreshRate = 1e9f / period)<SUB>923</SUB>> ]
+"2112" [label = <(&lt;operator&gt;.assignment,offsets = mPhaseConfiguration-&gt;getOffsetsForRefreshRate(config.refreshRate))<SUB>925</SUB>> ]
+"2121" [label = <(&lt;operator&gt;.assignment,config.appVsyncOffset = offsets.late.app)<SUB>926</SUB>> ]
+"2130" [label = <(&lt;operator&gt;.assignment,config.sfVsyncOffset = offsets.late.sf)<SUB>927</SUB>> ]
+"2139" [label = <(&lt;operator&gt;.assignment,config.configGroup = hwConfig-&gt;getConfigGroup())<SUB>928</SUB>> ]
+"2147" [label = <(&lt;operator&gt;.assignment,config.presentationDeadline = period - config.sfVsyncOffset + 1000000)<SUB>942</SUB>> ]
+"2158" [label = <(push_back,configs-&gt;push_back(config))<SUB>944</SUB>> ]
+"2010" [label = <(getWidth,hwConfig-&gt;getWidth())<SUB>899</SUB>> ]
+"2017" [label = <(getHeight,hwConfig-&gt;getHeight())<SUB>900</SUB>> ]
+"2024" [label = <(getDpiX,hwConfig-&gt;getDpiX())<SUB>902</SUB>> ]
+"2031" [label = <(getDpiY,hwConfig-&gt;getDpiY())<SUB>903</SUB>> ]
+"2036" [label = <(&lt;operator&gt;.logicalAnd,isInternal &amp;&amp;\012 (internalDisplayOrientation == ui::ROTATION_90 ||\012             internalDisplayOrientation == ui::ROTATION_270))<SUB>905</SUB>> ]
+"2063" [label = <(&lt;operator&gt;.fieldAccess,config.resolution)<SUB>912</SUB>> ]
+"2066" [label = <(ui::Size,ui::Size(width, height))<SUB>912</SUB>> ]
+"2100" [label = <(getVsyncPeriod,hwConfig-&gt;getVsyncPeriod())<SUB>922</SUB>> ]
+"2105" [label = <(&lt;operator&gt;.fieldAccess,config.refreshRate)<SUB>923</SUB>> ]
+"2108" [label = <(&lt;operator&gt;.division,1e9f / period)<SUB>923</SUB>> ]
+"2114" [label = <(getOffsetsForRefreshRate,mPhaseConfiguration-&gt;getOffsetsForRefreshRate(config.refreshRate))<SUB>925</SUB>> ]
+"2122" [label = <(&lt;operator&gt;.fieldAccess,config.appVsyncOffset)<SUB>926</SUB>> ]
+"2125" [label = <(&lt;operator&gt;.fieldAccess,offsets.late.app)<SUB>926</SUB>> ]
+"2131" [label = <(&lt;operator&gt;.fieldAccess,config.sfVsyncOffset)<SUB>927</SUB>> ]
+"2134" [label = <(&lt;operator&gt;.fieldAccess,offsets.late.sf)<SUB>927</SUB>> ]
+"2140" [label = <(&lt;operator&gt;.fieldAccess,config.configGroup)<SUB>928</SUB>> ]
+"2143" [label = <(getConfigGroup,hwConfig-&gt;getConfigGroup())<SUB>928</SUB>> ]
+"2148" [label = <(&lt;operator&gt;.fieldAccess,config.presentationDeadline)<SUB>942</SUB>> ]
+"2151" [label = <(&lt;operator&gt;.addition,period - config.sfVsyncOffset + 1000000)<SUB>942</SUB>> ]
+"2159" [label = <(&lt;operator&gt;.indirectFieldAccess,configs-&gt;push_back)<SUB>944</SUB>> ]
+"2011" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getWidth)<SUB>899</SUB>> ]
+"2018" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getHeight)<SUB>900</SUB>> ]
+"2025" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getDpiX)<SUB>902</SUB>> ]
+"2032" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getDpiY)<SUB>903</SUB>> ]
+"2038" [label = <(&lt;operator&gt;.logicalOr,internalDisplayOrientation == ui::ROTATION_90 ||\012             internalDisplayOrientation == ui::ROTATION_270)<SUB>906</SUB>> ]
+"2050" [label = <(std::swap,std::swap(width, height))<SUB>908</SUB>> ]
+"2056" [label = <(std::swap,std::swap(xDpi, yDpi))<SUB>909</SUB>> ]
+"2065" [label = <(FIELD_IDENTIFIER,resolution,resolution)<SUB>912</SUB>> ]
+"2067" [label = <(&lt;operator&gt;.fieldAccess,ui::Size)<SUB>912</SUB>> ]
+"2075" [label = <(&lt;operator&gt;.assignment,config.xDpi = mEmulatedDisplayDensity)<SUB>915</SUB>> ]
+"2080" [label = <(&lt;operator&gt;.assignment,config.yDpi = mEmulatedDisplayDensity)<SUB>916</SUB>> ]
+"2101" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getVsyncPeriod)<SUB>922</SUB>> ]
+"2107" [label = <(FIELD_IDENTIFIER,refreshRate,refreshRate)<SUB>923</SUB>> ]
+"2115" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getOffsetsForRefreshRate)<SUB>925</SUB>> ]
+"2118" [label = <(&lt;operator&gt;.fieldAccess,config.refreshRate)<SUB>925</SUB>> ]
+"2124" [label = <(FIELD_IDENTIFIER,appVsyncOffset,appVsyncOffset)<SUB>926</SUB>> ]
+"2126" [label = <(&lt;operator&gt;.fieldAccess,offsets.late)<SUB>926</SUB>> ]
+"2129" [label = <(FIELD_IDENTIFIER,app,app)<SUB>926</SUB>> ]
+"2133" [label = <(FIELD_IDENTIFIER,sfVsyncOffset,sfVsyncOffset)<SUB>927</SUB>> ]
+"2135" [label = <(&lt;operator&gt;.fieldAccess,offsets.late)<SUB>927</SUB>> ]
+"2138" [label = <(FIELD_IDENTIFIER,sf,sf)<SUB>927</SUB>> ]
+"2142" [label = <(FIELD_IDENTIFIER,configGroup,configGroup)<SUB>928</SUB>> ]
+"2144" [label = <(&lt;operator&gt;.indirectFieldAccess,hwConfig-&gt;getConfigGroup)<SUB>928</SUB>> ]
+"2150" [label = <(FIELD_IDENTIFIER,presentationDeadline,presentationDeadline)<SUB>942</SUB>> ]
+"2152" [label = <(&lt;operator&gt;.subtraction,period - config.sfVsyncOffset)<SUB>942</SUB>> ]
+"2161" [label = <(FIELD_IDENTIFIER,push_back,push_back)<SUB>944</SUB>> ]
+"2013" [label = <(FIELD_IDENTIFIER,getWidth,getWidth)<SUB>899</SUB>> ]
+"2020" [label = <(FIELD_IDENTIFIER,getHeight,getHeight)<SUB>900</SUB>> ]
+"2027" [label = <(FIELD_IDENTIFIER,getDpiX,getDpiX)<SUB>902</SUB>> ]
+"2034" [label = <(FIELD_IDENTIFIER,getDpiY,getDpiY)<SUB>903</SUB>> ]
+"2039" [label = <(&lt;operator&gt;.equals,internalDisplayOrientation == ui::ROTATION_90)<SUB>906</SUB>> ]
+"2044" [label = <(&lt;operator&gt;.equals,internalDisplayOrientation == ui::ROTATION_270)<SUB>907</SUB>> ]
+"2051" [label = <(&lt;operator&gt;.fieldAccess,std::swap)<SUB>908</SUB>> ]
+"2057" [label = <(&lt;operator&gt;.fieldAccess,std::swap)<SUB>909</SUB>> ]
+"2069" [label = <(FIELD_IDENTIFIER,Size,Size)<SUB>912</SUB>> ]
+"2076" [label = <(&lt;operator&gt;.fieldAccess,config.xDpi)<SUB>915</SUB>> ]
+"2081" [label = <(&lt;operator&gt;.fieldAccess,config.yDpi)<SUB>916</SUB>> ]
+"2087" [label = <(&lt;operator&gt;.assignment,config.xDpi = xDpi)<SUB>918</SUB>> ]
+"2092" [label = <(&lt;operator&gt;.assignment,config.yDpi = yDpi)<SUB>919</SUB>> ]
+"2103" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>922</SUB>> ]
+"2117" [label = <(FIELD_IDENTIFIER,getOffsetsForRefreshRate,getOffsetsForRefreshRate)<SUB>925</SUB>> ]
+"2120" [label = <(FIELD_IDENTIFIER,refreshRate,refreshRate)<SUB>925</SUB>> ]
+"2128" [label = <(FIELD_IDENTIFIER,late,late)<SUB>926</SUB>> ]
+"2137" [label = <(FIELD_IDENTIFIER,late,late)<SUB>927</SUB>> ]
+"2146" [label = <(FIELD_IDENTIFIER,getConfigGroup,getConfigGroup)<SUB>928</SUB>> ]
+"2154" [label = <(&lt;operator&gt;.fieldAccess,config.sfVsyncOffset)<SUB>942</SUB>> ]
+"2041" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_90)<SUB>906</SUB>> ]
+"2046" [label = <(&lt;operator&gt;.fieldAccess,ui::ROTATION_270)<SUB>907</SUB>> ]
+"2053" [label = <(FIELD_IDENTIFIER,swap,swap)<SUB>908</SUB>> ]
+"2059" [label = <(FIELD_IDENTIFIER,swap,swap)<SUB>909</SUB>> ]
+"2078" [label = <(FIELD_IDENTIFIER,xDpi,xDpi)<SUB>915</SUB>> ]
+"2083" [label = <(FIELD_IDENTIFIER,yDpi,yDpi)<SUB>916</SUB>> ]
+"2088" [label = <(&lt;operator&gt;.fieldAccess,config.xDpi)<SUB>918</SUB>> ]
+"2093" [label = <(&lt;operator&gt;.fieldAccess,config.yDpi)<SUB>919</SUB>> ]
+"2156" [label = <(FIELD_IDENTIFIER,sfVsyncOffset,sfVsyncOffset)<SUB>942</SUB>> ]
+"2043" [label = <(FIELD_IDENTIFIER,ROTATION_90,ROTATION_90)<SUB>906</SUB>> ]
+"2048" [label = <(FIELD_IDENTIFIER,ROTATION_270,ROTATION_270)<SUB>907</SUB>> ]
+"2090" [label = <(FIELD_IDENTIFIER,xDpi,xDpi)<SUB>918</SUB>> ]
+"2095" [label = <(FIELD_IDENTIFIER,yDpi,yDpi)<SUB>919</SUB>> ]
+"1960" [label = <(METHOD,getDisplayConfigs)<SUB>879</SUB>> ]
+"2165" [label = <(METHOD_RETURN,status_t)<SUB>879</SUB>> ]
+  "1974" -> "1979" 
+  "1977" -> "1982" 
+  "1988" -> "1996" 
+  "1993" -> "2013" 
+  "2163" -> "2165" 
+  "1965" -> "1971" 
+  "1965" -> "1974" 
+  "1979" -> "1977" 
+  "1982" -> "1985" 
+  "1982" -> "1992" 
+  "1990" -> "1988" 
+  "1994" -> "1993" 
+  "1966" -> "1965" 
+  "1966" -> "1968" 
+  "1968" -> "1965" 
+  "1971" -> "2165" 
+  "1985" -> "2165" 
+  "1992" -> "1990" 
+  "1996" -> "1994" 
+  "2008" -> "2020" 
+  "2015" -> "2027" 
+  "2022" -> "2034" 
+  "2029" -> "2036" 
+  "2029" -> "2043" 
+  "2062" -> "2078" 
+  "2062" -> "2090" 
+  "2098" -> "2107" 
+  "2104" -> "2117" 
+  "2112" -> "2124" 
+  "2121" -> "2133" 
+  "2130" -> "2142" 
+  "2139" -> "2150" 
+  "2147" -> "2161" 
+  "2158" -> "2013" 
+  "2158" -> "2163" 
+  "2010" -> "2008" 
+  "2017" -> "2015" 
+  "2024" -> "2022" 
+  "2031" -> "2029" 
+  "2036" -> "2053" 
+  "2036" -> "2065" 
+  "2063" -> "2069" 
+  "2066" -> "2062" 
+  "2100" -> "2098" 
+  "2105" -> "2108" 
+  "2108" -> "2104" 
+  "2114" -> "2112" 
+  "2122" -> "2128" 
+  "2125" -> "2121" 
+  "2131" -> "2137" 
+  "2134" -> "2130" 
+  "2140" -> "2146" 
+  "2143" -> "2139" 
+  "2148" -> "2156" 
+  "2151" -> "2147" 
+  "2159" -> "2158" 
+  "2011" -> "2010" 
+  "2018" -> "2017" 
+  "2025" -> "2024" 
+  "2032" -> "2031" 
+  "2038" -> "2036" 
+  "2050" -> "2059" 
+  "2056" -> "2065" 
+  "2065" -> "2063" 
+  "2067" -> "2066" 
+  "2075" -> "2083" 
+  "2080" -> "2103" 
+  "2101" -> "2100" 
+  "2107" -> "2105" 
+  "2115" -> "2120" 
   "2118" -> "2114" 
-  "2124" -> "2130" 
-  "2127" -> "2123" 
-  "2132" -> "2140" 
-  "2135" -> "2131" 
-  "2143" -> "2142" 
-  "1995" -> "1994" 
-  "2002" -> "2001" 
-  "2009" -> "2008" 
-  "2016" -> "2015" 
-  "2022" -> "2020" 
-  "2034" -> "2043" 
-  "2040" -> "2049" 
-  "2049" -> "2047" 
+  "2124" -> "2122" 
+  "2126" -> "2129" 
+  "2129" -> "2125" 
+  "2133" -> "2131" 
+  "2135" -> "2138" 
+  "2138" -> "2134" 
+  "2142" -> "2140" 
+  "2144" -> "2143" 
+  "2150" -> "2148" 
+  "2152" -> "2151" 
+  "2161" -> "2159" 
+  "2013" -> "2011" 
+  "2020" -> "2018" 
+  "2027" -> "2025" 
+  "2034" -> "2032" 
+  "2039" -> "2038" 
+  "2039" -> "2048" 
+  "2044" -> "2038" 
   "2051" -> "2050" 
-  "2059" -> "2067" 
-  "2064" -> "2087" 
-  "2085" -> "2084" 
-  "2091" -> "2089" 
-  "2099" -> "2104" 
-  "2102" -> "2098" 
-  "2108" -> "2106" 
-  "2110" -> "2113" 
-  "2113" -> "2109" 
+  "2057" -> "2056" 
+  "2069" -> "2067" 
+  "2076" -> "2075" 
+  "2081" -> "2080" 
+  "2087" -> "2095" 
+  "2092" -> "2103" 
+  "2103" -> "2101" 
   "2117" -> "2115" 
-  "2119" -> "2122" 
-  "2122" -> "2118" 
-  "2126" -> "2124" 
-  "2128" -> "2127" 
-  "2134" -> "2132" 
-  "2136" -> "2135" 
-  "2145" -> "2143" 
-  "1997" -> "1995" 
-  "2004" -> "2002" 
-  "2011" -> "2009" 
-  "2018" -> "2016" 
-  "2023" -> "2022" 
-  "2023" -> "2032" 
-  "2028" -> "2022" 
-  "2035" -> "2034" 
-  "2041" -> "2040" 
+  "2120" -> "2118" 
+  "2128" -> "2126" 
+  "2137" -> "2135" 
+  "2146" -> "2144" 
+  "2154" -> "2152" 
+  "2041" -> "2039" 
+  "2046" -> "2044" 
   "2053" -> "2051" 
-  "2060" -> "2059" 
-  "2065" -> "2064" 
-  "2071" -> "2079" 
-  "2076" -> "2087" 
-  "2087" -> "2085" 
-  "2101" -> "2099" 
-  "2104" -> "2102" 
-  "2112" -> "2110" 
-  "2121" -> "2119" 
-  "2130" -> "2128" 
-  "2138" -> "2136" 
-  "2025" -> "2023" 
-  "2030" -> "2028" 
-  "2037" -> "2035" 
+  "2059" -> "2057" 
+  "2078" -> "2076" 
+  "2083" -> "2081" 
+  "2088" -> "2087" 
+  "2093" -> "2092" 
+  "2156" -> "2154" 
   "2043" -> "2041" 
-  "2062" -> "2060" 
-  "2067" -> "2065" 
-  "2072" -> "2071" 
-  "2077" -> "2076" 
-  "2140" -> "2138" 
-  "2027" -> "2025" 
-  "2032" -> "2030" 
-  "2074" -> "2072" 
-  "2079" -> "2077" 
-  "1944" -> "1950" 
+  "2048" -> "2046" 
+  "2090" -> "2088" 
+  "2095" -> "2093" 
+  "1960" -> "1966" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/960-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/960-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/960-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/960-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "width" {  
-"20777" [label = <(METHOD,width)> ]
-"20780" [label = <(METHOD_RETURN,ANY)> ]
-  "20777" -> "20780" 
+"20793" [label = <(METHOD,width)> ]
+"20796" [label = <(METHOD_RETURN,ANY)> ]
+  "20793" -> "20796" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/961-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/961-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/961-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/961-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "height" {  
-"20781" [label = <(METHOD,height)> ]
-"20784" [label = <(METHOD_RETURN,ANY)> ]
-  "20781" -> "20784" 
+"20797" [label = <(METHOD,height)> ]
+"20800" [label = <(METHOD_RETURN,ANY)> ]
+  "20797" -> "20800" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/962-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/962-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/962-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/962-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "renderArea" {  
-"20785" [label = <(METHOD,renderArea)> ]
-"20795" [label = <(METHOD_RETURN,ANY)> ]
-  "20785" -> "20795" 
+"20801" [label = <(METHOD,renderArea)> ]
+"20811" [label = <(METHOD_RETURN,ANY)> ]
+  "20801" -> "20811" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/963-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/963-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/963-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/963-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::bind" {  
-"20796" [label = <(METHOD,std::bind)> ]
-"20803" [label = <(METHOD_RETURN,ANY)> ]
-  "20796" -> "20803" 
+"20812" [label = <(METHOD,std::bind)> ]
+"20819" [label = <(METHOD_RETURN,ANY)> ]
+  "20812" -> "20819" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/964-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/964-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/964-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/964-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "captureScreenCommon" {  
-"20804" [label = <(METHOD,captureScreenCommon)> ]
-"20812" [label = <(METHOD_RETURN,ANY)> ]
-  "20804" -> "20812" 
+"20820" [label = <(METHOD,captureScreenCommon)> ]
+"20828" [label = <(METHOD_RETURN,ANY)> ]
+  "20820" -> "20828" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/965-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/965-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/965-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/965-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "sched_setscheduler" {  
-"20813" [label = <(METHOD,sched_setscheduler)> ]
-"20818" [label = <(METHOD_RETURN,ANY)> ]
-  "20813" -> "20818" 
+"20829" [label = <(METHOD,sched_setscheduler)> ]
+"20834" [label = <(METHOD_RETURN,ANY)> ]
+  "20829" -> "20834" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/966-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/966-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/966-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/966-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayByLayerStack" {  
-"20819" [label = <(METHOD,getDisplayByLayerStack)> ]
-"20822" [label = <(METHOD_RETURN,ANY)> ]
-  "20819" -> "20822" 
+"20835" [label = <(METHOD,getDisplayByLayerStack)> ]
+"20838" [label = <(METHOD_RETURN,ANY)> ]
+  "20835" -> "20838" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/967-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/967-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/967-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/967-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayByIdOrLayerStack" {  
-"20823" [label = <(METHOD,getDisplayByIdOrLayerStack)> ]
-"20826" [label = <(METHOD_RETURN,ANY)> ]
-  "20823" -> "20826" 
+"20839" [label = <(METHOD,getDisplayByIdOrLayerStack)> ]
+"20842" [label = <(METHOD_RETURN,ANY)> ]
+  "20839" -> "20842" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/968-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/968-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/968-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/968-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "pickDataspaceFromColorMode" {  
-"20827" [label = <(METHOD,pickDataspaceFromColorMode)> ]
-"20830" [label = <(METHOD_RETURN,ANY)> ]
-  "20827" -> "20830" 
+"20843" [label = <(METHOD,pickDataspaceFromColorMode)> ]
+"20846" [label = <(METHOD_RETURN,ANY)> ]
+  "20843" -> "20846" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/969-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/969-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/969-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/969-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "Rect" {  
-"20831" [label = <(METHOD,Rect)> ]
-"20835" [label = <(METHOD_RETURN,ANY)> ]
-  "20831" -> "20835" 
+"20847" [label = <(METHOD,Rect)> ]
+"20851" [label = <(METHOD_RETURN,ANY)> ]
+  "20847" -> "20851" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/97-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/97-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/97-cfg.dot	2023-06-07 19:33:00.307398991 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/97-cfg.dot	2023-06-07 19:33:06.547398414 +0330
@@ -1,18 +1,18 @@
 digraph "getDisplayStats" {  
-"2161" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(stats))<SUB>956</SUB>> ]
-"2166" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>957</SUB>> ]
-"2156" [label = <(&lt;operator&gt;.logicalNot,!stats)<SUB>952</SUB>> ]
-"2162" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>956</SUB>> ]
-"2159" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>953</SUB>> ]
-"2164" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>956</SUB>> ]
-"2151" [label = <(METHOD,getDisplayStats)<SUB>951</SUB>> ]
-"2168" [label = <(METHOD_RETURN,status_t)<SUB>951</SUB>> ]
-  "2161" -> "2166" 
-  "2166" -> "2168" 
-  "2156" -> "2159" 
-  "2156" -> "2164" 
-  "2162" -> "2161" 
-  "2159" -> "2168" 
-  "2164" -> "2162" 
-  "2151" -> "2156" 
+"2177" [label = <(getDisplayStatInfo,mScheduler-&gt;getDisplayStatInfo(stats))<SUB>955</SUB>> ]
+"2182" [label = <(RETURN,return NO_ERROR;,return NO_ERROR;)<SUB>956</SUB>> ]
+"2172" [label = <(&lt;operator&gt;.logicalNot,!stats)<SUB>951</SUB>> ]
+"2178" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;getDisplayStatInfo)<SUB>955</SUB>> ]
+"2175" [label = <(RETURN,return BAD_VALUE;,return BAD_VALUE;)<SUB>952</SUB>> ]
+"2180" [label = <(FIELD_IDENTIFIER,getDisplayStatInfo,getDisplayStatInfo)<SUB>955</SUB>> ]
+"2167" [label = <(METHOD,getDisplayStats)<SUB>950</SUB>> ]
+"2184" [label = <(METHOD_RETURN,status_t)<SUB>950</SUB>> ]
+  "2177" -> "2182" 
+  "2182" -> "2184" 
+  "2172" -> "2175" 
+  "2172" -> "2180" 
+  "2178" -> "2177" 
+  "2175" -> "2184" 
+  "2180" -> "2178" 
+  "2167" -> "2172" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/970-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/970-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/970-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/970-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "crop" {  
-"20836" [label = <(METHOD,crop)> ]
-"20839" [label = <(METHOD_RETURN,ANY)> ]
-  "20836" -> "20839" 
+"20852" [label = <(METHOD,crop)> ]
+"20855" [label = <(METHOD_RETURN,ANY)> ]
+  "20852" -> "20855" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/971-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/971-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/971-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/971-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCurrentState" {  
-"20840" [label = <(METHOD,getCurrentState)> ]
-"20843" [label = <(METHOD_RETURN,ANY)> ]
-  "20840" -> "20843" 
+"20856" [label = <(METHOD,getCurrentState)> ]
+"20859" [label = <(METHOD_RETURN,ANY)> ]
+  "20856" -> "20859" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/972-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/972-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/972-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/972-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCroppedBufferSize" {  
-"20844" [label = <(METHOD,getCroppedBufferSize)> ]
-"20848" [label = <(METHOD_RETURN,ANY)> ]
-  "20844" -> "20848" 
+"20860" [label = <(METHOD,getCroppedBufferSize)> ]
+"20864" [label = <(METHOD_RETURN,ANY)> ]
+  "20860" -> "20864" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/973-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/973-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/973-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/973-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "createGraphicBuffer" {  
-"20849" [label = <(METHOD,createGraphicBuffer)> ]
-"20858" [label = <(METHOD_RETURN,ANY)> ]
-  "20849" -> "20858" 
+"20865" [label = <(METHOD,createGraphicBuffer)> ]
+"20874" [label = <(METHOD_RETURN,ANY)> ]
+  "20865" -> "20874" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/974-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/974-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/974-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/974-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getReqWidth" {  
-"20859" [label = <(METHOD,getReqWidth)> ]
-"20862" [label = <(METHOD_RETURN,ANY)> ]
-  "20859" -> "20862" 
+"20875" [label = <(METHOD,getReqWidth)> ]
+"20878" [label = <(METHOD_RETURN,ANY)> ]
+  "20875" -> "20878" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/975-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/975-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/975-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/975-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getReqHeight" {  
-"20863" [label = <(METHOD,getReqHeight)> ]
-"20866" [label = <(METHOD_RETURN,ANY)> ]
-  "20863" -> "20866" 
+"20879" [label = <(METHOD,getReqHeight)> ]
+"20882" [label = <(METHOD_RETURN,ANY)> ]
+  "20879" -> "20882" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/976-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/976-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/976-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/976-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::tie" {  
-"20867" [label = <(METHOD,std::tie)> ]
-"20872" [label = <(METHOD_RETURN,ANY)> ]
-  "20867" -> "20872" 
+"20883" [label = <(METHOD,std::tie)> ]
+"20888" [label = <(METHOD_RETURN,ANY)> ]
+  "20883" -> "20888" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/977-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/977-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/977-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/977-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "sync_wait" {  
-"20873" [label = <(METHOD,sync_wait)> ]
-"20877" [label = <(METHOD_RETURN,ANY)> ]
-  "20873" -> "20877" 
+"20889" [label = <(METHOD,sync_wait)> ]
+"20893" [label = <(METHOD_RETURN,ANY)> ]
+  "20889" -> "20893" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/978-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/978-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/978-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/978-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "close" {  
-"20878" [label = <(METHOD,close)> ]
-"20881" [label = <(METHOD_RETURN,ANY)> ]
-  "20878" -> "20881" 
+"20894" [label = <(METHOD,close)> ]
+"20897" [label = <(METHOD_RETURN,ANY)> ]
+  "20894" -> "20897" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/979-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/979-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/979-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/979-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getSourceCrop" {  
-"20882" [label = <(METHOD,getSourceCrop)> ]
-"20885" [label = <(METHOD_RETURN,ANY)> ]
-  "20882" -> "20885" 
+"20898" [label = <(METHOD,getSourceCrop)> ]
+"20901" [label = <(METHOD_RETURN,ANY)> ]
+  "20898" -> "20901" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/98-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/98-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/98-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/98-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,64 +1,64 @@
 digraph "getActiveConfig" {  
-"2230" [label = <(RETURN,return activeConfig;,return activeConfig;)<SUB>982</SUB>> ]
-"2177" [label = <(lock,lock(mStateLock))<SUB>965</SUB>> ]
-"2182" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>967</SUB>> ]
-"2187" [label = <(&lt;operator&gt;.assignment,activeConfig = display-&gt;getActiveConfig().value())<SUB>968</SUB>> ]
-"2196" [label = <(&lt;operator&gt;.assignment,isPrimary = display-&gt;isPrimary())<SUB>969</SUB>> ]
-"2184" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>967</SUB>> ]
-"2189" [label = <(value,display-&gt;getActiveConfig().value())<SUB>968</SUB>> ]
-"2198" [label = <(isPrimary,display-&gt;isPrimary())<SUB>969</SUB>> ]
-"2204" [label = <(ALOGE,ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get()))<SUB>971</SUB>> ]
-"2211" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>972</SUB>> ]
-"2219" [label = <(&lt;operator&gt;.assignment,config = getDesiredActiveConfig())<SUB>977</SUB>> ]
-"2223" [label = <(RETURN,return config-&gt;configId.value();,return config-&gt;configId.value();)<SUB>978</SUB>> ]
-"2190" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getActiveConfig().value)<SUB>968</SUB>> ]
-"2199" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>969</SUB>> ]
-"2207" [label = <(get,displayToken.get())<SUB>971</SUB>> ]
-"2221" [label = <(getDesiredActiveConfig,getDesiredActiveConfig())<SUB>977</SUB>> ]
-"2224" [label = <(value,config-&gt;configId.value())<SUB>978</SUB>> ]
-"2191" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>968</SUB>> ]
-"2195" [label = <(FIELD_IDENTIFIER,value,value)<SUB>968</SUB>> ]
-"2201" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>969</SUB>> ]
-"2208" [label = <(&lt;operator&gt;.fieldAccess,displayToken.get)<SUB>971</SUB>> ]
-"2225" [label = <(&lt;operator&gt;.fieldAccess,config-&gt;configId.value)<SUB>978</SUB>> ]
-"2192" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>968</SUB>> ]
-"2210" [label = <(FIELD_IDENTIFIER,get,get)<SUB>971</SUB>> ]
-"2226" [label = <(&lt;operator&gt;.indirectFieldAccess,config-&gt;configId)<SUB>978</SUB>> ]
-"2229" [label = <(FIELD_IDENTIFIER,value,value)<SUB>978</SUB>> ]
-"2194" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>968</SUB>> ]
-"2228" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>978</SUB>> ]
-"2170" [label = <(METHOD,getActiveConfig)<SUB>960</SUB>> ]
-"2232" [label = <(METHOD_RETURN,int)<SUB>960</SUB>> ]
-  "2230" -> "2232" 
-  "2177" -> "2184" 
-  "2182" -> "2194" 
-  "2182" -> "2210" 
-  "2187" -> "2201" 
-  "2196" -> "2221" 
-  "2196" -> "2230" 
-  "2184" -> "2182" 
-  "2189" -> "2187" 
-  "2198" -> "2196" 
-  "2204" -> "2211" 
-  "2211" -> "2232" 
-  "2219" -> "2228" 
-  "2219" -> "2230" 
-  "2223" -> "2232" 
-  "2190" -> "2189" 
-  "2199" -> "2198" 
-  "2207" -> "2204" 
-  "2221" -> "2219" 
+"2246" [label = <(RETURN,return activeConfig;,return activeConfig;)<SUB>981</SUB>> ]
+"2193" [label = <(lock,lock(mStateLock))<SUB>964</SUB>> ]
+"2198" [label = <(&lt;operator&gt;.assignment,display = getDisplayDeviceLocked(displayToken))<SUB>966</SUB>> ]
+"2203" [label = <(&lt;operator&gt;.assignment,activeConfig = display-&gt;getActiveConfig().value())<SUB>967</SUB>> ]
+"2212" [label = <(&lt;operator&gt;.assignment,isPrimary = display-&gt;isPrimary())<SUB>968</SUB>> ]
+"2200" [label = <(getDisplayDeviceLocked,getDisplayDeviceLocked(displayToken))<SUB>966</SUB>> ]
+"2205" [label = <(value,display-&gt;getActiveConfig().value())<SUB>967</SUB>> ]
+"2214" [label = <(isPrimary,display-&gt;isPrimary())<SUB>968</SUB>> ]
+"2220" [label = <(ALOGE,ALOGE(&quot;%s: Invalid display token %p&quot;, __FUNCTION__, displayToken.get()))<SUB>970</SUB>> ]
+"2227" [label = <(RETURN,return NAME_NOT_FOUND;,return NAME_NOT_FOUND;)<SUB>971</SUB>> ]
+"2235" [label = <(&lt;operator&gt;.assignment,config = getDesiredActiveConfig())<SUB>976</SUB>> ]
+"2239" [label = <(RETURN,return config-&gt;configId.value();,return config-&gt;configId.value();)<SUB>977</SUB>> ]
+"2206" [label = <(&lt;operator&gt;.fieldAccess,display-&gt;getActiveConfig().value)<SUB>967</SUB>> ]
+"2215" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;isPrimary)<SUB>968</SUB>> ]
+"2223" [label = <(get,displayToken.get())<SUB>970</SUB>> ]
+"2237" [label = <(getDesiredActiveConfig,getDesiredActiveConfig())<SUB>976</SUB>> ]
+"2240" [label = <(value,config-&gt;configId.value())<SUB>977</SUB>> ]
+"2207" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>967</SUB>> ]
+"2211" [label = <(FIELD_IDENTIFIER,value,value)<SUB>967</SUB>> ]
+"2217" [label = <(FIELD_IDENTIFIER,isPrimary,isPrimary)<SUB>968</SUB>> ]
+"2224" [label = <(&lt;operator&gt;.fieldAccess,displayToken.get)<SUB>970</SUB>> ]
+"2241" [label = <(&lt;operator&gt;.fieldAccess,config-&gt;configId.value)<SUB>977</SUB>> ]
+"2208" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>967</SUB>> ]
+"2226" [label = <(FIELD_IDENTIFIER,get,get)<SUB>970</SUB>> ]
+"2242" [label = <(&lt;operator&gt;.indirectFieldAccess,config-&gt;configId)<SUB>977</SUB>> ]
+"2245" [label = <(FIELD_IDENTIFIER,value,value)<SUB>977</SUB>> ]
+"2210" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>967</SUB>> ]
+"2244" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>977</SUB>> ]
+"2186" [label = <(METHOD,getActiveConfig)<SUB>959</SUB>> ]
+"2248" [label = <(METHOD_RETURN,int)<SUB>959</SUB>> ]
+  "2246" -> "2248" 
+  "2193" -> "2200" 
+  "2198" -> "2210" 
+  "2198" -> "2226" 
+  "2203" -> "2217" 
+  "2212" -> "2237" 
+  "2212" -> "2246" 
+  "2200" -> "2198" 
+  "2205" -> "2203" 
+  "2214" -> "2212" 
+  "2220" -> "2227" 
+  "2227" -> "2248" 
+  "2235" -> "2244" 
+  "2235" -> "2246" 
+  "2239" -> "2248" 
+  "2206" -> "2205" 
+  "2215" -> "2214" 
+  "2223" -> "2220" 
+  "2237" -> "2235" 
+  "2240" -> "2239" 
+  "2207" -> "2211" 
+  "2211" -> "2206" 
+  "2217" -> "2215" 
   "2224" -> "2223" 
-  "2191" -> "2195" 
-  "2195" -> "2190" 
-  "2201" -> "2199" 
+  "2241" -> "2240" 
   "2208" -> "2207" 
-  "2225" -> "2224" 
-  "2192" -> "2191" 
+  "2226" -> "2224" 
+  "2242" -> "2245" 
+  "2245" -> "2241" 
   "2210" -> "2208" 
-  "2226" -> "2229" 
-  "2229" -> "2225" 
-  "2194" -> "2192" 
-  "2228" -> "2226" 
-  "2170" -> "2177" 
+  "2244" -> "2242" 
+  "2186" -> "2193" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/980-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/980-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/980-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/980-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getTransform" {  
-"20886" [label = <(METHOD,getTransform)> ]
-"20889" [label = <(METHOD_RETURN,ANY)> ]
-  "20886" -> "20889" 
+"20902" [label = <(METHOD,getTransform)> ]
+"20905" [label = <(METHOD_RETURN,ANY)> ]
+  "20902" -> "20905" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/981-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/981-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/981-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/981-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getRotationFlags" {  
-"20890" [label = <(METHOD,getRotationFlags)> ]
-"20893" [label = <(METHOD_RETURN,ANY)> ]
-  "20890" -> "20893" 
+"20906" [label = <(METHOD,getRotationFlags)> ]
+"20909" [label = <(METHOD_RETURN,ANY)> ]
+  "20906" -> "20909" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/982-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/982-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/982-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/982-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayViewport" {  
-"20894" [label = <(METHOD,getDisplayViewport)> ]
-"20897" [label = <(METHOD_RETURN,ANY)> ]
-  "20894" -> "20897" 
+"20910" [label = <(METHOD,getDisplayViewport)> ]
+"20913" [label = <(METHOD_RETURN,ANY)> ]
+  "20910" -> "20913" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/983-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/983-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/983-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/983-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getReqDataSpace" {  
-"20898" [label = <(METHOD,getReqDataSpace)> ]
-"20901" [label = <(METHOD_RETURN,ANY)> ]
-  "20898" -> "20901" 
+"20914" [label = <(METHOD,getReqDataSpace)> ]
+"20917" [label = <(METHOD_RETURN,ANY)> ]
+  "20914" -> "20917" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/984-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/984-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/984-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/984-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "RenderArea::getCaptureFillValue" {  
-"20902" [label = <(METHOD,RenderArea::getCaptureFillValue)> ]
-"20906" [label = <(METHOD_RETURN,ANY)> ]
-  "20902" -> "20906" 
+"20918" [label = <(METHOD,RenderArea::getCaptureFillValue)> ]
+"20922" [label = <(METHOD_RETURN,ANY)> ]
+  "20918" -> "20922" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/985-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/985-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/985-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/985-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getCaptureFill" {  
-"20907" [label = <(METHOD,getCaptureFill)> ]
-"20910" [label = <(METHOD_RETURN,ANY)> ]
-  "20907" -> "20910" 
+"20923" [label = <(METHOD,getCaptureFill)> ]
+"20926" [label = <(METHOD_RETURN,ANY)> ]
+  "20923" -> "20926" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/986-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/986-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/986-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/986-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "half3" {  
-"20911" [label = <(METHOD,half3)> ]
-"20916" [label = <(METHOD_RETURN,ANY)> ]
-  "20911" -> "20916" 
+"20927" [label = <(METHOD,half3)> ]
+"20932" [label = <(METHOD_RETURN,ANY)> ]
+  "20927" -> "20932" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/987-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/987-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/987-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/987-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "FloatRect" {  
-"20917" [label = <(METHOD,FloatRect)> ]
-"20923" [label = <(METHOD_RETURN,ANY)> ]
-  "20917" -> "20923" 
+"20933" [label = <(METHOD,FloatRect)> ]
+"20939" [label = <(METHOD_RETURN,ANY)> ]
+  "20933" -> "20939" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/988-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/988-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/988-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/988-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "half" {  
-"20924" [label = <(METHOD,half)> ]
-"20927" [label = <(METHOD_RETURN,ANY)> ]
-  "20924" -> "20927" 
+"20940" [label = <(METHOD,half)> ]
+"20943" [label = <(METHOD_RETURN,ANY)> ]
+  "20940" -> "20943" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/989-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/989-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/989-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/989-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "getDisplayDevice" {  
-"20928" [label = <(METHOD,getDisplayDevice)> ]
-"20931" [label = <(METHOD_RETURN,ANY)> ]
-  "20928" -> "20931" 
+"20944" [label = <(METHOD,getDisplayDevice)> ]
+"20947" [label = <(METHOD_RETURN,ANY)> ]
+  "20944" -> "20947" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/99-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/99-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/99-cfg.dot	2023-06-07 19:33:00.317398989 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/99-cfg.dot	2023-06-07 19:33:06.557398416 +0330
@@ -1,156 +1,156 @@
 digraph "setDesiredActiveConfig" {  
-"2237" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>986</SUB>> ]
-"2239" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(info.configId))<SUB>987</SUB>> ]
-"2248" [label = <(ALOGV,ALOGV(&quot;setDesiredActiveConfig(%s)&quot;, refreshRate.getName().c_str()))<SUB>988</SUB>> ]
-"2257" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>990</SUB>> ]
-"2241" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(info.configId))<SUB>987</SUB>> ]
-"2250" [label = <(c_str,refreshRate.getName().c_str())<SUB>988</SUB>> ]
-"2258" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>990</SUB>> ]
-"2265" [label = <(lock,lock(mActiveConfigLock))<SUB>990</SUB>> ]
-"2242" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>987</SUB>> ]
-"2245" [label = <(&lt;operator&gt;.fieldAccess,info.configId)<SUB>987</SUB>> ]
-"2251" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName().c_str)<SUB>988</SUB>> ]
-"2259" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>990</SUB>> ]
-"2262" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>990</SUB>> ]
-"2271" [label = <(&lt;operator&gt;.assignment,prevConfig = mDesiredActiveConfig.event)<SUB>994</SUB>> ]
-"2276" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig = info)<SUB>995</SUB>> ]
-"2279" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig.event = mDesiredActiveConfig.event | prevConfig)<SUB>996</SUB>> ]
-"2353" [label = <(changeRefreshRate,mRefreshRateOverlay-&gt;changeRefreshRate(refreshRate))<SUB>1023</SUB>> ]
-"2244" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>987</SUB>> ]
-"2247" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>987</SUB>> ]
-"2252" [label = <(getName,refreshRate.getName())<SUB>988</SUB>> ]
-"2256" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>988</SUB>> ]
-"2261" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>990</SUB>> ]
-"2264" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>990</SUB>> ]
-"2273" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>994</SUB>> ]
-"2280" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>996</SUB>> ]
-"2283" [label = <(&lt;operator&gt;.or,mDesiredActiveConfig.event | prevConfig)<SUB>996</SUB>> ]
-"2291" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>999</SUB>> ]
-"2309" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfigChanged = true)<SUB>1005</SUB>> ]
-"2312" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig = info)<SUB>1006</SUB>> ]
-"2315" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>1009</SUB>> ]
-"2316" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, refreshRate.getVsyncPeriod()))<SUB>1012</SUB>> ]
-"2325" [label = <(onRefreshRateChangeInitiated,mVSyncModulator-&gt;onRefreshRateChangeInitiated())<SUB>1015</SUB>> ]
-"2329" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1017</SUB>> ]
-"2337" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1018</SUB>> ]
-"2345" [label = <(setConfigChangePending,mScheduler-&gt;setConfigChangePending(true))<SUB>1019</SUB>> ]
-"2354" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateOverlay-&gt;changeRefreshRate)<SUB>1023</SUB>> ]
-"2253" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName)<SUB>988</SUB>> ]
-"2275" [label = <(FIELD_IDENTIFIER,event,event)<SUB>994</SUB>> ]
-"2282" [label = <(FIELD_IDENTIFIER,event,event)<SUB>996</SUB>> ]
-"2284" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>996</SUB>> ]
-"2293" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>999</SUB>> ]
-"2295" [label = <(&lt;operator&gt;.logicalOr,!display || display-&gt;getActiveConfig() == refreshRate.getConfigId())<SUB>1000</SUB>> ]
-"2317" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1012</SUB>> ]
-"2321" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1012</SUB>> ]
-"2326" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshRateChangeInitiated)<SUB>1015</SUB>> ]
-"2330" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1017</SUB>> ]
-"2333" [label = <(getFps,refreshRate.getFps())<SUB>1017</SUB>> ]
-"2338" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1018</SUB>> ]
-"2341" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1018</SUB>> ]
-"2346" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setConfigChangePending)<SUB>1019</SUB>> ]
-"2356" [label = <(FIELD_IDENTIFIER,changeRefreshRate,changeRefreshRate)<SUB>1023</SUB>> ]
-"2255" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>988</SUB>> ]
-"2286" [label = <(FIELD_IDENTIFIER,event,event)<SUB>996</SUB>> ]
-"2296" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>1000</SUB>> ]
-"2298" [label = <(&lt;operator&gt;.equals,display-&gt;getActiveConfig() == refreshRate.getConfigId())<SUB>1000</SUB>> ]
-"2308" [label = <(RETURN,return;,return;)<SUB>1001</SUB>> ]
-"2319" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1012</SUB>> ]
-"2322" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1012</SUB>> ]
-"2328" [label = <(FIELD_IDENTIFIER,onRefreshRateChangeInitiated,onRefreshRateChangeInitiated)<SUB>1015</SUB>> ]
-"2332" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1017</SUB>> ]
-"2334" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1017</SUB>> ]
-"2340" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1018</SUB>> ]
-"2342" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1018</SUB>> ]
-"2348" [label = <(FIELD_IDENTIFIER,setConfigChangePending,setConfigChangePending)<SUB>1019</SUB>> ]
-"2299" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>1000</SUB>> ]
-"2303" [label = <(getConfigId,refreshRate.getConfigId())<SUB>1000</SUB>> ]
-"2324" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1012</SUB>> ]
-"2336" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1017</SUB>> ]
-"2344" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1018</SUB>> ]
-"2300" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>1000</SUB>> ]
-"2304" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>1000</SUB>> ]
-"2302" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>1000</SUB>> ]
-"2306" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>1000</SUB>> ]
-"2234" [label = <(METHOD,setDesiredActiveConfig)<SUB>985</SUB>> ]
-"2358" [label = <(METHOD_RETURN,void)<SUB>985</SUB>> ]
-  "2237" -> "2244" 
-  "2239" -> "2255" 
-  "2248" -> "2261" 
-  "2257" -> "2275" 
-  "2257" -> "2293" 
-  "2241" -> "2239" 
-  "2250" -> "2248" 
-  "2258" -> "2265" 
-  "2265" -> "2257" 
-  "2242" -> "2247" 
-  "2245" -> "2241" 
-  "2251" -> "2250" 
-  "2259" -> "2264" 
-  "2262" -> "2258" 
-  "2271" -> "2276" 
-  "2276" -> "2282" 
-  "2279" -> "2358" 
-  "2279" -> "2356" 
-  "2353" -> "2358" 
-  "2244" -> "2242" 
-  "2247" -> "2245" 
-  "2252" -> "2256" 
-  "2256" -> "2251" 
-  "2261" -> "2259" 
-  "2264" -> "2262" 
-  "2273" -> "2271" 
-  "2280" -> "2286" 
-  "2283" -> "2279" 
-  "2291" -> "2296" 
-  "2309" -> "2312" 
-  "2312" -> "2315" 
-  "2315" -> "2319" 
-  "2316" -> "2328" 
-  "2325" -> "2332" 
-  "2329" -> "2340" 
-  "2337" -> "2348" 
-  "2345" -> "2358" 
-  "2345" -> "2356" 
-  "2354" -> "2353" 
-  "2253" -> "2252" 
-  "2275" -> "2273" 
-  "2282" -> "2280" 
-  "2284" -> "2283" 
-  "2293" -> "2291" 
-  "2295" -> "2308" 
-  "2295" -> "2309" 
-  "2317" -> "2324" 
-  "2321" -> "2316" 
-  "2326" -> "2325" 
-  "2330" -> "2336" 
-  "2333" -> "2329" 
-  "2338" -> "2344" 
-  "2341" -> "2337" 
-  "2346" -> "2345" 
-  "2356" -> "2354" 
-  "2255" -> "2253" 
-  "2286" -> "2284" 
-  "2296" -> "2295" 
+"2253" [label = <(ATRACE_CALL,ATRACE_CALL())<SUB>985</SUB>> ]
+"2255" [label = <(&lt;operator&gt;.assignment,&amp; refreshRate = mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(info.configId))<SUB>986</SUB>> ]
+"2264" [label = <(ALOGV,ALOGV(&quot;setDesiredActiveConfig(%s)&quot;, refreshRate.getName().c_str()))<SUB>987</SUB>> ]
+"2273" [label = <(&lt;operator&gt;.greaterThan,std::lock_guard&lt;std::mutex&gt; lock(mActiveConfigLock))<SUB>989</SUB>> ]
+"2257" [label = <(getRefreshRateFromConfigId,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId(info.configId))<SUB>986</SUB>> ]
+"2266" [label = <(c_str,refreshRate.getName().c_str())<SUB>987</SUB>> ]
+"2274" [label = <(&lt;operator&gt;.lessThan,std::lock_guard&lt;std::mutex)<SUB>989</SUB>> ]
+"2281" [label = <(lock,lock(mActiveConfigLock))<SUB>989</SUB>> ]
+"2258" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateConfigs-&gt;getRefreshRateFromConfigId)<SUB>986</SUB>> ]
+"2261" [label = <(&lt;operator&gt;.fieldAccess,info.configId)<SUB>986</SUB>> ]
+"2267" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName().c_str)<SUB>987</SUB>> ]
+"2275" [label = <(&lt;operator&gt;.fieldAccess,std::lock_guard)<SUB>989</SUB>> ]
+"2278" [label = <(&lt;operator&gt;.fieldAccess,std::mutex)<SUB>989</SUB>> ]
+"2287" [label = <(&lt;operator&gt;.assignment,prevConfig = mDesiredActiveConfig.event)<SUB>993</SUB>> ]
+"2292" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig = info)<SUB>994</SUB>> ]
+"2295" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig.event = mDesiredActiveConfig.event | prevConfig)<SUB>995</SUB>> ]
+"2369" [label = <(changeRefreshRate,mRefreshRateOverlay-&gt;changeRefreshRate(refreshRate))<SUB>1022</SUB>> ]
+"2260" [label = <(FIELD_IDENTIFIER,getRefreshRateFromConfigId,getRefreshRateFromConfigId)<SUB>986</SUB>> ]
+"2263" [label = <(FIELD_IDENTIFIER,configId,configId)<SUB>986</SUB>> ]
+"2268" [label = <(getName,refreshRate.getName())<SUB>987</SUB>> ]
+"2272" [label = <(FIELD_IDENTIFIER,c_str,c_str)<SUB>987</SUB>> ]
+"2277" [label = <(FIELD_IDENTIFIER,lock_guard,lock_guard)<SUB>989</SUB>> ]
+"2280" [label = <(FIELD_IDENTIFIER,mutex,mutex)<SUB>989</SUB>> ]
+"2289" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>993</SUB>> ]
+"2296" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>995</SUB>> ]
+"2299" [label = <(&lt;operator&gt;.or,mDesiredActiveConfig.event | prevConfig)<SUB>995</SUB>> ]
+"2307" [label = <(&lt;operator&gt;.assignment,display = getDefaultDisplayDeviceLocked())<SUB>998</SUB>> ]
+"2325" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfigChanged = true)<SUB>1004</SUB>> ]
+"2328" [label = <(&lt;operator&gt;.assignment,mDesiredActiveConfig = info)<SUB>1005</SUB>> ]
+"2331" [label = <(repaintEverythingForHWC,repaintEverythingForHWC())<SUB>1008</SUB>> ]
+"2332" [label = <(resyncToHardwareVsync,mScheduler-&gt;resyncToHardwareVsync(true, refreshRate.getVsyncPeriod()))<SUB>1011</SUB>> ]
+"2341" [label = <(onRefreshRateChangeInitiated,mVSyncModulator-&gt;onRefreshRateChangeInitiated())<SUB>1014</SUB>> ]
+"2345" [label = <(setRefreshRateFps,mPhaseConfiguration-&gt;setRefreshRateFps(refreshRate.getFps()))<SUB>1016</SUB>> ]
+"2353" [label = <(setPhaseOffsets,mVSyncModulator-&gt;setPhaseOffsets(mPhaseConfiguration-&gt;getCurrentOffsets()))<SUB>1017</SUB>> ]
+"2361" [label = <(setConfigChangePending,mScheduler-&gt;setConfigChangePending(true))<SUB>1018</SUB>> ]
+"2370" [label = <(&lt;operator&gt;.indirectFieldAccess,mRefreshRateOverlay-&gt;changeRefreshRate)<SUB>1022</SUB>> ]
+"2269" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getName)<SUB>987</SUB>> ]
+"2291" [label = <(FIELD_IDENTIFIER,event,event)<SUB>993</SUB>> ]
+"2298" [label = <(FIELD_IDENTIFIER,event,event)<SUB>995</SUB>> ]
+"2300" [label = <(&lt;operator&gt;.fieldAccess,mDesiredActiveConfig.event)<SUB>995</SUB>> ]
+"2309" [label = <(getDefaultDisplayDeviceLocked,getDefaultDisplayDeviceLocked())<SUB>998</SUB>> ]
+"2311" [label = <(&lt;operator&gt;.logicalOr,!display || display-&gt;getActiveConfig() == refreshRate.getConfigId())<SUB>999</SUB>> ]
+"2333" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;resyncToHardwareVsync)<SUB>1011</SUB>> ]
+"2337" [label = <(getVsyncPeriod,refreshRate.getVsyncPeriod())<SUB>1011</SUB>> ]
+"2342" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;onRefreshRateChangeInitiated)<SUB>1014</SUB>> ]
+"2346" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;setRefreshRateFps)<SUB>1016</SUB>> ]
+"2349" [label = <(getFps,refreshRate.getFps())<SUB>1016</SUB>> ]
+"2354" [label = <(&lt;operator&gt;.indirectFieldAccess,mVSyncModulator-&gt;setPhaseOffsets)<SUB>1017</SUB>> ]
+"2357" [label = <(getCurrentOffsets,mPhaseConfiguration-&gt;getCurrentOffsets())<SUB>1017</SUB>> ]
+"2362" [label = <(&lt;operator&gt;.indirectFieldAccess,mScheduler-&gt;setConfigChangePending)<SUB>1018</SUB>> ]
+"2372" [label = <(FIELD_IDENTIFIER,changeRefreshRate,changeRefreshRate)<SUB>1022</SUB>> ]
+"2271" [label = <(FIELD_IDENTIFIER,getName,getName)<SUB>987</SUB>> ]
+"2302" [label = <(FIELD_IDENTIFIER,event,event)<SUB>995</SUB>> ]
+"2312" [label = <(&lt;operator&gt;.logicalNot,!display)<SUB>999</SUB>> ]
+"2314" [label = <(&lt;operator&gt;.equals,display-&gt;getActiveConfig() == refreshRate.getConfigId())<SUB>999</SUB>> ]
+"2324" [label = <(RETURN,return;,return;)<SUB>1000</SUB>> ]
+"2335" [label = <(FIELD_IDENTIFIER,resyncToHardwareVsync,resyncToHardwareVsync)<SUB>1011</SUB>> ]
+"2338" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getVsyncPeriod)<SUB>1011</SUB>> ]
+"2344" [label = <(FIELD_IDENTIFIER,onRefreshRateChangeInitiated,onRefreshRateChangeInitiated)<SUB>1014</SUB>> ]
+"2348" [label = <(FIELD_IDENTIFIER,setRefreshRateFps,setRefreshRateFps)<SUB>1016</SUB>> ]
+"2350" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getFps)<SUB>1016</SUB>> ]
+"2356" [label = <(FIELD_IDENTIFIER,setPhaseOffsets,setPhaseOffsets)<SUB>1017</SUB>> ]
+"2358" [label = <(&lt;operator&gt;.indirectFieldAccess,mPhaseConfiguration-&gt;getCurrentOffsets)<SUB>1017</SUB>> ]
+"2364" [label = <(FIELD_IDENTIFIER,setConfigChangePending,setConfigChangePending)<SUB>1018</SUB>> ]
+"2315" [label = <(getActiveConfig,display-&gt;getActiveConfig())<SUB>999</SUB>> ]
+"2319" [label = <(getConfigId,refreshRate.getConfigId())<SUB>999</SUB>> ]
+"2340" [label = <(FIELD_IDENTIFIER,getVsyncPeriod,getVsyncPeriod)<SUB>1011</SUB>> ]
+"2352" [label = <(FIELD_IDENTIFIER,getFps,getFps)<SUB>1016</SUB>> ]
+"2360" [label = <(FIELD_IDENTIFIER,getCurrentOffsets,getCurrentOffsets)<SUB>1017</SUB>> ]
+"2316" [label = <(&lt;operator&gt;.indirectFieldAccess,display-&gt;getActiveConfig)<SUB>999</SUB>> ]
+"2320" [label = <(&lt;operator&gt;.fieldAccess,refreshRate.getConfigId)<SUB>999</SUB>> ]
+"2318" [label = <(FIELD_IDENTIFIER,getActiveConfig,getActiveConfig)<SUB>999</SUB>> ]
+"2322" [label = <(FIELD_IDENTIFIER,getConfigId,getConfigId)<SUB>999</SUB>> ]
+"2250" [label = <(METHOD,setDesiredActiveConfig)<SUB>984</SUB>> ]
+"2374" [label = <(METHOD_RETURN,void)<SUB>984</SUB>> ]
+  "2253" -> "2260" 
+  "2255" -> "2271" 
+  "2264" -> "2277" 
+  "2273" -> "2291" 
+  "2273" -> "2309" 
+  "2257" -> "2255" 
+  "2266" -> "2264" 
+  "2274" -> "2281" 
+  "2281" -> "2273" 
+  "2258" -> "2263" 
+  "2261" -> "2257" 
+  "2267" -> "2266" 
+  "2275" -> "2280" 
+  "2278" -> "2274" 
+  "2287" -> "2292" 
+  "2292" -> "2298" 
+  "2295" -> "2374" 
+  "2295" -> "2372" 
+  "2369" -> "2374" 
+  "2260" -> "2258" 
+  "2263" -> "2261" 
+  "2268" -> "2272" 
+  "2272" -> "2267" 
+  "2277" -> "2275" 
+  "2280" -> "2278" 
+  "2289" -> "2287" 
   "2296" -> "2302" 
-  "2298" -> "2295" 
-  "2308" -> "2358" 
-  "2319" -> "2317" 
-  "2322" -> "2321" 
-  "2328" -> "2326" 
-  "2332" -> "2330" 
-  "2334" -> "2333" 
-  "2340" -> "2338" 
-  "2342" -> "2341" 
-  "2348" -> "2346" 
-  "2299" -> "2306" 
-  "2303" -> "2298" 
-  "2324" -> "2322" 
-  "2336" -> "2334" 
-  "2344" -> "2342" 
+  "2299" -> "2295" 
+  "2307" -> "2312" 
+  "2325" -> "2328" 
+  "2328" -> "2331" 
+  "2331" -> "2335" 
+  "2332" -> "2344" 
+  "2341" -> "2348" 
+  "2345" -> "2356" 
+  "2353" -> "2364" 
+  "2361" -> "2374" 
+  "2361" -> "2372" 
+  "2370" -> "2369" 
+  "2269" -> "2268" 
+  "2291" -> "2289" 
+  "2298" -> "2296" 
   "2300" -> "2299" 
-  "2304" -> "2303" 
+  "2309" -> "2307" 
+  "2311" -> "2324" 
+  "2311" -> "2325" 
+  "2333" -> "2340" 
+  "2337" -> "2332" 
+  "2342" -> "2341" 
+  "2346" -> "2352" 
+  "2349" -> "2345" 
+  "2354" -> "2360" 
+  "2357" -> "2353" 
+  "2362" -> "2361" 
+  "2372" -> "2370" 
+  "2271" -> "2269" 
   "2302" -> "2300" 
-  "2306" -> "2304" 
-  "2234" -> "2237" 
+  "2312" -> "2311" 
+  "2312" -> "2318" 
+  "2314" -> "2311" 
+  "2324" -> "2374" 
+  "2335" -> "2333" 
+  "2338" -> "2337" 
+  "2344" -> "2342" 
+  "2348" -> "2346" 
+  "2350" -> "2349" 
+  "2356" -> "2354" 
+  "2358" -> "2357" 
+  "2364" -> "2362" 
+  "2315" -> "2322" 
+  "2319" -> "2314" 
+  "2340" -> "2338" 
+  "2352" -> "2350" 
+  "2360" -> "2358" 
+  "2316" -> "2315" 
+  "2320" -> "2319" 
+  "2318" -> "2316" 
+  "2322" -> "2320" 
+  "2250" -> "2253" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/990-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/990-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/990-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/990-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "traverseLayers" {  
-"20932" [label = <(METHOD,traverseLayers)> ]
-"20935" [label = <(METHOD_RETURN,ANY)> ]
-  "20932" -> "20935" 
+"20948" [label = <(METHOD,traverseLayers)> ]
+"20951" [label = <(METHOD_RETURN,ANY)> ]
+  "20948" -> "20951" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/991-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/991-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/991-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/991-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "clientCompositionLayerPointers" {  
-"20936" [label = <(METHOD,clientCompositionLayerPointers)> ]
-"20939" [label = <(METHOD_RETURN,ANY)> ]
-  "20936" -> "20939" 
+"20952" [label = <(METHOD,clientCompositionLayerPointers)> ]
+"20955" [label = <(METHOD_RETURN,ANY)> ]
+  "20952" -> "20955" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/992-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/992-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/992-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/992-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "std::transform" {  
-"20940" [label = <(METHOD,std::transform)> ]
-"20947" [label = <(METHOD_RETURN,ANY)> ]
-  "20940" -> "20947" 
+"20956" [label = <(METHOD,std::transform)> ]
+"20963" [label = <(METHOD_RETURN,ANY)> ]
+  "20956" -> "20963" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/993-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/993-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/993-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/993-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "useProtectedContext" {  
-"20948" [label = <(METHOD,useProtectedContext)> ]
-"20952" [label = <(METHOD_RETURN,ANY)> ]
-  "20948" -> "20952" 
+"20964" [label = <(METHOD,useProtectedContext)> ]
+"20968" [label = <(METHOD_RETURN,ANY)> ]
+  "20964" -> "20968" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/994-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/994-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/994-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/994-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "drawLayers" {  
-"20953" [label = <(METHOD,drawLayers)> ]
-"20962" [label = <(METHOD_RETURN,ANY)> ]
-  "20953" -> "20962" 
+"20969" [label = <(METHOD,drawLayers)> ]
+"20978" [label = <(METHOD_RETURN,ANY)> ]
+  "20969" -> "20978" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/995-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/995-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/995-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/995-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "release" {  
-"20963" [label = <(METHOD,release)> ]
-"20966" [label = <(METHOD_RETURN,ANY)> ]
-  "20963" -> "20966" 
+"20979" [label = <(METHOD,release)> ]
+"20982" [label = <(METHOD_RETURN,ANY)> ]
+  "20979" -> "20982" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/996-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/996-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/996-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/996-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "dup" {  
-"20967" [label = <(METHOD,dup)> ]
-"20970" [label = <(METHOD_RETURN,ANY)> ]
-  "20967" -> "20970" 
+"20983" [label = <(METHOD,dup)> ]
+"20986" [label = <(METHOD_RETURN,ANY)> ]
+  "20983" -> "20986" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/997-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/997-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/997-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/997-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "onLayerDisplayed" {  
-"20971" [label = <(METHOD,onLayerDisplayed)> ]
-"20975" [label = <(METHOD_RETURN,ANY)> ]
-  "20971" -> "20975" 
+"20987" [label = <(METHOD,onLayerDisplayed)> ]
+"20991" [label = <(METHOD_RETURN,ANY)> ]
+  "20987" -> "20991" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/998-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/998-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/998-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/998-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "renderScreenImplLocked" {  
-"20976" [label = <(METHOD,renderScreenImplLocked)> ]
-"20984" [label = <(METHOD_RETURN,ANY)> ]
-  "20976" -> "20984" 
+"20992" [label = <(METHOD,renderScreenImplLocked)> ]
+"21000" [label = <(METHOD_RETURN,ANY)> ]
+  "20992" -> "21000" 
 }
diff -bur /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/999-cfg.dot /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/999-cfg.dot
--- /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/secure/out/999-cfg.dot	2023-06-07 19:33:00.547398969 +0330
+++ /home/mrt3acher/thesis-implementation/.avuln-workdir/code/CVE-2021-0332_1/vulnerable/out/999-cfg.dot	2023-06-07 19:33:06.787398394 +0330
@@ -1,5 +1,5 @@
 digraph "belongsToDisplay" {  
-"20985" [label = <(METHOD,belongsToDisplay)> ]
-"20990" [label = <(METHOD_RETURN,ANY)> ]
-  "20985" -> "20990" 
+"21001" [label = <(METHOD,belongsToDisplay)> ]
+"21006" [label = <(METHOD_RETURN,ANY)> ]
+  "21001" -> "21006" 
 }
